{"id":1178337,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMTc4MzM3","url":"https://hackerone.com/reports/1178337","title":"Improper handling of untypical characters in domain names","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2021-04-28T14:07:26.777Z","submitted_at":"2021-04-28T14:07:26.814Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"philippjeitner","url":"/philippjeitner","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":22984,"url":"https://hackerone.com/nodejs","handle":"nodejs","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"Node.js","twitter_handle":"nodejs","website":"https://nodejs.org","about":"The Node.js JavaScript Runtime"}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2021-22931"],"singular_disclosure_disabled":false,"disclosed_at":"2021-09-10T17:51:58.124Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2021-08-11T17:51:52.957Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"# Description\n\nMissing input validation of host names returned by Domain Name Servers in node's `dns` library can lead to output of wrong hostnames (leading to Domain Hijacking) and injection vulnerabilities in applications using the library (leading to Remote Code Execution, XSS, Applications crashes, etc.).\n\n# Discoverer(s)/Credits\n\nPhilipp Jeitner, Fraunhofer SIT\n\n# References\n\nInjection Attacks Reloaded: Tunnelling Malicious Payloads over DNS\nhttps://www.usenix.org/conference/usenixsecurity21/presentation/jeitner\n(Available starting from August 11, 2021)\n\n# Steps To Reproduce\n\nUsing the example application (`main.js`) which does dns lookups via node.\n\n```\nconst dns = require('dns');\n\nif (process.argv[2] == \"-x\") {\n\tvar host = process.argv[3];\n\n\tdns.reverse(host, (err, result) =\u003e {\n\t\t\n\t\tif (result){\n\t\t\tfor (var i = 0; i \u003c result.length; i++)\n\t\t\t{\n\t\t\t\tconsole.log(\"node\".padEnd(8), \"reverse\".padEnd(16), host.padEnd(30), \"-\".padEnd(80), \"-\".padEnd(10), \"IN\".padEnd(5), \"PTR\".padEnd(5), result[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.log(\"node\".padEnd(8), \"reverse\".padEnd(16), host.padEnd(30), \"-\".padEnd(80), \"-\".padEnd(10), \"-\".padEnd(5), \"ERROR\".padEnd(5), err.errno);\n\t\t}\n\t});\n\t\n} else {\n\tvar host = process.argv[2];\n\tdns.lookup(host, (err, result) =\u003e {\n\t\tif (result) {\n\t\t\tconsole.log(\"node\".padEnd(8), \"lookup\".padEnd(16), host.padEnd(30), \"-\".padEnd(80), \"-\".padEnd(10), \"IN\".padEnd(5), \"A\".padEnd(5), result);\n\t\t} else {\n\t\t\tconsole.log(\"node\".padEnd(8), \"lookup\".padEnd(16), host.padEnd(30), \"-\".padEnd(80), \"-\".padEnd(10), \"-\".padEnd(5), \"ERROR\".padEnd(5), err.errno);\n\t\t}\n\t});\n\t\n\tdns.resolve(host, (err, result) =\u003e {\n\t\tif (result) {\n\t\t\tfor (var i = 0; i \u003c result.length; i++) {\n\t\t\t\tconsole.log(\"node\".padEnd(8), \"resolve\".padEnd(16), host.padEnd(30), \"-\".padEnd(80), \"-\".padEnd(10), \"IN\".padEnd(5), \"A\".padEnd(5), result[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.log(\"node\".padEnd(8), \"resolve\".padEnd(16), host.padEnd(30), \"-\".padEnd(80), \"-\".padEnd(10), \"-\".padEnd(5), \"ERROR\".padEnd(5), err.errno);\n\t\t}\n\t});\n\t\n\tdns.resolveCname(host, (err, result) =\u003e {\n\t\tif (result) {\n\t\t\tfor (var i = 0; i \u003c result.length; i++) {\n\t\t\t\tconsole.log(\"node\".padEnd(8), \"resolveCname\".padEnd(16), host.padEnd(30), \"-\".padEnd(80), \"-\".padEnd(10), \"IN\".padEnd(5), \"CNAME\".padEnd(5), result[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.log(\"node\".padEnd(8), \"resolveCname\".padEnd(16), host.padEnd(30), \"-\".padEnd(80), \"-\".padEnd(10), \"-\".padEnd(5), \"ERROR\".padEnd(5), err.errno);\n\t\t}\n\t\t\n\t});\n\t\n}\n```\n\nRun the code with the example domains provided by us:\n\n```\n$ node main.js cnamezeroweb.test.xdi-attack.net\n\nnode     resolveCname     cnamezeroweb.test.xdi-attack.net - -  IN    CNAME zero.longtxtrecord.ml\n\n$ node main.js cnamexss.test.xdi-attack.net\n\nnode     resolveCname     cnamexss.test.xdi-attack.net  - -  IN    CNAME \u003cimg/src=''/onerror='alert\u0026#x28\u0026#x22xss\u0026#x22\u0026#x29'\u003e.a.cnamexss.test.xdi-attack.net\n```\n\nCompare with the output of a well-behaving stub resolver library (glibc) and/or dig:\n\n```\n$ dig dig cnamezeroweb.test.xdi-attack.net\n\ncnamezeroweb.test.xdi-attack.net. 284 IN CNAME  zero.longtxtrecord.ml\\000cnamezeroweb.test.xdi-attack.net.\nzero.longtxtrecord.ml\\000cnamezeroweb.test.xdi-attack.net. 284 IN A 1.2.3.4\n\n$ dig cnamezeroweb.test.xdi-attack.net\n\ncnamezeroweb.test.xdi-attack.net. 300 IN CNAME  zero.longtxtrecord.ml\\000cnamezeroweb.test.xdi-attack.net.\nzero.longtxtrecord.ml\\000cnamezeroweb.test.xdi-attack.net. 299 IN A 1.2.3.4\n\n$ getent hosts cnamezeroweb.test.xdi-attack.net\n$ getent hosts cnamexss.test.xdi-attack.net\n\n(no output, return code = 2 because name is filtered)\n```\n\nThe first issue (cnamezeroweb) is a clear error in zero-byte handling and can potentially lead to DNS-cache injections in case an application implements a cache based on the library.\n\nThe second (cnamexss) shows that this can be used to tunnel all kinds of injection payloads, and we argue that applications do not typically expect other characters than [a-z0-9-.] in hostnames. We are aware of applications which can be exploited via this second attack vector (stub dns resovlers which does not filter special characters from hostnames) and argue that stub-resolver libraries should only allow hostnames containing [a-z0-9-.], as it is implemented by glibc's gethostbyname, etc. functions. See the Section 'More information' below on standardization of stub resolver functionality.\n\nNote: One might argue that underscores (_) should also be allowed, since they are used for many application like DMARC, SRV, etc. Actually the underscore was chosen exactly because it is a character not allowed in \"hostnames\" and thus dmarc records (_dmarc.example.com) does not conflict with \"normal\" hostnames (See RFC8552, Section 1.1).\n\nThe same exploits also apply to reverse-dns records via node's `dns.reverse` function, and probably functions for other record types as well (not tested). You can test this by setting up a nameserver with the following records, in bind9 this requires disabling the `check-names` option in the configuration.\n\n```\n1.1.1.1.in-addr.arpa.   300     IN      PTR     t\\000.example.com.\n3.3.3.3.in-addr.arpa.   300     IN      PTR     \u003cimg/src=''/onerror='alert\u0026#x28\u0026#x22xss\u0026#x22\u0026#x29'\u003e.example.com.\n```\n\nThen run `node main.js -x 1.1.1.1` and observe the misinterpreted/unfiltered result.\n\n*Note*: I selected CWE-170 \"Improper Null Termination\" as a weakness, however this only applies to the first issue.  You might want to consider this two seperate issues (zero-byte handling and missing filtering).\n\n# More information\n\nThe POSIX Standard for Information Technology defines interfaces for DNS lookups in systems standard C libraries. This Standard includes functions for forward lookups (gethostbyname, getaddrinfo) as well as backward-lookups (gethostbyaddr, getnameinfo). These funtions cannot only return IP addresses but can also contain host names of aliases (CNAME) of the requested host name in case of forward-lookups, or the primary host name of that ip address in the case of backward-lookups (PTR). The POSIX Standard defines the data format of these host names as a null-terminated C-String containing a \"hostname\" or \"nodename\", which are typically expected by developers and defined by RFC952 [2] and RFC1123 [3] to only contain alphanumeric characters (a-z,A-Z,0-9), hyphens (\"-\") and periods (\".\") to split labels. This creates a mismatch of allowed characters between \"hostnames\" and \"domain names\" as defined by the DNS standard [4] which defines \"domain names\" as a series of \"text labels\" which are textually represented by concatenating all \"text labels\" and joining them together with period signs. However, \"text labels\" can contain any octet value, even zero-bytes (\"\\x00\") and period signs (\".\") and recursive DNS resolvers are required by the DNS standard to support any of these characters in DNS records, thus not implementing any sanitiy checks on domain names.\n\nWhen DNS responses are parsed by the stub DNS resolver implemented by stub resolver library as part of the `gethostbyname()`, `getaddrinfo()`, `gethostbyaddr()` and `getnameinfo()` functions, these functions must therefore ensure that the returned, null-terminated C-Strings must be valid domain names as defined by the POSIX standard, else applications which use these values might include that information in contexts where malicious data can included inside the domain name and used for command injection attacks like Cross-Site-Scripting, SQL-injections, etc. Furthermore, if domain names contain text labels with periods (\".\") or zero-bytes (\"\\x00\") and the stub resolver library does naively decode these domain names into strings, attackers can create malicious domain names which are misinterpreted by the naive decoding logic to look like different domain names than they actually are. When these misinterpreted domain names are than cached by applications using the stub resolver, this allows for domain hijacking by poisoning of the applications DNS cache which uses the vulnerable stub resolver library.\n\n*Note*: node does not implement a stub resolver as standardized by POSIX, so the rules about allowed vs. non-allowed characters do not directly apply. However, we argue that developers do not know about the specifics of the \"hostname\" vs. \"domain name\" consideration, so any library which implements dns lookups should ideally behave in the same way to reduce vulnerabilities caused by developers switching from another language/stub resolver library.\n\n## Impact\n\nImpact depends on the application triggering the DNS lookup, see description.","weakness":{"id":14,"name":"Improper Null Termination"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":1281642,"file_name":"main.js","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/v3ddfplpwq490xq9n3f7a9blkxl5?response-content-disposition=attachment%3B%20filename%3D%22main.js%22%3B%20filename%2A%3DUTF-8%27%27main.js\u0026response-content-type=application%2Fx-javascript\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ4NIHB2M2%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T133007Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJGMEQCIE3FUcgRK7FM%2F7U9PAkh6%2BI7wZViD1MP1Y8qZWLRN1eUAiAgc4SQu0yGJV%2BOQRn82JsTD2%2Bd2fHZQycxL60pz%2B7CjyqDBAjt%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIMkR9JAvrXeOfq9Rc6KtcDp5bGOpV6FTgydp%2FZOb6Bh6HFPtwnCVZfa015OiSuBfCxPwur%2F7aSPKTNE0sy0w9C45qL0zZ1nOQQos0M24uDH67J2wRZXM50ImEA29W1ENYnCggW3Oj1ThbKF4WgRsg%2F9mjcm%2BZmkVxvLoYJ9V%2BPAToGVUPNdCuARshEYKICR0Xo5x6JoDNaCt8Ld9eGqOBMXV3rned7uAPh8EmsbYJGE3kgeYkoAT36Qaqe4UgPgyO9VFwa9aDWRX%2B50CKWSjbjZzr%2BF%2B9jH4MB%2FxFZ4EWRHEor6ZAw08vWfwqAZLqqZdMNm9vuS82Y9DrOKW2mwiXSVAN3ddQvsOMXsKnTXkUhnfuaQmZvTtYFFm%2BIF8eMq92q4rbYHzak7PfNtWyYQ5raA9JIgznaWFJzJX%2BJlzu%2Bu3r2q3jjPLUM80AxozLcRqWVvYBpiIJlFx45cKPkX%2F2%2BeKoncWc%2B6ePWFPme30ZUDKqp6naa4cEDN31MhQC6Orokr1YD%2FJvOnl4SUarbB1%2BVgfPNBbXbzGIn%2BQ51fempHBLdSWygAxQb8EgPDJYVXZxvBJySlPreu1xMH98Dq97W1%2FcRuSdU1ytWMJPT5MEKol3iFlX9S3vBhB4zpCiL0Qjhs8rBVdayMKLXkIsGOqYB2%2BJTBbMxNO8iefRZNNANeiPRoGrUFs7jVSy6MeL55bB1oEjsBrS1ldm2HFxpIsKxeGY%2Fw5R4r6d07DNpzBAlMx0mvj%2FrMVfwHZDUaLkkIW7L5kfZJyauAUQfU1Yr9%2Flzl1bTl9jiK08pDtPhZS7%2FjLscylmOg0jy%2BlazgeqN9hRW54AGkI6XkZty9qqJMe%2BYbSVGEfkYqEbJxp7dv5pFW%2Ftu9oswsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=f9c10a85bdf7a751f51f2ec006c783f9698db062dc8815fd7accb0bacc2a117f","file_size":2170,"type":"application/x-javascript"}],"allow_singular_disclosure_at":"2021-09-10T17:51:53.089Z","allow_singular_disclosure_after":-2662694.80473229,"singular_disclosure_allowed":true,"vote_count":3,"voters":["khizer47","randomdudelookingaround","enfeeb13"],"severity":{"rating":"high","score":7.5,"author_type":"Team","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"none","user_interaction":"none","scope":"unchanged","confidentiality":"none","integrity":"none","availability":"high"}},"structured_scope":{"databaseId":666,"asset_type":"SOURCE_CODE","asset_identifier":"https://github.com/nodejs/node","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":11565479,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thanks for reporting. I have not set up bind9 to reproduce, but it seems a legitimate concern. Can you confirm all Node.js versions are affected?\n\nOne more thing... are you saying you plan to disclose this on August 11, 2021?\n","automated_response":false,"created_at":"2021-04-29T12:46:00.538Z","updated_at":"2021-04-29T12:46:00.538Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":11565567,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"We have reproduced the issue with node version v10.19.0 as it is packaged by ubuntu and the current version 16.0.0 as it can be downloaded from https://nodejs.org/en/.\n\n\u003e are you saying you plan to disclose this on August 11, 2021?\n\nYes, this is part of a paper on issues in dns stub libraries, and node is one of the tested implementations.","automated_response":false,"created_at":"2021-04-29T12:59:13.755Z","updated_at":"2021-04-29T12:59:13.755Z","actor":{"username":"philippjeitner","cleared":false,"url":"/philippjeitner","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":11565583,"is_internal":false,"editable":false,"type":"Activities::Comment","message":" \u003e I have not set up bind9 to reproduce, but it seems a legitimate concern.\n\nYou can also just try to resolve one of the public domains operated by us (ie. cnamezeroweb.test.xdi-attack.net) these are available to any resolver in the world, the zone file is just included for completeness.","automated_response":false,"created_at":"2021-04-29T13:01:54.740Z","updated_at":"2021-04-29T13:01:54.740Z","actor":{"username":"philippjeitner","cleared":false,"url":"/philippjeitner","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":11567498,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I just want to clarify the issue on this to make sure I understand...\n\nThe concern for the second issue is that because the `dns` module returns the results unfiltered/unmodified, applications may be at risk if they use the result directly without applying the necessary filtering and content checks?\n\nOn the first concern, I agree that it's an issue we should look at.\n\nOn the second, I'm not yet as convinced but we can look into it.","automated_response":false,"created_at":"2021-04-29T15:59:40.822Z","updated_at":"2021-04-29T15:59:40.822Z","actor":{"username":"jasnell","cleared":false,"url":"/jasnell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/211/162/109187a55a3f81113d4b61b965ec72cbaa4970e3_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":11578101,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"\u003eI just want to clarify the issue on this to make sure I understand...\n\u003eThe concern for the second issue is that because the dns module returns the results unfiltered/unmodified, applications may be at risk if they use the result directly without applying the necessary filtering and content checks?\n\nYes, exactly. We are discussing this issue with developers of multiple libraries, our opinion on why stub resolvers should filter special characters is the following:\n\n\u003eThe definition of \"hostname\" in RFC952 and RFC1123 are still very relevant up to today. Without this restriction what a \"hostname\" can be, Internationalized Domain Names [RC5890] would be unnecessary (since domain names could carry binary UTF-8 codepoints directly) and any standard which builds up on DNS assumes the same restrictions: For a recent RFC which still contains this restricted definition of \"hostname\", we refer to RFC8552, Section 1.1 from march 2019 which states:\n\u003e\n\u003e\u003e    Because the DNS rules for a \"host\" (host name) do not allow use of\n    the underscore character, the underscored name is distinguishable\n    from all legal host names [RFC0952].\n\u003e\n\u003eThe POSIX standard clearly mentions \"hostnames\" (renamed to \"nodenames\" in later versions), but fails to specify what a \"hostname\" or \"nodename\" is. In our view, the best reference therefore is the IETF definition of \"hostname\", which is derived from RFC952 in all later documents.\n\u003e\n\u003eNot filtering special characters in stub resolvers can create 2 issues:\n\u003e\n\u003e - Applications typically do not expect special characters inside hostnames. We conducted a study various applications and none of them sanitized hostnames before including them in potentially unsafe outputs, like HTML, shell output (ANSI escape codes) or newline-seperated pipes for inter-process-communication. Such behavior is ultimately caused by the application itself, but other that handling direct input from users, our results shows that application developers are not aware that values returned from stub resolvers essentially represent user input as well. This might be because they think that DNS does only support characters [a-z0-9-.] or because they trust the input because it seems to come from the operating system, not a remote peer. Anyway, we argue that fixing such behavior in all affected applications is unrealistic and therefore other ways of mitigating the issue should be taken.\n\u003e\n\u003e - Since there is no standard which defines how special characters should be handled by libraries, different libraries might handle special characters differently. For example, some libraries apply the same escaping as done in zone files (escaping characters like \"@\" with \"\\@\"), but others only escape the bare minimum (\"\\000\" and \"\\.\"). This different behavior itself can create issues when an application mixes library implementations, ie. when an application acquires a hostname on one system, sends it to another system as a string and this system then tries to process it further. Furthermore, special characters included directly in domain names might overlap with IDNA-domains, which can create a further risk of misinterpretation which can again, lead to vulnerabilities.\n\u003e\n\u003eThese risks can only be addressed by a standardized handling of special characters in domain names in all libraries, otherwise developers might develop their application on one platform and assume that the behavior on this platform applies to other platforms as well, thereby risking the creation of a vulnerability when porting the application. We argue that the best way of doing this would be to stick to the IETF rules, and therefore filter special characters from hostnames.\n","automated_response":false,"created_at":"2021-04-30T11:30:36.726Z","updated_at":"2021-04-30T11:30:36.726Z","actor":{"username":"philippjeitner","cleared":false,"url":"/philippjeitner","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":11881240,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"On the mishandling of the zero-byte in the cname record, it appears that c-ares is to blame here. A fix is going to be quite a bit more complicated in that we would need to either fix upstream or implement alternative parsing logic.","automated_response":false,"created_at":"2021-05-25T19:09:05.704Z","updated_at":"2021-05-25T19:09:05.704Z","actor":{"username":"jasnell","cleared":false,"url":"/jasnell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/211/162/109187a55a3f81113d4b61b965ec72cbaa4970e3_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":11881493,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Ok, yeah, confirmed that the zero-byte handling issue is in c-ares. I will explore an upstream fix but it's not clear what we're going to be able to do here yet.","automated_response":false,"created_at":"2021-05-25T19:47:10.072Z","updated_at":"2021-05-25T19:47:10.072Z","actor":{"username":"jasnell","cleared":false,"url":"/jasnell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/211/162/109187a55a3f81113d4b61b965ec72cbaa4970e3_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":11949653,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"There are two issues, each with separate resolutions.\n\n1. For the handling of null characters in record names, the fix must be done upstream in c-ares. I have not yet identified the specific fix. If someone wants to help with this, it would be appreciated.\n\n2. For the second issue on use of names that are returned, I think the most appropriate mitigation is a warning in the docs that applications need to verify and potentially filter the results.","automated_response":false,"created_at":"2021-06-01T16:02:47.929Z","updated_at":"2021-06-01T16:02:47.929Z","actor":{"username":"jasnell","cleared":false,"url":"/jasnell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/211/162/109187a55a3f81113d4b61b965ec72cbaa4970e3_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":11958585,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Do you have contact to the c-ares developers to resolve the issue or should i contact them?\nI think the fix should be in https://github.com/c-ares/c-ares/blob/fd890e92468d54fbed82e06206a35c5f11ef1add/src/lib/ares_expand_name.c#L114 , in the same place where the special condition \"\\.\" is handled.","automated_response":false,"created_at":"2021-06-02T10:18:27.910Z","updated_at":"2021-06-02T10:18:27.910Z","actor":{"username":"philippjeitner","cleared":false,"url":"/philippjeitner","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":11992855,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@philippjeitner go ahead and contact the c-ares developers, keep us in the loop!","automated_response":false,"created_at":"2021-06-05T09:57:58.421Z","updated_at":"2021-06-05T09:57:58.421Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":12064455,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I've contacted the c-ares developers and will notify about the outcome.","automated_response":false,"created_at":"2021-06-11T12:37:07.097Z","updated_at":"2021-06-11T12:37:07.097Z","actor":{"username":"philippjeitner","cleared":false,"url":"/philippjeitner","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":12086111,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The issue (bad decoding of zero-bytes) has been fixed in c-ares commits [44c009b](https://github.com/c-ares/c-ares/commit/44c009b8e62ea1929de68e3f438181bea469ec14) and [362f91d](https://github.com/c-ares/c-ares/commit/362f91d807d293791008cdb7616d40f7784ece83). I'm still in contact with the developer, i guess there will also be an advisory and new release at some point.","automated_response":false,"created_at":"2021-06-14T09:47:36.981Z","updated_at":"2021-06-14T09:47:36.981Z","actor":{"username":"philippjeitner","cleared":false,"url":"/philippjeitner","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":12088158,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Awesome news! We'll integrate asap (as soon as a release is cut)\nCould you please introduce me (matteo.collina@gmail.com) in the discussion with the C-Ares maintainer so that we could coordinate a date to announce those vulns.","automated_response":false,"created_at":"2021-06-14T12:35:02.289Z","updated_at":"2021-06-14T12:35:02.289Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":12639504,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":"","automated_response":false,"created_at":"2021-07-23T09:27:03.254Z","updated_at":"2021-07-23T09:27:03.254Z","actor":{"username":"richardlau","cleared":false,"url":"/richardlau","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":12644993,"is_internal":false,"editable":false,"type":"Activities::CveIdAdded","message":"","automated_response":false,"created_at":"2021-07-23T10:46:38.315Z","updated_at":"2021-07-23T10:46:38.315Z","cve_ids":["CVE-2021-22931"],"actor":{"username":"danbev","cleared":false,"url":"/danbev","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/p1loeyp5eg3uertcvieae0lp6nch/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%22danbev.jpeg%22%3B%20filename%2A%3DUTF-8%27%27danbev.jpeg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ4NIHB2M2%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T133008Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJGMEQCIE3FUcgRK7FM%2F7U9PAkh6%2BI7wZViD1MP1Y8qZWLRN1eUAiAgc4SQu0yGJV%2BOQRn82JsTD2%2Bd2fHZQycxL60pz%2B7CjyqDBAjt%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIMkR9JAvrXeOfq9Rc6KtcDp5bGOpV6FTgydp%2FZOb6Bh6HFPtwnCVZfa015OiSuBfCxPwur%2F7aSPKTNE0sy0w9C45qL0zZ1nOQQos0M24uDH67J2wRZXM50ImEA29W1ENYnCggW3Oj1ThbKF4WgRsg%2F9mjcm%2BZmkVxvLoYJ9V%2BPAToGVUPNdCuARshEYKICR0Xo5x6JoDNaCt8Ld9eGqOBMXV3rned7uAPh8EmsbYJGE3kgeYkoAT36Qaqe4UgPgyO9VFwa9aDWRX%2B50CKWSjbjZzr%2BF%2B9jH4MB%2FxFZ4EWRHEor6ZAw08vWfwqAZLqqZdMNm9vuS82Y9DrOKW2mwiXSVAN3ddQvsOMXsKnTXkUhnfuaQmZvTtYFFm%2BIF8eMq92q4rbYHzak7PfNtWyYQ5raA9JIgznaWFJzJX%2BJlzu%2Bu3r2q3jjPLUM80AxozLcRqWVvYBpiIJlFx45cKPkX%2F2%2BeKoncWc%2B6ePWFPme30ZUDKqp6naa4cEDN31MhQC6Orokr1YD%2FJvOnl4SUarbB1%2BVgfPNBbXbzGIn%2BQ51fempHBLdSWygAxQb8EgPDJYVXZxvBJySlPreu1xMH98Dq97W1%2FcRuSdU1ytWMJPT5MEKol3iFlX9S3vBhB4zpCiL0Qjhs8rBVdayMKLXkIsGOqYB2%2BJTBbMxNO8iefRZNNANeiPRoGrUFs7jVSy6MeL55bB1oEjsBrS1ldm2HFxpIsKxeGY%2Fw5R4r6d07DNpzBAlMx0mvj%2FrMVfwHZDUaLkkIW7L5kfZJyauAUQfU1Yr9%2Flzl1bTl9jiK08pDtPhZS7%2FjLscylmOg0jy%2BlazgeqN9hRW54AGkI6XkZty9qqJMe%2BYbSVGEfkYqEbJxp7dv5pFW%2Ftu9oswsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=f907d47ab8197f84c55d609dcd7b37e7816b0758a3b298c10736d9df082a78fa"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":12670968,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":null,"automated_response":false,"created_at":"2021-07-26T06:16:14.227Z","updated_at":"2021-07-26T06:16:14.227Z","additional_data":{"old_severity":null,"new_severity":"High (7.5)","old_severity_id":null,"new_severity_id":1163897},"actor":{"username":"danbev","cleared":false,"url":"/danbev","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/p1loeyp5eg3uertcvieae0lp6nch/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%22danbev.jpeg%22%3B%20filename%2A%3DUTF-8%27%27danbev.jpeg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ4NIHB2M2%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T133008Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJGMEQCIE3FUcgRK7FM%2F7U9PAkh6%2BI7wZViD1MP1Y8qZWLRN1eUAiAgc4SQu0yGJV%2BOQRn82JsTD2%2Bd2fHZQycxL60pz%2B7CjyqDBAjt%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIMkR9JAvrXeOfq9Rc6KtcDp5bGOpV6FTgydp%2FZOb6Bh6HFPtwnCVZfa015OiSuBfCxPwur%2F7aSPKTNE0sy0w9C45qL0zZ1nOQQos0M24uDH67J2wRZXM50ImEA29W1ENYnCggW3Oj1ThbKF4WgRsg%2F9mjcm%2BZmkVxvLoYJ9V%2BPAToGVUPNdCuARshEYKICR0Xo5x6JoDNaCt8Ld9eGqOBMXV3rned7uAPh8EmsbYJGE3kgeYkoAT36Qaqe4UgPgyO9VFwa9aDWRX%2B50CKWSjbjZzr%2BF%2B9jH4MB%2FxFZ4EWRHEor6ZAw08vWfwqAZLqqZdMNm9vuS82Y9DrOKW2mwiXSVAN3ddQvsOMXsKnTXkUhnfuaQmZvTtYFFm%2BIF8eMq92q4rbYHzak7PfNtWyYQ5raA9JIgznaWFJzJX%2BJlzu%2Bu3r2q3jjPLUM80AxozLcRqWVvYBpiIJlFx45cKPkX%2F2%2BeKoncWc%2B6ePWFPme30ZUDKqp6naa4cEDN31MhQC6Orokr1YD%2FJvOnl4SUarbB1%2BVgfPNBbXbzGIn%2BQ51fempHBLdSWygAxQb8EgPDJYVXZxvBJySlPreu1xMH98Dq97W1%2FcRuSdU1ytWMJPT5MEKol3iFlX9S3vBhB4zpCiL0Qjhs8rBVdayMKLXkIsGOqYB2%2BJTBbMxNO8iefRZNNANeiPRoGrUFs7jVSy6MeL55bB1oEjsBrS1ldm2HFxpIsKxeGY%2Fw5R4r6d07DNpzBAlMx0mvj%2FrMVfwHZDUaLkkIW7L5kfZJyauAUQfU1Yr9%2Flzl1bTl9jiK08pDtPhZS7%2FjLscylmOg0jy%2BlazgeqN9hRW54AGkI6XkZty9qqJMe%2BYbSVGEfkYqEbJxp7dv5pFW%2Ftu9oswsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=f907d47ab8197f84c55d609dcd7b37e7816b0758a3b298c10736d9df082a78fa"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":12777852,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The CVE of c-ares for this vuln is CVE-2021-3672.","automated_response":false,"created_at":"2021-08-02T08:31:17.009Z","updated_at":"2021-08-02T08:31:17.009Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":12907775,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"c-ares has been released: https://c-ares.haxx.se/changelog.html#1_17_2","automated_response":false,"created_at":"2021-08-10T08:13:51.106Z","updated_at":"2021-08-10T08:13:51.106Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":12919890,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@philippjeitner does this sound good for attribution:\n\nThank to you to Philipp Jeitner from Fraunhofer SIT for reporting this vulnerability.\n\n","automated_response":false,"created_at":"2021-08-10T19:14:15.723Z","updated_at":"2021-08-10T19:14:15.723Z","actor":{"username":"mhdawson","cleared":false,"url":"/mhdawson","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":12938723,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Published: https://nodejs.org/en/blog/vulnerability/aug-2021-security-releases/","automated_response":false,"created_at":"2021-08-11T17:50:41.280Z","updated_at":"2021-08-11T17:50:41.280Z","actor":{"username":"mhdawson","cleared":false,"url":"/mhdawson","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":12938730,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","automated_response":false,"created_at":"2021-08-11T17:51:06.247Z","updated_at":"2021-08-11T17:51:06.247Z","actor":{"username":"mhdawson","cleared":false,"url":"/mhdawson","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"philippjeitner","url":"/philippjeitner"},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":12938740,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2021-08-11T17:51:52.987Z","updated_at":"2021-08-11T17:51:52.987Z","first_to_agree":true,"actor":{"username":"mhdawson","cleared":false,"url":"/mhdawson","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":13166091,"is_internal":false,"editable":false,"type":"Activities::NotEligibleForBounty","message":"","automated_response":false,"created_at":"2021-08-25T14:09:34.049Z","updated_at":"2021-08-25T14:09:34.049Z","actor":{"url":"/nodejs","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Node.js"}},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":13407380,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2021-09-10T17:51:58.184Z","updated_at":"2021-09-10T17:51:58.184Z","actor":{"url":"/nodejs","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Node.js"}},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}