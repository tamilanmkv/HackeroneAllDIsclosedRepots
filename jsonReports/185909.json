{"id":185909,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xODU5MDk=","url":"https://hackerone.com/reports/185909","title":"unchecked unserialize usages in audit-trail-extension/audit-trail-extension.php","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2016-11-28T01:20:42.688Z","submitted_at":"2016-11-28T01:20:42.688Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"e3amn2l","url":"/e3amn2l","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":162,"url":"https://hackerone.com/iandunn-projects","handle":"iandunn-projects","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/162/2b148a5580e8f7c45d676df7576fb8b11b4de9ad_original.jpg/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/162/2b148a5580e8f7c45d676df7576fb8b11b4de9ad_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"Ian Dunn","twitter_handle":"","website":"","about":"I'm a WordPress developer who maintains several small open source projects."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2016-12-30T07:08:31.322Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2016-11-30T07:08:24.576Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"in:\n\thttps://github.com/iandunn/audit-trail-extension/blob/master/audit-trail-extension.php#L106\n\thttps://github.com/iandunn/audit-trail-extension/blob/master/audit-trail-extension.php#L112\n\thttps://github.com/iandunn/audit-trail-extension/blob/master/audit-trail-extension.php#L133\n\thttps://github.com/iandunn/audit-trail-extension/blob/master/audit-trail-extension.php#L139\n\t\nthere is usages of unserialize function\t\t\n```\n\t\t\t\t\t$option = unserialize( $item-\u003edata );\n\t\t\t\t\t$details = unserialize( $item-\u003edata );\n```\n\nwithout disallowing unneeded classes.\nthus, if attacker managed to control the value of $item-\u003edata he will be able to:\n\n1\\. conduct PHP POP exploitation, more information:\n\nhttp://www.slideshare.net/_s_n_t/php-unserialization-vulnerabilities-what-are-we-missing\nhttp://www.slideshare.net/MailRuGroup/security-meetup-22-php-unserialize-exploiting\n\n2\\. unserialize itself has many security bugs in previous PHP versions which can be exploited, more information:\n\nhttps://www.evonide.com/fuzzing-unserialize/\nhttps://blog.checkpoint.com/wp-content/uploads/2016/08/Exploiting-PHP-7-unserialize-Report-160829.pdf\n\nfix:\n\n1\\. don't use serialize/unserialize if json_encode/json_decode can be used instead. (fix both 1 \u0026 2 attack vectors)\n2\\. if 1 isn't possible, use safe unserialize invocation, such as:\n```\n        if (version_compare(PHP_VERSION, '7.0', 'lt')) {\n            return safeUnserialize($data);\n        } else {\n            return safeUnserialize($data, false);\n        }\n```\n\nImplement safeUnserialize function that based on PMA_safeUnserialize:\nhttps://github.com/phpmyadmin/phpmyadmin/blob/fb161a7bebe60d902f743227158eca6a9889c472/libraries/core.lib.php#L1080\nbut with fix for the issue described in:\nhttps://hackerone.com/reports/181315#activity-1322058","bounty_amount":"50.0","formatted_bounty":"$50","original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2016-12-30T07:08:24.630Z","allow_singular_disclosure_after":-150878869.56657997,"singular_disclosure_allowed":true,"vote_count":8,"voters":["pekafat","mpz","madrobot","exadmin","codertom","spetr0x","dyabla","paulcale04"],"severity":{"rating":"medium","author_type":"Team"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":1323290,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thanks Emanuel, this looks valid at first glance.","automated_response":false,"created_at":"2016-11-28T16:36:23.677Z","updated_at":"2016-11-28T16:36:23.677Z","actor":{"username":"iandunn","cleared":false,"url":"/iandunn","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/974/01bc1d097002b7eff8eddba98990e094553b1eac_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"iandunn-projects","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1325043,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Actually, now that I think about it, that plugin only works if the Audit Trail plugin is running, and Audit Trail makes the decision to store `$item` in a serialized string.\n\nSo, this would need to be fixed in Audit Trail first, before anything could be done in `audit-trail-extension`.","automated_response":false,"created_at":"2016-11-29T04:07:00.851Z","updated_at":"2016-11-29T04:07:00.851Z","actor":{"username":"iandunn","cleared":false,"url":"/iandunn","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/974/01bc1d097002b7eff8eddba98990e094553b1eac_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"iandunn-projects","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1325060,"is_internal":false,"editable":false,"type":"Activities::BugInformative","message":"Closing since this needs to be fixed upstream first.","automated_response":false,"created_at":"2016-11-29T04:19:49.209Z","updated_at":"2016-11-29T04:19:49.209Z","actor":{"username":"iandunn","cleared":false,"url":"/iandunn","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/974/01bc1d097002b7eff8eddba98990e094553b1eac_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"iandunn-projects","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1325809,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"in case upstream will not change the serialize call/format, you need to disallow not needed classes as I point in 2 in fix (under \"use safe unserialize invocation\")","automated_response":false,"created_at":"2016-11-29T12:03:50.022Z","updated_at":"2016-11-29T12:03:50.022Z","actor":{"username":"e3amn2l","cleared":false,"url":"/e3amn2l","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"iandunn-projects","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1326634,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"It doesn't look like PMA_safeUnserialize() supports whitelisting objects, so that would have to be added.\n\nIt still doesn't seem necessary, though, because I don't see any way an attacker could manipulate `$item`, unless they could already execute PHP code. There's no user input to take advantage of.\n\nHere's where `$item` gets passed to my plugin by Audit Trail:\n\n* https://plugins.trac.wordpress.org/browser/audit-trail/trunk/models/audit.php?rev=1167079#L197\n* https://plugins.trac.wordpress.org/browser/audit-trail/trunk/models/audit.php?rev=1167079#L214\n\nCan you demonstrate a way to pass a malicious object to my plugin?","automated_response":false,"created_at":"2016-11-29T16:11:29.759Z","updated_at":"2016-11-29T16:11:29.759Z","actor":{"username":"iandunn","cleared":false,"url":"/iandunn","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/974/01bc1d097002b7eff8eddba98990e094553b1eac_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"iandunn-projects","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1327011,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"1\\. one way is changing the value directly from the database (in case attacker managed to compromise the database / get access to it) then attacker will want to hack the client (execute PHP code), not sure how much a hardened wordpress installation (that use some of the following defines, so even admin can't run PHP code)\nDISALLOW_FILE_EDIT\nDISALLOW_FILE_MODS\nis resistant to attack that come from compromised database, still it's better to not increase the attack surface.\n2\\. it might be possible to influence $item in creation time (will check if it's possible later), still it's better to protect from this (too not assume it be safe forever)\n\n\u003eIt doesn't look like PMA_safeUnserialize() supports whitelisting objects, so that would have to be added.\n\nyes, if support for PHP \u003c 7 is needed (unserialize support whitelisted objects from PHP \u003e 7)","automated_response":false,"created_at":"2016-11-29T17:51:02.637Z","updated_at":"2016-11-29T17:51:02.637Z","actor":{"username":"e3amn2l","cleared":false,"url":"/e3amn2l","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"iandunn-projects","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1328892,"is_internal":false,"editable":false,"type":"Activities::BugReopened","message":"Doh, you're right, a compromised db is a practical vector.","automated_response":false,"created_at":"2016-11-30T06:57:20.009Z","updated_at":"2016-11-30T06:57:20.009Z","actor":{"username":"iandunn","cleared":false,"url":"/iandunn","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/974/01bc1d097002b7eff8eddba98990e094553b1eac_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"iandunn-projects","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1328909,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","automated_response":false,"created_at":"2016-11-30T07:05:08.684Z","updated_at":"2016-11-30T07:05:08.684Z","additional_data":{"old_severity":null,"new_severity":"Medium","old_severity_id":null,"new_severity_id":10414},"actor":{"username":"iandunn","cleared":false,"url":"/iandunn","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/974/01bc1d097002b7eff8eddba98990e094553b1eac_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"iandunn-projects","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1328910,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","automated_response":false,"created_at":"2016-11-30T07:06:03.350Z","updated_at":"2016-11-30T07:06:03.350Z","actor":{"url":"/iandunn-projects","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/162/2b148a5580e8f7c45d676df7576fb8b11b4de9ad_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Ian Dunn"}},"bounty_amount":"50.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"iandunn-projects","collaborator":{"username":"e3amn2l","url":"/e3amn2l"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1328914,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"This is really old code that I doubt anybody is using, so I didn't bother doing a proper fix. I just [removed the serialization](https://github.com/iandunn/audit-trail-extension/commit/5076c714024167eef2c69d648b779110f2c92309) so that the raw string is displayed.","automated_response":false,"created_at":"2016-11-30T07:08:17.209Z","updated_at":"2016-11-30T07:08:17.209Z","actor":{"username":"iandunn","cleared":false,"url":"/iandunn","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/974/01bc1d097002b7eff8eddba98990e094553b1eac_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"e3amn2l","url":"/e3amn2l"},"genius_execution_id":null,"team_handle":"iandunn-projects","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1328916,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2016-11-30T07:08:24.599Z","updated_at":"2016-11-30T07:08:24.599Z","first_to_agree":true,"actor":{"username":"iandunn","cleared":false,"url":"/iandunn","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/974/01bc1d097002b7eff8eddba98990e094553b1eac_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"iandunn-projects","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1391857,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2016-12-30T07:08:31.354Z","updated_at":"2016-12-30T07:08:31.354Z","actor":{"url":"/iandunn-projects","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/162/2b148a5580e8f7c45d676df7576fb8b11b4de9ad_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Ian Dunn"}},"genius_execution_id":null,"team_handle":"iandunn-projects","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}