{"id":2233,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yMjMz","url":"https://hackerone.com/reports/2233","title":"Bypass auth.email-domains (2)","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2014-02-23T18:44:37.166Z","submitted_at":"2014-02-23T18:44:37.166Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"tomvg","url":"/tomvg","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/088/bcadc0a4a87f5627226b724ae0dcacbee32cc3e7_original.jpg/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":18,"url":"https://hackerone.com/phabricator","handle":"phabricator","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/018/61446f7e6f0684c8c9f7c36c918b7ecd58183588_original.jpg/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/018/61446f7e6f0684c8c9f7c36c918b7ecd58183588_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"Phabricator","twitter_handle":"phabricator","website":"http://phacility.com/phabricator/","about":"Phabricator is a collection of open source web applications that help software companies build better software."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2014-03-26T01:04:47.585Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2014-02-24T01:08:06.299Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"This vulnerability has the same effect as my previously reported bug [#2224 Bypass `auth.email`-domains](https://hackerone.com/reports/2224), but uses a very different approach, bypassing the current fix.\r\n\r\nInstead of truncating through length, this vulnerability uses truncation via MySQL‚Äôs (weird) behaviour on inserting Unicode characters with code points greater than `0xFFFF` into columns that have a `utf8` charset. MySQL then truncates a string as soon as it reaches such a character. For more info, see [How to support full Unicode in MySQL databases](http://mathiasbynens.be/notes/mysql-utf8mb4) by @mathias.\r\n\r\nTo replicate, register an account with following address: `attacker@gmail.comùåÜ@allowed-domain.com`.\r\n\r\nI would suggest to reconsider not verifying email addresses as was mentioned [here](https://secure.phabricator.com/D8308#5).","bounty_amount":"500.0","formatted_bounty":"$500","weakness":{"id":27,"name":"Improper Authentication - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2014-03-26T01:04:46.903Z","allow_singular_disclosure_after":-238165377.09545308,"singular_disclosure_allowed":true,"vote_count":4,"voters":["sw33tlie","cryptographer","khleymu_da","smither"],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":9017,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"This is an issue which we're aware of in general (see https://secure.phabricator.com/T1191) but had not been thinking of as a security issue until now. This represents a practical attack.\n\nInstead of validating the email address, I'm going to attempt to filter all application input. There's no real reason to believe that the email field is the only vulnerable storage here, and the entire application assumes it will be able to load the same data it saved. Filtering all input prevents this entire class of issues.\n\nI believe we can develop a patch to filter all HTTP input in a short period of time. We receive input from other sources as well, but they're usually trusted or harder to attack (for example, `git log` against user data in a repository), and we can harden those over time. I think we can also filter write queries before we execute them to provide an additional layer of coverage.\n\nLet me see how practical this is. If it looks like it's not reasonable to develop a broad patch today we can apply a more tailored patch against the email field.","automated_response":false,"created_at":"2014-02-23T18:57:56.465Z","updated_at":"2014-02-23T18:57:56.465Z","actor":{"username":"epriestley","cleared":false,"url":"/epriestley","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/043/3ebca5250ea5abd54b49ccc9d69c636af4585b2e_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"phabricator","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9021,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Some fields allow non-base-plane characters already, so filtering HTTP input on these characters may give rise to new issues. (please correct me if I'm wrong)","automated_response":false,"created_at":"2014-02-23T19:30:51.500Z","updated_at":"2014-02-23T19:30:51.500Z","actor":{"username":"tomvg","cleared":false,"url":"/tomvg","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/088/bcadc0a4a87f5627226b724ae0dcacbee32cc3e7_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"phabricator","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9022,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"That's true, but I think there is only one case where it matters at the HTTP layer (HTML5 file data upload) and only a handful at the database layer (storing file data, storing compressed caches). In all other cases, the current behavior (usually, silent truncation of data) is worse than the new behavior will be (an explicit error). It's possible that other cases will arise, but I'd much rather break them and then add exceptions to a whitelist than discover more cases where truncation has a security impact.","automated_response":false,"created_at":"2014-02-23T19:38:27.506Z","updated_at":"2014-02-23T19:38:27.506Z","actor":{"username":"epriestley","cleared":false,"url":"/epriestley","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/043/3ebca5250ea5abd54b49ccc9d69c636af4585b2e_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"phabricator","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9037,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Quick update here:\n\nThese patches add `phutil_is_utf8_with_only_bmp_characters($string)`, a function which tests if `$string` will be representable by MySQL in `utf8` columns (i.e., saving and then loading it will reproduce the original result):\n\nhttps://secure.phabricator.com/D8310\nhttps://secure.phabricator.com/D8312\nhttps://secure.phabricator.com/D8313\nhttps://secure.phabricator.com/D8314\n\nThis patch redefines `%s` in our query layer to mean \"string which MySQL can representably store in a utf8 column\", and adds `%B` for \"any binary string\":\n\nhttps://secure.phabricator.com/D8315\n\nThis patch converts Phabricator to use `%B` and a new `CONFIG_BINARY` flag on all columns where it operates on binary data:\n\nhttps://secure.phabricator.com/D8316\n\nThese patches successfully defuse the attack, as the query is now aborted during construction.\n\nI'd also like to apply filtering at a higher level (to all HTTP inputs) but am inclined to ship this stuff first and make sure it doesn't break anything, since we aren't aware of any viable attack above the MySQL layer and I think we have no reason to believe that one exists.","automated_response":false,"created_at":"2014-02-23T22:01:55.620Z","updated_at":"2014-02-23T22:01:55.620Z","actor":{"username":"epriestley","cleared":false,"url":"/epriestley","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/043/3ebca5250ea5abd54b49ccc9d69c636af4585b2e_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"phabricator","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9044,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I have not encountered any similar truncation behaviour in other services, so for the time being there is indeed no reason to believe similar attacks exist. And therefore, the current patches should be sufficient to mitigate a range of attacks that abuse this silent truncation of data.\n\nLast year, [I found a vulnerability in WordPress which could lead to RCE](http://vagosec.org/2013/09/wordpress-php-object-injection/), so this behaviour could've possibly lead to much worse things in Phabricator.","automated_response":false,"created_at":"2014-02-23T23:13:16.505Z","updated_at":"2014-02-23T23:13:16.505Z","actor":{"username":"tomvg","cleared":false,"url":"/tomvg","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/088/bcadc0a4a87f5627226b724ae0dcacbee32cc3e7_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"phabricator","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9053,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"All of that is in HEAD and seems to be working properly (in that it both prevents the issue and doesn't seem to have broken anything else). I've filed this to track the eventual filtering of all HTTP input, which I think is only a bit more involved:\n\nhttps://secure.phabricator.com/T4470","automated_response":false,"created_at":"2014-02-24T01:04:47.006Z","updated_at":"2014-02-24T01:04:47.006Z","actor":{"username":"epriestley","cleared":false,"url":"/epriestley","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/043/3ebca5250ea5abd54b49ccc9d69c636af4585b2e_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"tomvg","url":"/tomvg"},"genius_execution_id":null,"team_handle":"phabricator","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9055,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"This substantially builds on #2224, but the specific mechanism also represents a separate class of issues.","automated_response":false,"created_at":"2014-02-24T01:07:53.632Z","updated_at":"2014-02-24T01:07:53.632Z","actor":{"url":"/phabricator","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/018/61446f7e6f0684c8c9f7c36c918b7ecd58183588_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Phabricator"}},"bounty_amount":"500.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"phabricator","collaborator":{"username":"tomvg","url":"/tomvg"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9057,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"We've disclosed this publicly.","automated_response":false,"created_at":"2014-02-24T01:08:06.313Z","updated_at":"2014-02-24T01:08:06.313Z","actor":{"username":"epriestley","cleared":false,"url":"/epriestley","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/043/3ebca5250ea5abd54b49ccc9d69c636af4585b2e_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"phabricator","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9069,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for reporting these issues, they were extremely substantive and your reports were very clear and easy to act on. Let us know if you come up with anything else!","automated_response":false,"created_at":"2014-02-24T02:22:05.595Z","updated_at":"2014-02-24T02:22:05.595Z","actor":{"username":"epriestley","cleared":false,"url":"/epriestley","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/043/3ebca5250ea5abd54b49ccc9d69c636af4585b2e_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"phabricator","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":19791,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2014-03-26T01:04:47.597Z","updated_at":"2014-03-26T01:04:47.597Z","actor":{"url":"/phabricator","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/018/61446f7e6f0684c8c9f7c36c918b7ecd58183588_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Phabricator"}},"genius_execution_id":null,"team_handle":"phabricator","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}