{"id":287835,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yODc4MzU=","url":"https://hackerone.com/reports/287835","title":"Resolv::getaddresses bug that can be abused to bypass security measures. ","state":"Closed","substate":"informative","readable_substate":"Informative","created_at":"2017-11-06T19:44:58.500Z","submitted_at":"2017-11-06T19:44:58.500Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"edoverflow","url":"/edoverflow","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":7724,"url":"https://hackerone.com/ruby","handle":"ruby","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/007/724/bb067434deef370d6a0b16c2cbbc030b57c75e92_original.png/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/000/007/724/bb067434deef370d6a0b16c2cbbc030b57c75e92_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"Ruby","twitter_handle":"","website":"https://www.ruby-lang.org","about":"A Programmer's Best Friend"}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2018-02-23T07:19:19.776Z","bug_reporter_agreed_on_going_public_at":"2017-11-10T09:34:10.401Z","team_member_agreed_on_going_public_at":"2018-02-23T07:19:19.683Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"# Description\n\n`Resolv::getaddresses` is OS-dependent, therefore by playing around with different IP formats one can return blank values. This bug can be abused to bypass exclusion lists often used to protect against SSRF.\n\n| ðŸ’» Machine 1 | \tðŸ’» Machine 2 | \n|--------------|---------------| \n| ruby 2.3.3p222 (2016-11-21) [x86_64-linux-gnu] | ruby 2.3.1p112 (2016-04-26) [x86_64-linux-gnu] |\n\nðŸ’» Machine 1\n\n```\nirb(main):002:0\u003e Resolv.getaddresses(\"127.0.0.1\")\n=\u003e [\"127.0.0.1\"]\nirb(main):003:0\u003e Resolv.getaddresses(\"localhost\")\n=\u003e [\"127.0.0.1\"]\nirb(main):004:0\u003e Resolv.getaddresses(\"127.000.000.1\")\n=\u003e [\"127.0.0.1\"]\n```\nðŸ’» Machine 2\n\n```\nirb(main):008:0\u003e Resolv.getaddresses(\"127.0.0.1\")\n=\u003e [\"127.0.0.1\"]\nirb(main):009:0\u003e Resolv.getaddresses(\"localhost\")\n=\u003e [\"127.0.0.1\"]\nirb(main):010:0\u003e Resolv.getaddresses(\"127.000.000.1\")\n=\u003e []\n```\n\n# Proof of concept\n\n```\nirb(main):001:0\u003e require 'resolv'\n=\u003e true\nirb(main):002:0\u003e uri = \"0x7f.1\"\n=\u003e \"0x7f.1\"\nirb(main):003:0\u003e server_ips = Resolv.getaddresses(uri)\n=\u003e [] # The bug!\nirb(main):004:0\u003e blocked_ips = [\"127.0.0.1\", \"::1\", \"0.0.0.0\"]\n=\u003e [\"127.0.0.1\", \"::1\", \"0.0.0.0\"]\nirb(main):005:0\u003e (blocked_ips \u0026 server_ips).any?\n=\u003e false # Bypass\n```\n\n# Mitigation\n\nCurrently I have been suggesting that the affected vendors stay away from `Resolv::getaddresses` altogether and use the `Socket` class.\n\n```\nirb(main):002:0\u003e Resolv.getaddresses(\"127.1\")\n=\u003e []\nirb(main):003:0\u003e Socket.getaddrinfo(\"127.1\", nil).sample[3]\n=\u003e \"127.0.0.1\"\n```\n\n# Affected vendors and gems\n\nBy abusing this bug I was able to bypass GitLab, HackerOne and [private_address_check](https://github.com/jtdowney/private_address_check/)'s [SSRF](https://www.owasp.org/index.php/Server_Side_Request_Forgery) filters.\n\nThe `private_address_check` gem, for instance, relied on `Resolv::getaddresses` in `lib/private_address_check.rb`:\n\n```ruby\ndef resolves_to_private_address?(hostname)\n    ips = Resolv.getaddresses(hostname)\n    ips.any? do |ip| \n      private_address?(ip)\n    end\nend\n```\n\n```\nirb(main):001:0\u003e require 'private_address_check'\n=\u003e true\nirb(main):002:0\u003e PrivateAddressCheck.resolves_to_private_address?(\"127.1\")\n=\u003e false # Bypass\n```\n\nThe author of this gem has provided a [patch](https://github.com/jtdowney/private_address_check/commit/58a0d7fe31de339c0117160567a5b33ad82b46af) for this issue and I can confirm that I am unable to bypass the fix.\n\nGitLab and HackerOne have also been notified and plan on releasing a fix this week.\n\n","weakness":{"id":57,"name":"Violation of Secure Design Principles"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":null,"vote_count":4,"voters":["jokebookservice1","003random","khizer47","666reda"],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":2138101,"is_internal":false,"editable":false,"type":"Activities::CveIdAdded","message":"","automated_response":false,"created_at":"2017-11-06T20:15:00.680Z","updated_at":"2017-11-06T20:15:00.680Z","cve_ids":["CVE-2017-0904"],"actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2139111,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello, thank you for the report.  Our team members are looking at it.","automated_response":false,"created_at":"2017-11-07T04:18:13.168Z","updated_at":"2017-11-07T04:18:13.168Z","actor":{"username":"shyouhei","cleared":false,"url":"/shyouhei","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2139227,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":"","automated_response":false,"created_at":"2017-11-07T06:28:16.274Z","updated_at":"2017-11-07T06:28:16.274Z","actor":{"username":"tanaka_akr","cleared":false,"url":"/tanaka_akr","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2139298,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"resolv.rb can behave differently with OS's resolver.\nThis is documented behavior.\nhttps://docs.ruby-lang.org/en/2.4.0/Resolv.html describes that\nresolv.rb doesn't support NIS (of Solaris).\nI.e. some name not resolved with resolv.rb may be resolved in OS's resolver.\n\nUncommon IP address format can be considered as an example of above.\n\nAlthough it is possible to support such uncommon IP addresses in resolv.rb\nbut it is too difficult to support NIS.\nWe can not match the behaviors of resolv.rb and OS's resolver.\n\nThe right way to check an address is using OS's resolver instead of resolv.rb\nif the address is resolved by OS's resolver.\nFor example, Addrinfo.getaddrinfo of socket library can be used:\n\n```\n% ruby -rsocket -e '\nas = Addrinfo.getaddrinfo(\"192.168.0.1\", nil)\np as\np as.map {|a| a.ipv4_private? }\n'\n[#\u003cAddrinfo: 192.168.0.1 TCP\u003e, #\u003cAddrinfo: 192.168.0.1 UDP\u003e, #\u003cAddrinfo: 192.168.0.1 SOCK_RAW\u003e]\n[true, true, true]\n```\n\nIf you need CIDR or netmask, ipaddr library helps.\n","automated_response":false,"created_at":"2017-11-07T07:32:23.648Z","updated_at":"2017-11-07T07:32:23.648Z","actor":{"username":"tanaka_akr","cleared":false,"url":"/tanaka_akr","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2139723,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @tanaka_akr,\n\nThank you for the prompt response. I would like to reiterate the importance of this issue by reminding you that I have discovered numerous cases where this class was being used leading to a security vulnerability. In my opinion, those two little bullet points do not suffice and I would recommend reviewing your documentation again and coming up with a better solution to emphasize the fact that `Resolv` can have unpredictable behaviour and should not be used for security measures such as SSRF filters.\n\nThe Python documentation does this very well by having a large red panel that clearly instructs the developer on what not to use that specific library for. An example warning can be seen here: https://docs.python.org/3/library/random.html.","automated_response":false,"created_at":"2017-11-07T09:57:59.475Z","updated_at":"2017-11-07T09:57:59.475Z","actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2141896,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"True. We need doc improvements.","automated_response":false,"created_at":"2017-11-08T01:54:56.589Z","updated_at":"2017-11-08T01:54:56.589Z","actor":{"username":"shyouhei","cleared":false,"url":"/shyouhei","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2144783,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The document is not so updated since Ruby 1.8 era.\nI agree that it should be updated including emphasizing difference to OS's resolver.","automated_response":false,"created_at":"2017-11-09T01:33:39.055Z","updated_at":"2017-11-09T01:33:39.055Z","actor":{"username":"tanaka_akr","cleared":false,"url":"/tanaka_akr","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2147025,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I have published a write-up on this issue in order to inform developers on the consequences of using `Resolv::getaddresses` for security measures such as SSRF filters: https://edoverflow.com/2017/ruby-resolv-bug/. If there is anyway that I can possibly help with improving Ruby's documentation, please let me know.","automated_response":false,"created_at":"2017-11-09T18:41:26.562Z","updated_at":"2017-11-09T18:41:26.562Z","actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2148413,"is_internal":false,"editable":false,"type":"Activities::BugInformative","message":"Thanks to your report. We decide to not handle this for security issue.","automated_response":false,"created_at":"2017-11-10T08:39:25.907Z","updated_at":"2017-11-10T08:39:25.907Z","actor":{"username":"hsbt","cleared":false,"url":"/hsbt","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/dx6z1zqthgan1c4rv9ppn4jx3832/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%222eUvHh_4_400x400.png%22%3B%20filename%2A%3DUTF-8%27%272eUvHh_4_400x400.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQYC7ZV3WT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T143846Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJHMEUCIDrMLp4%2BWn0RnMngqqBOAomCU8GWEnyzbfeWXMTkRqdkAiEAmbCt%2FtYvzimCcqsBY5T%2BAP6C1koJvsZIEr7pm24tsEAqgwQI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDHO5iuzPFsJ4aK7KmSrXA43fG9ZExUYtmldfJFAHkWRlov9q%2FHMMPiqI7JWoul8iB2lnCe0Z8UD9oM5cfjZfhntNLx94myZGJfeT24YbqZ%2BCsOqn%2BPXRlK7VWqoq1AV8zdBtboSY1qGlF1yW0h8xQvR1G807ShHTgDzCxdIUl0y2PUXdt%2BRNIlHckLFzjBfbJBmGFikh%2B68wwr3qhH%2BRekBJT8dRJqkMmVmJIoL4rn3y%2FCM010RJxL86Xuoat%2BrN046smSjkfceh4bPaJkOADf33dP%2FBliSDcBjoMG74ZFHPAmgnqoN439xdfqhUpIPqNFrcRU1WpQhc12VYut5tMZcbmJchXopaXhvm%2B4orW3DihHvyn7HD%2BiT1cpN9baXaycQzr%2B68J9MyG01Zce8VNQxPm5eRp7v9dtdfEQ9sF3yuOsWzUwY%2BTHCD7SIcVsQFrS5Z2L5Ux3CncTXxkqQVlNCyHTcJODpncVKfD7b6uHxsAmVawhDDZJgLpATJPpVIaGa0em09aEDUcT%2FuazJtx1N1gOr8ZYZSsD6LmJlT7xfEsyzeZ%2BC%2FQQSJKyYRebEtRjLR%2BsYz4MKD2jlXjj62sVdjHko29e6c4eso%2Fx8%2Bjrkj%2BYuyD88VzMWxszti4qHccB7%2Fr3%2BsDzDViZGLBjqlAc5vcHGjagoOTjMDz6VCxHAyKKMhBY%2F4ksl1iKt3Mkg6KIb8dD7WB3B5bRwalHdLpA6q%2F0HyHwVC3k8nRLkVacoHC%2BTnF8IsDYgQMa3VWvq9UB5BqCGPwIE9Smv%2FlQf6eGWyrcOO%2Brsi6UGSaKxoz3eFt2y8zMnz71sdDkZshTNAZoB15M%2BSMQApjyeteOn3dhbojlsBvMBhOE%2FWaBGY2zXmhSJaSA%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=f5bd123af6123072925b0201686ae09d6d57cdf2a29c7f00922bb0488f5cdf39"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2148510,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Thank you very much for the extremely informative response, @hsbt. Now I know how to deal with such issues in future.","automated_response":false,"created_at":"2017-11-10T09:34:10.456Z","updated_at":"2017-11-10T09:34:10.456Z","first_to_agree":true,"actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2150182,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I would like to apologise for my brash comment earlier. Putting so much time and effort into this issue and not even getting a response explaining your final decision is very frustrating. In future, I will be more careful as to how I deal with this frustration. I would also suggest you communicate clearly how you came to your final decision to security researchers. Making your thought process clear helps us learn and improve. Nevertheless, my comment was uncalled for and I hope it did not offend anyone.\n\nI hope you have a wonderful weekend.","automated_response":false,"created_at":"2017-11-10T20:34:02.287Z","updated_at":"2017-11-10T20:34:02.287Z","actor":{"username":"edoverflow","cleared":true,"url":"/edoverflow","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2150779,"is_internal":false,"editable":false,"type":"Activities::CveIdAdded","message":"","automated_response":false,"created_at":"2017-11-11T03:04:56.165Z","updated_at":"2017-11-11T03:04:56.165Z","cve_ids":[],"actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2424149,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2018-02-23T07:19:19.728Z","updated_at":"2018-02-23T07:19:19.728Z","actor":{"username":"hsbt","cleared":false,"url":"/hsbt","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/dx6z1zqthgan1c4rv9ppn4jx3832/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%222eUvHh_4_400x400.png%22%3B%20filename%2A%3DUTF-8%27%272eUvHh_4_400x400.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQYC7ZV3WT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T143846Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJHMEUCIDrMLp4%2BWn0RnMngqqBOAomCU8GWEnyzbfeWXMTkRqdkAiEAmbCt%2FtYvzimCcqsBY5T%2BAP6C1koJvsZIEr7pm24tsEAqgwQI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDHO5iuzPFsJ4aK7KmSrXA43fG9ZExUYtmldfJFAHkWRlov9q%2FHMMPiqI7JWoul8iB2lnCe0Z8UD9oM5cfjZfhntNLx94myZGJfeT24YbqZ%2BCsOqn%2BPXRlK7VWqoq1AV8zdBtboSY1qGlF1yW0h8xQvR1G807ShHTgDzCxdIUl0y2PUXdt%2BRNIlHckLFzjBfbJBmGFikh%2B68wwr3qhH%2BRekBJT8dRJqkMmVmJIoL4rn3y%2FCM010RJxL86Xuoat%2BrN046smSjkfceh4bPaJkOADf33dP%2FBliSDcBjoMG74ZFHPAmgnqoN439xdfqhUpIPqNFrcRU1WpQhc12VYut5tMZcbmJchXopaXhvm%2B4orW3DihHvyn7HD%2BiT1cpN9baXaycQzr%2B68J9MyG01Zce8VNQxPm5eRp7v9dtdfEQ9sF3yuOsWzUwY%2BTHCD7SIcVsQFrS5Z2L5Ux3CncTXxkqQVlNCyHTcJODpncVKfD7b6uHxsAmVawhDDZJgLpATJPpVIaGa0em09aEDUcT%2FuazJtx1N1gOr8ZYZSsD6LmJlT7xfEsyzeZ%2BC%2FQQSJKyYRebEtRjLR%2BsYz4MKD2jlXjj62sVdjHko29e6c4eso%2Fx8%2Bjrkj%2BYuyD88VzMWxszti4qHccB7%2Fr3%2BsDzDViZGLBjqlAc5vcHGjagoOTjMDz6VCxHAyKKMhBY%2F4ksl1iKt3Mkg6KIb8dD7WB3B5bRwalHdLpA6q%2F0HyHwVC3k8nRLkVacoHC%2BTnF8IsDYgQMa3VWvq9UB5BqCGPwIE9Smv%2FlQf6eGWyrcOO%2Brsi6UGSaKxoz3eFt2y8zMnz71sdDkZshTNAZoB15M%2BSMQApjyeteOn3dhbojlsBvMBhOE%2FWaBGY2zXmhSJaSA%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=f5bd123af6123072925b0201686ae09d6d57cdf2a29c7f00922bb0488f5cdf39"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2424150,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2018-02-23T07:19:19.801Z","updated_at":"2018-02-23T07:19:19.801Z","actor":{"username":"hsbt","cleared":false,"url":"/hsbt","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/dx6z1zqthgan1c4rv9ppn4jx3832/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%222eUvHh_4_400x400.png%22%3B%20filename%2A%3DUTF-8%27%272eUvHh_4_400x400.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQYC7ZV3WT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T143846Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJHMEUCIDrMLp4%2BWn0RnMngqqBOAomCU8GWEnyzbfeWXMTkRqdkAiEAmbCt%2FtYvzimCcqsBY5T%2BAP6C1koJvsZIEr7pm24tsEAqgwQI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDHO5iuzPFsJ4aK7KmSrXA43fG9ZExUYtmldfJFAHkWRlov9q%2FHMMPiqI7JWoul8iB2lnCe0Z8UD9oM5cfjZfhntNLx94myZGJfeT24YbqZ%2BCsOqn%2BPXRlK7VWqoq1AV8zdBtboSY1qGlF1yW0h8xQvR1G807ShHTgDzCxdIUl0y2PUXdt%2BRNIlHckLFzjBfbJBmGFikh%2B68wwr3qhH%2BRekBJT8dRJqkMmVmJIoL4rn3y%2FCM010RJxL86Xuoat%2BrN046smSjkfceh4bPaJkOADf33dP%2FBliSDcBjoMG74ZFHPAmgnqoN439xdfqhUpIPqNFrcRU1WpQhc12VYut5tMZcbmJchXopaXhvm%2B4orW3DihHvyn7HD%2BiT1cpN9baXaycQzr%2B68J9MyG01Zce8VNQxPm5eRp7v9dtdfEQ9sF3yuOsWzUwY%2BTHCD7SIcVsQFrS5Z2L5Ux3CncTXxkqQVlNCyHTcJODpncVKfD7b6uHxsAmVawhDDZJgLpATJPpVIaGa0em09aEDUcT%2FuazJtx1N1gOr8ZYZSsD6LmJlT7xfEsyzeZ%2BC%2FQQSJKyYRebEtRjLR%2BsYz4MKD2jlXjj62sVdjHko29e6c4eso%2Fx8%2Bjrkj%2BYuyD88VzMWxszti4qHccB7%2Fr3%2BsDzDViZGLBjqlAc5vcHGjagoOTjMDz6VCxHAyKKMhBY%2F4ksl1iKt3Mkg6KIb8dD7WB3B5bRwalHdLpA6q%2F0HyHwVC3k8nRLkVacoHC%2BTnF8IsDYgQMa3VWvq9UB5BqCGPwIE9Smv%2FlQf6eGWyrcOO%2Brsi6UGSaKxoz3eFt2y8zMnz71sdDkZshTNAZoB15M%2BSMQApjyeteOn3dhbojlsBvMBhOE%2FWaBGY2zXmhSJaSA%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=f5bd123af6123072925b0201686ae09d6d57cdf2a29c7f00922bb0488f5cdf39"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}