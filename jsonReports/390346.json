{"id":390346,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zOTAzNDY=","url":"https://hackerone.com/reports/390346","title":"IDOR in Facebook Messages webcam photos","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2011-12-03T21:10:28.000Z","submitted_at":"2011-12-03T21:10:28.000Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"michiel","url":"/michiel","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/007/439427fb81f710e5e16246ede1828613d46bb79e_original.png/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":41286,"url":"https://hackerone.com/facebook","handle":"facebook","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/041/286/e548f3b311a171523d7048bc794f3e942166a0ea_original./43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/000/041/286/e548f3b311a171523d7048bc794f3e942166a0ea_original./fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"Facebook","twitter_handle":"facebook","website":"https://facebook.com","about":""}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":true,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2018-08-03T20:13:56.978Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":null,"comments_closed?":true,"facebook_team?":true,"team_private?":false,"vulnerability_information":"I found that photos people take with their webcam within private message conversations can be accessed without proper authorization via a photo preview mechanism. Even when the sender decides to discard the image after seeing the preview, it can later still be retrieved through this same preview mechanism.\n\nBelow I'll explain the security issue and how to reproduce it. Probably the best way to reproduce the issue is by using an intercepting proxy like BurpSuite Pro so you can decide to forward, modify or drop every request that's being sent to Facebook through the proxy. \n\n1. Compose a new private message to a friend by using Messages on the FB web app.\n2. Click the camera icon to load the Flash application which allows you to shoot a picture with your webcam. Make sure you grant Flash temporary access to the webcam resource.\n3. Setup an intercepting proxy to route all HTTPS traffic to Facebook through this proxy.\n4. Press the button to shoot a picture and wait until the counter reaches zero and actually shoots the picture.\n5. Forward all requests until a request to /ajax/messaging/attachments/preview.php shows up. The response to this request will be some JSON with references to the preview of the uploaded image on the Facebook CDN. Save this request for later use.\n\nIt's possible to access photo previews of other people by modifying the ID in the GET request that's sent to preview.php to get the direct URLs to the photo stored on the FB CDN. It should look similar to this (I removed my private session/identifiable data):\n\n```\nGET /ajax/messaging/attachments/preview.php?id=188618221230552\u0026__a=1\u0026__user=1109857860 HTTP/1.1\nHost: www.facebook.com\nConnection: keep-alive\nX-SVN-Rev: 484067\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.2 Safari/535.11\nAccept: */*\nReferer: https://www.facebook.com/\nAccept-Encoding: gzip,deflate,sdch\nAccept-Language: en-US,en;q=0.8\nAccept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3\nCookie: locale=en_US; c_user=1109857860; csm=1; datr=\u003cdatr goes here\u003e; lu=\u003clu goes here\u003e; s=\u003cs goes here\u003e; xs=\u003cxs goes here\u003e; p=4; act=\u003cact goes here\u003e; presence=\u003cpresence goes here\u003e; a_user=1109857860; a_xs=\u003ca_xs goes here\u003e; L=2; sid=1; W=\u003cW goes here\u003e\n```\n\nHere are some IDs to test with (currently they're all still working and being served from the CDN):\nID: `188618221230552`\nResolves to: http://fbcdn-photos-a.akamaihd.net/hphotos-ak-ash4/384984_2728509647830_1109857860_33122783_1551454573_n.jpg\n\nID: `158481310920219`\nResolves to: http://fbcdn-photos-a.akamaihd.net/hphotos-ak-ash4/376464_113096208806978_100003197993582_73924_151328540_n.jpg\n\nID: `289683717741182`\nResolves to: http://fbcdn-photos-a.akamaihd.net/hphotos-ak-ash4/386189_2728395884986_1109857860_33122730_1125587545_n.jpg\n\nNote that the IDs that are used for the previews are different from the ones that are used to uniquely identify a photo. Though the IDs look pretty random, just relying on one 15 digit number is risky. This makes the likelihood that the vulnerability is exploited lower, but the impact of the vulnerability remains the same. A brute force attack might be successful in revealing some private photos. Since preview.php is hosted on the facebook.com domain, it should be possible to implement authorization checks in this file before the static URLs to the pictures on the CDN are disclosed. If the user is not the owner of the picture, it should not be possible to retrieve the static CDN URLs.\n\nPlease let me know if I can be of any help in providing more details on the vulnerability or additional info to reproduce this issue. ","original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":null,"vote_count":152,"voters":["obsesif","k1nsbru","jokebookservice1","barbie_girl","dirk","dyuen","ertugrul","kapytein","jobert","ramsexy","and 142 more..."],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":3138721,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","automated_response":false,"created_at":"2011-12-10T21:10:28.000Z","updated_at":"2011-12-10T21:10:28.000Z","actor":{"username":"michiel","cleared":true,"url":"/michiel","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/007/439427fb81f710e5e16246ede1828613d46bb79e_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"michiel","url":"/michiel"},"genius_execution_id":null,"team_handle":"facebook","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3138722,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2018-08-03T20:13:56.998Z","updated_at":"2018-08-03T20:13:56.998Z","actor":{"username":"michiel","cleared":true,"url":"/michiel","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/007/439427fb81f710e5e16246ede1828613d46bb79e_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"facebook","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"id":9701,"category":"researcher","content":"While the report published as #390344 was the first report @jobert and I ever submitted to Facebook, even before they had established a bug bounty program, this report was my first ever submission to the Facebook bug bounty program. \n\nA simple IDOR that allowed access to private photos taken with a webcam - yep, those things still existed in 2011 - within what was then called Facebook Messages. \n\nFacebook resolved this vulnerability in late 2011 and rewarded $1,000 for this report.","can_view?":true,"can_create?":false,"attachments":[],"user":{"id":7,"username":"michiel","name":"Michiel Prins","bio":"Co-founder of HackerOne","cleared":true,"website":"https://hackerone.com","location":"San Francisco, CA","created_at":"2013-03-08T01:22:56.332Z","url":"https://hackerone.com/michiel","anc_triager":false,"hackerone_triager":false,"hackerone_employee":true,"hacker_resume_enabled":true,"user_type":"hacker","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/007/439427fb81f710e5e16246ede1828613d46bb79e_original.png/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/007/439427fb81f710e5e16246ede1828613d46bb79e_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c","xtralarge":"https://profile-photos.hackerone-user-content.com/variants/000/000/007/439427fb81f710e5e16246ede1828613d46bb79e_original.png/c11036e2d3f8b05af4b5da5984ccdec6f786b763c8abceb4e68042e10dcdae85"}}}]}