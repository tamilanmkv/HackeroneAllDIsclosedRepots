{"id":402753,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC80MDI3NTM=","url":"https://hackerone.com/reports/402753","title":"Stored XSS in Jetpack's Simple Payment Module by Contributors / Authors","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2018-08-30T08:50:43.915Z","submitted_at":"2018-08-30T08:50:43.915Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"simonscannell","url":"/simonscannell","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/HvE5FGgP56eXFMNMr4rwmunu/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":111,"url":"https://hackerone.com/automattic","handle":"automattic","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/111/7f89e1ea233f92916202521a069fdbfe9eced339_original.png/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/111/7f89e1ea233f92916202521a069fdbfe9eced339_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"Automattic","twitter_handle":"","website":"https://automattic.com","about":"WordPress.com, VaultPress, Akismet, Gravatar, WooCommerce, Polldaddy, Tumblr and more!"}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2019-12-19T14:24:27.025Z","bug_reporter_agreed_on_going_public_at":"2019-11-19T14:24:24.000Z","team_member_agreed_on_going_public_at":null,"comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Jetpack's implementation of the Simple Payment Module is as follows:\n\nA custom post type is registered for each product. When an admin creates a product, a post is internally created and information about the product, such as the price is then stored as post meta information. After the post has been created, any user who can create posts can use the [simple-payment] shortcode with the id of the post representing the product. So for example, if the product was internally saved as a post with ID 17, the shortcode [simple-payment id=\"17\"] would then render the product.\n\nWith this information, I began looking for weaknesses and noticed something interesting here:\n\n```\n\t\t/*\n\t\t * PRODUCT data structure. Holds:\n\t\t * title - title\n\t\t * content - description\n\t\t * thumbnail - image\n\t\t * metadata:\n\t\t * spay_price - price\n\t\t * spay_formatted_price\n\t\t * spay_currency - currency code\n\t\t * spay_cta - text with \"Buy\" or other CTA\n\t\t * spay_email - paypal email\n\t\t * spay_multiple - allow for multiple items\n\t\t * spay_status - status. { enabled | disabled }\n\t\t */\n\t\t$product_capabilities = array(\n\t\t\t'edit_post'             =\u003e 'edit_posts',\n\t\t\t'read_post'             =\u003e 'read_private_posts',\n\t\t\t'delete_post'           =\u003e 'delete_posts',\n\t\t\t'edit_posts'            =\u003e 'edit_posts',\n\t\t\t'edit_others_posts'     =\u003e 'edit_others_posts',\n\t\t\t'publish_posts'         =\u003e 'publish_posts',\n\t\t\t'read_private_posts'    =\u003e 'read_private_posts',\n\t\t);\n\t\t$product_args = array(\n\t\t\t'label'                 =\u003e esc_html__( 'Product', 'jetpack' ),\n\t\t\t'description'           =\u003e esc_html__( 'Simple Payments products', 'jetpack' ),\n\t\t\t'supports'              =\u003e array( 'title', 'editor','thumbnail', 'custom-fields', 'author' ),\n\t\t\t'hierarchical'          =\u003e false,\n\t\t\t'public'                =\u003e false,\n\t\t\t'show_ui'               =\u003e false,\n\t\t\t'show_in_menu'          =\u003e false,\n\t\t\t'show_in_admin_bar'     =\u003e false,\n\t\t\t'show_in_nav_menus'     =\u003e false,\n\t\t\t'can_export'            =\u003e true,\n\t\t\t'has_archive'           =\u003e false,\n\t\t\t'exclude_from_search'   =\u003e true,\n\t\t\t'publicly_queryable'    =\u003e false,\n\t\t\t'rewrite'               =\u003e false,\n\t\t\t'capabilities'          =\u003e $product_capabilities,\n\t\t\t'show_in_rest'          =\u003e true,\n\t\t);\n\t\tregister_post_type( self::$post_type_product, $product_args );\n```\n\nAs can be seen, the capabilities of a product are explicitly set to 'edit_post'. This means contributors and authors have access to these products and can create them in the database. Since none of the post_meta keys are protected, it is also possible for contributors and authors to fill them with arbitrary values. (Either when creating the post or via the wp_ajax_add_meta handler). This meant if during the process of rendering the shortcode some post meta values would be echo'd into the markup unsanitized, I could achieve stored XSS.\n\nSo, ofcourse my next step was to look at the function that renders the shortcode:\n\n```\n\tfunction output_shortcode( $data ) {\n\t\t$items = '';\n\t\t$css_prefix = self::$css_classname_prefix;\n\n\t\tif ( $data['multiple'] ) {\n\t\t\t$items=\"\u003cdiv class='${css_prefix}-items'\u003e\n\t\t\t\t\u003cinput class='${css_prefix}-items-number' type='number' value='1' min='1' id='{$data['dom_id']}_number' /\u003e\n\t\t\t\u003c/div\u003e\";\n\t\t}\n\t\t$image = \"\";\n\t\tif( has_post_thumbnail( $data['id'] ) ) {\n\t\t\t$image = \"\u003cdiv class='${css_prefix}-product-image'\u003e\u003cdiv class='${css_prefix}-image'\u003e\" . get_the_post_thumbnail( $data['id'], 'full' ) . \"\u003c/div\u003e\u003c/div\u003e\";\n\t\t}\n\t\treturn \"\n\u003cdiv class='{$data['class']} ${css_prefix}-wrapper'\u003e\n\t\u003cdiv class='${css_prefix}-product'\u003e\n\t\t{$image}\n\t\t\u003cdiv class='${css_prefix}-details'\u003e\n\t\t\t\u003cdiv class='${css_prefix}-title'\u003e\u003cp\u003e{$data['title']}\u003c/p\u003e\u003c/div\u003e\n\t\t\t\u003cdiv class='${css_prefix}-description'\u003e\u003cp\u003e{$data['description']}\u003c/p\u003e\u003c/div\u003e\n\t\t\t\u003cdiv class='${css_prefix}-price'\u003e\u003cp\u003e{$data['price']}\u003c/p\u003e\u003c/div\u003e\n\t\t\t\u003cdiv class='${css_prefix}-purchase-message' id='{$data['dom_id']}-message-container'\u003e\u003c/div\u003e\n\t\t\t\u003cdiv class='${css_prefix}-purchase-box'\u003e\n\t\t\t\t{$items}\n\t\t\t\t\u003cdiv class='${css_prefix}-button' id='{$data['dom_id']}_button'\u003e\u003c/div\u003e\n\t\t\t\u003c/div\u003e\n\t\t\u003c/div\u003e\n\t\u003c/div\u003e\n\u003c/div\u003e\n\t\t\";\n\t}\n```\n\nThis line here was particularly interesting to me, as the price is outputted unsanitized.\n\n```\n\t\t\t\u003cdiv class='${css_prefix}-price'\u003e\u003cp\u003e{$data['price']}\u003c/p\u003e\u003c/div\u003e\n```\n\nNow all that was left to figure out was to see how the price was received from the database and if it would be sanitized. The function in which it is received is the parse_shortcode method (I have removed the code that doesn't matter to this explanation):\n\n```\n\tfunction parse_shortcode( $attrs, $content = false ) {\n\t\tif ( empty( $attrs['id'] ) ) {\n\t\t\treturn;\n\t\t}\n\t\t$product = get_post( $attrs['id'] );\n...\n\t\t$data['price'] = $this-\u003eformat_price(\n\t\t\tget_post_meta( $product-\u003eID, 'spay_formatted_price', true ),\n\t\t\tget_post_meta( $product-\u003eID, 'spay_price', true ),\n\t\t\tget_post_meta( $product-\u003eID, 'spay_currency', true ),\n\t\t\t$data\n\t\t);\n...\n\t\treturn $this-\u003eoutput_shortcode( $data );\n\t}\n```\n\nAs can be seen, the price is simply retrieved from the database as post meta values and then passed to format_price, however this function does not perform any sanitization whatsoever:\n\n```\n\tfunction format_price( $formatted_price, $price, $currency, $all_data ) {\n\t\tif ( $formatted_price ) {\n\t\t\treturn $formatted_price;\n\t\t}\n\t\treturn \"$price $currency\";\n\t}\n```\n\nThis means that we indeed have a Stored XSS vulnerability. \n\nHere is a PoC video of me getting a Stored XSS payload as a contributor\nhttps://www.youtube.com/watch?v=gMHOse_8ywI\n\n## Impact\n\nSince Simple Payments is only available to premium and professional users, this fortunaly lowers the impact. Since Stored XSS easily leads to a privilege escalation in WordPress, this is still of high impact.","bounty_amount":"350.0","formatted_bounty":"$350","weakness":{"id":62,"name":"Cross-site Scripting (XSS) - Stored"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2019-12-19T14:24:24.136Z","allow_singular_disclosure_after":-57198721.50892776,"singular_disclosure_allowed":true,"vote_count":40,"voters":["adolphoramirez","mashoud1122","sameerphad72","ali","realtess","bcobain23","khizer47","cryptographer","0x08","dolph1n","and 30 more..."],"severity":{"rating":"medium","author_type":"User"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":3276335,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for the report, we're investigating the issue and will get back to you with any updates shortly.","automated_response":false,"created_at":"2018-08-31T17:52:36.587Z","updated_at":"2018-08-31T17:52:36.587Z","actor":{"username":"vortfu","cleared":false,"url":"/vortfu","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/004/982/1ef285fb263d30f189dc6a8038e1d5c46086e9d9_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3277736,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for the detailed report, @simonscannell. I agree there should be sanitation in this output.\n\nI've been able to reproduce the bug via a different route, but yours looks simpler. How did you generate the nonce you used in the request?","automated_response":false,"created_at":"2018-09-01T00:04:05.865Z","updated_at":"2018-09-01T00:04:05.865Z","actor":{"username":"mdawaffe","cleared":false,"url":"/mdawaffe","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/004/980/361d223c60a3868eb44f3eb91cdb964118362ff4_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3277916,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"","automated_response":false,"created_at":"2018-09-01T01:43:42.036Z","updated_at":"2018-09-01T01:43:42.036Z","actor":{"username":"mdawaffe","cleared":false,"url":"/mdawaffe","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/004/980/361d223c60a3868eb44f3eb91cdb964118362ff4_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3282779,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"Hi @mdawaffe ,\n\nI abused a bug in the WordPress core that allows me to create posts without having the post related nonce. I am done researching said bug and will report it today to the WordPress team. I just used that route in the PoC since it, as you said, is way simpler. I'm sorry for any confusion or inconvience caused. The two bugs are seperate of each other, I just didn't have the Jetpack Premium Plan and could only create Simple Payment posts via this bug. \n","automated_response":false,"created_at":"2018-09-03T07:22:17.658Z","updated_at":"2018-09-03T07:27:33.794Z","actor":{"username":"simonscannell","cleared":false,"url":"/simonscannell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/HvE5FGgP56eXFMNMr4rwmunu/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3287018,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for the extra information, @simonscannell. Sounds like another interesting bug :)\n\nAttached is the patch we're thinking about for Jetpack. We're still testing some things, but wanted to get it to you in case you had any feedback or if you see any other cases the patch doesn't cover.","automated_response":false,"created_at":"2018-09-03T23:43:06.981Z","updated_at":"2018-09-03T23:43:06.981Z","actor":{"username":"mdawaffe","cleared":false,"url":"/mdawaffe","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/004/980/361d223c60a3868eb44f3eb91cdb964118362ff4_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":342042,"filename":"402753.diff","type":"text/x-diff","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/342/042/1b9e64417e0208eff91224ba27d7e51947175396/402753.diff?response-content-disposition=attachment%3B%20filename%3D%22402753.diff%22%3B%20filename%2A%3DUTF-8%27%27402753.diff\u0026response-content-type=text%2Fx-diff\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQTXACUYF6%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T145625Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJIMEYCIQDZ4o5FgQbPOV7cUhasXsMpsRhfie%2BaT3j2%2FpT4vRtXrQIhANTpo%2FcLyZWkchHfmQUF52JZTNkTQv76yqIpKiufRkzIKoMECO%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAhoMMDEzNjE5Mjc0ODQ5IgxBFvChFQcfy0iFfX8q1wNyqcNfKQ7lbPM93GK7zsCVuFEl%2FVm4iCcIyQUbJFWfH2jiZwLWzXyXOGtPdAFg6jZ27A3JiIMI2cRQ0ZjefpX23ew4f2EgNrAjI%2BtoD%2F5QRlfpZWkH6iJZQB6Tl2elKHpLsozAmLMg2ZCF27az6tPlE5SwA3JPC5KKlDjsViNs2UljZCi3H9uSwsukoU%2FvdCWTH%2Fn50kTwo3bwe%2FH3PWsruJkAQ7DX1%2Fj9brsxUqDkLoqtLrdoJjkKc0QIPiVbiif2roLjf%2B%2BMNUUjLjPZ27VJBWMgYN3p%2FXN%2Fc2BT1VqWpZMMYQ84FXmc9pAGYMt40reW%2BOqOJwy98WVa3ZnRts3MNHsi7yiH6arhodeoIERCyyc0BhhJEItkxN5Wzyg1DrlhRUS1Y71%2FbjrEz4uBhQSkdwrt3ERf6rlWOARG2SfQdqloTHaxYeaKlkA1gYk2lr8P8v4Z2wcf76dl0kv5neqxZuEP1QXm7QMG6m4bxy4%2BSeNKsdU%2FVA5yixjEwa92C8A1VyBQrxcJgjfs7VfF2qV2iBmnh%2FB2iQg07zl1YJd0cPNun9USqJb8Uqe%2B27IwrOZbWtmOWnBh1TcvDRMDsM%2FPcb7c4FlLVjUX8TDrhUH4Hz0mpfpQPYswtoqRiwY6pAGpulV8rT1rLL2zo7CLXj%2FCsA9YXTe8QLCuwj5BAVEq1XkBbMgCpFE7wCWHjGb7zRvhVV%2BN69FRCvvxudtZT7OkdQfTd7cCnr7vVLgwdFxyTBTiSFdPhCB%2F%2BGa%2FZGSO8Tzmn%2F5kYwNrvNcaCO%2FfxLRKT5QyWFtCeJZaDCV4pXJgLvMY0o61KPcMitqxyN7tABkO5sZ5lEaE04FUiiZgi%2BMqeSxyhg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=38f55503f6aadcc5277b4c321851e5a3193670dee85f2beeb3ad1ad74d9e28f7"}],"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3288189,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The patch seems good! Although post_content and post_title are sanitized when stored in the database, I'd still escape them just to be extra safe in case some other plugin does something weird and makes WordPress skip the sanitization process (I've seen that before).","automated_response":false,"created_at":"2018-09-04T07:42:34.241Z","updated_at":"2018-09-04T07:42:34.241Z","actor":{"username":"simonscannell","cleared":false,"url":"/simonscannell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/HvE5FGgP56eXFMNMr4rwmunu/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3288220,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Yes, we're considering adding additional escaping there. We'll keep you posted about what we decide. Thank you for the insight.\n\nWe're not yet sure when we will release this change. It could be quite soon, but there may be a delay. When we do release the fix, how would you like to be credited: name?, link?, company?","automated_response":false,"created_at":"2018-09-04T07:54:09.290Z","updated_at":"2018-09-04T07:54:09.290Z","actor":{"username":"mdawaffe","cleared":false,"url":"/mdawaffe","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/004/980/361d223c60a3868eb44f3eb91cdb964118362ff4_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3288247,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for asking! I'd be happy if it said my name and company (which is RIPS Technologies).","automated_response":false,"created_at":"2018-09-04T08:04:44.794Z","updated_at":"2018-09-04T08:04:44.794Z","actor":{"username":"simonscannell","cleared":false,"url":"/simonscannell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/HvE5FGgP56eXFMNMr4rwmunu/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3298080,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"We released Jetpack 6.5 yesterday with the patch you saw earlier.\n\nhttps://jetpack.com/2018/09/04/jetpack-6-5-general-maintenance-and-security-update/\n\nIn a future release, we'll probably add more escaping/sanitation to the title and description as you suggested as well. We don't think those changes are as critical, though, and wanted to get the more important changes out sooner.\n\nThanks again for the report!\n\n(@vortfu will follow up with report resolutions, etc.)","automated_response":false,"created_at":"2018-09-05T18:41:15.282Z","updated_at":"2018-09-05T18:41:15.282Z","actor":{"username":"mdawaffe","cleared":false,"url":"/mdawaffe","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/004/980/361d223c60a3868eb44f3eb91cdb964118362ff4_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3299672,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you for the fast responses @mdawaffe ! I'm happy to help.","automated_response":false,"created_at":"2018-09-06T07:55:22.059Z","updated_at":"2018-09-06T07:55:22.059Z","actor":{"username":"simonscannell","cleared":false,"url":"/simonscannell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/HvE5FGgP56eXFMNMr4rwmunu/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3308513,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","automated_response":false,"created_at":"2018-09-07T18:38:24.504Z","updated_at":"2018-09-07T18:38:24.504Z","actor":{"username":"vortfu","cleared":false,"url":"/vortfu","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/004/982/1ef285fb263d30f189dc6a8038e1d5c46086e9d9_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"simonscannell","url":"/simonscannell"},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3308521,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","automated_response":false,"created_at":"2018-09-07T18:40:49.319Z","updated_at":"2018-09-07T18:40:49.319Z","actor":{"url":"/automattic","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/111/7f89e1ea233f92916202521a069fdbfe9eced339_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Automattic"}},"bounty_amount":"300.0","bounty_currency":"usd","bonus_amount":"50.0","genius_execution_id":null,"team_handle":"automattic","collaborator":{"username":"simonscannell","url":"/simonscannell"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3315014,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you very much. :)","automated_response":false,"created_at":"2018-09-10T08:01:22.236Z","updated_at":"2018-09-10T08:01:22.236Z","actor":{"username":"simonscannell","cleared":false,"url":"/simonscannell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/HvE5FGgP56eXFMNMr4rwmunu/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6346177,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2019-11-19T14:24:24.067Z","updated_at":"2019-11-19T14:24:24.067Z","first_to_agree":true,"actor":{"username":"simonscannell","cleared":false,"url":"/simonscannell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/HvE5FGgP56eXFMNMr4rwmunu/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6589177,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2019-12-19T14:24:27.240Z","updated_at":"2019-12-19T14:24:27.240Z","actor":{"url":"/automattic","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/111/7f89e1ea233f92916202521a069fdbfe9eced339_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Automattic"}},"genius_execution_id":null,"team_handle":"automattic","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}