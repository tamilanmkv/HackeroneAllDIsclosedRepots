{"id":49357,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC80OTM1Nw==","url":"https://hackerone.com/reports/49357","title":"Substantially weakened authenticity verification when using 'Remember me for a week'","state":"Closed","substate":"informative","readable_substate":"Informative","created_at":"2015-02-27T03:48:46.203Z","submitted_at":"2015-02-27T03:48:46.203Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"guido","url":"/guido","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":13,"url":"https://hackerone.com/security","handle":"security","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"HackerOne","twitter_handle":"Hacker0x01","website":"https://hackerone.com","about":"Vulnerability disclosure should be safe, transparent, and rewarding."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2015-03-12T16:29:30.505Z","bug_reporter_agreed_on_going_public_at":"2015-03-12T16:29:29.591Z","team_member_agreed_on_going_public_at":"2015-03-12T15:58:34.046Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Hello HackerOne,\r\n\r\nI noticed that in order to access data bound to a user's permissions, say their own bug reports, or CSRF-token, you only need one certain cookie, which is ```remember_user_token```, and although it is sent when the user uses HackerOne in a normal fashion, the ```session``` cookie is ignored and thus not required. This only works if the user has the \"Remember me for a week\" option ticked when logging in.\r\n\r\nBoth cookies are values base64-encoded values. Decoding the ```session``` cookie value results in a binary sequence of 602 bytes, and the ```remember_user_token``` results in a sequence 38 bytes wide.\r\n\r\nBoth cookies also include a trailing 20 byte value, presumably a hash value. So ```session``` comprises 602 + 20 = 622 bytes, and ```remember_user_token``` 38+20 = 58.\r\n\r\nBeing able to see confidential data with the 58 bytes rather than 622 bytes obviously lowers the amount of computing power, the number of tries in a brute-force attack, or any way you want to see it, significantly. Presupposing that both values are uniformly random data, then:\r\n\r\n```python\r\nmath.log10((256**622) / (256**58))\r\n1358.2473404358832\r\n```\r\n\r\nIn other words, that is 1358 orders of magnitude of difference, which is substantial.\r\n\r\nI furthermore noticed that the various ```remember_user_token``` values that I yielded upon subsequent logins did not look random at all, but they instead looked quite similar to each other. Suspecting that the login date and time were encoded in this value, I did some statistical tests to see if I could reliably correlate the cookie value with the date and time it was set. Calculations involving these data ( cookie value -\u003e base64 decode -\u003e value of binary sequence as integer on one axis, login date/time as number of seconds since epoch on the other axis), eventually yielded me a 0.93 Pearson correlation coefficient for the last 8 bytes of the binary sequence in my (admittedly limited) test data. It follows that if my test data was sufficiently large to establish this degree of correlation, then knowing when a user logged in can further lower the amount of computation required to successfully guess the ```remember_user_token```. Even if the login time is not known, an attacker can user their common sense and assume no one logged in prior to the inception of HackerOne ( \u003c 2013 ? ) nor in the future ( say \u003e March 2015).\r\n\r\nFinally, it looks to me that ```session``` is frequently updated with a new value whereas ```remember_user_token``` remains constant for the remainder of the session.\r\n\r\nTo reproduce:\r\n\r\n```\r\ncurl https://hackerone.com/current_user -H 'Cookie: remember_user_token={{REMEMBER_USER_TOKEN}}'\r\n```\r\n\r\nWhere {{REMEMBER_USER_TOKEN}} is the value that you copy from your browser once you are logged in. This also works for bug reports in the form\r\n\r\n```\r\nhttps://hackerone.com/reports/[0-9]\\+.json\r\n```\r\n\r\nGuido","weakness":{"id":32,"name":"Cryptographic Issues - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2015-04-11T15:58:35.060Z","allow_singular_disclosure_after":-205196831.84933722,"singular_disclosure_allowed":true,"vote_count":1,"voters":["dyabla"],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":343786,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Some additional notes:\n\nI have been able to augment my data set with more data and some more variance in the dates/times plane. I currently get a correlation coefficient of 0.92, P = 0.0012 for the range s[23:-10], where s is the 38 byte string that base64 decoding the cookie produces. I am setting out from a big  endian interpretation of the bytes, that is to say:\n\n```\n   number = s[27] + s[26] \u003c\u003c 8 + s[25] \u003c\u003c 16 + s[24] \u003c\u003c 24 + s[23] \u003c\u003c 32\n```\n\n```number``` is computed for every cookie and this array is subsequently correlated against the array of times when the cookie was set (actually the login time).\n\nTo cut this story short, I'd say you're almost certainly storing the login date in the cookie, which has the side effect of enhancing the predictability of the cookie value as explained in my initial post.\n\nGiven the context of the issue at play (ie. the 'Remember me for 2 weeks' feature), my remark that ```an attacker can user their common sense and assume no one logged in prior to the inception of HackerOne ( \u003c 2013 ? ) nor in the future ( say \u003e March 2015).``` can of course be more precisely formulated as\n\n```(current time - 2 weeks) \u003c= number in cookie \u003c= current time)```\n\n","automated_response":false,"created_at":"2015-03-01T18:48:18.076Z","updated_at":"2015-03-01T18:48:18.076Z","actor":{"username":"guido","cleared":false,"url":"/guido","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":345207,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for your report! We will investigate the issue you're describing.","automated_response":false,"created_at":"2015-03-03T16:40:40.872Z","updated_at":"2015-03-03T16:40:40.872Z","actor":{"username":"wvdv","cleared":false,"url":"/wvdv","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/001/221/7503cfe93236733876c422fb69d8a9a81824802c_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":349988,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thank you for this very detailed report. We'll be looking into this, and carefully check whether all of your statements are correct.","automated_response":false,"created_at":"2015-03-10T10:03:20.404Z","updated_at":"2015-03-10T10:03:20.404Z","actor":{"username":"siebejan","cleared":false,"url":"/siebejan","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/995/8de18ac91b1da4a88b52c2c94d46fc0c3bb59fec_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":350687,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks.\n\nI would like to add that I have not managed to conclusively isolate a range of bits that would constitute a time stamp or another kind of value that is reliably proportionate to the time that the cookie was set. I did, however, find out that the two bytes at\n\nbase64.b64decode( base64_value_in_cookie )[8:10]\n\nare exactly the current user's user ID, which is another 'known' for a potential attacker.\n\nAt any rate, my core argument that, as contrasted with a regular, transient session, 'remember me for a week' substantially narrows the pool of values that an attacker would have to brute-force or otherwise retrieve in order to take over a user's account, still holds, namely because (to recap):\n\n- The size, and thus presumbly the amount of random data, of the session cookie is significantly larger than of a remember_user_token\n- There are 'knowns' that further enhance the predictability of the remember_user_token: the user id at [8:10], possibly a (part of a) time stamp, and I've identified other parts that are seemingly constant (the first 10 bytes of the cookie are always the same, even across different users and browsers, though my test data is limited..)\n- A session cookie is periodically updated whereas the remember_user_token cookie remains constant for the remainder of the week of its validity (or after a user manually logs out)\n- Multiple sessions springing from the same remember_user_token does not alert your system that something is amiss; it would make more sense to only allow a single concurrent connection/session per remember_user_token, since normal use of the website will only ever store one such cookie per browser installation.\n- If an attacker is not concerned with taking over one particular account but ANY account will suffice for them, then running\n\n```\ncurl https://hackerone.com/current_user -H 'Cookie: remember_user_token={{REMEMBER_USER_TOKEN}}'\n```\n\nwith random or semi-random values for {{REMEMBER_USER_TOKEN}} further increases the likelihood of their success (your user ID counter is approaching 19000, a percentage of these has 'remember me' enabled.. you do the math).\n\nGuido","automated_response":false,"created_at":"2015-03-11T03:07:47.470Z","updated_at":"2015-03-11T03:07:47.470Z","actor":{"username":"guido","cleared":false,"url":"/guido","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":352213,"is_internal":false,"editable":false,"type":"Activities::BugInformative","message":"Hey @guido,\n\nAgain, thank you for your report.\n\nWe've looked into the issue, and while you definitely have a point in that the keyspace is significantly smaller, your challenge to 'do the math' has definitely not fallen on deaf ears ;)\n\nOur 'remember me' functionality is powered by the Devise library. The specific line of code responsible for the generation is [this one](https://github.com/plataformatec/devise/blob/c19f1f27cecd7024df0ff8b4ace400d665dd9576/lib/devise.rb#L485). Let's assume that all data other than this random string is known.\n\nIf we assume SecureRandom is generating properly random numbers, we have 15*8 bits of entropy. This means there are 2^(8*15) possible keys [(approximately 1,3 * 10^36)](http://www.wolframalpha.com/input/?i=2%5E%288*15%29). \n\nOur most basic rate limiting is done in our load-balancer. What we do (basically), is allow every IP-address to make a maximum of 10 requests per second. This means that the minimal (average) time taken for each request would be 0.1 second. At this rate it would take a single computer 1,3 * 10^36 * 0.1 seconds to brute-force the entire key-space. On average you would expect to have found your key by the time you're halfway through the keyspace, so let's make that 1,3 * 10^36 * 0.1 second / 2. As you [can see](http://www.wolframalpha.com/input/?i=%282%5E%288*15%29+*+0.1+second%29+%2F+2), this would take 1,5 * 10^17 times the age of the universe. \n\nLet's say you're quite dedicated to steal someone's account. You take 5 years to plot your ultimate revenge. You're going to use every single internet connected device to try to brute-force your way to victory. [It is estimated](http://www.gartner.com/newsroom/id/2905717) that there will be around 25 billion devices connected to the internet by 2020. Unfortunately this still means that brute-forcing the token will take on average [6.100.000 years](http://www.wolframalpha.com/input/?i=%28%282%5E%288*15%29+*+0.1+second%29+%2F+2%29+%2F+25+billion) to gain access.\n\nFun fact: using `curl https://hackerone.com/current_user -H 'Cookie: remember_user_token=[..redacted..]' -w '%{size_request}'` we can determine that during the request 215 bytes have been sent to HackerOne. During the high-point of your attack, you will be sending 430 Terrabits per second to HackerOne, doubling the global IP traffic rate (and probably melting our load-balancer).\n\nWhile you have a point in the severely reduced size of the keyspace, I think you'll agree that it's still quite formidable.\n\nKind regards","automated_response":false,"created_at":"2015-03-12T15:58:03.933Z","updated_at":"2015-03-12T15:58:03.933Z","actor":{"username":"dirk","cleared":false,"url":"/dirk","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/067/f9785240873663ec965b04e725871ed0f69616e7_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":352215,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2015-03-12T15:58:34.113Z","updated_at":"2015-03-12T15:58:34.113Z","first_to_agree":true,"actor":{"username":"dirk","cleared":false,"url":"/dirk","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/067/f9785240873663ec965b04e725871ed0f69616e7_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":352252,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Thanks for your response and analysis.\n\nI understand your point, but by that kind of reasoning you might as well dispose of your regular session cookies since it offers an amount of entropy superfluous in regard to the premise of your cryptographic protections, i.e., that it should be strong enough to deter a successful brute-force attack established within the bounds of a reasonable span of time and bandwidth.\n\nBut if this is your decision, I respect it.","automated_response":false,"created_at":"2015-03-12T16:29:29.629Z","updated_at":"2015-03-12T16:29:29.629Z","actor":{"username":"guido","cleared":false,"url":"/guido","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":352253,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2015-03-12T16:29:30.545Z","updated_at":"2015-03-12T16:29:30.545Z","actor":{"username":"guido","cleared":false,"url":"/guido","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":353407,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey @guido,\n\nAs with the remember me cookie, our session cookie contains more information than just the session token. \n\nWhat you're seeing is a very long encoded string, that contains, among other things: A randomly generated session id (with enough entropy to make brute-force infeasible) and [flash messages](http://apidock.com/rails/ActionDispatch/Request/flash). \n\nThe length of the session cookie is therefore not a good measure of the entropy contained therein. \n\nThank you for your report,","automated_response":false,"created_at":"2015-03-13T10:12:02.298Z","updated_at":"2015-03-13T10:12:02.298Z","actor":{"username":"dirk","cleared":false,"url":"/dirk","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/067/f9785240873663ec965b04e725871ed0f69616e7_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}