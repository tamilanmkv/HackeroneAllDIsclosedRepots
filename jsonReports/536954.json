{"id":536954,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC81MzY5NTQ=","url":"https://hackerone.com/reports/536954","title":"Vulnerability in http-parser \u0026 embedded NULL header handling","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2019-04-12T20:06:48.873Z","submitted_at":"2019-04-12T20:06:48.873Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"htuch","url":"/htuch","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":22984,"url":"https://hackerone.com/nodejs","handle":"nodejs","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"Node.js","twitter_handle":"nodejs","website":"https://nodejs.org","about":"The Node.js JavaScript Runtime"}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2019-9900"],"singular_disclosure_disabled":false,"disclosed_at":"2020-02-13T23:41:54.567Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2020-01-14T23:41:52.691Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Due to a snafu in how security@node.js.org is setup to forward (see https://github.com/envoyproxy/envoy/issues/5155), the following bug report was not made available prior to disclosure. For completeness, I'm providing the original e-mail below. \n\nPlease note that this has been fixed in http-parser since disclosures. I understand that Node has moved away from http-parser, but this might affect Node.JS LTS for earlier versions. See https://github.com/nodejs/http-parser/issues/468 for the fix.\n\nRather than file a full report, I would like to share with Node.JS security WG the following resources:\n\n* Envoy CVE: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-9900\n* Envoy GH issue with CVE details: https://github.com/envoyproxy/envoy/issues/6434\n* http-parser GH issue: https://github.com/nodejs/http-parser/issues/468\n* Other discussion of the handling of this issue: https://github.com/envoyproxy/envoy/issues/5155#issuecomment-481854258\n\nOriginal e-mail\n------------------------\nMIME-Version: 1.0\nDate: Thu, 14 Mar 2019 16:35:20 -0400\nMessage-ID: \u003cCAA4W8ZmaBzTMFU8VdpJzVDM7LXo0o5-WPTdYisGJUF9qsXiPnQ@mail.gmail.com\u003e\nSubject: Vulnerability in http-parser \u0026 embedded NULL header handling\nFrom: Harvey Tuch \u003chtuch@google.com\u003e\nTo: security@nodejs.org, ry@tinyclouds.org\nCc: envoy-security@googlegroups.com\nContent-Type: multipart/alternative; boundary=\"0000000000006b3f64058413dc0b\"\n\n--0000000000006b3f64058413dc0b\nContent-Type: text/plain; charset=\"UTF-8\"\n\nHi Node.js Security WG, Ryan,\n\nWe (Envoy security team) have discovered a potential security vulnerability\nrelated to our use of http-parser that we are working to fix, patch and\nissue a security update for Envoy-side following\nhttps://github.com/envoyproxy/envoy/blob/master/SECURITY_RELEASE_PROCESS.md.\n\nWe would like to give you advanced notice of this under embargo, check in\nwith you to see if this might affect Node.js or other http-parser users,\nand potentially coordinate on an http-parser side fix.\n\nEnvoy makes use of http-parser as its HTTP/1 codec on its data plane. Envoy\nhas baked into it today the assumption that its HTTP codecs (http-parser,\nnghttp2) enforce RFC constraints on valid header values (\nhttps://tools.ietf.org/html/rfc7230#section-3.2.6). In particular, we\nexpect that there are no embedded NULLs in header values or keys that are\nplaced in Envoy's HeaderStrings and HeaderMapImpls objects. This is\nparticularly important because we allow two views of a HeaderString, via\nc_str()\n\u003chttps://github.com/envoyproxy/envoy/blob/b41ba5925a4e93d22a86c6501d63314ccf0d79f3/include/envoy/http/header_map.h#L115\u003e\n and getStringView()\n\u003chttps://github.com/envoyproxy/envoy/blob/b41ba5925a4e93d22a86c6501d63314ccf0d79f3/include/envoy/http/header_map.h#L120\u003e;\nembedded NULLS cause inconsistent views and lengths through these\naccessors. We use a mixture of these in header matching and routing.\n\nOur fuzzers and some recently introduced ASSERTs indicated that embedded\nNULLs were making their way into header values received from http-parser.\nDigging deeper, the errant behavior is due to a bug in how validation of\nheader values is performed by http-parser. You can see this in the\nvalidation logic at\nhttps://github.com/nodejs/http-parser/blob/0d0a24e19eb5ba232d2ea8859aba2a7cc6c42bc4/http_parser.c#L1469\n.\n\nIn particular, only the first character of the header value is validate at\nline 1490. Then the entire header value is accepted via a memchr scan at\nhttps://github.com/nodejs/http-parser/blob/0d0a24e19eb5ba232d2ea8859aba2a7cc6c42bc4/http_parser.c#L1506\n.\n\nThis means that we can have arbitrary embedded NULLs in any HTTP/1.1 header\nvalue today. There are places in Envoy where we use one view of these\nstrings for matching (e.g. route table lookup, authorization) and another\nview for routing and sending to our upstreams.\n\nWe have scored this as 6.5 using CVSS and will work on an Envoy patch to\nreject any header values that contain NULL and issue a point release and\npublic disclosure following\nhttps://github.com/envoyproxy/envoy/blob/master/SECURITY_RELEASE_PROCESS.md\nASAP.\n\nThis issue can/should also be resolved in http-parser by ensuring the\nentire header value is validated as per RFC. We do not plan on doing the\nfix for this prior to our release, but will coordinate with you folks if\nyou are interested in doing so.\n\nPlease advise on how you would like to proceed with this. We are planning\nto get our disclosure/release happening either end-of-week or early next\nweek, but we would like to provide you an opportunity to provide some input\nhere, since this has not been publicly disclosed yet we can provide some\nadditional time if needed.\n\nThanks,\nHarvey (on behalf of Envoy security team)\n\n--0000000000006b3f64058413dc0b\nContent-Type: text/html; charset=\"UTF-8\"\nContent-Transfer-Encoding: quoted-printable\n\n\u003cdiv dir=3D\"ltr\"\u003e\u003cdiv dir=3D\"ltr\"\u003e\u003cdiv dir=3D\"ltr\"\u003eHi Node.js Security WG, =\nRyan,\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eWe (Envoy security team) have discovered a potenti=\nal security vulnerability related to our use of http-parser that we are wor=\nking to fix, patch and issue a security update for Envoy-side following=C2=\n=A0\u003ca href=3D\"https://github.com/envoyproxy/envoy/blob/master/SECURITY_RELE=\nASE_PROCESS.md\"\u003ehttps://github.com/envoyproxy/envoy/blob/master/SECURITY_RE=\nLEASE_PROCESS.md\u003c/a\u003e.\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eWe would like to give you ad=\nvanced notice of this under embargo, check in with you to see if this might=\n affect Node.js or other http-parser users, and potentially coordinate on a=\nn http-parser side fix.\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eEnvoy makes use of http-pa=\nrser as its HTTP/1 codec on its data plane. Envoy has baked into it today t=\nhe assumption that its HTTP codecs (http-parser, nghttp2) enforce RFC const=\nraints on valid header values (\u003ca href=3D\"https://tools.ietf.org/html/rfc72=\n30#section-3.2.6\" target=3D\"_blank\"\u003ehttps://tools.ietf.org/html/rfc7230#sec=\ntion-3.2.6\u003c/a\u003e). In particular, we expect that there are no embedded NULLs =\nin header values or keys that are placed in Envoy\u0026#39;s HeaderStrings and H=\neaderMapImpls objects. This is particularly important because we allow two =\nviews of a HeaderString, via=C2=A0\u003ca href=3D\"https://github.com/envoyproxy/=\nenvoy/blob/b41ba5925a4e93d22a86c6501d63314ccf0d79f3/include/envoy/http/head=\ner_map.h#L115\" target=3D\"_blank\"\u003ec_str()\u003c/a\u003e=C2=A0and=C2=A0\u003ca href=3D\"https=\n://github.com/envoyproxy/envoy/blob/b41ba5925a4e93d22a86c6501d63314ccf0d79f=\n3/include/envoy/http/header_map.h#L120\" target=3D\"_blank\"\u003egetStringView()\u003c/=\na\u003e; embedded NULLS cause inconsistent views and lengths through these acces=\nsors. We use a mixture of these in header matching and routing.\u003c/div\u003e\u003c/div\u003e=\n\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eOur fuzzers and some recently introduced ASSERTs indica=\nted that embedded NULLs were making their way into header values received f=\nrom http-parser. Digging deeper, the errant behavior is due to a bug in how=\n validation of header values is performed by http-parser. You can see this =\nin the validation logic at=C2=A0\u003ca href=3D\"https://github.com/nodejs/http-p=\narser/blob/0d0a24e19eb5ba232d2ea8859aba2a7cc6c42bc4/http_parser.c#L1469\" ta=\nrget=3D\"_blank\"\u003ehttps://github.com/nodejs/http-parser/blob/0d0a24e19eb5ba23=\n2d2ea8859aba2a7cc6c42bc4/http_parser.c#L1469\u003c/a\u003e.=C2=A0\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div=\n\u003e\u003cdiv\u003eIn particular, only the first character of the header value is valida=\nte at line 1490. Then the entire header value is accepted via a memchr scan=\n at=C2=A0\u003ca href=3D\"https://github.com/nodejs/http-parser/blob/0d0a24e19eb5=\nba232d2ea8859aba2a7cc6c42bc4/http_parser.c#L1506\" target=3D\"_blank\"\u003ehttps:/=\n/github.com/nodejs/http-parser/blob/0d0a24e19eb5ba232d2ea8859aba2a7cc6c42bc=\n4/http_parser.c#L1506\u003c/a\u003e.\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eThis means that we can =\nhave arbitrary embedded NULLs in any HTTP/1.1 header value today. There are=\n places in Envoy where we use one view of these strings for matching (e.g. =\nroute table lookup, authorization) and another view for routing and sending=\n to our upstreams.\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eWe have scored this as 6.5 =\nusing CVSS and will work on an Envoy patch to reject any header values that=\n contain NULL and issue a point release and public disclosure following=C2=\n=A0\u003ca href=3D\"https://github.com/envoyproxy/envoy/blob/master/SECURITY_RELE=\nASE_PROCESS.md\"\u003ehttps://github.com/envoyproxy/envoy/blob/master/SECURITY_RE=\nLEASE_PROCESS.md\u003c/a\u003e ASAP.\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eThis issue can/should a=\nlso be resolved in http-parser by ensuring the entire header value is valid=\nated as per RFC. We do not plan on doing the fix for this prior to our rele=\nase, but will coordinate with you folks if you are interested in doing so.\u003c=\n/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003ePlease advise on how you would like to proceed wit=\nh this. We are planning to get our disclosure/release happening either end-=\nof-week or early next week, but we would like to provide you an opportunity=\n to provide some input here, since this has not been publicly disclosed yet=\n we can provide some additional time if needed.\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eTh=\nanks,\u003c/div\u003e\u003cdiv\u003eHarvey (on behalf of Envoy security team)\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/d=\niv\u003e\u003c/div\u003e\u003c/div\u003e\n\n--0000000000006b3f64058413dc0b--\n\n## Impact\n\nThis has a CVSS score of 8.3 for Envoy as a project consuming http-parser. The impact on Node.JS is unclear to me.","weakness":{"id":14,"name":"Improper Null Termination"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2020-02-13T23:41:52.799Z","allow_singular_disclosure_after":-52327675.75232635,"singular_disclosure_allowed":true,"vote_count":1,"voters":["d3nn15"],"severity":{"rating":"high","score":8.3,"author_type":"Team","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"none","user_interaction":"none","scope":"changed","confidentiality":"low","integrity":"low","availability":"low"}},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":4550199,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello,\nThanks for reporting this to us. Someone will quickly look at this report and triage it.","automated_response":true,"created_at":"2019-04-12T20:06:54.739Z","updated_at":"2019-04-12T20:06:54.739Z","actor":{"username":"vdeturckheim_dev","cleared":false,"url":"/vdeturckheim_dev","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4806995,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @htuch,\n\nThank you for your submission. Your report is currently being reviewed and the HackerOne triage team will get back to you once there is additional information to share.\n\nKind regards,\n@beagle ","automated_response":false,"created_at":"2019-05-10T09:23:54.682Z","updated_at":"2019-05-10T09:23:54.682Z","actor":{"username":"beagle","cleared":false,"url":"/beagle","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/458/833/024b7a83a4a54282cbcdf96b9b10a93700cf8743_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4809569,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Hello @htuch,\n\nYour time and effort in submitting this report are much appreciated, however, please provide us with a clear step by step reproduction so we can follow up, if it's a theoretical bug please be more specific in the description with providing an attack scenario and a clear impact.\n\nYour input is much appreciated.\n\nRegards,\n@nasr0x01","automated_response":false,"created_at":"2019-05-10T13:00:16.090Z","updated_at":"2019-05-10T13:00:16.090Z","actor":{"username":"nasr0x01","cleared":false,"url":"/nasr0x01","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/386/674/ec2e2c825a554851c42c122ffd61aa8f18b08174_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4809999,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"https://github.com/envoyproxy/envoy/issues/6434 has a proof-of-concept where http-parser is used inside the Envoy proxy.","automated_response":false,"created_at":"2019-05-10T14:50:32.916Z","updated_at":"2019-05-10T14:50:32.916Z","actor":{"username":"htuch","cleared":false,"url":"/htuch","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4816339,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","automated_response":false,"created_at":"2019-05-11T10:26:16.435Z","updated_at":"2019-05-11T10:26:16.435Z","additional_data":{"old_severity":"High","new_severity":"High (8.3)","old_severity_id":345540,"new_severity_id":388078},"actor":{"username":"nasr0x01","cleared":false,"url":"/nasr0x01","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/386/674/ec2e2c825a554851c42c122ffd61aa8f18b08174_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4816340,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Hello @htuch,\n\nThank you for your submission! We were able to validate your report, and have submitted it to the appropriate remediation team for review. They will let us know the final ruling on this report, and when/if a fix will be implemented. Please note that the status and severity are subject to change.\n\nRegards,\n@nasr0x01 ","automated_response":false,"created_at":"2019-05-11T10:26:18.685Z","updated_at":"2019-05-11T10:26:18.685Z","actor":{"username":"nasr0x01","cleared":false,"url":"/nasr0x01","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/386/674/ec2e2c825a554851c42c122ffd61aa8f18b08174_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5239832,"is_internal":false,"editable":false,"type":"Activities::CveIdAdded","message":"","automated_response":false,"created_at":"2019-07-02T16:30:52.852Z","updated_at":"2019-07-02T16:30:52.852Z","cve_ids":["CVE-2019-9900"],"actor":{"username":"mylesborins","cleared":false,"url":"/mylesborins","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/234/978/b951e9a05b9f7c327b55bd697d5bd52293856002_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5239834,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Added the CVE","automated_response":false,"created_at":"2019-07-02T16:31:03.419Z","updated_at":"2019-07-02T16:31:03.419Z","actor":{"username":"mylesborins","cleared":false,"url":"/mylesborins","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/234/978/b951e9a05b9f7c327b55bd697d5bd52293856002_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"htuch","url":"/htuch"},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5239845,"is_internal":false,"editable":false,"type":"Activities::NotEligibleForBounty","message":"This report is not eligible for an IBB award","automated_response":false,"created_at":"2019-07-02T16:31:52.982Z","updated_at":"2019-07-02T16:32:07.091Z","actor":{"url":"/nodejs","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Node.js"}},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6772330,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2020-01-14T23:41:52.729Z","updated_at":"2020-01-14T23:41:52.729Z","first_to_agree":true,"actor":{"username":"octetcloud","cleared":false,"url":"/octetcloud","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/210/672/27b2c0c2193cfb366f7889374e7ce71077431f74_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7048869,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2020-02-13T23:41:54.588Z","updated_at":"2020-02-13T23:41:54.588Z","actor":{"url":"/nodejs","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Node.js"}},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}