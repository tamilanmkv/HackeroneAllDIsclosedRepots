{"id":5786,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC81Nzg2","url":"https://hackerone.com/reports/5786","title":"Coinbase Android Security Vulnerabilities","state":"Closed","substate":"informative","readable_substate":"Informative","created_at":"2014-03-11T20:05:00.000Z","submitted_at":"2014-03-11T20:05:00.000Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"bryanstern","url":"/bryanstern","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":104,"url":"https://hackerone.com/coinbase","handle":"coinbase","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/104/b151e01a4adbf5ad9067fc30fb2dfe5d5997fa5c_original.png/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/104/b151e01a4adbf5ad9067fc30fb2dfe5d5997fa5c_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"Coinbase","twitter_handle":"","website":"https://coinbase.com/security","about":"Creating an open financial system for the world"}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2014-05-07T21:58:00.252Z","bug_reporter_agreed_on_going_public_at":"2014-04-02T06:55:00.000Z","team_member_agreed_on_going_public_at":null,"comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"My name is Bryan Stern and I am Android Software Engineer. Last night I took another look at your Android application and found some disturbing vulnerabilities that could allow for a user's account to be hijacked. Fortunately, they are very easy to resolve. Below I have outlined the issue, gave some recommendations, and attached some screenshots.\r\n\r\n**Coinbase for Android Security Flaws:**\r\n\r\n1. The application does not perform any SSL certificate verification.\r\n2. The API design does not prevent request tampering or replays.\r\n3. The consumer id and secret of the app is widely available.\r\n\r\n**Potential for damage:**\r\n\r\n1. Without implementing your own SSL certificate validation in the Coinbase app, a \"man in the middle\" can sniff and alter communication between the application and Coinbase API. A malicious hacker could then use this to violate user privacy as well as take advantage of the other two flaws listed. Worse, an attacker could steal the access token provided in network responses and have full API access to the user's Coinbase account using the widely available Coinbase Android consumer id and secret.\r\n2. Because requests are neither adequately protected by SSL, nor are they signed, an attacker could repeat or tamper with requests. For example, an attacker could repeat requests to buy bitcoin, sell bitcoin, or send bitcoin requests from the app to either empty their associated bank account, sell bitcoins needed by the user, or repeat a transfer bitcoins to another account. Not only can transactions be repeated, they can be modified in transit. So, for example, an attacker could change the recipient (and/or amount) of a transaction request.\r\n3. The consumer id and secret exposure means that their is no trusted secret between the Coinbase Android app and the Coinbase API. This means any program could make requests to the Coinbase API pretending to be the Coinbase Android app. You would not be able to block the abuser of the Coinbase API without disabling the Coinbase Android app until a new build with a new consumer id and secret was distributed.\r\n\r\n**How to establish the man in the middle attack on Android**\r\n\r\n1. Set up a proxy server that the Android device will route traffic through. I use www.charlesproxy.com for this.\r\n2. Install the SSL certificate on the device that the proxy will present as Coinbase's SSL certificate to it's clients. (www.charlesproxy.com/charles.crt)\r\n3. Configure your device to point it's traffic through Charles.\r\n4. Enable SSL \r\n5. View, repeat, and modify requests in Charles Proxy.\r\n\r\n**Availability of the Consumer Id and Secret**\r\n\r\n1. It is publicly available in the GitHub repository. (https://github.com/coinbase/coinbase-android/blob/bc6a03229416736acc2ea6bc2fb13f55f7029751/coinbase-android/src/com/coinbase/api/LoginManager.java#L49)\r\n2. It is visible in many requests made by the device when monitoring requests during the man in the middle attack.\r\n\r\n**Recommendations:**\r\n\r\n1. Read the Android Documentation on SSL. \r\n2. Sign OAuth requests and use nonces. See Twitter's documentation for an example. https://dev.twitter.com/docs/auth/creating-signature\r\n3. Change your consumer id and secret and keep them confidential. There is no need to ever send the consumer secret if requests are signed using it.\r\n4. Based on the [available source code](https://github.com/coinbase/coinbase-android), I see that ProGuard is not being used. I highly recommend it both to obfuscate your compiled code and for some of the optimizations available.\r\n\r\n----\r\n\r\nPlease let me know how much time you may need to resolve these issue as I would like to publish this on my own blog soon (~3 weeks). If you have any questions, I would be more than happy to answer any questions and walk your developers through the issues.\r\n\r\nBest Regards,\r\nBryan Stern","bounty_amount":"100.0","formatted_bounty":"$100","weakness":{"id":32,"name":"Cryptographic Issues - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2014-05-07T21:57:47.307Z","allow_singular_disclosure_after":-234465238.5325479,"singular_disclosure_allowed":true,"vote_count":4,"voters":["rudra_2000","apapedulimu","en0ne","cryptographer"],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":23468,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi,\n\nI just wanted to follow up and confirm that my submission was received. Please feel free to contact me with any questions.\n\nBest,\nBryan Stern","automated_response":false,"created_at":"2014-03-14T07:45:00.000Z","updated_at":"2014-03-14T07:45:00.000Z","actor":{"username":"bryanstern","cleared":false,"url":"/bryanstern","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"coinbase","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":23469,"is_internal":false,"editable":false,"type":"Activities::BugNotApplicable","message":"thanks for the report.\n\nseems like it checks ssl certs and you simply installed your own cert to get around it by \"Install the SSL certificate on the device that the proxy will present as Coinbase's SSL certificate to it's clients.\"\n\nbesides pinning the cert there is nothing we can do about and you only somewhat hacked yourself with manually installing a cert to allow mitm :)\n\nkind regards,\njulian","automated_response":false,"created_at":"2014-03-14T12:58:00.000Z","updated_at":"2014-03-14T12:58:00.000Z","actor":{"username":"lianj","cleared":false,"url":"/lianj","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"coinbase","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":23470,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi Julian,\n\nYou are right that it is like I \"hacked\" myself, however this is something your application can guard against easily (and should) by checking the SSL certificate in the application. Facebook, for example, does this. Google's Android docs expand on this further here http://developer.android.com/training/articles/security-ssl.html.\n\nI think this very important to implement because it offers an additional layer of security if the device has been compromised. If it is important enough for a social media company to protect against, I would expect it from a financial company. While you do protect against attackers who gain access to a user's phone directly with a key pin, your app is still vulnerable if the attacker sets up the MITM if they have access to the phone for a minute.\n\nI am also curious what you thought of my suggestions about requiring request signatures and nonces in the headers of requests made to protect against replay attacks.\n\nBest Regards,\nBryan Stern","automated_response":false,"created_at":"2014-03-14T14:04:00.000Z","updated_at":"2014-03-14T14:04:00.000Z","actor":{"username":"bryanstern","cleared":false,"url":"/bryanstern","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"coinbase","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":23471,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi Julian,\n\nI forgot to ask if you plan on changing your consumer id and secret for reasons I brought up earlier? In order to keep those secure, both ProGuard obfuscation and SSL certificate checking would be needed.\n\nBest,\nBryan","automated_response":false,"created_at":"2014-03-14T14:06:00.000Z","updated_at":"2014-03-14T14:06:00.000Z","actor":{"username":"bryanstern","cleared":false,"url":"/bryanstern","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"coinbase","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":23473,"is_internal":false,"editable":false,"type":"Activities::BugReopened","message":"Hey Bryan -\n\nI technically join Coinbase in a couple of weeks, but I'm helping them out with their whitehat@ queue right now. :)\n\nI want a chance to review this to an android engineer who'll be more familiar with the risks here so Julian can work on other whitehat tickets. It looks like you want to publish this on the third, but I'd like a little bit more time to take a peek at this since I am just joining this conversation. How is that with you?\n\nIdeally if there's something we'd want to fix here, we'd like to push a fix and then see you publish.\n\nHow does that sound? Thanks for being patient and sorry for the delay.","automated_response":false,"created_at":"2014-04-01T22:45:00.000Z","updated_at":"2014-04-01T22:45:00.000Z","actor":{"username":"magoo","cleared":false,"url":"/magoo","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/044/c5a0272bf5bace329125da5217384d22c444edb3_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"coinbase","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":23474,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey Ryan,\n\nI really appreciate your quick response and it is the response I had been hoping for. If you or your engineer have any questions, I'm more than happy to help. I'm an Android engineer for an enterprise SaaS company, so I could probably even help you make the necessary changes. Just keep me in the loop and I'll hold off on publishing.\n\nBest,\nBryan Stern","automated_response":false,"created_at":"2014-04-01T23:47:00.000Z","updated_at":"2014-04-01T23:47:00.000Z","actor":{"username":"bryanstern","cleared":false,"url":"/bryanstern","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"coinbase","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":23475,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey Bryan -\n\nI've sent this over to Paul at isecpartners, who would like to comment.","automated_response":false,"created_at":"2014-04-02T08:56:00.000Z","updated_at":"2014-04-02T08:56:00.000Z","actor":{"username":"magoo","cleared":false,"url":"/magoo","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/044/c5a0272bf5bace329125da5217384d22c444edb3_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"coinbase","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":23481,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":null,"automated_response":false,"created_at":"2014-04-02T10:00:00.000Z","updated_at":"2014-04-02T10:00:00.000Z","actor":{"username":"paul-youn","cleared":false,"url":"/paul-youn","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"coinbase","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":23477,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Hi Bryan,\n\nI have a few of questions. Note that I have seen your report, but I haven’t done any verification on my own so I really apologize for any silly questions.\n\n**Issue 1: SSL Certificate Verification**\nI’m a bit unclear if you’re saying that the SSL verification itself is failing (i.e. you could proxy the traffic using Charles Proxy without installing a certificate) or if you’re saying that there is a lack of certificate pinning? https://www.owasp.org/index.php/Certificate_and_Public_Key_Pinning\n\nGiven your description includes installing another root CA on the device, my guess is that you’re describing the latter? If so, in general I would not consider this a vulnerability, but more of a defense-in-depth mechanism. In order to exploit this issue, an attacker would have to trick a victim into installing another root CA on their phone. At that point, the attacker could also arbitrarily MITM all of the user’s non-pinned traffic (including all browser activity for example). Please let me know if I’m misunderstanding your issue.\n\nIf you do plan on publishing I would *highly* recommend changing the title to “lack of certificate pinning”. As written, it makes it sound like SSL Certificate Verification is failing, which is a *much* more serious issue and could lead to serious misinterpretation. SSL Certificate Verification is properly being performed (if my guess as to what you’re saying is correct).\n\n**Issue 2: API Key Security**\nI want to separate out this from issue 1. Issue 1 describes the ability to intercept SSL if a victim installs a malicious CA on their phone.\n\nThe first thing you’re describing is actually the intended behavior of the Oauth2 protocol (http://tools.ietf.org/html/rfc6749). Oauth 2 was indeed controversial because it sends secrets in messages, but the justification is that it requires SSL verification.\n\nThe second thing: hardcoded keys in the Coinbase source that is publicly available. This is a classic “problem”, and I’m not actually sure how to weigh in here. Julian can likely tell us more. In my opinion, the real vulnerability is if you rely on those as things to remain secret. Most applications are not. Rotating keys and obfuscating won’t save these secrets either, there is basically no way to keep these confidential in the hands of an attacker.\n\n@lianj perhaps you can weigh in?\n\n**Issue 3: repeating messages**\nSSL itself protects against replay of messages on the protocol level, which means replay attacks would not be possible unless you broke SSL. If this were not true, most messages on the internet could be replayed.\n\n**Recommendations to Coinbase:**\n- Use ProGuard: I personally do not believe in obfuscating source because it can always be defeated trivially. For example, hooking system calls and waiting for the API key to appear.\n\nTo wrap up, I completely respect that you are notifying CoinBase about this issue and giving them a chance to fix it. We not only need more security researchers such as yourself, but we also need *responsible* disclosure to make sure we’re protecting users. I really appreciate your efforts here. Regarding disclosure: as a fellow security researcher, I generally believe that responsible disclosure means a minimum of 30 days notice prior to publication and generally slide that window larger depending on the nature of the vulnerability. This is my personal opinion (and the practice of iSEC Partners), but I just wanted to add a datapoint there.\n\nWould love to continue this discussion, perhaps a phone call would be a good idea? Please let me know if I missed anything.\n\nThanks,\n\nPaul","automated_response":false,"created_at":"2014-04-02T11:04:00.000Z","updated_at":"2014-04-02T11:04:00.000Z","actor":{"username":"paul-youn","cleared":false,"url":"/paul-youn","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"coinbase","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":23486,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"Hi Paul and company,\n\nAgain thank you for digging into this quickly. I'm at work right now so I'll try to answer what I can right now and get back to you this evening on some other points. I do agree 30 days is standard, but since it was dismissed and I wasn't receiving responses, it seemed fair to accelerate this.\n\n1) I may not have used the term certificate pinning correctly in my initial write up, so I appreciate the link and clarification. You are correct, it is the latter. The app should restrict Coinbase SSL certificates to a single certificate authority (certificate pinning).\n\nBecause of this, I can install an additional certificate or, if I were able to get a certificate signed for Coinbase signed by another certificate authority already trusted by the device, I would not need to install my own CA. In both scenarios, I need to insert myself between the device and the Coinbase API. This could be done by offering free wifi near a place that accepts bitcoin, arpspoofing on a network, or even running a Tor exit node.\n\nIf the app requires the certificate presented by coinbase.com to have been signed by DigiCert (your CA), the above is prevented. This, if I read your link correctly, is certificate pinning.\n\n2) I'll let you guys decide whether to remove the keys from your public source, but it seems like a no brainer to me. With those keys (and source available) it would be pretty easy to build your app with some malicious intent and post it in another Android  app store like Amazon. To disable this app, you wouldn't be able to disable its key pair because you would also disable your Google Play apps. Essentially this allows you to bypass registering your app with the Coinbase API (https://coinbase.com/oauth/applications).\n\nAs for obfuscation, you are right that it doesn't guarantee they can't be decompiled from the binary, but you can make it much much much more difficult. Google recommends these sorts of precautions when implementing in app billing and hiding keys related to that. (http://developer.android.com/google/play/billing/billing_best_practices.html)\n\n3) I'm pretty sure I was able to repeat SSL requests using Charles a few weeks ago. I'll try again tonight and report back. Repeating and modifying requests is still definitely an issue if SSL is defeated as we talked about in Issue 1. Either way, I find it troubling that your apps are not utilizing this since it is available through your API.\n\nBest,\nBryan Stern","automated_response":false,"created_at":"2014-04-02T11:50:00.000Z","updated_at":"2014-04-02T11:50:00.000Z","actor":{"username":"bryanstern","cleared":false,"url":"/bryanstern","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"coinbase","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":23487,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi Bryan,\n\nThanks for the prompt response. A couple of clarifications:\n\n1) Cert pinning basically refers to only accepting a SINGLE certificate (or in some cases, a single CA). That’s because the overall CA model is a bit crazy right now. Most devices (browsers, phones, etc) accept anything from any of 1000+ CAs. The concern is that DigiCert (or any of the other 1000+ CAs) could issue a fraudulent certificate for someone like Google and then MITM gmail traffic.\n\nThis hasn’t been seen in the wild (much) but it’s a big enough concern that people are worried. As a result, people started pinning certificates in applications.\n\nIt sounds like Coinbase isn’t doing certificate pinning, but is instead relying on certificates signed by valid root certificates. If that’s true, it means that just being in the middle between the device and the Coinbase endpoint IS NOT enough to view/modify/replay that traffic. You would STILL need a Coinbase certificate signed by a trusted CA. That is pretty hard to do.\n\nWhat you’re doing with Charles essentially tells the device “hey, this certificate is a valid root CA”. Without that step, your device wouldn’t trust the presented certificate. You can test this easily: just remove the CharlesProxy cert and see if you can still view the traffic.\n\nIf you could break SSL just by being in the middle, it would mean that the internet is essentially broken. Any time I browse Amazon and purchase something, the traffic is protected by SSL. I’m routing traffic through a lot of network devices. Any of those devices could do whatever they wanted with that traffic. SSL prevents that. If it didn’t, essentially the internet as we know it wouldn’t work.\n\nIn summary, in my opinion, you are talking about a well known weakness in the Certificate Authority model (for example, here is a popular article discussing some of the problems in how things are set up: http://www.theregister.co.uk/2011/04/11/state_of_ssl_analysis/). This is a weakness in the CA model, and not a weakness in Coinbase itself.\n\n2) I don’t have enough data here, but I believe this would be hard to exploit in practice. The credential that’s hardcoded would allow a malicious app to pretend to be the CoinBase app (true). But, in order to get a credential, you still need the user’s credentials.\n\nTo me, the credentials aren’t a real barrier here. I could just as easily create a fake coinbase app that didn’t have the actual coinbase credentials and still phish your credentials. I’d then just forward those credentials to the web API and validate them. The availability of the credentials in this case don’t really seem to add anything to this attack, but please let me know if I’m misunderstanding you. Oauth is near and dear to me and I’ve thought about this stuff quite a bit: https://www.isecpartners.com/media/11683/isec-creating_safer_oauth_experience.pdf\n\n3) What’s actually happening in Charles is that it establishes a valid SSL connection with Coinbase, and with your device. It can do that because you told the device to explicitly trust that certificate. So, when you’re “replaying” a message, you’re doing that at network layer 7. It’s “replayed” in the same way that you just performed the action again. Because of SSL, an attacker who is just listening on the wire, wouldn’t be able to modify/see the data. They’d just see the encrypted bits. Those encrypted bits have replay protections on them. So, I can’t just record encrypted bits and send them again, because the protocol will prevent it.\n\nThe only way you can replay messages is if you break SSL. You can see what it looks like without MITM by installing Wireshark, which lets you see the actual traffic on the wire (will look like a bunch of binary data).\n\nIn summary: in my opinion, your findings are:\n\n- Coinbase doesn’t use certificate pinning. This means they are relying on the CA trust model, which is fragile. Of course, almost all web apps and mobile apps rely on the same thing. In order to exploit this, you would have to have a Coinbase certificate signed by a valid CA trusted by the device AND be present on the network between the app and the Coinbase servers.\n\n- Coinbase hardcodes API keys in their application, which is available publicly. Those keys could be used to spoof the Coinbase app to the resource server. You may have to get creative here in terms of how you think this would uniquely help an attack.\n\nThanks,\n\nPaul","automated_response":false,"created_at":"2014-04-02T12:41:00.000Z","updated_at":"2014-04-02T12:41:00.000Z","actor":{"username":"paul-youn","cleared":false,"url":"/paul-youn","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"coinbase","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":24424,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I retested repeating intact SSL requests to the Coinbase API from the Coinbase app and Paul is correct. SSL does protect against replays.\n\nBelow I have summarized the issues which I would expect any financial organization resolve.\n\nI still believe SSL pinning would be an easy and wise thing to do because:\n\n1) It protects against the spoofed certificate signed by another CA, which Paul admitted is a well known issue with the CA security model.\n2) It protects against a rogue CA certificate if one is installed on a user's device.\n3) Facebook, Mint, and number of other apps I use, which deal with private data and money, pin their SSL certs in their apps. This should be common practice.\n\nI also still believe updating your Android app's to make use of the increased security you've already built (api request signatures and nonces) would be wise. I spoke to some security colleagues at work (HootSuite) and they said while SSL protects against repeated requests, it is still possible to [break into SSL](https://media.blackhat.com/bh-eu-12/Jarmoc/bh-eu-12-Jarmoc-SSL_TLS_Interception-WP.pdf). The additional signing of the request provide another layer of security to prevent repeated or manipulated requests.\n\nLastly, securing your client_id and client_secret ought to be a priority since it is so easy and would help prevent some unauthorized use of your API. While Paul is right that it ultimately impossible to prevent a deterred programmer from extracting them from app binaries, you can certainly keep the script kiddies at bay with [ProGuard](http://developer.android.com/tools/help/proguard.html) and obfuscating the key in the code (generating the key from several pieces or from a chain of XOR operations).\n\nBest,\nBryan","automated_response":false,"created_at":"2014-04-04T00:50:00.000Z","updated_at":"2014-04-04T00:50:00.000Z","actor":{"username":"bryanstern","cleared":false,"url":"/bryanstern","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"coinbase","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":25189,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @magoo,\n\nThank you for importing the email thread. I want to note that there was an email lost when you imported this with in which I supplied a PDF draft of a write up of my concerns.\n\nThe email was sent April 1st, prior to your first response in the thread.\n\n--------------------\n\nHi Julian,\n\nI'm following up on the issues I brought up a couple weeks ago. I want to give you guys another chance to deal with this internally before I publish the vulnerabilities. I've attached a draft of the post. Please get back to me by April 3rd.\n\nBest Regards,\nBryan Stern\n\n","automated_response":false,"created_at":"2014-04-07T08:31:10.939Z","updated_at":"2014-04-07T08:31:10.939Z","actor":{"username":"bryanstern","cleared":false,"url":"/bryanstern","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":5779,"filename":"coinbase_android_vulnerabilities.pdf","type":"application/pdf","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/005/779/8dfb7ff3e036e516ffa7af8e8f151d713b71aabd/coinbase_android_vulnerabilities.pdf?response-content-disposition=attachment%3B%20filename%3D%22coinbase_android_vulnerabilities.pdf%22%3B%20filename%2A%3DUTF-8%27%27coinbase_android_vulnerabilities.pdf\u0026response-content-type=application%2Fpdf\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQTQR22CE2%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T151145Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJGMEQCIHylhpFJOF4pRe7XlaDX6z3BLEup%2BswnNkaACr%2Fwjwr8AiASjuyeD0TYwrZA5sOldf5eC6UQrO8hSHC9jNR%2BVNumhyqDBAjv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIMfK%2BofD1wJOHYcOUJKtcDnC3f8Y3jglGs7z8YlxF9bdYkYlsSrPxEkx9hDqtH%2BQ3u1daZrwyM6F3WHlk0a%2BWNezGk%2FnRxFWuvgXlXXAEBaCUWEe1UXv97gs6KKr%2F4fZ92%2FH3VXeVMioYLi220Z8qDdmiwSK2Z%2FPfK0nlRhO3v9Ee3r3C7BMq5B4DRnfxp0cJyzU%2FHbMNzQNjyO%2BlGzreHCzcyKBe%2FoFAr2W6xbLokCINrIUxMnvI9Mxs7SraD%2FF2sZw8Ln4uZ6aJweQoOPwsnYKkrRjb370Lt%2FREkrEj9pcgae0C9R5BTZegZaqNN6CzMkZfNHB7RmNrhJFg6j7%2BfPYLcWFNxzvJV9dbVJdocqrM5Jmi3hE47KOBrMSGuFrCha2vRk9P64hqfhM1GdDtMLFZZn5VqOJgdyVWZ8bTrZpmlBP%2FJ6YiHIaMTH8G%2FRndaRrVRAR8iOSqWok%2FikWajxMvcVA29H%2F5RznwCFPkLrSbv34tOiWcwVp50Yy3HjkGq4LnY67LMRRRIwThQ9vc%2BM3G9xlb7TwO6%2F3vE5U6azDCH6hDFQ3Xi8ZJVYrTOOWINnf%2BC3BIhvL8Uql%2FhI1vUmbQiAR01xN%2FdEQ9ReTSo0pfJ3SDSXhBXiwUW0IRKspJO189rJyI3MImNkYsGOqYBwdOGh60JXyl1FPj8jwEbnfg6var6H0hyaUwn%2B%2FnamMWODqDwoSJI6f0Q6RJHnQJo2gfc6OFgj1W2B%2FGcJDL4gMvwPBD8bBDDMSaZ3x1nqw%2FhzMwsaQP%2BTnUJEKAVQSe3o5Yvwzg%2FSvpNP%2By981FbIZs9aWoGNPHY48ZIUNdNLCWPS2PxNm9xHrAxEcqn8ib1XLvQQS%2FALl2CG36%2BewUP2tPIf%2BIPmw%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=2f9ab6f96f14f97307307f2b22f3acec941085cdf28d9a3b52c5767e1186b98f"}],"genius_execution_id":null,"team_handle":"coinbase","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":25929,"is_internal":false,"editable":false,"type":"Activities::BugInformative","message":"OK Great, thanks Bryan.\n\nSpoke with the team and here's an update on where our heads are at. Thankfully I think we're OK here.\n\n1. We've had SSL pinning on our development roadmap and all of us have agreed that it's a good thing to have. Your original report (which stated that *all* validation was screwed) would have changed our roadmap quite a bit, but since you corrected yourself on the Charles false positive I think we have a healthy roadmap we won't need to update. SSL pinning is on the way, but not with any special rush from a direct vulnerability.\n\n2. As far as the application oauth tokens go here, we simply do not give any extra permissions to anyone using that token. This is an oauth workaround that allows us to kill uber-legacy versions of our application and keep some metrics, it's not relied on for any valuable permission. Other apps historically have seen issue with this because they *did* provide those credentials with benefits around rate limiting or features. Using our credentials won't give a substantial benefit over using any generated app credentials, since we assume they'll be compromised and published even if we obscure them. So we give them nothing of value.\n\nSo - SSL Pinning is on the roadmap, and the oauth tokens are designed to be leaked.","automated_response":false,"created_at":"2014-04-07T21:57:47.501Z","updated_at":"2014-04-07T21:57:47.501Z","actor":{"username":"magoo","cleared":false,"url":"/magoo","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/044/c5a0272bf5bace329125da5217384d22c444edb3_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"coinbase","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":25933,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"I'm adding a $100 bounty on here, because I'm not sure our plans around SSL pinning would have been totally solidified in the roadmap without going through the exercise that we did on this. Thanks Bryan.","automated_response":false,"created_at":"2014-04-07T21:59:46.005Z","updated_at":"2014-04-07T21:59:46.005Z","actor":{"url":"/coinbase","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/104/b151e01a4adbf5ad9067fc30fb2dfe5d5997fa5c_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Coinbase"}},"bounty_amount":"100.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"coinbase","collaborator":{"username":"bryanstern","url":"/bryanstern"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":46532,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2014-05-07T21:58:00.252Z","updated_at":"2014-05-07T21:58:00.252Z","actor":{"url":"/coinbase","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/104/b151e01a4adbf5ad9067fc30fb2dfe5d5997fa5c_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Coinbase"}},"genius_execution_id":null,"team_handle":"coinbase","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}