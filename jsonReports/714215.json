{"id":714215,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83MTQyMTU=","url":"https://hackerone.com/reports/714215","title":"curl on Windows can be forced to execute code via OpenSSL environment variables","state":"Closed","substate":"informative","severity_rating":"high","readable_substate":"Informative","created_at":"2019-10-14T23:02:51.094Z","submitted_at":"2019-10-14T23:02:51.094Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"supersausage","url":"/supersausage","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":35663,"url":"https://hackerone.com/curl","handle":"curl","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"curl","twitter_handle":"","website":"https://curl.se","about":"cURL is a computer software project providing a library and command-line tool for transferring data using various protocols."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2019-1552","CVE-2019-5443"],"singular_disclosure_disabled":true,"disclosed_at":"2021-02-08T07:54:17.110Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2021-01-08T08:21:12.992Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Preface: While I have an interest in security, I am not a professional security researcher, so please be forgiving of any lack of convention in this submission. The intent is to help improve security of the OpenSSL and curl projects, their consumers and end users. I will be sending this same content to both projects, curl via hackerone, and OpenSSL via openssl-security@openssl.org, per directions at each maintainer website.\n\nI'm writing with regard to:\n - OpenSSL CVE-2019-1552\n - curl CVE-2019-5443\n \nBackground:\n - The root of each of these is that a default path in the OpenSSL build system for Windows targets is a location writable by a non-privileged user, and that OpenSSL configuration files placed there can change the behavior of OpenSSL, including code execution and escalation of privilege.\n - A PoC for code execution and escalation of privilege was published at:\n   https://hackerone.com/reports/608577\n - This PoC uses a dynamic engine definition in such an OpenSSL configuration file to load a DLL in the security context of the application integrating the OpenSSL library, whose DLL_PROCESS_ATTACH handler inside DllMain can execute code in that context. This permits a non-elevated user to deploy code that may be executed by an elevated application.\n \nContext of this email:\n - I am currently working with OpenSSL 1.0.2t as a LTS solution.\n - I have not tested or substantially researched other branches at this time.\n \nSummary of current status:\n - OpenSSL project appears to have:\n   - Designated CVE-2019-1552 as \"Low\" severity, even though the issue allows for EoP and potentially degrading the communication security intent of integrating applications, e.g. via inserting CA certificates.\n   - At a high level, stated as \"Fixed in OpenSSL 1.0.2t\" (https://www.openssl.org/news/vulnerabilities.html) by this commit:\n     https://github.com/openssl/openssl/commit/d333ebaf9c77332754a9d5e111e2f53e1de54fdd\n\t The fix is, however, a fix to documentation, and changes in the build script that add a sample  for --prefix that is similarly insecure.\n - curl project appears to have:\n   - Recommended that users update to 7.65.1_2\n   - Stated that this commit \"completely disables curl's ability to load an OpenSSL config when invoked.\"\n     https://github.com/curl/curl-for-win/commit/51b658a76594942cf1d6f227d8fc4732bb8ec277\n\t \n\nMy contentions:\n\n (A) The statement that CVE-2019-1552 was \"Fixed in OpenSSL 1.0.2t\" is extremely misleading, and could likely lead to users of the project updating OpenSSL without realizing that additional changes are required on their part. \n\n (B) The sample \"--prefix=c:/some/openssl/dir\" is equally as vulnerable as the default, but more significantly, it is difficult to conceive of a path that is actually safe to use, and this might not be obvious to all developers. For example:\n \n  - C:\\Windows\\System32 - Windows may not always be installed on drive letter 'C', leaving a hard-coded path similarly vulnerable on some systems\n  - C:\\Program Files - This path can be localized (e.g. \"Programmes\" in French-native installations), leaving a hard-coded path similarly vulnerable on some systems\n    \n  The OpenSSL code does not support passing an environment variable for runtime resolution, which would be a still vulnerable option, not least because Configure.pl will modify any path that is not an absolute path with drive letter, or one beginning with \"/\":\n\n    $openssldir=$prefix . \"/\" . $openssldir if $openssldir !~ /(^\\/|^[a-zA-Z]:[\\\\\\/])/;\n    \n  One of few \"safer\" options I could think of was passing --prefix=\\NUL --openssldir=\\NUL, which should lead to a path or compound path after Configure.pl that is guaranteed to be invalid or else contain no content under Windows.\n    \n  In fact, in the aforementioned hackerone thread, \"vsz\" alludes to the fact that the fix in curl is not guaranteed:\n    \n  \"After further experiments, I managed to tweak the build so that engine support can be kept enabled, and OpenSSL be built with a secure prefix. The trick was to use C:/Windows/System32/OpenSSL. This location can be fairly assumed to be a restricted directory on majority of installs and on all default installs going back a long time.\"\n    \n  Per above, this in not true unless Windows is installed on the 'C' drive. These are supposed to be projects implementing security, potentially integrated into end products distributed to millions of users with varying OS configurations. I personally would not call this \"fixed\". \"Hardened\", perhaps.\n  \n  (C) This still does not make the OpenSSL library safe, and I believe curl CVE-2019-5443 is actually *not fixed*, because the OpenSSL will read the path to configuration data from the OPENSSL_CONF environment variable.\n  \n  I downloaded curl 7.66.0 from:\n\n    https://curl.haxx.se/windows/dl-7.66.0_2/curl-7.66.0_2-win32-mingw.zip\n    \n  I could compile and execute the same PoC as provided in the hackerone thread simply by setting the user-level environment variable:\n\n    OPENSSL_CONF=C:\\test\\openssl.cnf\n    \n  The OpenSSL library used by curl (and other third-party apps who integrate it), will read this environment variable before the hard-coded path. Windows does not elevation to set user-level environment variables, and child processes can inherit them. This means that any elevated application using the OpenSSL library started from a compromised user account can be used as a EoP technique in the same way as before. For example, if OPENSSL_CONF is set at the user level, and the user signs out and later signs in again, the shell (Explorer.exe) inherits this environment variable, as does any process the user elevates.\n    \n  I have not tested, but if, as the text on the OpenSSL vulnerabilities page alludes to, this also allows someone to \"insert CA certificates, modify (or even replace) existing engine modules\", this same issue potentially weakens the communications secrecy of integrating apps.\n    \n  Aside: I see various places in the OpenSSL library code where other environment variables are queried, and I do not have time to evaluate each for potential issues.\n\n## Impact\n\nThe attacker could run code in the context of an elevated process if they can modify user-level environment variables, or when Windows is not installed on the C drive.\n\nEssentially, this report is that issues similar to CVE-2019-5443 persist in curl 7.66.0.","weakness":{"id":75,"name":"Privilege Escalation"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":null,"vote_count":2,"voters":["monke","xdanes09"],"severity":{"rating":"high","score":7.9,"author_type":"User","metrics":{"attack_vector":"local","attack_complexity":"low","privileges_required":"low","user_interaction":"required","scope":"changed","confidentiality":"high","integrity":"high","availability":"none"}},"structured_scope":{"databaseId":18844,"asset_type":"SOURCE_CODE","asset_identifier":"https://github.com/curl/curl","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":6043863,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks a lot for the report of your findings! We will start to investigate this and will be back with comments and possibly follow-up questions within shortly!","automated_response":false,"created_at":"2019-10-15T10:29:37.143Z","updated_at":"2019-10-15T10:29:37.143Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/y9xzl5ayi7du4kz3l6pa6sff2ha5/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%22final-12-1000x1000.jpg%22%3B%20filename%2A%3DUTF-8%27%27final-12-1000x1000.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQQUWX32YR%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T151947Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJIMEYCIQDI60ST6nG4q4laTSFldIqSXi%2FaRkkQyutm5GwT0cJIZgIhAOZhMg3jBlju6Int%2BeeUm1aiBO7rhlrQcLIk%2Bgf6D%2BEDKoMECO%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAhoMMDEzNjE5Mjc0ODQ5IgwXNLBv9MILvVoorSoq1wOfX3WD6Q7XyleYeGc645Essao0xgUb9KvTqDMYcvHVGFjpYncM47xpmv3HMsu%2F5W1XrLh7mNNldxl0sp09zO40TE5Gv3tk2fKUJkR%2FD6XSYmqjjSQ1X8rpbrso174vGjaIUSzY97sO%2Fd37gH6ZpB7ew%2Fv3oEvinQIGLVJR0eRzLhiviACbbOMKLVbWbamWcEPt5JM%2BAi%2F9NdNl7YuEpr2x1Aba%2FQ7SrG7ebdm1DcE0lVqIqx0ztrFvl3nirCMo74N6ge1UFzEhWH44%2BFZEehSLzVwe3%2F%2FBZFO65bGyxbdcPGK84GPYyTmQ%2BjLOaldd7KqAdRhPjDfqVNtwC3oWvVdxRnK%2FoQIrzUgaia36mrU%2B9zb4%2FRhBIhVDxcpxUM1gkKjO26kCJizTpuEecHCYqUizMVCu%2BZHsHDBDtIkkSFfQ%2B2gv2sFyQKltKMSVLAEHz02kDaXPYdZgNpJpJb5mig7chRqoJheUFMk5FqS9E%2FlqeZ5JfW22b6sOCLD%2FEMKSDTLFHVl3btbPUCjyHfhmlMXnpBRHVIqKR1wYVgjD5A7%2FSBEWiHu7RrZzNRZghQJBq1L32qmueS8YHqpboqJLILIuPtnLxC99DFuXuovAM4duMqxEoPDhN0Mw3oyRiwY6pAEUCR%2BsNQPvZhxAQDP4H0mmjcS7kJOELluaCLhnFR0avdVxZaYB9x8Q%2B1vVVuMQVfHNSrjWJl4H%2Be5xJlQ6IIY3JmCIpBdpvoYal7a%2B64IuQyPvQqpHA3Ie7oP5I5O%2F9TxjNDzuk8S48F6Uu5xP3VWBG1thWt0Ez9VpERdwmSl9%2FKYIOOCQmgzrHUQhmsthA0Nah76KucMZDyOmhK8c6RFPBq%2BuQw%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=b79f5771af4002375c102804ee9d0ea7a1799fa7d7cd96f4b87b67717ebd940d"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6043909,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Doesn't the commit referenced above (made by @vsz) make sure that the curl binary build we offer doesn't load any config at all thus it avoids this flaw?\n\nSo the way you'd get a vulnerable curl is to build it yourself and leave the config-loading via OpenSSL like this?","automated_response":false,"created_at":"2019-10-15T10:38:14.076Z","updated_at":"2019-10-15T10:38:14.076Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/y9xzl5ayi7du4kz3l6pa6sff2ha5/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%22final-12-1000x1000.jpg%22%3B%20filename%2A%3DUTF-8%27%27final-12-1000x1000.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQQUWX32YR%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T151947Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJIMEYCIQDI60ST6nG4q4laTSFldIqSXi%2FaRkkQyutm5GwT0cJIZgIhAOZhMg3jBlju6Int%2BeeUm1aiBO7rhlrQcLIk%2Bgf6D%2BEDKoMECO%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAhoMMDEzNjE5Mjc0ODQ5IgwXNLBv9MILvVoorSoq1wOfX3WD6Q7XyleYeGc645Essao0xgUb9KvTqDMYcvHVGFjpYncM47xpmv3HMsu%2F5W1XrLh7mNNldxl0sp09zO40TE5Gv3tk2fKUJkR%2FD6XSYmqjjSQ1X8rpbrso174vGjaIUSzY97sO%2Fd37gH6ZpB7ew%2Fv3oEvinQIGLVJR0eRzLhiviACbbOMKLVbWbamWcEPt5JM%2BAi%2F9NdNl7YuEpr2x1Aba%2FQ7SrG7ebdm1DcE0lVqIqx0ztrFvl3nirCMo74N6ge1UFzEhWH44%2BFZEehSLzVwe3%2F%2FBZFO65bGyxbdcPGK84GPYyTmQ%2BjLOaldd7KqAdRhPjDfqVNtwC3oWvVdxRnK%2FoQIrzUgaia36mrU%2B9zb4%2FRhBIhVDxcpxUM1gkKjO26kCJizTpuEecHCYqUizMVCu%2BZHsHDBDtIkkSFfQ%2B2gv2sFyQKltKMSVLAEHz02kDaXPYdZgNpJpJb5mig7chRqoJheUFMk5FqS9E%2FlqeZ5JfW22b6sOCLD%2FEMKSDTLFHVl3btbPUCjyHfhmlMXnpBRHVIqKR1wYVgjD5A7%2FSBEWiHu7RrZzNRZghQJBq1L32qmueS8YHqpboqJLILIuPtnLxC99DFuXuovAM4duMqxEoPDhN0Mw3oyRiwY6pAEUCR%2BsNQPvZhxAQDP4H0mmjcS7kJOELluaCLhnFR0avdVxZaYB9x8Q%2B1vVVuMQVfHNSrjWJl4H%2Be5xJlQ6IIY3JmCIpBdpvoYal7a%2B64IuQyPvQqpHA3Ie7oP5I5O%2F9TxjNDzuk8S48F6Uu5xP3VWBG1thWt0Ez9VpERdwmSl9%2FKYIOOCQmgzrHUQhmsthA0Nah76KucMZDyOmhK8c6RFPBq%2BuQw%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=b79f5771af4002375c102804ee9d0ea7a1799fa7d7cd96f4b87b67717ebd940d"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6044071,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"My ultimate suggestion/hint to fix this fully, was to have a way to build OpenSSL that disables relying on any hard-coded directories _completely_, as there doesn't exist such a universal Windows path that is guaranteed to be user-protected on all systems, or in other words, there is no concept of `/etc/` on Windows, any Windows. As far as introducing vulnerabilities via user-defined environent variables, I believe the stance on this is they are not considered security issues, and features like `SSLKEYLOGFILE` seems to agree with this.\n\nAnyhow, relying on hard-coded directories was not fixed and thus the mitigation indeed still has known holes in it. Thanks for pointing out that `Program Files` can be localized — I completely forgot about it.\n\n- ATM OpenSSL still does break when passed a Windows-specific `--prefix` when cross-built (it's never recognized as absolute path, see [this report](https://github.com/openssl/openssl/issues/9520)).\n- The new, hard-coded defaults for mingw will fail in various configurations (localized Windows version, or running a 32-bit build on a 64-bit Windows system. I [raised this](https://github.com/openssl/openssl/pull/9400#issuecomment-517784572) latter, but to no avail.)\n- OpenSSL still cannot be cross-built even with the new hard-coded defaults, because the Unix make logic (used in cross-builds) isn't prepared for spaces in filesnames. For the latter I opened a [PR](https://github.com/openssl/openssl/pull/9864), which hasn't yet been merged even though it's proven to work and to be correct. I'm using this patch to build the latest OpenSSL 1.1.1d for curl.\n- Also note that Visual Studio builds are vulnerable as well, as on Windows, binaries are typically not built from source on the same machine they are being run on, so even a build-time detection of `Program Files` will become vulnerable when the binary is run on a system with a different `Program Files` folder.\n\nI'd estimate that my path used for mitigation (`C:\\Windows\\System32\\SSL`) has a higher chance to be valid that the OpenSSL default (especially with `Program Files` being localized), but of course none is perfect.\n\nWith regards to curl, the problem of `OPENSSL_CONF` should be fixed by using the curl build-time option `CURL_DISABLE_OPENSSL_AUTO_LOAD_CONFIG`, which disables dynamic loading of configuration. And that's about all an OpenSSL user code can do.\n\nThe disabled (in curl) call to `CONF_modules_load_file()` is also being called by OpenSSL itself from the `libcrypto` init function, via `ossl_init_config()` → `openssl_config_int()`. Did you test it if this is still being executed in curl context (with a `.conf` actually loaded)?\n\nEven in that case we cannot do much besides rolling more local OpenSSL patches to fix its problems, or reporting the issue to their team in the hope to develop an upstream fix for it. I believe the only ultimate solution to this can only be implemented inside OpenSSL, so that it gets fixed in all OpenSSL user apps, not just in curl.\n","automated_response":false,"created_at":"2019-10-15T11:19:26.110Z","updated_at":"2019-10-15T11:19:26.110Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6044581,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks @vsz! I think perhaps the shortest answer to the initial report would be exactly this:\n\n**vulnerabilities via user-defined environment variables are not considered security issues**\n\nIf a user can set environment variables for another user there are plenty of ways to \"own\" that user. `SSLKEYLOGFILE` being a prime example and one that at least two of the major browsers still allow to be set this way - proving that others are also taking this stance.","automated_response":false,"created_at":"2019-10-15T12:35:48.396Z","updated_at":"2019-10-15T12:35:48.396Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/y9xzl5ayi7du4kz3l6pa6sff2ha5/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%22final-12-1000x1000.jpg%22%3B%20filename%2A%3DUTF-8%27%27final-12-1000x1000.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQQUWX32YR%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T151947Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJIMEYCIQDI60ST6nG4q4laTSFldIqSXi%2FaRkkQyutm5GwT0cJIZgIhAOZhMg3jBlju6Int%2BeeUm1aiBO7rhlrQcLIk%2Bgf6D%2BEDKoMECO%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAhoMMDEzNjE5Mjc0ODQ5IgwXNLBv9MILvVoorSoq1wOfX3WD6Q7XyleYeGc645Essao0xgUb9KvTqDMYcvHVGFjpYncM47xpmv3HMsu%2F5W1XrLh7mNNldxl0sp09zO40TE5Gv3tk2fKUJkR%2FD6XSYmqjjSQ1X8rpbrso174vGjaIUSzY97sO%2Fd37gH6ZpB7ew%2Fv3oEvinQIGLVJR0eRzLhiviACbbOMKLVbWbamWcEPt5JM%2BAi%2F9NdNl7YuEpr2x1Aba%2FQ7SrG7ebdm1DcE0lVqIqx0ztrFvl3nirCMo74N6ge1UFzEhWH44%2BFZEehSLzVwe3%2F%2FBZFO65bGyxbdcPGK84GPYyTmQ%2BjLOaldd7KqAdRhPjDfqVNtwC3oWvVdxRnK%2FoQIrzUgaia36mrU%2B9zb4%2FRhBIhVDxcpxUM1gkKjO26kCJizTpuEecHCYqUizMVCu%2BZHsHDBDtIkkSFfQ%2B2gv2sFyQKltKMSVLAEHz02kDaXPYdZgNpJpJb5mig7chRqoJheUFMk5FqS9E%2FlqeZ5JfW22b6sOCLD%2FEMKSDTLFHVl3btbPUCjyHfhmlMXnpBRHVIqKR1wYVgjD5A7%2FSBEWiHu7RrZzNRZghQJBq1L32qmueS8YHqpboqJLILIuPtnLxC99DFuXuovAM4duMqxEoPDhN0Mw3oyRiwY6pAEUCR%2BsNQPvZhxAQDP4H0mmjcS7kJOELluaCLhnFR0avdVxZaYB9x8Q%2B1vVVuMQVfHNSrjWJl4H%2Be5xJlQ6IIY3JmCIpBdpvoYal7a%2B64IuQyPvQqpHA3Ie7oP5I5O%2F9TxjNDzuk8S48F6Uu5xP3VWBG1thWt0Ez9VpERdwmSl9%2FKYIOOCQmgzrHUQhmsthA0Nah76KucMZDyOmhK8c6RFPBq%2BuQw%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=b79f5771af4002375c102804ee9d0ea7a1799fa7d7cd96f4b87b67717ebd940d"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6048872,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi vsz, Badger,\n\nThanks for your response.\n\nI agree that ultimately this appears to be an issue that OpenSSL should address. I agree that there does not appear to be an easy way to fix this without customizing OpenSSL's code further during the build.\n\nvsz wrote:\n\u003e\"With regards to curl, the problem of OPENSSL_CONF should be fixed by using the curl build-time option CURL_DISABLE_OPENSSL_AUTO_LOAD_CONFIG, which disables dynamic loading of configuration. And that's about all an OpenSSL user code can do.\n\u003e\n\u003eThe disabled (in curl) call to CONF_modules_load_file() is also being called by OpenSSL itself from the libcrypto init function, via ossl_init_config() → openssl_config_int(). Did you test it if this is still being executed in curl context (with a .conf actually loaded)?\"\n\nI don't exactly follow the question, I think you are stating that you can control the curl behavior but perhaps not OpenSSL's own behavior. The test I performed was to use the curl project's official 7.66 build, which should contain your fix, and forced it to load the PoC DLL with the OPENSSL_CONF environment variable method.\n\nI am attaching a sample PoC which starts Notepad as admin per the same technique originally proposed, dropped by an NSIS executable that does not prompt for UAC, but whose dropped code will eventually run UAC elevated in the context of some other trusted process chain on the system.\n\nBadger, you wrote:\n\n\u003e \"vulnerabilities via user-defined environment variables are not considered security issues\"\n\nI have to say that I feel very uneasy about this. \n\nThe original vulnerability, CVE-2019-5443, has this succinct description:\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-5443\n\n\u003e \"A non-privileged user or program can put code and a config file in a known non-privileged path (under C:/usr/local/) that will make curl \u003c= 7.65.1 automatically run the code (as an openssl \"engine\") on invocation. If that curl is invoked by a privileged user it can do anything it wants.\"\n\nI think the same appears to be true in this case also, with a non-privileged program capable of creating an EoP that ultimately allows its code to be run elevated in the context of numerous other third-party trusted toolchains, through forcing module injection.\n\nAttack scenario:\n - User is tricked into running a malicious program, with no UAC prompt\n   - Non-elevated program drops .cnf file, DLL, and modifies a user-level environment variable\n - Later, the user invokes any privileged process chain, accepting its UAC prompt, or similarly an elevated task is started in the context of the current user e.g. via task scheduler -- perhaps an update-check utility that has rights to update privileged locations. This process chain at some point executes the official curl download or libcurl with OpenSSL engine.\n - The malicious code is now running unknown to the user as part of a trusted process that is UAC elevated with full admin access to the system\n   - Potentially the privileged processes are already trusted e.g. by task scheduler or compatibility settings and may not require any interaction\n\nWouldn't a non-privileged program quietly gaining admin access and running in the context of privileged processes normally be considered a vulnerability? Certainly the Windows OS strives to prevent non-privileged processes interacting with privileged processes as part of the security model.","automated_response":false,"created_at":"2019-10-15T20:47:22.506Z","updated_at":"2019-10-15T20:56:07.776Z","actor":{"username":"supersausage","cleared":false,"url":"/supersausage","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":608756,"filename":"poc.zip","type":"application/zip","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/LKCA5KtGV5rRcFbv635QEpLu?response-content-disposition=attachment%3B%20filename%3D%22poc.zip%22%3B%20filename%2A%3DUTF-8%27%27poc.zip\u0026response-content-type=application%2Fzip\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQQUWX32YR%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T151947Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJIMEYCIQDI60ST6nG4q4laTSFldIqSXi%2FaRkkQyutm5GwT0cJIZgIhAOZhMg3jBlju6Int%2BeeUm1aiBO7rhlrQcLIk%2Bgf6D%2BEDKoMECO%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAhoMMDEzNjE5Mjc0ODQ5IgwXNLBv9MILvVoorSoq1wOfX3WD6Q7XyleYeGc645Essao0xgUb9KvTqDMYcvHVGFjpYncM47xpmv3HMsu%2F5W1XrLh7mNNldxl0sp09zO40TE5Gv3tk2fKUJkR%2FD6XSYmqjjSQ1X8rpbrso174vGjaIUSzY97sO%2Fd37gH6ZpB7ew%2Fv3oEvinQIGLVJR0eRzLhiviACbbOMKLVbWbamWcEPt5JM%2BAi%2F9NdNl7YuEpr2x1Aba%2FQ7SrG7ebdm1DcE0lVqIqx0ztrFvl3nirCMo74N6ge1UFzEhWH44%2BFZEehSLzVwe3%2F%2FBZFO65bGyxbdcPGK84GPYyTmQ%2BjLOaldd7KqAdRhPjDfqVNtwC3oWvVdxRnK%2FoQIrzUgaia36mrU%2B9zb4%2FRhBIhVDxcpxUM1gkKjO26kCJizTpuEecHCYqUizMVCu%2BZHsHDBDtIkkSFfQ%2B2gv2sFyQKltKMSVLAEHz02kDaXPYdZgNpJpJb5mig7chRqoJheUFMk5FqS9E%2FlqeZ5JfW22b6sOCLD%2FEMKSDTLFHVl3btbPUCjyHfhmlMXnpBRHVIqKR1wYVgjD5A7%2FSBEWiHu7RrZzNRZghQJBq1L32qmueS8YHqpboqJLILIuPtnLxC99DFuXuovAM4duMqxEoPDhN0Mw3oyRiwY6pAEUCR%2BsNQPvZhxAQDP4H0mmjcS7kJOELluaCLhnFR0avdVxZaYB9x8Q%2B1vVVuMQVfHNSrjWJl4H%2Be5xJlQ6IIY3JmCIpBdpvoYal7a%2B64IuQyPvQqpHA3Ie7oP5I5O%2F9TxjNDzuk8S48F6Uu5xP3VWBG1thWt0Ez9VpERdwmSl9%2FKYIOOCQmgzrHUQhmsthA0Nah76KucMZDyOmhK8c6RFPBq%2BuQw%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=5067c8327f0fb1e4d070a8b24b3574426f3385836f00e5232b0196593f7966d2"}],"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6048974,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"(For reading CVEs concerning curl, I urge you to read *our* documents instead of more or less confused summaries hosted elsewhere, since we wrote the originals. Like here: https://curl.haxx.se/docs/CVE-2019-5443.html)\n\nIn that particular flaw, we learned that user A (the attacker) could put code in a place on the system so that it would get executed by program B or even user C in a way we considered was a security problem. All it took was for user A to have access to an unprivileged directory. Not an uncommon situation.\n\nIf I understand this reported issue correctly, user A here needs to somehow trick user C to set an environment variable first and then invoke the program B. It is the **set an environment variable** part that is key. That's a rather major thing and if you can make user C do that, you can usually also do all sorts of other malicious things but perhaps more importantly set other environment variables that will have a much more detrimental effect to user C (such as the `SSLKEYLOGFILE` environment variable).","automated_response":false,"created_at":"2019-10-15T21:16:49.724Z","updated_at":"2019-10-15T21:16:49.724Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/y9xzl5ayi7du4kz3l6pa6sff2ha5/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%22final-12-1000x1000.jpg%22%3B%20filename%2A%3DUTF-8%27%27final-12-1000x1000.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQQUWX32YR%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T151947Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJIMEYCIQDI60ST6nG4q4laTSFldIqSXi%2FaRkkQyutm5GwT0cJIZgIhAOZhMg3jBlju6Int%2BeeUm1aiBO7rhlrQcLIk%2Bgf6D%2BEDKoMECO%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAhoMMDEzNjE5Mjc0ODQ5IgwXNLBv9MILvVoorSoq1wOfX3WD6Q7XyleYeGc645Essao0xgUb9KvTqDMYcvHVGFjpYncM47xpmv3HMsu%2F5W1XrLh7mNNldxl0sp09zO40TE5Gv3tk2fKUJkR%2FD6XSYmqjjSQ1X8rpbrso174vGjaIUSzY97sO%2Fd37gH6ZpB7ew%2Fv3oEvinQIGLVJR0eRzLhiviACbbOMKLVbWbamWcEPt5JM%2BAi%2F9NdNl7YuEpr2x1Aba%2FQ7SrG7ebdm1DcE0lVqIqx0ztrFvl3nirCMo74N6ge1UFzEhWH44%2BFZEehSLzVwe3%2F%2FBZFO65bGyxbdcPGK84GPYyTmQ%2BjLOaldd7KqAdRhPjDfqVNtwC3oWvVdxRnK%2FoQIrzUgaia36mrU%2B9zb4%2FRhBIhVDxcpxUM1gkKjO26kCJizTpuEecHCYqUizMVCu%2BZHsHDBDtIkkSFfQ%2B2gv2sFyQKltKMSVLAEHz02kDaXPYdZgNpJpJb5mig7chRqoJheUFMk5FqS9E%2FlqeZ5JfW22b6sOCLD%2FEMKSDTLFHVl3btbPUCjyHfhmlMXnpBRHVIqKR1wYVgjD5A7%2FSBEWiHu7RrZzNRZghQJBq1L32qmueS8YHqpboqJLILIuPtnLxC99DFuXuovAM4duMqxEoPDhN0Mw3oyRiwY6pAEUCR%2BsNQPvZhxAQDP4H0mmjcS7kJOELluaCLhnFR0avdVxZaYB9x8Q%2B1vVVuMQVfHNSrjWJl4H%2Be5xJlQ6IIY3JmCIpBdpvoYal7a%2B64IuQyPvQqpHA3Ie7oP5I5O%2F9TxjNDzuk8S48F6Uu5xP3VWBG1thWt0Ez9VpERdwmSl9%2FKYIOOCQmgzrHUQhmsthA0Nah76KucMZDyOmhK8c6RFPBq%2BuQw%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=b79f5771af4002375c102804ee9d0ea7a1799fa7d7cd96f4b87b67717ebd940d"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6049145,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Okay.\n\nYes, that sounds like we are on the same page as to the setup.","automated_response":false,"created_at":"2019-10-15T21:47:41.862Z","updated_at":"2019-10-15T21:47:41.862Z","actor":{"username":"supersausage","cleared":false,"url":"/supersausage","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6049344,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"\u003e I don't exactly follow the question, I think you are stating that you can control the curl behavior but perhaps \u003e not OpenSSL's own behavior. The test I performed was to use the curl project's official 7.66 build, which\n\u003e should contain your fix, and forced it to load the PoC DLL with the OPENSSL_CONF environment variable\n\u003e method.\n\nI was wondering if the function we disable in curl via `CURL_DISABLE_OPENSSL_AUTO_LOAD_CONFIG` is still being called in certain cases, i.e. in your tests.\n\nI've now tried to replicate it by pointing `OPENSSL_CONF` to our test `openssl.cnf` with the latest [7.66.0](https://curl.haxx.se/windows/dl-7.66.0_2/curl-7.66.0_2-win64-mingw.zip) curl, but _cannot_ trigger the rogue `.dll` (I used `calc.dll` on a slightly outdated Win 10). (It triggers with an unpatched 7.65.1 though.). So in my tests, the OpenSSL config load logic appears to be correctly disabled and it stays disabled even with this envvar set.\n\nIs there some other/special condition that needs to be present?\n","automated_response":false,"created_at":"2019-10-15T22:49:18.076Z","updated_at":"2019-10-15T22:49:18.076Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6049427,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"There is no additional special setup. I booted up a clean system to check.\n\nI used the download you linked and:\n- Compiled PoC for x64 with /MT msvc build\n- Launched CMD\n- \"Set OPENSSL_CONF=C:\\test\\openssl.cnf\"\n- curl \"https://www.microsoft.com\"\n\nThis triggered it immediately.\n\nIf I set the environment variable in the registry or via the control panel then I sometimes have to log out and log in to a new session before windows will pass it down through whatever process environment blocks it has all the way to curl.\n\nThe PoC I attached should do the same steps, but I built that for x86 so you'd have to use the x86 build of curl.","automated_response":false,"created_at":"2019-10-15T23:14:09.593Z","updated_at":"2019-10-15T23:16:33.649Z","actor":{"username":"supersausage","cleared":false,"url":"/supersausage","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6050480,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks, I got it working: Had to give the VM internet access, as in the previous case the OpenSSL config was read *before* the connection, while in this new case it's triggered *after*.\n\nQuestion if there is any way for curl to tell OpenSSL not to do it.\n","automated_response":false,"created_at":"2019-10-16T06:31:13.224Z","updated_at":"2019-10-16T06:31:13.224Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6050548,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I grepped around the OpenSSL code and this environment variable-based functionality seems to be present unconditionally and can't be disabled at build-time easily:\n\nhttps://github.com/openssl/openssl/blob/3d5a7578e09a984c6475b1c008f5c76f850328cb/crypto/conf/conf_mod.c#L491\n\nIt might be possible to switch it off at run-time though since the function that ultimately makes the `getenv()` call is only invoked if a `filename` is NULL, but the OpenSSL API is such a complicated maze I haven't (yet) figured out exactly how we can set that filename to something else before that point...","automated_response":false,"created_at":"2019-10-16T06:46:49.773Z","updated_at":"2019-10-16T06:46:49.773Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/y9xzl5ayi7du4kz3l6pa6sff2ha5/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%22final-12-1000x1000.jpg%22%3B%20filename%2A%3DUTF-8%27%27final-12-1000x1000.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQQUWX32YR%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T151947Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJIMEYCIQDI60ST6nG4q4laTSFldIqSXi%2FaRkkQyutm5GwT0cJIZgIhAOZhMg3jBlju6Int%2BeeUm1aiBO7rhlrQcLIk%2Bgf6D%2BEDKoMECO%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAhoMMDEzNjE5Mjc0ODQ5IgwXNLBv9MILvVoorSoq1wOfX3WD6Q7XyleYeGc645Essao0xgUb9KvTqDMYcvHVGFjpYncM47xpmv3HMsu%2F5W1XrLh7mNNldxl0sp09zO40TE5Gv3tk2fKUJkR%2FD6XSYmqjjSQ1X8rpbrso174vGjaIUSzY97sO%2Fd37gH6ZpB7ew%2Fv3oEvinQIGLVJR0eRzLhiviACbbOMKLVbWbamWcEPt5JM%2BAi%2F9NdNl7YuEpr2x1Aba%2FQ7SrG7ebdm1DcE0lVqIqx0ztrFvl3nirCMo74N6ge1UFzEhWH44%2BFZEehSLzVwe3%2F%2FBZFO65bGyxbdcPGK84GPYyTmQ%2BjLOaldd7KqAdRhPjDfqVNtwC3oWvVdxRnK%2FoQIrzUgaia36mrU%2B9zb4%2FRhBIhVDxcpxUM1gkKjO26kCJizTpuEecHCYqUizMVCu%2BZHsHDBDtIkkSFfQ%2B2gv2sFyQKltKMSVLAEHz02kDaXPYdZgNpJpJb5mig7chRqoJheUFMk5FqS9E%2FlqeZ5JfW22b6sOCLD%2FEMKSDTLFHVl3btbPUCjyHfhmlMXnpBRHVIqKR1wYVgjD5A7%2FSBEWiHu7RrZzNRZghQJBq1L32qmueS8YHqpboqJLILIuPtnLxC99DFuXuovAM4duMqxEoPDhN0Mw3oyRiwY6pAEUCR%2BsNQPvZhxAQDP4H0mmjcS7kJOELluaCLhnFR0avdVxZaYB9x8Q%2B1vVVuMQVfHNSrjWJl4H%2Be5xJlQ6IIY3JmCIpBdpvoYal7a%2B64IuQyPvQqpHA3Ie7oP5I5O%2F9TxjNDzuk8S48F6Uu5xP3VWBG1thWt0Ez9VpERdwmSl9%2FKYIOOCQmgzrHUQhmsthA0Nah76KucMZDyOmhK8c6RFPBq%2BuQw%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=b79f5771af4002375c102804ee9d0ea7a1799fa7d7cd96f4b87b67717ebd940d"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6050843,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Yes, build-time don't seem to be an option.\n\nAs for run-time, one ugly solution is to delete `OPENSSL_CONF` from the local curl environment.\n\nOne other possible way is calling `OPENSSL_init_crypto(OPENSSL_INIT_NO_LOAD_CONFIG, NULL)`, where the first parameter may need further tweaks to avoid suppressing init important stuff.\n","automated_response":false,"created_at":"2019-10-16T08:07:23.600Z","updated_at":"2019-10-16T08:07:23.600Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6065178,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Yes, `OPENSSL_init_crypto` looks like the key to switch it off completely but I find the documentation a bit lacking on what to do with the flag option if you want everything else to be default and only disable the config loading...\n\nBut if we agree that this issue isn't a security issue to begin with, we can take the work on what function call to invoke and how as a regular pull-request and continue from there in the public instead and get more eyeballs and people involved.","automated_response":false,"created_at":"2019-10-17T14:16:18.218Z","updated_at":"2019-10-17T14:16:28.460Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/y9xzl5ayi7du4kz3l6pa6sff2ha5/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%22final-12-1000x1000.jpg%22%3B%20filename%2A%3DUTF-8%27%27final-12-1000x1000.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQQUWX32YR%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T151947Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJIMEYCIQDI60ST6nG4q4laTSFldIqSXi%2FaRkkQyutm5GwT0cJIZgIhAOZhMg3jBlju6Int%2BeeUm1aiBO7rhlrQcLIk%2Bgf6D%2BEDKoMECO%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAhoMMDEzNjE5Mjc0ODQ5IgwXNLBv9MILvVoorSoq1wOfX3WD6Q7XyleYeGc645Essao0xgUb9KvTqDMYcvHVGFjpYncM47xpmv3HMsu%2F5W1XrLh7mNNldxl0sp09zO40TE5Gv3tk2fKUJkR%2FD6XSYmqjjSQ1X8rpbrso174vGjaIUSzY97sO%2Fd37gH6ZpB7ew%2Fv3oEvinQIGLVJR0eRzLhiviACbbOMKLVbWbamWcEPt5JM%2BAi%2F9NdNl7YuEpr2x1Aba%2FQ7SrG7ebdm1DcE0lVqIqx0ztrFvl3nirCMo74N6ge1UFzEhWH44%2BFZEehSLzVwe3%2F%2FBZFO65bGyxbdcPGK84GPYyTmQ%2BjLOaldd7KqAdRhPjDfqVNtwC3oWvVdxRnK%2FoQIrzUgaia36mrU%2B9zb4%2FRhBIhVDxcpxUM1gkKjO26kCJizTpuEecHCYqUizMVCu%2BZHsHDBDtIkkSFfQ%2B2gv2sFyQKltKMSVLAEHz02kDaXPYdZgNpJpJb5mig7chRqoJheUFMk5FqS9E%2FlqeZ5JfW22b6sOCLD%2FEMKSDTLFHVl3btbPUCjyHfhmlMXnpBRHVIqKR1wYVgjD5A7%2FSBEWiHu7RrZzNRZghQJBq1L32qmueS8YHqpboqJLILIuPtnLxC99DFuXuovAM4duMqxEoPDhN0Mw3oyRiwY6pAEUCR%2BsNQPvZhxAQDP4H0mmjcS7kJOELluaCLhnFR0avdVxZaYB9x8Q%2B1vVVuMQVfHNSrjWJl4H%2Be5xJlQ6IIY3JmCIpBdpvoYal7a%2B64IuQyPvQqpHA3Ie7oP5I5O%2F9TxjNDzuk8S48F6Uu5xP3VWBG1thWt0Ez9VpERdwmSl9%2FKYIOOCQmgzrHUQhmsthA0Nah76KucMZDyOmhK8c6RFPBq%2BuQw%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=b79f5771af4002375c102804ee9d0ea7a1799fa7d7cd96f4b87b67717ebd940d"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6065889,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I can second your assessment. OpenSSL initialization is messy and it's under constant change. Agreeing on moving this to the public Issue/PR track.","automated_response":false,"created_at":"2019-10-17T15:27:41.683Z","updated_at":"2019-10-17T15:27:41.683Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6089211,"is_internal":false,"editable":false,"type":"Activities::BugInformative","message":"Considered not to be a security issue.","automated_response":false,"created_at":"2019-10-21T07:33:39.881Z","updated_at":"2019-10-21T07:33:39.881Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/y9xzl5ayi7du4kz3l6pa6sff2ha5/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%22final-12-1000x1000.jpg%22%3B%20filename%2A%3DUTF-8%27%27final-12-1000x1000.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQQUWX32YR%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T151947Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJIMEYCIQDI60ST6nG4q4laTSFldIqSXi%2FaRkkQyutm5GwT0cJIZgIhAOZhMg3jBlju6Int%2BeeUm1aiBO7rhlrQcLIk%2Bgf6D%2BEDKoMECO%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAhoMMDEzNjE5Mjc0ODQ5IgwXNLBv9MILvVoorSoq1wOfX3WD6Q7XyleYeGc645Essao0xgUb9KvTqDMYcvHVGFjpYncM47xpmv3HMsu%2F5W1XrLh7mNNldxl0sp09zO40TE5Gv3tk2fKUJkR%2FD6XSYmqjjSQ1X8rpbrso174vGjaIUSzY97sO%2Fd37gH6ZpB7ew%2Fv3oEvinQIGLVJR0eRzLhiviACbbOMKLVbWbamWcEPt5JM%2BAi%2F9NdNl7YuEpr2x1Aba%2FQ7SrG7ebdm1DcE0lVqIqx0ztrFvl3nirCMo74N6ge1UFzEhWH44%2BFZEehSLzVwe3%2F%2FBZFO65bGyxbdcPGK84GPYyTmQ%2BjLOaldd7KqAdRhPjDfqVNtwC3oWvVdxRnK%2FoQIrzUgaia36mrU%2B9zb4%2FRhBIhVDxcpxUM1gkKjO26kCJizTpuEecHCYqUizMVCu%2BZHsHDBDtIkkSFfQ%2B2gv2sFyQKltKMSVLAEHz02kDaXPYdZgNpJpJb5mig7chRqoJheUFMk5FqS9E%2FlqeZ5JfW22b6sOCLD%2FEMKSDTLFHVl3btbPUCjyHfhmlMXnpBRHVIqKR1wYVgjD5A7%2FSBEWiHu7RrZzNRZghQJBq1L32qmueS8YHqpboqJLILIuPtnLxC99DFuXuovAM4duMqxEoPDhN0Mw3oyRiwY6pAEUCR%2BsNQPvZhxAQDP4H0mmjcS7kJOELluaCLhnFR0avdVxZaYB9x8Q%2B1vVVuMQVfHNSrjWJl4H%2Be5xJlQ6IIY3JmCIpBdpvoYal7a%2B64IuQyPvQqpHA3Ie7oP5I5O%2F9TxjNDzuk8S48F6Uu5xP3VWBG1thWt0Ez9VpERdwmSl9%2FKYIOOCQmgzrHUQhmsthA0Nah76KucMZDyOmhK8c6RFPBq%2BuQw%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=b79f5771af4002375c102804ee9d0ea7a1799fa7d7cd96f4b87b67717ebd940d"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":10302518,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2021-01-08T08:21:13.126Z","updated_at":"2021-01-08T08:21:13.126Z","first_to_agree":true,"actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/y9xzl5ayi7du4kz3l6pa6sff2ha5/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%22final-12-1000x1000.jpg%22%3B%20filename%2A%3DUTF-8%27%27final-12-1000x1000.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQQUWX32YR%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T151947Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJIMEYCIQDI60ST6nG4q4laTSFldIqSXi%2FaRkkQyutm5GwT0cJIZgIhAOZhMg3jBlju6Int%2BeeUm1aiBO7rhlrQcLIk%2Bgf6D%2BEDKoMECO%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAhoMMDEzNjE5Mjc0ODQ5IgwXNLBv9MILvVoorSoq1wOfX3WD6Q7XyleYeGc645Essao0xgUb9KvTqDMYcvHVGFjpYncM47xpmv3HMsu%2F5W1XrLh7mNNldxl0sp09zO40TE5Gv3tk2fKUJkR%2FD6XSYmqjjSQ1X8rpbrso174vGjaIUSzY97sO%2Fd37gH6ZpB7ew%2Fv3oEvinQIGLVJR0eRzLhiviACbbOMKLVbWbamWcEPt5JM%2BAi%2F9NdNl7YuEpr2x1Aba%2FQ7SrG7ebdm1DcE0lVqIqx0ztrFvl3nirCMo74N6ge1UFzEhWH44%2BFZEehSLzVwe3%2F%2FBZFO65bGyxbdcPGK84GPYyTmQ%2BjLOaldd7KqAdRhPjDfqVNtwC3oWvVdxRnK%2FoQIrzUgaia36mrU%2B9zb4%2FRhBIhVDxcpxUM1gkKjO26kCJizTpuEecHCYqUizMVCu%2BZHsHDBDtIkkSFfQ%2B2gv2sFyQKltKMSVLAEHz02kDaXPYdZgNpJpJb5mig7chRqoJheUFMk5FqS9E%2FlqeZ5JfW22b6sOCLD%2FEMKSDTLFHVl3btbPUCjyHfhmlMXnpBRHVIqKR1wYVgjD5A7%2FSBEWiHu7RrZzNRZghQJBq1L32qmueS8YHqpboqJLILIuPtnLxC99DFuXuovAM4duMqxEoPDhN0Mw3oyRiwY6pAEUCR%2BsNQPvZhxAQDP4H0mmjcS7kJOELluaCLhnFR0avdVxZaYB9x8Q%2B1vVVuMQVfHNSrjWJl4H%2Be5xJlQ6IIY3JmCIpBdpvoYal7a%2B64IuQyPvQqpHA3Ie7oP5I5O%2F9TxjNDzuk8S48F6Uu5xP3VWBG1thWt0Ez9VpERdwmSl9%2FKYIOOCQmgzrHUQhmsthA0Nah76KucMZDyOmhK8c6RFPBq%2BuQw%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=b79f5771af4002375c102804ee9d0ea7a1799fa7d7cd96f4b87b67717ebd940d"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":10607039,"is_internal":false,"editable":false,"type":"Activities::ManuallyDisclosed","message":"","automated_response":false,"created_at":"2021-02-08T07:54:17.009Z","updated_at":"2021-02-08T07:54:17.009Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/y9xzl5ayi7du4kz3l6pa6sff2ha5/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%22final-12-1000x1000.jpg%22%3B%20filename%2A%3DUTF-8%27%27final-12-1000x1000.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQQUWX32YR%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T151947Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJIMEYCIQDI60ST6nG4q4laTSFldIqSXi%2FaRkkQyutm5GwT0cJIZgIhAOZhMg3jBlju6Int%2BeeUm1aiBO7rhlrQcLIk%2Bgf6D%2BEDKoMECO%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAhoMMDEzNjE5Mjc0ODQ5IgwXNLBv9MILvVoorSoq1wOfX3WD6Q7XyleYeGc645Essao0xgUb9KvTqDMYcvHVGFjpYncM47xpmv3HMsu%2F5W1XrLh7mNNldxl0sp09zO40TE5Gv3tk2fKUJkR%2FD6XSYmqjjSQ1X8rpbrso174vGjaIUSzY97sO%2Fd37gH6ZpB7ew%2Fv3oEvinQIGLVJR0eRzLhiviACbbOMKLVbWbamWcEPt5JM%2BAi%2F9NdNl7YuEpr2x1Aba%2FQ7SrG7ebdm1DcE0lVqIqx0ztrFvl3nirCMo74N6ge1UFzEhWH44%2BFZEehSLzVwe3%2F%2FBZFO65bGyxbdcPGK84GPYyTmQ%2BjLOaldd7KqAdRhPjDfqVNtwC3oWvVdxRnK%2FoQIrzUgaia36mrU%2B9zb4%2FRhBIhVDxcpxUM1gkKjO26kCJizTpuEecHCYqUizMVCu%2BZHsHDBDtIkkSFfQ%2B2gv2sFyQKltKMSVLAEHz02kDaXPYdZgNpJpJb5mig7chRqoJheUFMk5FqS9E%2FlqeZ5JfW22b6sOCLD%2FEMKSDTLFHVl3btbPUCjyHfhmlMXnpBRHVIqKR1wYVgjD5A7%2FSBEWiHu7RrZzNRZghQJBq1L32qmueS8YHqpboqJLILIuPtnLxC99DFuXuovAM4duMqxEoPDhN0Mw3oyRiwY6pAEUCR%2BsNQPvZhxAQDP4H0mmjcS7kJOELluaCLhnFR0avdVxZaYB9x8Q%2B1vVVuMQVfHNSrjWJl4H%2Be5xJlQ6IIY3JmCIpBdpvoYal7a%2B64IuQyPvQqpHA3Ie7oP5I5O%2F9TxjNDzuk8S48F6Uu5xP3VWBG1thWt0Ez9VpERdwmSl9%2FKYIOOCQmgzrHUQhmsthA0Nah76KucMZDyOmhK8c6RFPBq%2BuQw%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=b79f5771af4002375c102804ee9d0ea7a1799fa7d7cd96f4b87b67717ebd940d"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}