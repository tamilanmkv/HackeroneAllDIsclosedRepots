{"id":966347,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC85NjYzNDc=","url":"https://hackerone.com/reports/966347","title":"[bl] Uninitialized memory exposure via negative .consume()","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2020-08-24T22:04:17.485Z","submitted_at":"2020-08-24T22:04:17.543Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"chalker","url":"/chalker","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":23949,"url":"https://hackerone.com/nodejs-ecosystem","handle":"nodejs-ecosystem","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Node.js third-party modules","twitter_handle":"","website":"https://nodejs.org/en/security/","about":"This program is used to handle vulnerabilities in the Node.js ecosystem."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2020-8244"],"singular_disclosure_disabled":false,"disclosed_at":"2020-08-27T15:16:42.547Z","bug_reporter_agreed_on_going_public_at":"2020-08-27T15:16:42.487Z","team_member_agreed_on_going_public_at":"2020-08-27T14:52:32.871Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"# Module\n\n**module name:** bl\n**version:** 4.0.2\n**npm page:** `https://www.npmjs.com/package/bl`\n\n## Module Description\n\n\u003e A Node.js Buffer list collector, reader and streamer thingy.\n\n## Module Stats\n\n8 660 595 weekly downloads\n\n# Vulnerability\n\n## Vulnerability Description\n\nIf user input (even typed) ends up in `consume()` argument and can become negative,\nBufferList state can be corrupted, tricking it into exposing uninitialized memory via\nregular `.slice()` calls.\n\n## Steps To Reproduce:\n\n```\nconst { BufferList } = require('bl')\nconst secret = require('crypto').randomBytes(256)\nfor (let i = 0; i \u003c 1e6; i++) {\n  const clone = Buffer.from(secret)\n  const bl = new BufferList()\n  bl.append(Buffer.from('a'))\n  bl.consume(-1024)\n  const buf = bl.slice(1)\n  if (buf.indexOf(clone) !== -1) {\n    console.error(`Match (at ${i})`, buf)\n  }\n}\n```\n\n## Patch\n\n### First component (more important):\n\nIn `BufferList.prototype.copy`, before the last `return dst`:\n```js\n  if (dst.length !== bufoff) return dst.slice(0, bufoff)\n```\n\n### Second component:\n\nCheck `.consume()` argument to be a non-negative integer.\n\n## Supporting Material/References:\n\n- Node.js v14.8.0\n\n# Wrap up\n\n- I contacted the maintainer to let them know: Y\n- I opened an issue in the related repository: N\n\n## Impact\n\nIn case if the argument of `consume()` is attacker controlled:\n1. Expose uninitialized memory, containing source code, passwords, network traffic, etc.\n2. Cause invalid data in slices (low control)\n3. Cause DoS by allocating a large buffer this way (with a large negative number before a slice/toString call is performed).","vulnerability_information_html":"\u003ch1 id=\"module\"\u003eModule\u003c/h1\u003e\n\n\u003cp\u003e\u003cstrong\u003emodule name:\u003c/strong\u003e bl\u003cbr\u003e\n\u003cstrong\u003eversion:\u003c/strong\u003e 4.0.2\u003cbr\u003e\n\u003cstrong\u003enpm page:\u003c/strong\u003e \u003ccode\u003ehttps://www.npmjs.com/package/bl\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2 id=\"module-description\"\u003eModule Description\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eA Node.js Buffer list collector, reader and streamer thingy.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2 id=\"module-stats\"\u003eModule Stats\u003c/h2\u003e\n\n\u003cp\u003e8 660 595 weekly downloads\u003c/p\u003e\n\n\u003ch1 id=\"vulnerability\"\u003eVulnerability\u003c/h1\u003e\n\n\u003ch2 id=\"vulnerability-description\"\u003eVulnerability Description\u003c/h2\u003e\n\n\u003cp\u003eIf user input (even typed) ends up in \u003ccode\u003econsume()\u003c/code\u003e argument and can become negative,\u003cbr\u003e\nBufferList state can be corrupted, tricking it into exposing uninitialized memory via\u003cbr\u003e\nregular \u003ccode\u003e.slice()\u003c/code\u003e calls.\u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003econst { BufferList } = require(\u0026#39;bl\u0026#39;)\nconst secret = require(\u0026#39;crypto\u0026#39;).randomBytes(256)\nfor (let i = 0; i \u0026lt; 1e6; i++) {\n  const clone = Buffer.from(secret)\n  const bl = new BufferList()\n  bl.append(Buffer.from(\u0026#39;a\u0026#39;))\n  bl.consume(-1024)\n  const buf = bl.slice(1)\n  if (buf.indexOf(clone) !== -1) {\n    console.error(`Match (at ${i})`, buf)\n  }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"patch\"\u003ePatch\u003c/h2\u003e\n\n\u003ch3 id=\"first-component-more-important\"\u003eFirst component (more important):\u003c/h3\u003e\n\n\u003cp\u003eIn \u003ccode\u003eBufferList.prototype.copy\u003c/code\u003e, before the last \u003ccode\u003ereturn dst\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edst\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e!==\u003c/span\u003e \u003cspan class=\"nx\"\u003ebufoff\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003edst\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eslice\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ebufoff\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"second-component\"\u003eSecond component:\u003c/h3\u003e\n\n\u003cp\u003eCheck \u003ccode\u003e.consume()\u003c/code\u003e argument to be a non-negative integer.\u003c/p\u003e\n\n\u003ch2 id=\"supporting-material-references\"\u003eSupporting Material/References:\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eNode.js v14.8.0\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1 id=\"wrap-up\"\u003eWrap up\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003eI contacted the maintainer to let them know: Y\u003c/li\u003e\n\u003cli\u003eI opened an issue in the related repository: N\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eIn case if the argument of \u003ccode\u003econsume()\u003c/code\u003e is attacker controlled:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eExpose uninitialized memory, containing source code, passwords, network traffic, etc.\u003c/li\u003e\n\u003cli\u003eCause invalid data in slices (low control)\u003c/li\u003e\n\u003cli\u003eCause DoS by allocating a large buffer this way (with a large negative number before a slice/toString call is performed).\u003c/li\u003e\n\u003c/ol\u003e\n","weakness":{"id":9,"name":"Buffer Over-read"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2020-09-26T14:52:32.971Z","allow_singular_disclosure_after":-8094204.188425923,"singular_disclosure_allowed":true,"vote_count":1,"voters":["bl4de"],"severity":{"rating":"high","score":7.7,"author_type":"User","metrics":{"attack_vector":"network","attack_complexity":"high","privileges_required":"low","user_interaction":"none","scope":"changed","confidentiality":"high","integrity":"low","availability":"low"}},"structured_scope":{"databaseId":2986,"asset_type":"SOURCE_CODE","asset_identifier":"Other module","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":9028633,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"As a rule of thumb, when using `allocUnsafe()`, the number of bytes actually written should be rechecked and the resulting buffer should be shrinked to actually written size before being returned.","markdown_message":"\u003cp\u003eAs a rule of thumb, when using \u003ccode\u003eallocUnsafe()\u003c/code\u003e, the number of bytes actually written should be rechecked and the resulting buffer should be shrinked to actually written size before being returned.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-24T22:08:10.494Z","updated_at":"2020-08-24T22:08:10.494Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9035354,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@marcinhoppe I have publish rights on bl. I can prepare a patch and release. Do you mind if I claim this report?","markdown_message":"\u003cp\u003e\u003ca href=\"/marcinhoppe\"\u003e@marcinhoppe\u003c/a\u003e I have publish rights on bl. I can prepare a patch and release. Do you mind if I claim this report?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-25T14:43:16.460Z","updated_at":"2020-08-25T14:43:16.460Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9035370,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@mcollina I don't mind at all :). Feel free to grab it.","markdown_message":"\u003cp\u003e\u003ca href=\"/mcollina\"\u003e@mcollina\u003c/a\u003e I don\u0026#39;t mind at all :). Feel free to grab it.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-25T14:44:26.723Z","updated_at":"2020-08-25T14:44:26.723Z","actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9039989,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"This also seems to corrupt internal state:\n```js\nconst bl = new BufferList()\nbl.append(Buffer.from('abcd'))\nfor (let i = 0; i \u003c 100; i++) bl.consume(0.75)\nbl.consume(4)\nconsole.log(bl.length) // -75\n```\nDoesn't seem very significant, but it can be fixed by the same improvements in consume().","markdown_message":"\u003cp\u003eThis also seems to corrupt internal state:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ebl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nx\"\u003eBufferList\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"nx\"\u003ebl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eBuffer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"k\"\u003efrom\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eabcd\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nx\"\u003ebl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003econsume\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mf\"\u003e0.75\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nx\"\u003ebl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003econsume\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ebl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// -75\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eDoesn\u0026#39;t seem very significant, but it can be fixed by the same improvements in consume().\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-26T01:23:02.325Z","updated_at":"2020-08-26T01:23:15.914Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9040032,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Here is a complete patch: https://gist.github.com/ChALkeR/8bcf5cc9faf907ac8e54d67a5bc45296","markdown_message":"\u003cp\u003eHere is a complete patch: \u003ca title=\"https://gist.github.com/ChALkeR/8bcf5cc9faf907ac8e54d67a5bc45296\" href=\"/redirect?url=https%3A%2F%2Fgist.github.com%2FChALkeR%2F8bcf5cc9faf907ac8e54d67a5bc45296\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://gist.github.com/ChALkeR/8bcf5cc9faf907ac8e54d67a5bc45296\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-26T01:37:13.860Z","updated_at":"2020-08-26T01:37:13.860Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9042276,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"bl@4.0.3\nbl@3.0.1\nbl@2.2.1\n\nhave been released with the fix.","markdown_message":"\u003cp\u003e\u003ca title=\"bl@4.0.3\" href=\"mailto:bl@4.0.3\" rel=\"nofollow noopener noreferrer\"\u003ebl@4.0.3\u003c/a\u003e\u003cbr\u003e\n\u003ca title=\"bl@3.0.1\" href=\"mailto:bl@3.0.1\" rel=\"nofollow noopener noreferrer\"\u003ebl@3.0.1\u003c/a\u003e\u003cbr\u003e\n\u003ca title=\"bl@2.2.1\" href=\"mailto:bl@2.2.1\" rel=\"nofollow noopener noreferrer\"\u003ebl@2.2.1\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003ehave been released with the fix.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-26T08:28:23.146Z","updated_at":"2020-08-26T08:28:23.146Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9055485,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I can confirm that those contain the fix.\n\nCan we triage/disclose now?","markdown_message":"\u003cp\u003eI can confirm that those contain the fix.\u003c/p\u003e\n\n\u003cp\u003eCan we triage/disclose now?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-27T14:04:18.105Z","updated_at":"2020-08-27T14:04:18.105Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9056169,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"","markdown_message":"","automated_response":false,"created_at":"2020-08-27T14:49:36.591Z","updated_at":"2020-08-27T14:49:36.591Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9056174,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2020-08-27T14:49:55.013Z","updated_at":"2020-08-27T14:49:55.013Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9056178,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2020-08-27T14:50:10.826Z","updated_at":"2020-08-27T14:50:10.826Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"chalker","url":"/chalker"},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9056200,"is_internal":false,"editable":false,"type":"Activities::CveIdAdded","message":"","markdown_message":"","automated_response":false,"created_at":"2020-08-27T14:52:18.454Z","updated_at":"2020-08-27T14:52:18.454Z","cve_ids":["CVE-2020-8244"],"actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9056203,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-08-27T14:52:32.894Z","updated_at":"2020-08-27T14:52:32.894Z","first_to_agree":true,"actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9056559,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-08-27T15:16:42.511Z","updated_at":"2020-08-27T15:16:42.511Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9056560,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-08-27T15:16:42.619Z","updated_at":"2020-08-27T15:16:42.619Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}