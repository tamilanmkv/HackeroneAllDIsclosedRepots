{"id":308158,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zMDgxNTg=","url":"https://hackerone.com/reports/308158","title":"[html-janitor] Bypassing sanitization using DOM clobbering","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2018-01-23T12:47:54.192Z","submitted_at":"2018-01-23T12:47:54.192Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"bayotop","url":"/bayotop","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/036/633/10a34b6ba8511f5ae6c9664bafcd04aeb25982f8_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":23949,"url":"https://hackerone.com/nodejs-ecosystem","handle":"nodejs-ecosystem","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Node.js third-party modules","twitter_handle":"","website":"https://nodejs.org/en/security/","about":"This program is used to handle vulnerabilities in the Node.js ecosystem."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2017-0928"],"singular_disclosure_disabled":false,"disclosed_at":"2018-02-05T17:54:24.558Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2018-02-05T17:53:55.433Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"**Module:**\n\nName: [html-janitor](https://www.npmjs.com/package/html-janitor)\nVersion: 2.0.2\n\n**Summary:**\n\nArbitrary HTML can pass the sanitization process, which can be unexpected and dangerous (XSS) in case user-controlled input is passed to the clean function.\n\n**Description:**\n\nProof of concept:\n\n```javascript\nvar myJanitor = new HTMLJanitor({tags:{p:{}}});\nvar cleanHtml = myJanitor.clean(\"\u003cform\u003e\u003cobject onmouseover=alert(document.domain) name=_sanitized\u003e\u003c/object\u003e\u003c/form\u003e\")\nconsole.log(cleanHtml) // logs: \u003cform\u003e\u003cobject onmouseover=alert(document.domain) name=_sanitized\u003e\u003c/object\u003e\u003c/form\u003e\n```\nThe following check can be leveraged to bypass the whole sanitization process:\n\n```javascript\ndo {\n  // Ignore nodes that have already been sanitized\n  if (node._sanitized) {\n      continue;\n  }\n...\n```\n\nAs `node` is the first child in the created tree walker (i.e. in this case the `\u003cform\u003e` tag) `node._sanitized` will point to the inner `\u003cobject\u003e` and the check passes.\n\nTo learn more about DOM clobbering see: https://www.youtube.com/watch?v=5W-zGBKvLxk (by Mario Heiderich)\n\n**Recommendation:**\n\nIt should be enough to set `node._sanitized` to `false` every time a new node is being processed. \n\n*Note that I previously reported this issue at https://github.com/guardian/html-janitor/issues/35*\n\n## Impact\n\nGiven the module's description I would assume it should be used to prevent XSS vulnerabilities. This is currently a very dangerous assumption given that the whole sanitization process can be bypassed.\n\nNote that the author might have never intended to feed untrusted data into the clean() function. In that case this is *just* a regular issue. Furthermore, the fact that untrusted data is unexpected should be at least mentioned in the documentation, because other developers most certainly will use the package in such scenarios.","vulnerability_information_html":"\u003cp\u003e\u003cstrong\u003eModule:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eName: \u003ca href=\"/redirect?url=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2Fhtml-janitor\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehtml-janitor\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\nVersion: 2.0.2\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eSummary:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eArbitrary HTML can pass the sanitization process, which can be unexpected and dangerous (XSS) in case user-controlled input is passed to the clean function.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eDescription:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eProof of concept:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003emyJanitor\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nx\"\u003eHTMLJanitor\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\u003cspan class=\"na\"\u003etags\u003c/span\u003e\u003cspan class=\"p\"\u003e:{\u003c/span\u003e\u003cspan class=\"na\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e:{}}});\u003c/span\u003e\n\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ecleanHtml\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003emyJanitor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eclean\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026lt;form\u0026gt;\u0026lt;object onmouseover=alert(document.domain) name=_sanitized\u0026gt;\u0026lt;/object\u0026gt;\u0026lt;/form\u0026gt;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecleanHtml\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// logs: \u0026lt;form\u0026gt;\u0026lt;object onmouseover=alert(document.domain) name=_sanitized\u0026gt;\u0026lt;/object\u0026gt;\u0026lt;/form\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe following check can be leveraged to bypass the whole sanitization process:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// Ignore nodes that have already been sanitized\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003e_sanitized\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"k\"\u003econtinue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e...\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAs \u003ccode\u003enode\u003c/code\u003e is the first child in the created tree walker (i.e. in this case the \u003ccode\u003e\u0026lt;form\u0026gt;\u003c/code\u003e tag) \u003ccode\u003enode._sanitized\u003c/code\u003e will point to the inner \u003ccode\u003e\u0026lt;object\u0026gt;\u003c/code\u003e and the check passes.\u003c/p\u003e\n\n\u003cp\u003eTo learn more about DOM clobbering see: \u003ca title=\"https://www.youtube.com/watch?v=5W-zGBKvLxk\" href=\"/redirect?url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3D5W-zGBKvLxk\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.youtube.com/watch?v=5W-zGBKvLxk\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e (by Mario Heiderich)\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eRecommendation:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eIt should be enough to set \u003ccode\u003enode._sanitized\u003c/code\u003e to \u003ccode\u003efalse\u003c/code\u003e every time a new node is being processed. \u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eNote that I previously reported this issue at \u003ca title=\"https://github.com/guardian/html-janitor/issues/35\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fguardian%2Fhtml-janitor%2Fissues%2F35\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/guardian/html-janitor/issues/35\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eGiven the module\u0026#39;s description I would assume it should be used to prevent XSS vulnerabilities. This is currently a very dangerous assumption given that the whole sanitization process can be bypassed.\u003c/p\u003e\n\n\u003cp\u003eNote that the author might have never intended to feed untrusted data into the clean() function. In that case this is \u003cem\u003ejust\u003c/em\u003e a regular issue. Furthermore, the fact that untrusted data is unexpected should be at least mentioned in the documentation, because other developers most certainly will use the package in such scenarios.\u003c/p\u003e\n","weakness":{"id":65,"name":"Business Logic Errors"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2018-03-07T17:53:55.516Z","allow_singular_disclosure_after":-88774621.62882805,"singular_disclosure_allowed":true,"vote_count":9,"voters":["sourc7","bl4de","eveeez","whitesector","ranjit_p","cr4xerbik4sh","japz","newatia123","sts"],"severity":{"rating":"high","score":8.8,"author_type":"Team","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"low","user_interaction":"none","scope":"unchanged","confidentiality":"high","integrity":"high","availability":"none"}},"structured_scope":{"databaseId":5495,"asset_type":"SOURCE_CODE","asset_identifier":"html-janitor","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":2309945,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi Martin,\n\nThanks for reporting this.\nI will follow-up on your input about the vulnerability to confirm it and we'll take it from there.","markdown_message":"\u003cp\u003eHi Martin,\u003c/p\u003e\n\n\u003cp\u003eThanks for reporting this.\u003cbr\u003e\nI will follow-up on your input about the vulnerability to confirm it and we\u0026#39;ll take it from there.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-01-23T13:33:25.431Z","updated_at":"2018-01-23T13:33:25.431Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2309964,"is_internal":false,"editable":false,"type":"Activities::ChangedScope","message":"","markdown_message":"","automated_response":false,"created_at":"2018-01-23T13:41:44.588Z","updated_at":"2018-01-23T13:41:44.588Z","actor":{"username":"vdeturckheim","cleared":false,"url":"/vdeturckheim","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/161/010/6f383ac0f9296c13b5ac0d38741f0685dbace58c_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"old_scope":"Other module","new_scope":"html-janitor","genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2310672,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I looked into it and definitely agree Martin. That poc is indeed valid, and agree with your comment regarding putting some disclaimer even if the author never intended for untrusted input to go in. \n\nI invited Oliver here, who worked on the repo, and hopefully he will be able to help out.\nWill also try to reach out to people at The Guardian organization just-incase.","markdown_message":"\u003cp\u003eI looked into it and definitely agree Martin. That poc is indeed valid, and agree with your comment regarding putting some disclaimer even if the author never intended for untrusted input to go in. \u003c/p\u003e\n\n\u003cp\u003eI invited Oliver here, who worked on the repo, and hopefully he will be able to help out.\u003cbr\u003e\nWill also try to reach out to people at The Guardian organization just-incase.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-01-23T17:15:30.647Z","updated_at":"2018-01-23T17:15:30.647Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2310680,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2018-01-23T17:20:17.405Z","updated_at":"2018-01-23T17:20:17.405Z","additional_data":{"old_severity":"High","new_severity":"High (8.8)","old_severity_id":111189,"new_severity_id":111297},"actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2310714,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2018-01-23T17:30:25.235Z","updated_at":"2018-01-23T17:30:25.235Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2318038,"is_internal":false,"editable":false,"type":"Activities::CveIdAdded","message":"","markdown_message":"","automated_response":false,"created_at":"2018-01-25T20:11:54.681Z","updated_at":"2018-01-25T20:11:54.681Z","cve_ids":["CVE-2017-0928"],"actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2336599,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"We didn't receive any feedback for a week now on this report, and also the security issue was already reported publicly in the git repository for several months now without attention.\n\nIf by weekend we won't get any response on the report I'll go ahead with a public disclosure of both security issues reported around this package.","markdown_message":"\u003cp\u003eWe didn\u0026#39;t receive any feedback for a week now on this report, and also the security issue was already reported publicly in the git repository for several months now without attention.\u003c/p\u003e\n\n\u003cp\u003eIf by weekend we won\u0026#39;t get any response on the report I\u0026#39;ll go ahead with a public disclosure of both security issues reported around this package.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-01-30T23:12:20.039Z","updated_at":"2018-01-30T23:12:20.039Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2337156,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Sounds good. ","markdown_message":"\u003cp\u003eSounds good. \u003c/p\u003e\n","automated_response":false,"created_at":"2018-01-31T06:23:43.309Z","updated_at":"2018-01-31T06:23:43.309Z","actor":{"username":"bayotop","cleared":false,"url":"/bayotop","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/036/633/10a34b6ba8511f5ae6c9664bafcd04aeb25982f8_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2340393,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2018-01-31T22:06:12.530Z","updated_at":"2018-01-31T22:06:12.530Z","additional_data":{"old_severity":"High (8.8)","new_severity":"High (8.8)","old_severity_id":111297,"new_severity_id":114166},"actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2352942,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2018-02-05T17:53:42.231Z","updated_at":"2018-02-05T17:53:42.231Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"bayotop","url":"/bayotop"},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2352943,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2018-02-05T17:53:55.465Z","updated_at":"2018-02-05T17:53:55.465Z","first_to_agree":true,"actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2352948,"is_internal":false,"editable":false,"type":"Activities::ManuallyDisclosed","message":"","markdown_message":"","automated_response":false,"created_at":"2018-02-05T17:54:24.350Z","updated_at":"2018-02-05T17:54:24.350Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}