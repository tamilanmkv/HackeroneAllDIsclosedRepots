{"id":1051192,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMDUxMTky","url":"https://hackerone.com/reports/1051192","title":"Code Injection via Insecure Yaml.load","state":"Closed","substate":"resolved","severity_rating":"low","readable_substate":"Resolved","created_at":"2020-12-05T14:20:39.616Z","submitted_at":"2020-12-05T14:20:39.660Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"r44mb00","url":"/r44mb00","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":39386,"url":"https://hackerone.com/kubernetes","handle":"kubernetes","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"Kubernetes","twitter_handle":"kubernetesio","website":"https://kubernetes.io/","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2021-05-01T18:00:28.868Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2021-04-01T18:00:26.507Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Report Submission Form\n\n## Summary:\nThe Kubernetes repo and tool, [test-infra](https://github.com/kubernetes/test-infra), uses the insecure yaml.load() function to set or update the `Gubernator` configuration with a yaml file which allows for code injection.\nVulnerable Line of Code:\n[https://github.com/kubernetes/test-infra/blob/master/gubernator/main.py#L36](https://github.com/kubernetes/test-infra/blob/master/gubernator/main.py#L36)\n[https://github.com/kubernetes/test-infra/blob/master/gubernator/update_config.py#L35](https://github.com/kubernetes/test-infra/blob/master/gubernator/update_config.py#L35)\n[https://github.com/kubernetes/test-infra/blob/master/gubernator/update_config.py#L48](https://github.com/kubernetes/test-infra/blob/master/gubernator/update_config.py#L48)  \nVulnerable Files and functions: main.py:get_app_config()\n                                                                         update_config.py:main()\n\n## Kubernetes Version:\nLatest version: Master branch on Github\n\n## Component Version:\nLatest version: Master branch on Github\n\n## Steps To Reproduce:\n\n  1. Install the `Gubernator` frontend.\n  2. save the provided `config.yaml` file as the configuration file for Guberator, keep the same name.\n  3. Once you update the configuration the poc should be executed and a `ls` should be executed. \n\nTo Facilitate the process I have created a poc.py script in which I extracted the vulnerable code blocks from the test-infra repository to simulate the tools behaviour (Only from the main.py to illustrate the concept, same applies to the other occurence). \n### Steps to run the PoC:\n   1. Save the `poc.py` script. \n   2. Save the `config.yaml` file in the same folder as the script. \n   3. Run the script using `python3 poc.py`. \n   4. The command `ls` should be executed. Note that any other command can be executed. \n\n### Important Exploit Conditions:\nThe extent of the exploitability of this vulnerability is limited by the version of PyYaml that the victim has installed.\nFor versions of PyYaml =\u003e 5.1 the only way to achieve command execution is to have `Gubernator` running embedded in a component that previously imports the subprocess module. For example Flask.\nFor versions of PyYaml \u003c 5.1 the vulnerability is always exploitable and command execution can always be achieved.\nNote that the former is always the case for the `test-infra/Gubernator` repo given that the requirements set `PyYAML \u003e 5.1`. For this reason I have checked the `Attack Complexity` of the CVSS score as high. Exploitability is difficult but still possible in the worst case scenario. \n\nSolution:\nAs a possible solution I suggest changing the vulnerable and deprecated function for its secure equivalent, `safe_load()`.\n\n## Supporting Material/References:\nDetails on the vulnerability and how to exploit in general can be found in this great [article](https://www.exploit-db.com/docs/english/47655-yaml-deserialization-attack-in-python.pdf)\n  * `poc.py`: Python3 script with the proof of concept. \n  * `config.yaml`: Payload file for the PoC.\n  * `evidence.png`: Screenshot of the script ran on my local machine.\n\n## Impact\n\nAn attacker can exploit this vulnerability by crafting a malicious YAML file in order to execute system commands. An attacker can either find a way to load a malicious configuration file or entice a victim into loading it. This results in Command Execution.\nFor this reason I have marked the `User Interaction` of the CVSS score as required.","bounty_amount":"250.0","formatted_bounty":"$250","weakness":{"id":70,"name":"Code Injection"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":1105115,"file_name":"evidence.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/1kwu32z5h89cwitgs22pdw5wv267?response-content-disposition=attachment%3B%20filename%3D%22evidence.png%22%3B%20filename%2A%3DUTF-8%27%27evidence.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ4NIHB2M2%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T131942Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJGMEQCIE3FUcgRK7FM%2F7U9PAkh6%2BI7wZViD1MP1Y8qZWLRN1eUAiAgc4SQu0yGJV%2BOQRn82JsTD2%2Bd2fHZQycxL60pz%2B7CjyqDBAjt%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIMkR9JAvrXeOfq9Rc6KtcDp5bGOpV6FTgydp%2FZOb6Bh6HFPtwnCVZfa015OiSuBfCxPwur%2F7aSPKTNE0sy0w9C45qL0zZ1nOQQos0M24uDH67J2wRZXM50ImEA29W1ENYnCggW3Oj1ThbKF4WgRsg%2F9mjcm%2BZmkVxvLoYJ9V%2BPAToGVUPNdCuARshEYKICR0Xo5x6JoDNaCt8Ld9eGqOBMXV3rned7uAPh8EmsbYJGE3kgeYkoAT36Qaqe4UgPgyO9VFwa9aDWRX%2B50CKWSjbjZzr%2BF%2B9jH4MB%2FxFZ4EWRHEor6ZAw08vWfwqAZLqqZdMNm9vuS82Y9DrOKW2mwiXSVAN3ddQvsOMXsKnTXkUhnfuaQmZvTtYFFm%2BIF8eMq92q4rbYHzak7PfNtWyYQ5raA9JIgznaWFJzJX%2BJlzu%2Bu3r2q3jjPLUM80AxozLcRqWVvYBpiIJlFx45cKPkX%2F2%2BeKoncWc%2B6ePWFPme30ZUDKqp6naa4cEDN31MhQC6Orokr1YD%2FJvOnl4SUarbB1%2BVgfPNBbXbzGIn%2BQ51fempHBLdSWygAxQb8EgPDJYVXZxvBJySlPreu1xMH98Dq97W1%2FcRuSdU1ytWMJPT5MEKol3iFlX9S3vBhB4zpCiL0Qjhs8rBVdayMKLXkIsGOqYB2%2BJTBbMxNO8iefRZNNANeiPRoGrUFs7jVSy6MeL55bB1oEjsBrS1ldm2HFxpIsKxeGY%2Fw5R4r6d07DNpzBAlMx0mvj%2FrMVfwHZDUaLkkIW7L5kfZJyauAUQfU1Yr9%2Flzl1bTl9jiK08pDtPhZS7%2FjLscylmOg0jy%2BlazgeqN9hRW54AGkI6XkZty9qqJMe%2BYbSVGEfkYqEbJxp7dv5pFW%2Ftu9oswsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=4a854e00eb49bdcd13a015c27bcdc3ba84147bd46a598d389dbdc1e115569618","file_size":33455,"type":"image/png"},{"id":1105116,"file_name":"config.yaml","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/54a654jak48c383s3bmdmdvtpzba?response-content-disposition=attachment%3B%20filename%3D%22config.yaml%22%3B%20filename%2A%3DUTF-8%27%27config.yaml\u0026response-content-type=application%2Fx-yaml\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ4NIHB2M2%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T131942Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJGMEQCIE3FUcgRK7FM%2F7U9PAkh6%2BI7wZViD1MP1Y8qZWLRN1eUAiAgc4SQu0yGJV%2BOQRn82JsTD2%2Bd2fHZQycxL60pz%2B7CjyqDBAjt%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIMkR9JAvrXeOfq9Rc6KtcDp5bGOpV6FTgydp%2FZOb6Bh6HFPtwnCVZfa015OiSuBfCxPwur%2F7aSPKTNE0sy0w9C45qL0zZ1nOQQos0M24uDH67J2wRZXM50ImEA29W1ENYnCggW3Oj1ThbKF4WgRsg%2F9mjcm%2BZmkVxvLoYJ9V%2BPAToGVUPNdCuARshEYKICR0Xo5x6JoDNaCt8Ld9eGqOBMXV3rned7uAPh8EmsbYJGE3kgeYkoAT36Qaqe4UgPgyO9VFwa9aDWRX%2B50CKWSjbjZzr%2BF%2B9jH4MB%2FxFZ4EWRHEor6ZAw08vWfwqAZLqqZdMNm9vuS82Y9DrOKW2mwiXSVAN3ddQvsOMXsKnTXkUhnfuaQmZvTtYFFm%2BIF8eMq92q4rbYHzak7PfNtWyYQ5raA9JIgznaWFJzJX%2BJlzu%2Bu3r2q3jjPLUM80AxozLcRqWVvYBpiIJlFx45cKPkX%2F2%2BeKoncWc%2B6ePWFPme30ZUDKqp6naa4cEDN31MhQC6Orokr1YD%2FJvOnl4SUarbB1%2BVgfPNBbXbzGIn%2BQ51fempHBLdSWygAxQb8EgPDJYVXZxvBJySlPreu1xMH98Dq97W1%2FcRuSdU1ytWMJPT5MEKol3iFlX9S3vBhB4zpCiL0Qjhs8rBVdayMKLXkIsGOqYB2%2BJTBbMxNO8iefRZNNANeiPRoGrUFs7jVSy6MeL55bB1oEjsBrS1ldm2HFxpIsKxeGY%2Fw5R4r6d07DNpzBAlMx0mvj%2FrMVfwHZDUaLkkIW7L5kfZJyauAUQfU1Yr9%2Flzl1bTl9jiK08pDtPhZS7%2FjLscylmOg0jy%2BlazgeqN9hRW54AGkI6XkZty9qqJMe%2BYbSVGEfkYqEbJxp7dv5pFW%2Ftu9oswsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=7f68e1e8b9df414d970b7c5578cb6f9a43a95b7fc73a2bb6012211294f0ed0de","file_size":43,"type":"application/x-yaml"},{"id":1105117,"file_name":"poc.py","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/2m983d5zhf02aov46h80hl9hoqo7?response-content-disposition=attachment%3B%20filename%3D%22poc.py%22%3B%20filename%2A%3DUTF-8%27%27poc.py\u0026response-content-type=text%2Fx-python-script\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ4NIHB2M2%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T131942Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJGMEQCIE3FUcgRK7FM%2F7U9PAkh6%2BI7wZViD1MP1Y8qZWLRN1eUAiAgc4SQu0yGJV%2BOQRn82JsTD2%2Bd2fHZQycxL60pz%2B7CjyqDBAjt%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIMkR9JAvrXeOfq9Rc6KtcDp5bGOpV6FTgydp%2FZOb6Bh6HFPtwnCVZfa015OiSuBfCxPwur%2F7aSPKTNE0sy0w9C45qL0zZ1nOQQos0M24uDH67J2wRZXM50ImEA29W1ENYnCggW3Oj1ThbKF4WgRsg%2F9mjcm%2BZmkVxvLoYJ9V%2BPAToGVUPNdCuARshEYKICR0Xo5x6JoDNaCt8Ld9eGqOBMXV3rned7uAPh8EmsbYJGE3kgeYkoAT36Qaqe4UgPgyO9VFwa9aDWRX%2B50CKWSjbjZzr%2BF%2B9jH4MB%2FxFZ4EWRHEor6ZAw08vWfwqAZLqqZdMNm9vuS82Y9DrOKW2mwiXSVAN3ddQvsOMXsKnTXkUhnfuaQmZvTtYFFm%2BIF8eMq92q4rbYHzak7PfNtWyYQ5raA9JIgznaWFJzJX%2BJlzu%2Bu3r2q3jjPLUM80AxozLcRqWVvYBpiIJlFx45cKPkX%2F2%2BeKoncWc%2B6ePWFPme30ZUDKqp6naa4cEDN31MhQC6Orokr1YD%2FJvOnl4SUarbB1%2BVgfPNBbXbzGIn%2BQ51fempHBLdSWygAxQb8EgPDJYVXZxvBJySlPreu1xMH98Dq97W1%2FcRuSdU1ytWMJPT5MEKol3iFlX9S3vBhB4zpCiL0Qjhs8rBVdayMKLXkIsGOqYB2%2BJTBbMxNO8iefRZNNANeiPRoGrUFs7jVSy6MeL55bB1oEjsBrS1ldm2HFxpIsKxeGY%2Fw5R4r6d07DNpzBAlMx0mvj%2FrMVfwHZDUaLkkIW7L5kfZJyauAUQfU1Yr9%2Flzl1bTl9jiK08pDtPhZS7%2FjLscylmOg0jy%2BlazgeqN9hRW54AGkI6XkZty9qqJMe%2BYbSVGEfkYqEbJxp7dv5pFW%2Ftu9oswsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=6751e5913759ba6ff34627b926a2d8c2e80e1d28a78bbb4de584af8ceba9da34","file_size":461,"type":"text/x-python-script"}],"allow_singular_disclosure_at":"2021-05-01T18:00:26.611Z","allow_singular_disclosure_after":-14066356.2614739,"singular_disclosure_allowed":true,"vote_count":16,"voters":["drsniper","ali","sudi","0nlymohammed","khizer47","h4x0r_dz","akashhamal0x01","cryptographer","dneha","meispi","and 6 more..."],"severity":{"rating":"low","author_type":"Team"},"structured_scope":{"databaseId":32522,"asset_type":"SOURCE_CODE","asset_identifier":"https://github.com/kubernetes/test-infra","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":10024045,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @r44mb00,\n\nThank you for your submission. Your report is currently being reviewed and the HackerOne triage team will get back to you once there is additional information to share.\n\nKind regards,\n@beagle","automated_response":false,"created_at":"2020-12-07T12:19:59.396Z","updated_at":"2020-12-07T12:19:59.396Z","actor":{"username":"beagle","cleared":false,"url":"/beagle","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/458/833/024b7a83a4a54282cbcdf96b9b10a93700cf8743_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":10025437,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"#","automated_response":false,"created_at":"2020-12-07T13:18:09.031Z","updated_at":"2020-12-07T13:32:29.917Z","actor":{"username":"princeofpersia","cleared":false,"url":"/princeofpersia","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/663/153/2664a34113403db9945207030f723e4f93a511b0_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":10025560,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"","automated_response":false,"created_at":"2020-12-07T13:32:41.549Z","updated_at":"2020-12-07T13:32:41.549Z","actor":{"username":"princeofpersia","cleared":false,"url":"/princeofpersia","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/663/153/2664a34113403db9945207030f723e4f93a511b0_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":10031803,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Hi @r44mb00,\n\nCan you please provide details on what the `poc.py` script does and describe how this would be exploited in a real-world attack scenario? \n\nKind regards,\n@tuxedo","automated_response":false,"created_at":"2020-12-07T20:15:59.934Z","updated_at":"2020-12-07T20:15:59.934Z","actor":{"username":"tuxedo","cleared":false,"url":"/tuxedo","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/9G6pgB95of3ikt3prqQunAfD/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":true,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":10033462,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"Hi @tuxedo, \n\nOfcourse, the `poc.py` file is the replica of the vulnerable function in the repo. I copy pasted the `get_app_config` function, which is the vulnerable function from the `main.py` file. \nThis poc script needs to be executed with the provided payload file, `config.yaml`.\nSo what the `poc.py` script does is demonstrate the exploitability of the vulnerability by running the vulnerable code with an example payload. The `evidence.png` file is a screenshot of that script ran in my local machine. \n\nThe vulnerability it self is using the function, `yaml.load()` with out a secure loader. This function is actually deprecated and can be substituted by it secure equivalent, `yaml.safe_load()`. \n\n\"Gubernator is a frontend for displaying Kubernetes test results\".  Real world attack scenarios would be an attacker targeting a victim that runs the `Gubernator` frontend to view their Kubernetes test results and managing to store or entice the victim into storing the malicious `config.yaml` file. This would result in code execution. \nPlease note that as I mentioned in the initial report, exploitability in this particular case is difficult, however the vulnerability exists. Severity could be lowered. \n\n","automated_response":false,"created_at":"2020-12-07T23:29:11.423Z","updated_at":"2020-12-07T23:29:11.423Z","actor":{"username":"r44mb00","cleared":false,"url":"/r44mb00","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10057914,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi Tuxedo,\nHere is some extra info on the vulnerable code flow. \n\nThe Gubernator tool runs the `main.py` script, this script calls the `get_app_config()` function which uses the insecure `yaml.load` to read the `config.yaml` file. \nAlso, as the README states in the `Development` section, to test and lint you must run `./test-gubernator.sh` which when we look at the code we notice it runs the `./verify_config.sh` at the very bottom as its last instruction. This script in turn executes the `update_config.py` script which is the vulnerable file, and uses the insecure `yaml.load` to load the config. \nIn every scenario the attacker would have to find a way to make the victim run the tool with their malicious payload file, `config.yaml`. \n\nRegards, \nR44MB00","automated_response":false,"created_at":"2020-12-10T01:33:04.018Z","updated_at":"2020-12-10T01:33:04.018Z","actor":{"username":"r44mb00","cleared":false,"url":"/r44mb00","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10062964,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thank you @r44mb00! I was able to validate your report, and have submitted it to the appropriate remediation team for review. You will be updated on the status of this report as soon as there is additional information to share. Please note that the status and severity are subject to change.","automated_response":false,"created_at":"2020-12-10T14:17:03.490Z","updated_at":"2020-12-10T14:17:03.490Z","actor":{"username":"tuxedo","cleared":false,"url":"/tuxedo","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/9G6pgB95of3ikt3prqQunAfD/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":true,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":10089851,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi Tuxedo,\nI've been doing some reading on this vulnerability and found a way to reliably exploit this even with the latest version of PYYAML without the need of importing anything different. \nThis actually has a CVE assigned, CVE-2020-14343. And a great write up [https://hackmd.io/@harrier/uiuctf20](https://hackmd.io/@harrier/uiuctf20).  \n\nHere is a new payload yaml file which will trigger the vulnerability with the latest version of pyyaml, 5.3.1.\nI've also attached a short video of the exploit running on my machine. \n\nPlease note this makes the vulnerability completely exploitable always and the important exploit conditions initially mentioned no longer apply at all. ","automated_response":false,"created_at":"2020-12-13T15:58:27.988Z","updated_at":"2020-12-13T15:58:27.988Z","actor":{"username":"r44mb00","cleared":false,"url":"/r44mb00","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":1114884,"filename":"video-poc.mov","type":"video/quicktime","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/tl9rxz54g0635y6oqmgw21efq1oa?response-content-disposition=attachment%3B%20filename%3D%22video-poc.mov%22%3B%20filename%2A%3DUTF-8%27%27video-poc.mov\u0026response-content-type=video%2Fquicktime\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ4NIHB2M2%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T131942Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJGMEQCIE3FUcgRK7FM%2F7U9PAkh6%2BI7wZViD1MP1Y8qZWLRN1eUAiAgc4SQu0yGJV%2BOQRn82JsTD2%2Bd2fHZQycxL60pz%2B7CjyqDBAjt%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIMkR9JAvrXeOfq9Rc6KtcDp5bGOpV6FTgydp%2FZOb6Bh6HFPtwnCVZfa015OiSuBfCxPwur%2F7aSPKTNE0sy0w9C45qL0zZ1nOQQos0M24uDH67J2wRZXM50ImEA29W1ENYnCggW3Oj1ThbKF4WgRsg%2F9mjcm%2BZmkVxvLoYJ9V%2BPAToGVUPNdCuARshEYKICR0Xo5x6JoDNaCt8Ld9eGqOBMXV3rned7uAPh8EmsbYJGE3kgeYkoAT36Qaqe4UgPgyO9VFwa9aDWRX%2B50CKWSjbjZzr%2BF%2B9jH4MB%2FxFZ4EWRHEor6ZAw08vWfwqAZLqqZdMNm9vuS82Y9DrOKW2mwiXSVAN3ddQvsOMXsKnTXkUhnfuaQmZvTtYFFm%2BIF8eMq92q4rbYHzak7PfNtWyYQ5raA9JIgznaWFJzJX%2BJlzu%2Bu3r2q3jjPLUM80AxozLcRqWVvYBpiIJlFx45cKPkX%2F2%2BeKoncWc%2B6ePWFPme30ZUDKqp6naa4cEDN31MhQC6Orokr1YD%2FJvOnl4SUarbB1%2BVgfPNBbXbzGIn%2BQ51fempHBLdSWygAxQb8EgPDJYVXZxvBJySlPreu1xMH98Dq97W1%2FcRuSdU1ytWMJPT5MEKol3iFlX9S3vBhB4zpCiL0Qjhs8rBVdayMKLXkIsGOqYB2%2BJTBbMxNO8iefRZNNANeiPRoGrUFs7jVSy6MeL55bB1oEjsBrS1ldm2HFxpIsKxeGY%2Fw5R4r6d07DNpzBAlMx0mvj%2FrMVfwHZDUaLkkIW7L5kfZJyauAUQfU1Yr9%2Flzl1bTl9jiK08pDtPhZS7%2FjLscylmOg0jy%2BlazgeqN9hRW54AGkI6XkZty9qqJMe%2BYbSVGEfkYqEbJxp7dv5pFW%2Ftu9oswsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=fe736ba6c89183eb0b3573fe517e52231a83ee2304cf040364dc4f5efb935d24"},{"id":1114883,"filename":"config.yaml","type":"application/x-yaml","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/k9zpkl9f98jj19dmst9o3swmyhsb?response-content-disposition=attachment%3B%20filename%3D%22config.yaml%22%3B%20filename%2A%3DUTF-8%27%27config.yaml\u0026response-content-type=application%2Fx-yaml\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ4NIHB2M2%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T131942Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJGMEQCIE3FUcgRK7FM%2F7U9PAkh6%2BI7wZViD1MP1Y8qZWLRN1eUAiAgc4SQu0yGJV%2BOQRn82JsTD2%2Bd2fHZQycxL60pz%2B7CjyqDBAjt%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIMkR9JAvrXeOfq9Rc6KtcDp5bGOpV6FTgydp%2FZOb6Bh6HFPtwnCVZfa015OiSuBfCxPwur%2F7aSPKTNE0sy0w9C45qL0zZ1nOQQos0M24uDH67J2wRZXM50ImEA29W1ENYnCggW3Oj1ThbKF4WgRsg%2F9mjcm%2BZmkVxvLoYJ9V%2BPAToGVUPNdCuARshEYKICR0Xo5x6JoDNaCt8Ld9eGqOBMXV3rned7uAPh8EmsbYJGE3kgeYkoAT36Qaqe4UgPgyO9VFwa9aDWRX%2B50CKWSjbjZzr%2BF%2B9jH4MB%2FxFZ4EWRHEor6ZAw08vWfwqAZLqqZdMNm9vuS82Y9DrOKW2mwiXSVAN3ddQvsOMXsKnTXkUhnfuaQmZvTtYFFm%2BIF8eMq92q4rbYHzak7PfNtWyYQ5raA9JIgznaWFJzJX%2BJlzu%2Bu3r2q3jjPLUM80AxozLcRqWVvYBpiIJlFx45cKPkX%2F2%2BeKoncWc%2B6ePWFPme30ZUDKqp6naa4cEDN31MhQC6Orokr1YD%2FJvOnl4SUarbB1%2BVgfPNBbXbzGIn%2BQ51fempHBLdSWygAxQb8EgPDJYVXZxvBJySlPreu1xMH98Dq97W1%2FcRuSdU1ytWMJPT5MEKol3iFlX9S3vBhB4zpCiL0Qjhs8rBVdayMKLXkIsGOqYB2%2BJTBbMxNO8iefRZNNANeiPRoGrUFs7jVSy6MeL55bB1oEjsBrS1ldm2HFxpIsKxeGY%2Fw5R4r6d07DNpzBAlMx0mvj%2FrMVfwHZDUaLkkIW7L5kfZJyauAUQfU1Yr9%2Flzl1bTl9jiK08pDtPhZS7%2FjLscylmOg0jy%2BlazgeqN9hRW54AGkI6XkZty9qqJMe%2BYbSVGEfkYqEbJxp7dv5pFW%2Ftu9oswsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=75a7879e5a143c6b174eab510a1d7e7f56f31d86040d52b194ca5523a5b31495"}],"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10499242,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":null,"automated_response":false,"created_at":"2021-01-27T19:44:36.686Z","updated_at":"2021-01-27T19:44:36.686Z","additional_data":{"old_severity":"High (7.5)","new_severity":"Medium","old_severity_id":924836,"new_severity_id":969240},"actor":{"username":"cji","cleared":false,"url":"/cji","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10499253,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":null,"automated_response":false,"created_at":"2021-01-27T19:47:00.590Z","updated_at":"2021-01-27T19:47:00.590Z","additional_data":{"old_severity":"Medium","new_severity":"Low","old_severity_id":969240,"new_severity_id":969241},"actor":{"username":"cji","cleared":false,"url":"/cji","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10499269,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello @r44mb00 and thanks for your report. The issue has been resolved with these two fixes:\n\nhttps://github.com/kubernetes/test-infra/pull/20489\nhttps://github.com/kubernetes/test-infra/pull/20490\n\nWe believe the risk here was Low. The yaml files parsed in the highlighted source files (main.py and update_config.py) are all version controlled in the same repo: test-infra/gubernator/config.yaml, test-infra/config/prow/config.yaml and all .yaml files under test-infra/config/jobs/ (~ 300 total). But we have made the hardening changes to move to `safe_load()` and appreciate your work here to report this issue!\n\nRegards,\nKubernetes Product Security Committee\n\n","automated_response":false,"created_at":"2021-01-27T19:48:27.195Z","updated_at":"2021-01-27T19:48:27.195Z","actor":{"username":"cji","cleared":false,"url":"/cji","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10499283,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Thanks again for your report! This vulnerability falls into our Tier 3 Low category, with a bonus for a well written report and multiple clear PoCs. We thank you again for your effort in helping keep Kubernetes Secure.","automated_response":false,"created_at":"2021-01-27T19:49:57.710Z","updated_at":"2021-01-27T19:49:57.710Z","actor":{"url":"/kubernetes","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Kubernetes"}},"bounty_amount":"100.0","bounty_currency":"usd","bonus_amount":"150.0","genius_execution_id":null,"team_handle":"kubernetes","collaborator":{"username":"r44mb00","url":"/r44mb00"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10499288,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","automated_response":false,"created_at":"2021-01-27T19:50:27.573Z","updated_at":"2021-01-27T19:50:27.573Z","actor":{"username":"cji","cleared":false,"url":"/cji","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"r44mb00","url":"/r44mb00"},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10501086,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey, This is great thanks! Its awesome to get a bonus for a well written report and PoC. \nThe fix is pretty straight forward. \nThanks again!","automated_response":false,"created_at":"2021-01-28T00:32:16.577Z","updated_at":"2021-01-28T00:32:16.577Z","actor":{"username":"r44mb00","cleared":false,"url":"/r44mb00","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":11214840,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2021-04-01T18:00:26.536Z","updated_at":"2021-04-01T18:00:26.536Z","first_to_agree":true,"actor":{"username":"tallclair","cleared":false,"url":"/tallclair","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/418/594/6bbb78252759e1d1c1d67be48b7d7470926730de_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":11588899,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2021-05-01T18:00:28.925Z","updated_at":"2021-05-01T18:00:28.925Z","actor":{"url":"/kubernetes","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Kubernetes"}},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":11607058,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":"","automated_response":false,"created_at":"2021-05-04T04:03:47.088Z","updated_at":"2021-05-04T04:03:47.088Z","additional_data":{"duplicate_report_id":1182245},"actor":{"username":"royalrana","cleared":false,"url":"/royalrana","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}