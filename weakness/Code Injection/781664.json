{"id":781664,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83ODE2NjQ=","url":"https://hackerone.com/reports/781664","title":"Several simple remote code execution in pdf-image","state":"Closed","substate":"resolved","severity_rating":"critical","readable_substate":"Resolved","created_at":"2020-01-23T17:10:09.549Z","submitted_at":"2020-01-23T17:10:09.549Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"gabriel-kimiaie","url":"/gabriel-kimiaie","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/8WtiMMWx91cvzq3PwcWLA5bk/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":23949,"url":"https://hackerone.com/nodejs-ecosystem","handle":"nodejs-ecosystem","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Node.js third-party modules","twitter_handle":"","website":"https://nodejs.org/en/security/","about":"This program is used to handle vulnerabilities in the Node.js ecosystem."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2020-8132"],"singular_disclosure_disabled":false,"disclosed_at":"2020-02-24T08:00:21.436Z","bug_reporter_agreed_on_going_public_at":"2020-02-24T08:00:21.251Z","team_member_agreed_on_going_public_at":"2020-02-24T07:57:24.759Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"I would like to report \"A simple remote code execution\" in \"pdf-image\".\nIt allows \"a remote attacker to execute arbitrary code when several functions of the PDFImage class are called and the class loaded from user-input value\".\n\n# Module\n\n**module name:** pdf-image\n**version:** latest\n**npm page:** `https://www.npmjs.com/package/pdf-image`\n\n## Module Description\n\nProvides an interface to convert PDF's pages to png files in Node.js by using ImageMagick.\n\n## Module Stats\n\n[1] weekly downloads: 8,691\n\n# Vulnerability\n\n## Vulnerability Description\n\nHello there ! I understand this bug isn't eligible for a bounty. I am reporting it either way. I've found several code execution in the pdf-image class, I tested one of them. They are simple and of course come from the child_process.exec call with lack of escaping. I tested one of them.\n\n## Steps To Reproduce:\n\nvar PDFImage = require(\"pdf-image\").PDFImage;\n\nvar pdfImage = new PDFImage('\"; sleep 500 #\"');\npdfImage.getInfo();\n\nYou can also exploit the vulnerability by submitting  backticks (example payload: `ls;sleep 5` which will be executed even though you're double-quoting the input.\n\n## Patch\nYou can take example on your command-exists npm class:\nvar isUsingWindows = process.platform == 'win32'\nvar cleanInput = function(s) {\n  if (/[^A-Za-z0-9_\\/:=-]/.test(s)) {\n    s = \"'\"+s.replace(/'/g,\"'\\\\''\")+\"'\";\n    s = s.replace(/^(?:'')+/g, '') // unduplicate single-quote at the beginning\n      .replace(/\\\\'''/g, \"\\\\'\" ); // remove non-escaped single-quote if there are enclosed between 2 escaped\n  }\n  return s;\n}\n\nif (isUsingWindows) {\n  cleanInput = function(s) {\n    var isPathName = /[\\\\]/.test(s);\n    if (isPathName) {\n      var dirname = '\"' + path.dirname(s) + '\"';\n      var basename = '\"' + path.basename(s) + '\"';\n      return dirname + ':' + basename;\n    }\n    return '\"' + s + '\"';\n  }\n}\n## Supporting Material/References:\n\nhttps://github.com/mooz/node-pdf-image/blob/master/index.js#L27\n\n- Linux / centOS\n- v6.17.1\n- 3.10.10 \n- N/A\n- Own sample script\n\n# Wrap up\n\n\u003e Select Y or N for the following statements:\n\n- I contacted the maintainer to let them know: [Y/N] N\n- I opened an issue in the related repository: [Y/N] N\n\nThanks!\n\n## Impact\n\nBad code relying on that class can feel foul to RCE.","vulnerability_information_html":"\u003cp\u003eI would like to report \u0026quot;A simple remote code execution\u0026quot; in \u0026quot;pdf-image\u0026quot;.\u003cbr\u003e\nIt allows \u0026quot;a remote attacker to execute arbitrary code when several functions of the PDFImage class are called and the class loaded from user-input value\u0026quot;.\u003c/p\u003e\n\n\u003ch1 id=\"module\"\u003eModule\u003c/h1\u003e\n\n\u003cp\u003e\u003cstrong\u003emodule name:\u003c/strong\u003e pdf-image\u003cbr\u003e\n\u003cstrong\u003eversion:\u003c/strong\u003e latest\u003cbr\u003e\n\u003cstrong\u003enpm page:\u003c/strong\u003e \u003ccode\u003ehttps://www.npmjs.com/package/pdf-image\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2 id=\"module-description\"\u003eModule Description\u003c/h2\u003e\n\n\u003cp\u003eProvides an interface to convert PDF\u0026#39;s pages to png files in Node.js by using ImageMagick.\u003c/p\u003e\n\n\u003ch2 id=\"module-stats\"\u003eModule Stats\u003c/h2\u003e\n\n\u003cp\u003e[1] weekly downloads: 8,691\u003c/p\u003e\n\n\u003ch1 id=\"vulnerability\"\u003eVulnerability\u003c/h1\u003e\n\n\u003ch2 id=\"vulnerability-description\"\u003eVulnerability Description\u003c/h2\u003e\n\n\u003cp\u003eHello there ! I understand this bug isn\u0026#39;t eligible for a bounty. I am reporting it either way. I\u0026#39;ve found several code execution in the pdf-image class, I tested one of them. They are simple and of course come from the child_process.exec call with lack of escaping. I tested one of them.\u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003cp\u003evar PDFImage = require(\u0026quot;pdf-image\u0026quot;).PDFImage;\u003c/p\u003e\n\n\u003cp\u003evar pdfImage = new PDFImage(\u0026#39;\u0026quot;; sleep 500 #\u0026quot;\u0026#39;);\u003cbr\u003e\npdfImage.getInfo();\u003c/p\u003e\n\n\u003cp\u003eYou can also exploit the vulnerability by submitting  backticks (example payload: \u003ccode\u003els;sleep 5\u003c/code\u003e which will be executed even though you\u0026#39;re double-quoting the input.\u003c/p\u003e\n\n\u003ch2 id=\"patch\"\u003ePatch\u003c/h2\u003e\n\n\u003cp\u003eYou can take example on your command-exists npm class:\u003cbr\u003e\nvar isUsingWindows = process.platform == \u0026#39;win32\u0026#39;\u003cbr\u003e\nvar cleanInput = function(s) {\u003cbr\u003e\n  if (/[^A-Za-z0-9_\\/:=-]/.test(s)) {\u003cbr\u003e\n    s = \u0026quot;\u0026#39;\u0026quot;+s.replace(/\u0026#39;/g,\u0026quot;\u0026#39;\\\u0026#39;\u0026#39;\u0026quot;)+\u0026quot;\u0026#39;\u0026quot;;\u003cbr\u003e\n    s = s.replace(/^(?:\u0026#39;\u0026#39;)+/g, \u0026#39;\u0026#39;) // unduplicate single-quote at the beginning\u003cbr\u003e\n      .replace(/\\\u0026#39;\u0026#39;\u0026#39;/g, \u0026quot;\\\u0026#39;\u0026quot; ); // remove non-escaped single-quote if there are enclosed between 2 escaped\u003cbr\u003e\n  }\u003cbr\u003e\n  return s;\u003cbr\u003e\n}\u003c/p\u003e\n\n\u003cp\u003eif (isUsingWindows) {\u003cbr\u003e\n  cleanInput = function(s) {\u003cbr\u003e\n    var isPathName = /[\\]/.test(s);\u003cbr\u003e\n    if (isPathName) {\u003cbr\u003e\n      var dirname = \u0026#39;\u0026quot;\u0026#39; + path.dirname(s) + \u0026#39;\u0026quot;\u0026#39;;\u003cbr\u003e\n      var basename = \u0026#39;\u0026quot;\u0026#39; + path.basename(s) + \u0026#39;\u0026quot;\u0026#39;;\u003cbr\u003e\n      return dirname + \u0026#39;:\u0026#39; + basename;\u003cbr\u003e\n    }\u003cbr\u003e\n    return \u0026#39;\u0026quot;\u0026#39; + s + \u0026#39;\u0026quot;\u0026#39;;\u003cbr\u003e\n  }\u003cbr\u003e\n}\u003c/p\u003e\n\n\u003ch2 id=\"supporting-material-references\"\u003eSupporting Material/References:\u003c/h2\u003e\n\n\u003cp\u003e\u003ca title=\"https://github.com/mooz/node-pdf-image/blob/master/index.js#L27\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fmooz%2Fnode-pdf-image%2Fblob%2Fmaster%2Findex.js%23L27\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/mooz/node-pdf-image/blob/master/index.js#L27\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eLinux / centOS\u003c/li\u003e\n\u003cli\u003ev6.17.1\u003c/li\u003e\n\u003cli\u003e3.10.10 \u003c/li\u003e\n\u003cli\u003eN/A\u003c/li\u003e\n\u003cli\u003eOwn sample script\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1 id=\"wrap-up\"\u003eWrap up\u003c/h1\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eSelect Y or N for the following statements:\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cul\u003e\n\u003cli\u003eI contacted the maintainer to let them know: [Y/N] N\u003c/li\u003e\n\u003cli\u003eI opened an issue in the related repository: [Y/N] N\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThanks!\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eBad code relying on that class can feel foul to RCE.\u003c/p\u003e\n","weakness":{"id":70,"name":"Code Injection"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2020-03-25T07:57:24.977Z","allow_singular_disclosure_after":-24101644.0421563,"singular_disclosure_allowed":true,"vote_count":15,"voters":["a_d_a_m","nessun00x","knafeeh","b69fb2ebda43240ece9dbeb","kkugelblitzz1017","sbmthakur","istals","0x1b-co","newbie00","nishat007","and 5 more..."],"severity":{"rating":"critical","author_type":"User"},"structured_scope":{"databaseId":9600,"asset_type":"SOURCE_CODE","asset_identifier":"pdf-image","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":6863022,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Hello @amarbalosh,\n\nThank you for your submission! We were able to validate your report, and have submitted it to the appropriate remediation team for review. They will let us know the final ruling on this report, and when/if a fix will be implemented. Please note that the status and severity are subject to change.\n\nRegards,\n@lugtag","markdown_message":"\u003cp\u003eHello \u003ca href=\"/amarbalosh\"\u003e@amarbalosh\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThank you for your submission! We were able to validate your report, and have submitted it to the appropriate remediation team for review. They will let us know the final ruling on this report, and when/if a fix will be implemented. Please note that the status and severity are subject to change.\u003c/p\u003e\n\n\u003cp\u003eRegards,\u003cbr\u003e\n\u003ca href=\"/lugtag\"\u003e@lugtag\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-24T16:01:04.299Z","updated_at":"2020-01-24T16:01:04.299Z","actor":{"username":"lugtag","cleared":false,"url":"/lugtag","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/gKtXsNkprE7ekgjBwpwWpTzX/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7130850,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-24T07:57:18.625Z","updated_at":"2020-02-24T07:57:18.625Z","actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"gabriel-kimiaie","url":"/gabriel-kimiaie"},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7130854,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-24T07:57:24.778Z","updated_at":"2020-02-24T07:57:24.778Z","first_to_agree":true,"actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7130880,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-24T08:00:21.269Z","updated_at":"2020-02-24T08:00:21.269Z","actor":{"username":"gabriel-kimiaie","cleared":false,"url":"/gabriel-kimiaie","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/8WtiMMWx91cvzq3PwcWLA5bk/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7130881,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-24T08:00:21.455Z","updated_at":"2020-02-24T08:00:21.455Z","actor":{"username":"gabriel-kimiaie","cleared":false,"url":"/gabriel-kimiaie","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/8WtiMMWx91cvzq3PwcWLA5bk/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}