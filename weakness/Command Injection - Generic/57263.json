{"id":57263,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC81NzI2Mw==","url":"https://hackerone.com/reports/57263","title":"Rank Creation function not validating user inputs.","state":"Closed","substate":"informative","readable_substate":"Informative","created_at":"2015-04-18T22:15:28.429Z","submitted_at":"2015-04-18T22:15:28.429Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"1234123123","url":"/1234123123","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":361,"url":"https://hackerone.com/wordpoints","handle":"wordpoints","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/361/a0559c0ee47289ddff142d66426b278b32961dc9_original.png/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/361/a0559c0ee47289ddff142d66426b278b32961dc9_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"WordPoints","twitter_handle":"","website":"","about":"Open source points plugin for WordPress."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2015-06-04T18:58:38.653Z","bug_reporter_agreed_on_going_public_at":"2015-06-04T17:23:26.047Z","team_member_agreed_on_going_public_at":"2015-06-04T18:58:25.545Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"SQL Injection Attack,  command injection and arbitrary code execution Possible.\r\n\r\nBy source code review, I found that rank creation parameters (name, type, group) for wordpoints_add_rank() in ranks.php are not sanitized or validated. It may allow an attacker to Inject arbitrary code during rank creation which is then passed to SQL for database update leading to SQL Injection Attack.\r\n\r\n$inserted = $wpdb-\u003einsert(\r\n\t\t$wpdb-\u003ewordpoints_ranks\r\n\t\t, array(\r\n\t\t\t'name'       =\u003e $name,\r\n\t\t\t'type'       =\u003e $type,\r\n\t\t\t'rank_group' =\u003e $group,\r\n\t\t\t'blog_id'    =\u003e $wpdb-\u003eblogid,\r\n\t\t\t'site_id'    =\u003e $wpdb-\u003esiteid,\r\n\t\t)\r\n\t);\r\n\r\n$rank_id = (int) $wpdb-\u003einsert_id;\r\n\r\n\tforeach ( $meta as $meta_key =\u003e $meta_value ) {\r\n\t\twordpoints_add_rank_meta( $rank_id, $meta_key, $meta_value );\r\n\t}\r\n\r\n\r\nSimilarly for retrieving Rank by get_data() in class-wordpoints-rank.php using specially crafted ID may lead database exposure) \r\npublic static function get_data( $id ) {\r\n\r\n\t\t$rank_data = wp_cache_get( $id, 'wordpoints_ranks' );\r\n\t\tif ( false !== $rank_data ) {\r\n\t\t\treturn $rank_data;\r\n\t\t}\r\n\t\tglobal $wpdb;\r\n\t\t$rank_data = $wpdb-\u003eget_row(\r\n\t\t\t$wpdb-\u003eprepare(\r\n\t\t\t\t\"\r\n\t\t\t\t\tSELECT id, name, type, rank_group, blog_id, site_id\r\n\t\t\t\t\tFROM {$wpdb-\u003ewordpoints_ranks}\r\n\t\t\t\t\tWHERE id = %d\r\n\t\t\t\t\"\r\n\t\t\t\t, $id\r\n\t\t\t)\r\n\t\t);\r\n\t\tif ( null === $rank_data ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\twp_cache_add( $rank_data-\u003eid, $rank_data, 'wordpoints_ranks' );\r\n\t\treturn $rank_data;\r\n\t}\r\n}\r\n\r\n Note: Data from user or cache cannot be trusted and properly validate before passing to function or database:\r\n\r\nRefer: http://php.net/manual/en/filter.filters.sanitize.php\r\nCommand Injection : https://www.owasp.org/index.php/Command_Injection\r\nPHP SQL Injection: http://php.net/manual/en/security.database.sql-injection.php\r\n","weakness":{"id":58,"name":"Command Injection - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2015-07-04T17:23:26.517Z","allow_singular_disclosure_after":-197934486.73942763,"singular_disclosure_allowed":true,"vote_count":0,"voters":[],"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":384484,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Hi @vijaychaudhary, and thank you for the report. Can you please provide a working POC of exploitable code that uses these functions? I think the `wpdb::insert()` and `wpdb::prepare()` methods used here provide the necessary escaping to avoid SQLi.","automated_response":false,"created_at":"2015-04-18T22:26:19.848Z","updated_at":"2015-04-18T22:26:19.848Z","actor":{"username":"jdgrimes","cleared":false,"url":"/jdgrimes","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/009/109/d46d46e7dd9a78c3bd46390279cd42d1c1e76124_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpoints","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":384511,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"No, not at all,  look for if \"preg_match aor other suggets function in the code where you are dealing with user input, but for instance if it protects you from SQLi, you are depending upon the wpdb class methods. There is no protection from command injection and Remote code Execution beacuse it is executed with PHP only. And you are defing your function and variable/parameters and pass it to the function for execution:\n\nPOC:\n\nPut these values to verify at your end.\n1. Command Injection and RCE with LFI\nrank name= xyz; echo shell_exec('cat /etc/passwd');\ncontent of /etc/passwd will added to web page\neg:\nroot:0:X:X:/root:/bin/bash\nuser1:2011:X:X:/home/user1:/bin/sh\n\n\n2. SQL Injection\n id= 1' or 1=1--\n\nit will output details of all users because of always true condition.\n\n\n","automated_response":false,"created_at":"2015-04-18T23:00:51.912Z","updated_at":"2015-04-18T23:01:43.456Z","actor":{"username":"1234123123","cleared":false,"url":"/1234123123","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpoints","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":384513,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Please refer the link  at least once they are self explanatory.","automated_response":false,"created_at":"2015-04-18T23:03:29.973Z","updated_at":"2015-04-18T23:03:29.973Z","actor":{"username":"1234123123","cleared":false,"url":"/1234123123","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpoints","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":384995,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"I understand the nature of these kinds of vulnerabilities, but I don't see where in the code this can actually be exploited. I need you to provide a POC that demonstrates exactly how an attacker could use this to exploit a site that is using this plugin. Please define the exact location in the code where user input is executed as PHP, or is passed to the database unescaped. Please also give specific recommendations for code changes to fix the vulnerability.","automated_response":false,"created_at":"2015-04-19T19:43:00.173Z","updated_at":"2015-04-19T19:43:00.173Z","actor":{"username":"jdgrimes","cleared":false,"url":"/jdgrimes","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/009/109/d46d46e7dd9a78c3bd46390279cd42d1c1e76124_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpoints","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":385141,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"Can you please give me a testing website with this plugin.??","automated_response":false,"created_at":"2015-04-20T04:41:55.391Z","updated_at":"2015-04-20T04:41:55.391Z","actor":{"username":"1234123123","cleared":false,"url":"/1234123123","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpoints","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":385320,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Ok, almost all your mailicious queries are being filtered by wordpress not your code. ","automated_response":false,"created_at":"2015-04-20T11:56:57.564Z","updated_at":"2015-04-20T11:56:57.564Z","actor":{"username":"1234123123","cleared":false,"url":"/1234123123","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpoints","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":385446,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"\u003eCan you please give me a testing website with this plugin.??\n\nThe plugin is freely [available for download from WordPress.org](https://wordpress.org/plugins/wordpoints/). Do you need anything else to set up your own test site?\n\n\u003eOk, almost all your mailicious queries are being filtered by wordpress not your code.\n\nEverything is safe then? Or do you still think there might be a possible exploit? If so, I'd like to see a POC.","automated_response":false,"created_at":"2015-04-20T13:38:20.186Z","updated_at":"2015-04-20T13:38:20.186Z","actor":{"username":"jdgrimes","cleared":false,"url":"/jdgrimes","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/009/109/d46d46e7dd9a78c3bd46390279cd42d1c1e76124_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpoints","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":387544,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Wordpress itself is having multiple vulnerabilities, like malicious file upload up to 4.1.1, sql injection and xss in older version,,\nYou can refer http://wptavern.com/xss-vulnerability-affects-more-than-a-dozen-popular-wordpress-plugins\n\nI am only reporting this to you because on basis of code review, your product is lacking standard security measures reason being you think wordpress modules will take care of all the things, as mentioned by you earlier.\n\nAs a wordpress plugin it should be secure itself instead of relying on core modules which may possess multiple known/unknown loopholes. \n\nFYI, I don't need any bounty for this bug report, but I suggest you take necessary action. You asked for POC, but I can only give part of code(functions) which may cause security issue.\n\nLook for all functions that are taking user inputs, and check whether they are filtered or not. You just need to make use of predefined PHP functions like\n\nString safe = ESAPI.encoder().encodeForHTML( request.getParameter( \" Unsafe input\" ) );\n\nI request you to close this bug as soon as possible.\n","automated_response":false,"created_at":"2015-04-22T19:04:59.196Z","updated_at":"2015-04-22T19:04:59.196Z","actor":{"username":"1234123123","cleared":false,"url":"/1234123123","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpoints","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":387556,"is_internal":false,"editable":false,"type":"Activities::BugInformative","message":"\u003eWordpress itself is having multiple vulnerabilities\n\nYes, I know. I'm actually one of the people who reported an issue to them. :-)\n\n\u003eAs a wordpress plugin it should be secure itself instead of relying on core modules which may possess multiple known/unknown loopholes. \n\nWhile it is true that plugins shouldn't just rely on the security of WordPress, this is also true of PHP functions. \n\n\u003eLook for all functions that are taking user inputs, and check whether they are filtered or not.\n\nAll user input is being filtered as early as possible. I even have a script that I run over the code to check this. Everything is filtered/sanitized as soon as it is input, and it is escaped just before it is used (printed/sent to the database/ect.). Both PHP functions and sanitization/escaping functions provided by WordPress are used.\n\nWhile it is possible that there are loopholes in WordPress's security-related functions, this is very unlikely, because there are many eyes on the code and they have an active security team. While you can't be too careful, I consider this an acceptable risk. So I'm going to close this as wontfix.","automated_response":false,"created_at":"2015-04-22T19:24:18.293Z","updated_at":"2015-04-22T19:24:18.293Z","actor":{"username":"jdgrimes","cleared":false,"url":"/jdgrimes","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/009/109/d46d46e7dd9a78c3bd46390279cd42d1c1e76124_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpoints","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":440843,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"public disclosure","automated_response":false,"created_at":"2015-06-04T17:23:26.374Z","updated_at":"2015-06-04T17:23:26.374Z","first_to_agree":true,"actor":{"username":"1234123123","cleared":false,"url":"/1234123123","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpoints","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":440980,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2015-06-04T18:58:25.579Z","updated_at":"2015-06-04T18:58:25.579Z","actor":{"username":"jdgrimes","cleared":false,"url":"/jdgrimes","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/009/109/d46d46e7dd9a78c3bd46390279cd42d1c1e76124_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpoints","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":440981,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2015-06-04T18:58:38.683Z","updated_at":"2015-06-04T18:58:38.683Z","actor":{"username":"jdgrimes","cleared":false,"url":"/jdgrimes","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/009/109/d46d46e7dd9a78c3bd46390279cd42d1c1e76124_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"wordpoints","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}