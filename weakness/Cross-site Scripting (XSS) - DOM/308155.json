{"id":308155,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zMDgxNTU=","url":"https://hackerone.com/reports/308155","title":"[html-janitor] Passing user-controlled data to clean() leads to XSS","state":"Closed","substate":"resolved","severity_rating":"critical","readable_substate":"Resolved","created_at":"2018-01-23T12:34:13.662Z","submitted_at":"2018-01-23T12:34:13.662Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"bayotop","url":"/bayotop","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/036/633/10a34b6ba8511f5ae6c9664bafcd04aeb25982f8_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":23949,"url":"https://hackerone.com/nodejs-ecosystem","handle":"nodejs-ecosystem","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Node.js third-party modules","twitter_handle":"","website":"https://nodejs.org/en/security/","about":"This program is used to handle vulnerabilities in the Node.js ecosystem."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2017-0931"],"singular_disclosure_disabled":false,"disclosed_at":"2018-02-09T15:00:45.549Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2018-02-09T15:00:35.971Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"**Module:**\n\n* Name: [html-janitor](https://www.npmjs.com/package/html-janitor)\n* Version: 2.0.2\n\n**Summary:**\n\nPassing user-controlled data to the module's clean() function can result in arbitrary JS execution, because of unsafe DOM operations. \n\nThe description \"*Cleans up your markup and allows you to take control of your HTML. HTMLJanitor uses a defined whitelist to limit HTML it is given to a defined subset.*\" implies that \"dirty\" HTML is expected and therefore I would assume the clean method should never result in arbitrary JS being executed.\n\n**Description:**\n\nThe following will result in JS execution:\n```javascript\nvar myJanitor = new HTMLJanitor({tags:{p:{}}});\nvar cleanHtml = myJanitor.clean(\"\u003cp\u003e\u003cimg src onerror=alert()\u003e\u003cp\u003e\")\n```\n\nbecause [of this code](https://github.com/guardian/html-janitor/blob/master/src/html-janitor.js#L44):\n\n```js\nHTMLJanitor.prototype.clean = function (html) {\n    var sandbox = document.createElement('div'); // This is not a safe way to create a sandbox.\n    sandbox.innerHTML = html; // At this point, the onerror in the img is triggered.\n```\n\n**Recommendation:**\n\nThe \"sandbox\" should be created using safe browser APIs such as `document.implementation.createHTMLDocument();`.\n\n*Note that I previously reported this issue at https://github.com/guardian/html-janitor/issues/34*\n\n## Impact\n\nGiven the module's description I would assume it should be used to prevent XSS vulnerabilities. This is currently a very dangerous assumption given that the module itself has a XSS vulnerability. \n\nNote that the author might have never intended to feed untrusted data into the clean() function. However, in that case this should be at least mentioned in the documentation, because other developers most certainly will use the package in such scenarios.","vulnerability_information_html":"\u003cp\u003e\u003cstrong\u003eModule:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eName: \u003ca href=\"/redirect?url=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2Fhtml-janitor\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehtml-janitor\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eVersion: 2.0.2\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003eSummary:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003ePassing user-controlled data to the module\u0026#39;s clean() function can result in arbitrary JS execution, because of unsafe DOM operations. \u003c/p\u003e\n\n\u003cp\u003eThe description \u0026quot;\u003cem\u003eCleans up your markup and allows you to take control of your HTML. HTMLJanitor uses a defined whitelist to limit HTML it is given to a defined subset.\u003c/em\u003e\u0026quot; implies that \u0026quot;dirty\u0026quot; HTML is expected and therefore I would assume the clean method should never result in arbitrary JS being executed.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eDescription:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eThe following will result in JS execution:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003emyJanitor\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nx\"\u003eHTMLJanitor\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\u003cspan class=\"na\"\u003etags\u003c/span\u003e\u003cspan class=\"p\"\u003e:{\u003c/span\u003e\u003cspan class=\"na\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e:{}}});\u003c/span\u003e\n\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ecleanHtml\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003emyJanitor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eclean\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026lt;p\u0026gt;\u0026lt;img src onerror=alert()\u0026gt;\u0026lt;p\u0026gt;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ebecause \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fguardian%2Fhtml-janitor%2Fblob%2Fmaster%2Fsrc%2Fhtml-janitor.js%23L44\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eof this code\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003eHTMLJanitor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eprototype\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eclean\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ehtml\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003esandbox\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecreateElement\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ediv\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// This is not a safe way to create a sandbox.\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003esandbox\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003einnerHTML\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ehtml\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// At this point, the onerror in the img is triggered.\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003eRecommendation:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eThe \u0026quot;sandbox\u0026quot; should be created using safe browser APIs such as \u003ccode\u003edocument.implementation.createHTMLDocument();\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eNote that I previously reported this issue at \u003ca title=\"https://github.com/guardian/html-janitor/issues/34\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fguardian%2Fhtml-janitor%2Fissues%2F34\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/guardian/html-janitor/issues/34\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eGiven the module\u0026#39;s description I would assume it should be used to prevent XSS vulnerabilities. This is currently a very dangerous assumption given that the module itself has a XSS vulnerability. \u003c/p\u003e\n\n\u003cp\u003eNote that the author might have never intended to feed untrusted data into the clean() function. However, in that case this should be at least mentioned in the documentation, because other developers most certainly will use the package in such scenarios.\u003c/p\u003e\n","weakness":{"id":63,"name":"Cross-site Scripting (XSS) - DOM"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2018-03-11T15:00:36.126Z","allow_singular_disclosure_after":-88439418.29777078,"singular_disclosure_allowed":true,"vote_count":4,"voters":["jokebookservice1","bl4de","eveeez","plazmaz"],"severity":{"rating":"critical","score":9.8,"author_type":"Team","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"low","user_interaction":"none","scope":"changed","confidentiality":"high","integrity":"none","availability":"none"}},"structured_scope":{"databaseId":5495,"asset_type":"SOURCE_CODE","asset_identifier":"html-janitor","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":2309963,"is_internal":false,"editable":false,"type":"Activities::ChangedScope","message":"","markdown_message":"","automated_response":false,"created_at":"2018-01-23T13:41:34.188Z","updated_at":"2018-01-23T13:41:34.188Z","actor":{"username":"vdeturckheim","cleared":false,"url":"/vdeturckheim","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/161/010/6f383ac0f9296c13b5ac0d38741f0685dbace58c_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"old_scope":"Other module","new_scope":"html-janitor","genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2310856,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi Martin,\n\nThanks for another detailed report on the problem and fix.\nEven though the actual fix might be in different places, it seems that both this and the other issue (308158) have the same context, vulnerability and impact/end result. Do you agree we can set this one as a duplicate?","markdown_message":"\u003cp\u003eHi Martin,\u003c/p\u003e\n\n\u003cp\u003eThanks for another detailed report on the problem and fix.\u003cbr\u003e\nEven though the actual fix might be in different places, it seems that both this and the other issue (308158) have the same context, vulnerability and impact/end result. Do you agree we can set this one as a duplicate?\u003c/p\u003e\n","automated_response":false,"created_at":"2018-01-23T18:11:57.232Z","updated_at":"2018-01-23T18:11:57.232Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2311100,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi, I agree that the impact/end result is the same for anyone using the library. Nonetheless, it's a different vulnerability. This one is a XSS in the library's code. 308158 is a sanitization bypass that allows arbitrary HTML to slip through the cleaning process regardless of the initial settings passed to the `HTMLJanitor()` constructor. \n\nI tried to keep the issues separate for the sake of transparency, tracking, etc. \n\nIf handling both issues in one report works better for you then that's fine with me.\n\nOn the other hand, it would make perfect sense to label this one as a duplicate in case the author decides that untrusted input was never considered.  Updating the documentation accordingly would solve both issues. Maybe we should wait for what they have to say? ","markdown_message":"\u003cp\u003eHi, I agree that the impact/end result is the same for anyone using the library. Nonetheless, it\u0026#39;s a different vulnerability. This one is a XSS in the library\u0026#39;s code. 308158 is a sanitization bypass that allows arbitrary HTML to slip through the cleaning process regardless of the initial settings passed to the \u003ccode\u003eHTMLJanitor()\u003c/code\u003e constructor. \u003c/p\u003e\n\n\u003cp\u003eI tried to keep the issues separate for the sake of transparency, tracking, etc. \u003c/p\u003e\n\n\u003cp\u003eIf handling both issues in one report works better for you then that\u0026#39;s fine with me.\u003c/p\u003e\n\n\u003cp\u003eOn the other hand, it would make perfect sense to label this one as a duplicate in case the author decides that untrusted input was never considered.  Updating the documentation accordingly would solve both issues. Maybe we should wait for what they have to say? \u003c/p\u003e\n","automated_response":false,"created_at":"2018-01-23T18:42:53.941Z","updated_at":"2018-01-23T18:44:08.273Z","actor":{"username":"bayotop","cleared":false,"url":"/bayotop","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/036/633/10a34b6ba8511f5ae6c9664bafcd04aeb25982f8_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2311105,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Sounds good.","markdown_message":"\u003cp\u003eSounds good.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-01-23T18:45:51.784Z","updated_at":"2018-01-23T18:45:51.784Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2314467,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2018-01-24T19:29:40.346Z","updated_at":"2018-01-24T19:29:40.346Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2340415,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2018-01-31T22:12:16.026Z","updated_at":"2018-01-31T22:12:16.026Z","additional_data":{"old_severity":"High","new_severity":"Critical (9.8)","old_severity_id":111186,"new_severity_id":114170},"actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2361104,"is_internal":false,"editable":false,"type":"Activities::CveIdAdded","message":"","markdown_message":"","automated_response":false,"created_at":"2018-02-08T03:55:33.890Z","updated_at":"2018-02-08T03:55:33.890Z","cve_ids":["CVE-2017-0928"],"actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2361117,"is_internal":false,"editable":false,"type":"Activities::CveIdAdded","message":"","markdown_message":"","automated_response":false,"created_at":"2018-02-08T04:00:16.495Z","updated_at":"2018-02-08T04:00:16.495Z","cve_ids":["CVE-2017-0931"],"actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2367119,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I will publicly disclose the vulnerability as we did with the related report #308158.\n\nThanks again @bayotop for reporting this to the Node.js ecosystem, we appreciate it1","markdown_message":"\u003cp\u003eI will publicly disclose the vulnerability as we did with the related report \u003ca href=\"/reports/308158\"\u003e#308158\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThanks again \u003ca href=\"/bayotop\"\u003e@bayotop\u003c/a\u003e for reporting this to the Node.js ecosystem, we appreciate it1\u003c/p\u003e\n","automated_response":false,"created_at":"2018-02-09T14:45:20.080Z","updated_at":"2018-02-09T14:45:20.080Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2367155,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2018-02-09T15:00:16.573Z","updated_at":"2018-02-09T15:00:16.573Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"bayotop","url":"/bayotop"},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2367157,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2018-02-09T15:00:36.007Z","updated_at":"2018-02-09T15:00:36.007Z","first_to_agree":true,"actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2367158,"is_internal":false,"editable":false,"type":"Activities::ManuallyDisclosed","message":"","markdown_message":"","automated_response":false,"created_at":"2018-02-09T15:00:45.494Z","updated_at":"2018-02-09T15:00:45.494Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}