{"id":164821,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNjQ4MjE=","url":"https://hackerone.com/reports/164821","title":"OX Guard: DOM Based Cross-Site Scripting (#2)","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2016-08-31T19:08:42.136Z","submitted_at":"2016-08-31T19:08:42.136Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"dejavuln","url":"/dejavuln","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/045/064/2158310e1f704a15f20abf07331e73795f2e8153_original.png/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":8906,"url":"https://hackerone.com/open-xchange","handle":"open-xchange","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"Open-Xchange","twitter_handle":"openxchange","website":"https://www.open-xchange.com/","about":"Messaging, collaboration and office productivity software for service providers"}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2017-12-19T20:09:13.712Z","bug_reporter_agreed_on_going_public_at":"2017-11-19T20:09:11.749Z","team_member_agreed_on_going_public_at":null,"comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"## Summary\n\nOX Guard's \"Guest Reader\" is vulnerable to DOM Based XSS. \n\nWhile this report is closely related to #158853, it is not a duplicate. I've had a look at the code introduced by commit 7fdbd307662f0041ed5e45b2f73c6530b79c6124, which I believe was supposed to protect against #158853. Today's report describes how to bypass this protection in order to exploit the original vulnerability with identical ease and impact.\n\nThe vulnerable parameter is still \"templid\". The reader.js script (see below) takes the parameter's value and injects it into the page/DOM without encoding or properly sanitizing it first.  \n\n## PoC:\n```\nhttps://sandbox.open-xchange.com/guard/reader/reader.html?templid=1%27%22%3E%3Cscript%3Ealert%28%27XSS%20@%20%27%2bdocument.domain%29%3C%2fscript%3E\n```\n{F116282}\n\n## Vulnerable script/code:\n\n```\ntemplid = getURLParameter(\"templid\");\nif (templid == null || isNaN(parseInt(templid))) {   // If no clean template ID, see if we have a default from config.js\n[...]\n}\nif (templid !== null) {\n    $('head').append('\u003clink rel=\"stylesheet\" type=\"text/css\" href=\"./templates/' + templid + '-style.css\"\u003e');\n}\n```\n\n## Details\n\nQuick comparison with the previous code:\n\n```\n$ git diff b67aed12e6184cd06e24253154eab83925ff1fc7 7fdbd307662f0041ed5e45b2f73c6530b79c6124\n\n[...]\n-if (templid == null) {   // If no template ID, see if we have a default from config.js\n+if (templid == null || isNaN(parseInt(templid))) {   // If no clean template ID, see if we have a default from config.js\n[...]\n```\n\n`isNaN(parseInt(templid))` was apparently added to check whether the `templid` variable contains a number, and nothing else. Expected behavior seems to be that only a \"clean\" number can be parsed by `parseInt()`, which would otherwise return `NaN`, causing `isNaN()` to return `true`, leading `templid` to be overwritten with a safe value inside the If statement. \n\nThe problem with this approach is that `parseInt()` does not simply attempt to convert the entire supplied parameter to an integer. Instead, as the name suggests, `parseInt()` tries to **parse** the parameter. Quote from [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt):\n\n\u003e **_Return value_**\n\u003e An integer number parsed from the given string. If the **first** character cannot be converted to a number, NaN is returned.\n\nConsequently, any HTML/JS code preceded by a number will pass the `isNaN(parseInt(templid))` check.\n\nExamples:\n\n```\n\u003e parseInt(\"Hello\");\nNaN\n\n\u003e parseInt(\"4ello\");\n4\n\n\u003e isNaN(parseInt(\"Hello\"));\ntrue\n\n\u003e isNaN(parseInt(\"4ello\"));\nfalse\n```\n","bounty_amount":"500.0","formatted_bounty":"$500","weakness":{"id":60,"name":"Cross-site Scripting (XSS) - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":116282,"file_name":"xss.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/116/282/cf93d6b101f8bb9fdbe7d209436be43f292c26e6/xss.png?response-content-disposition=attachment%3B%20filename%3D%22xss.png%22%3B%20filename%2A%3DUTF-8%27%27xss.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ4NIHB2M2%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T134913Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJGMEQCIE3FUcgRK7FM%2F7U9PAkh6%2BI7wZViD1MP1Y8qZWLRN1eUAiAgc4SQu0yGJV%2BOQRn82JsTD2%2Bd2fHZQycxL60pz%2B7CjyqDBAjt%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIMkR9JAvrXeOfq9Rc6KtcDp5bGOpV6FTgydp%2FZOb6Bh6HFPtwnCVZfa015OiSuBfCxPwur%2F7aSPKTNE0sy0w9C45qL0zZ1nOQQos0M24uDH67J2wRZXM50ImEA29W1ENYnCggW3Oj1ThbKF4WgRsg%2F9mjcm%2BZmkVxvLoYJ9V%2BPAToGVUPNdCuARshEYKICR0Xo5x6JoDNaCt8Ld9eGqOBMXV3rned7uAPh8EmsbYJGE3kgeYkoAT36Qaqe4UgPgyO9VFwa9aDWRX%2B50CKWSjbjZzr%2BF%2B9jH4MB%2FxFZ4EWRHEor6ZAw08vWfwqAZLqqZdMNm9vuS82Y9DrOKW2mwiXSVAN3ddQvsOMXsKnTXkUhnfuaQmZvTtYFFm%2BIF8eMq92q4rbYHzak7PfNtWyYQ5raA9JIgznaWFJzJX%2BJlzu%2Bu3r2q3jjPLUM80AxozLcRqWVvYBpiIJlFx45cKPkX%2F2%2BeKoncWc%2B6ePWFPme30ZUDKqp6naa4cEDN31MhQC6Orokr1YD%2FJvOnl4SUarbB1%2BVgfPNBbXbzGIn%2BQ51fempHBLdSWygAxQb8EgPDJYVXZxvBJySlPreu1xMH98Dq97W1%2FcRuSdU1ytWMJPT5MEKol3iFlX9S3vBhB4zpCiL0Qjhs8rBVdayMKLXkIsGOqYB2%2BJTBbMxNO8iefRZNNANeiPRoGrUFs7jVSy6MeL55bB1oEjsBrS1ldm2HFxpIsKxeGY%2Fw5R4r6d07DNpzBAlMx0mvj%2FrMVfwHZDUaLkkIW7L5kfZJyauAUQfU1Yr9%2Flzl1bTl9jiK08pDtPhZS7%2FjLscylmOg0jy%2BlazgeqN9hRW54AGkI6XkZty9qqJMe%2BYbSVGEfkYqEbJxp7dv5pFW%2Ftu9oswsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=a5656a2cfe3ad82b3783451753bd2d9280d1d82ad96ad8da4a8b7c701c323fdc","file_size":35372,"type":"image/png"}],"allow_singular_disclosure_at":"2017-12-19T20:09:11.833Z","allow_singular_disclosure_after":-120246001.35932778,"singular_disclosure_allowed":true,"vote_count":12,"voters":["sp1d3rs","1337fenrir","bugdiscloseguys","eveeez","cr4xerbik4sh","bigbug","sumit7","666reda","spetr0x","a1905813079","and 2 more..."],"severity":{"rating":"medium","author_type":"Team"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":1173678,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thanks for the report, we're looking into it.","automated_response":false,"created_at":"2016-09-05T09:12:12.426Z","updated_at":"2016-09-05T09:12:12.426Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1214817,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","automated_response":false,"created_at":"2016-09-25T12:26:31.281Z","updated_at":"2016-09-25T12:26:31.281Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"dejavuln","url":"/dejavuln"},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1215682,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","automated_response":false,"created_at":"2016-09-26T08:27:47.258Z","updated_at":"2016-09-26T08:27:47.258Z","actor":{"url":"/open-xchange","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Open-Xchange"}},"bounty_amount":"500.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"open-xchange","collaborator":{"username":"dejavuln","url":"/dejavuln"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2168842,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2017-11-19T20:09:11.783Z","updated_at":"2017-11-19T20:09:11.783Z","first_to_agree":true,"actor":{"username":"dejavuln","cleared":false,"url":"/dejavuln","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/045/064/2158310e1f704a15f20abf07331e73795f2e8153_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2236071,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2017-12-19T20:09:13.753Z","updated_at":"2017-12-19T20:09:13.753Z","actor":{"url":"/open-xchange","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Open-Xchange"}},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4916982,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","automated_response":false,"created_at":"2019-05-24T12:18:01.482Z","updated_at":"2019-05-24T12:18:01.482Z","additional_data":{"old_severity":null,"new_severity":"Medium","old_severity_id":null,"new_severity_id":401086},"actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}