{"id":906433,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC85MDY0MzM=","url":"https://hackerone.com/reports/906433","title":"Android WebViews in Twitter app are vulnerable to UXSS due to configuration and CVE-2020-6506","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2020-06-23T22:02:23.714Z","submitted_at":"2020-06-23T22:02:23.714Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"alesandroortiz","url":"/alesandroortiz","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/281/801/9c6833231ccd8fb957dfd04cc325d7ea2cf4b81b_original.png/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":61,"url":"https://hackerone.com/twitter","handle":"twitter","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/061/85a63a443f017ad8353de4f68ebf52fdd61c345a_original./43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/061/85a63a443f017ad8353de4f68ebf52fdd61c345a_original./fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"Twitter","twitter_handle":"twittersecurity","website":"https://twitter.com","about":"Twitter helps you create and share ideas and information instantly, without barriers."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2020-6506"],"singular_disclosure_disabled":false,"disclosed_at":"2020-09-24T19:11:25.599Z","bug_reporter_agreed_on_going_public_at":"2020-09-09T23:20:37.742Z","team_member_agreed_on_going_public_at":"2020-09-24T19:11:25.504Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"## Summary:\n\nCVSS score: 8.1 / High / CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:N\n\n**Embargo notice: Do Not Disclose publicly until https://crbug.com/1083819 is disclosed.**\n\nTwitter for Android is affected by a UXSS vulnerability due to its configuration of Android WebView and CVE-2020-6506.\n\nVendor mitigation is recommended to protect unpatched WebView users, due to its impact and ease of exploitation. Mitigation options which minimize breaking changes are provided for various use cases.\n\nAndroid WebView is the system component which allows Android apps to display web pages. Apps typically use Android WebView directly or via frameworks/libraries.\n\nCVE-2020-6506 is a universal cross-site scripting (UXSS) vulnerability in Android WebView which allows cross-origin iframes to execute arbitrary JavaScript in the top-level document. This vulnerability affects vendors which use Android WebView with a default configuration setting, and run on systems with Android WebView version prior to 83.0.4103.106.\n\nAll relevant details to understand and mitigate the vulnerability should be in this report. As an affected vendor, you may request access to the restricted crbug for full details and discussion, subject to acceptance by the Chromium Security Team. To request access, send me an email.\n\n## CVE-2020-6506 Details:\nEmbargo notice: Do Not Disclose publicly until https://crbug.com/1083819 is disclosed.\n\nAn Android WebView instance with WebSettings.setSupportMultipleWindows() kept at default or set to false allows an iframe on a different origin bypass same-origin policies and execute arbitrary JavaScript in the top document.\n\nTo perform the attack, an iframe can call window.open() with a javascript: URL. Other methods of opening a new window, such as a link with target=”_blank” and href=”javascript:...”, can also be used to perform the attack.\n\nPerforming the attack requires a single user interaction (a tap/click or a keypress). The malicious iframe does not need to be visible, and can obtain the keypress interaction while a user attempts to type in the top-level document (no direct iframe interaction required).\n\nThe patched version of Android WebView (83.0.4103.106) was released on Monday, June 15th, 2020: https://chromereleases.googleblog.com/2020/06/stable-channel-update-for-desktop_15.html\n\nVendors can and should mitigate CVE-2020-6506 to protect their users using unpatched Android WebView versions.\n\n## Vendor Details:\nTwitter for Android uses WebViews to render the URL in Video Website Cards. This type of Card uses the vulnerable WebView configuration, therefore there's two ways a user can reach the vulnerable WebView:\n1. Advertiser creates legitimate Video Website Card pointing to the advertiser URL, then shares it via regular Tweets or paid advertising campaigns.\n2. Attacker creates Video Website Card with the user-trusted target URL, then shares it via regular Tweets or paid advertising campaigns.\n\nIf the advertiser/target URL has a malicious or compromised iframe, the iframe can perform the UXSS attack with minimal user interaction (tap/click or keypress). If there's sensitive data in the WebView, it is vulnerable to exfiltration. Page contents and data can also be altered to benefit the attacker, such as requesting sensitive info from the user while purporting to be the advertiser/target URL.\n\nBased on Twitter's use case, the suggested solution is option 1a or 1b. The final determination is left to the vendor. Reference implementations for each option is available by request.\n\nIf none of these options appear suitable, please provide feedback to address concerns. Other vendors could have the same concerns, so your input is appreciated to best mitigate for all affected vendors.\n\n### Potential Solutions:\nVendors generally have two choices to mitigate for unpatched WebView users:\n1. Enable multiwindow support. If needed, implementation options exist to mimic single-window behavior and minimize breaking changes. Does not require multi-tab UI. Suitable for browsers and frameworks.\n2. Keep multiwindow support disabled, and strictly limit WebView rendering to trusted content only. Suitable for non-browser apps, and for frameworks when used in non-browser apps.\n\nDetailed choices:\n* Option 1a: Enable multiwindow support, and create a new tab in UI or block window creation.\n    * Suitable and preferred choice for browsers.\n    * Implementation: Set WebSettings.setSupportMultipleWindows() to true, and handle onCreateWindow() callback to create new tab in UI or block window creation.\n    * Potential downsides: If all window creation is blocked, user experience may be negative.\n\n* Option 1b: Enable multiwindow support, and mimic single-window behavior via WebView instance replacement.\n    * Suitable for browsers and frameworks. Preferred choice for frameworks.\n    * Potential implementation: Set WebSettings.setSupportMultipleWindows() to true, and handle onCreateWindow() callback to create a new WebView on top of existing WebView. Rebind any event listeners, state info, and other logic to the new WebView. Finally, destroy the old WebView as soon as possible.\n    * Potential downsides: May cause breaking changes if existing code expects a single WebView instance for duration of use.\nTo minimize breaking changes, vendor could add an abstraction layer to internally track WebView instances. The abstraction could perform necessary setup/cleanup for each instance to maintain current WebView behavior (such as JS injection on first page load or each page load, event listeners, state, etc.). The abstraction layer could then seamlessly provide existing interfaces to other layers.\n\n* Option 1c: Enable multiwindow support, and mimic single-window behavior via WebView instance reuse.\n    * Suitable for browsers and frameworks.\n    * Only if Option 1b is not feasible, and existing code expects a single WebView instance for duration of use. Minimizes breaking changes at the cost of complexity and fragility.\n    * Potential implementation: Set WebSettings.setSupportMultipleWindows() to true, and handle onCreateWindow() callback. In the callback, create a temporary WebView with shouldOverrideUrlLoading() which returns true (prevents loading) and stores the attempted URL in a variable. Filter the attempted URL to ensure it is a safe HTTP(S) URL, then call loadUrl() on the initial WebView with the attempted URL. Finally, destroy the temporary WebView when convenient.\n    * Potential downsides: May still cause breaking changes. May break if Android WebView behavior changes in future. Adds complexity which may be difficult to maintain.\n\n* Option 2: Keep multiwindow support disabled, and enforce strict origin allowlist.\n    * Suitable for non-browser apps, and for frameworks when used in non-browser apps.\n    * Because the vulnerability is not mitigated with this option, WebViews must only render first-party trusted content in top-level window and iframes. If using cross-origin iframes, they must be properly sandboxed. Cross-origin iframes must avoid sandbox=\"allow-popups allow-top-navigation allow-scripts\" because this allows exploitation.\n    * Potential downsides: Any bypass of origin filtering allows exploitation of unpatched WebView users. For frameworks with configurable origin allowlists, developers can misconfigure allowlists and make their apps vulnerable.\n\nAdjacent phishing mitigation: If the current page URL is not guaranteed to be shown to the user, origin allowlists are recommended to mitigate phishing risks. This is an adjacent vulnerability, but it's a good opportunity to mitigate it because URL filtering is likely to be implemented as part of the UXSS mitigation.\n\nAdditional implementation details for options 1a and 1b: When using multiple WebView instances simultaneously, ensure to destroy the background WebView, unload the background page, or handle background page events safely. Otherwise, background pages can perform actions which should only be allowed by a foreground page, which often cause other security issues.\n\n## Environment:\nDevice: Samsung Galaxy S10 + Emulated Android device\nOS version: Android 10 (on both devices)\nTwitter version: 8.50.0-release.02\n\n## Steps To Reproduce:\n\n### Prerequisites:\n* System with unpatched Android WebView (prior to version 83.0.4103.106)\n* Twitter Video Website Card with landing URL pointed to a PoC URL. (Provides WebView with WebSettings.setSupportMultipleWindows() kept at default or set to false.)\n  * PoC 1: https://twitter.com/AlesandroOrtizR/status/1275538453183238144 \n  * PoC 2: https://twitter.com/AlesandroOrtizR/status/1275538647702548480 \n\n### Steps To Reproduce, tap/click interaction, visible iframe:\n1. Using the PoC 1 Card, navigate to https://alesandroortiz.com/security/chromiumwebview/cve-2020-6506.html\n2. Tap/click iframe.\n\n### Steps To Reproduce, keypress interaction, hidden iframe:\n1. Using the PoC 2 Card, navigate to https://alesandroortiz.com/security/chromiumwebview/cve-2020-6506-keypress-2.html\n2. Tap the \"search this site\" input field to focus it. (This input field is in the parent page, not the iframe.)\n3. Start typing. Before/while you type, the focus will be stolen by the hidden iframe. After typing a character while the iframe input is focused, the attack is immediately performed. (This can be made more subtle by delaying the focus theft, see code comments.)\n\nExpected Behavior:\nJavaScript is not executed in top-level document. HTML is not written to top-level document and JS alert dialog is not shown (or a JS alert dialog is shown but with info from iframe document). \n\nObserved Behavior:\nJavaScript is executed in top-level document. HTML is written to top-level document, and if the WebView allows JS alert dialogs, a JS alert dialog is also shown with info from top-level document. \n\n## Supporting Material/References:\n\n  * twitter-cve-2020-6506.mp4: Screen recording of both reproduction cases.\n  * Twitter-CVE-2020-6506-Report.pdf: Original report in PDF, in case any formatting is missing or difficult to parse in HackerOne.\n\n**Embargo notice: Do Not Disclose publicly until https://crbug.com/1083819 is disclosed.**\n\n## Impact\n\nA malicious iframe on any page within the vulnerable WebView can perform a UXSS attack on the top-level document with minimal user interaction.","bounty_amount":"560.0","formatted_bounty":"$560","weakness":{"id":60,"name":"Cross-site Scripting (XSS) - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":880242,"file_name":"twitter-cve-2020-6506.mp4","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/NKjVv9TdkkJDzwifawjeN5Yg?response-content-disposition=attachment%3B%20filename%3D%22twitter-cve-2020-6506.mp4%22%3B%20filename%2A%3DUTF-8%27%27twitter-cve-2020-6506.mp4\u0026response-content-type=video%2Fmp4\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQZV3IBMDT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T154102Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJGMEQCIHx%2BIgfH0%2FRLQqbPD5vv6PNps92HY0yneL0kxkNwZHOyAiALrXRJqTvQQGm0xEkYGCB0kbPjUCCkzSeRztvcuetAYyqDBAjv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIM5FTPTB1nK4gXIBLuKtcDHmLbKhsWpyXKgWy1fAYOf0DZEqCEqF9ns7RwihS1bFM9%2BSDXYY0CmIqutWQhK5asoL8jbJZ39%2FJ2eai2SoxTlg3PhjMpNNSUfPFgauwX6vt%2FoeK9VnB1Hmqg6bCNA62qIJPnlTONluGngv604Y6CnYL9Se%2B%2BjgOpqhqmIOX9KlzGAoRM0Ci%2BrWGdELH8Q66bSHmapdLHPWMoGBEj%2BeruK3oCs%2BDaUQ1aE%2FEQ8R5PgqLM3Pq6DrZV9PlFixmkikk8SpDcsFEiT0Zw0gsy2qPz3z3BHAEuG64GguAhIs5FvYP7HbdpPv7rQz4QSDXgN3SIbVD0A4kcV1iNQpZyiw2rmdxuUWIk46d%2FT0u%2B7j9yAdfpDuPVKPDHJD35k0pB6VLe7RtlSwwvcDUa7LL6FJxvOPpupIMPSy51BJl9%2Bf8022a6pcy263zeRDGJjALAc6brW%2BvQoDUu%2FQP%2BdxwOLZvXCyyGJp2%2BK86jg8qU%2FLWZ4DVeR3bIO1n7Fw%2B53iFlBIMatC3ZSLlV1J7dSDCk74u6OWvql%2Brvb6q%2Bj8NHQK6luFckQV%2B9okMhTYuNniW3sHS8rjyNrrGhP8vMtxMzink9EL%2FmU0Oxusg2wmaXCDfIKpDDmspvZQv8MJ%2F%2FkIsGOqYBaz2hfRV48KDU0Mx0UomuXdEWK6oszm51EnI%2FeSepVmINgIWWggB7gENawN0rgfpMSIqQjB%2BpErtoDw1jNWaknZlAG9GLkCZ49lNHNirjr7iPk7LouunUzSZjaag8Yc19L8BAWjyLZnHXpqUZQRBSoqOcAoct3F46M7AzK2ewXHmh7aKY3cfAQTu9yVTJd2CDpuLtlyUDUa37BJ8%2F84puzgJS34jmeg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=2cfc8200c0d86bd746895f19b1cf4e82a6d0ebc2a744925bf9f2c429c2b7dd4e","file_size":8786444,"type":"video/mp4"},{"id":880243,"file_name":"Twitter-CVE-2020-6506-Report.pdf","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/bvCQgL2Ls85a1uUibx6AFTTn?response-content-disposition=attachment%3B%20filename%3D%22Twitter-CVE-2020-6506-Report.pdf%22%3B%20filename%2A%3DUTF-8%27%27Twitter-CVE-2020-6506-Report.pdf\u0026response-content-type=application%2Fpdf\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQZV3IBMDT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T154102Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJGMEQCIHx%2BIgfH0%2FRLQqbPD5vv6PNps92HY0yneL0kxkNwZHOyAiALrXRJqTvQQGm0xEkYGCB0kbPjUCCkzSeRztvcuetAYyqDBAjv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIM5FTPTB1nK4gXIBLuKtcDHmLbKhsWpyXKgWy1fAYOf0DZEqCEqF9ns7RwihS1bFM9%2BSDXYY0CmIqutWQhK5asoL8jbJZ39%2FJ2eai2SoxTlg3PhjMpNNSUfPFgauwX6vt%2FoeK9VnB1Hmqg6bCNA62qIJPnlTONluGngv604Y6CnYL9Se%2B%2BjgOpqhqmIOX9KlzGAoRM0Ci%2BrWGdELH8Q66bSHmapdLHPWMoGBEj%2BeruK3oCs%2BDaUQ1aE%2FEQ8R5PgqLM3Pq6DrZV9PlFixmkikk8SpDcsFEiT0Zw0gsy2qPz3z3BHAEuG64GguAhIs5FvYP7HbdpPv7rQz4QSDXgN3SIbVD0A4kcV1iNQpZyiw2rmdxuUWIk46d%2FT0u%2B7j9yAdfpDuPVKPDHJD35k0pB6VLe7RtlSwwvcDUa7LL6FJxvOPpupIMPSy51BJl9%2Bf8022a6pcy263zeRDGJjALAc6brW%2BvQoDUu%2FQP%2BdxwOLZvXCyyGJp2%2BK86jg8qU%2FLWZ4DVeR3bIO1n7Fw%2B53iFlBIMatC3ZSLlV1J7dSDCk74u6OWvql%2Brvb6q%2Bj8NHQK6luFckQV%2B9okMhTYuNniW3sHS8rjyNrrGhP8vMtxMzink9EL%2FmU0Oxusg2wmaXCDfIKpDDmspvZQv8MJ%2F%2FkIsGOqYBaz2hfRV48KDU0Mx0UomuXdEWK6oszm51EnI%2FeSepVmINgIWWggB7gENawN0rgfpMSIqQjB%2BpErtoDw1jNWaknZlAG9GLkCZ49lNHNirjr7iPk7LouunUzSZjaag8Yc19L8BAWjyLZnHXpqUZQRBSoqOcAoct3F46M7AzK2ewXHmh7aKY3cfAQTu9yVTJd2CDpuLtlyUDUa37BJ8%2F84puzgJS34jmeg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=392b1f4ee3eb51e1b5c0d580a4bb42ca69655b62ad1b7b453faf0bcf62b42a7a","file_size":70996,"type":"application/pdf"}],"allow_singular_disclosure_at":"2020-10-09T23:20:37.864Z","allow_singular_disclosure_after":-31681224.226512454,"singular_disclosure_allowed":true,"vote_count":30,"voters":["sourc7","mzfr","xnutronex","ali","hensis","demonia","dark_warlord14","khizer47","exception","zimmer75","and 20 more..."],"severity":{"rating":"high","score":8.1,"author_type":"User","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"none","user_interaction":"required","scope":"unchanged","confidentiality":"high","integrity":"high","availability":"none"}},"structured_scope":{"databaseId":1068,"asset_type":"GOOGLE_PLAY_APP_ID","asset_identifier":"com.twitter.android","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":8390878,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Thank you for your report @alesandroortiz,\n\nWe want to ask you a follow-up question to make sure we understand the impact of this behavior.\n\nYou state, \n\u003eA malicious iframe on any page within the vulnerable WebView can perform a UXSS attack on the top-level document with minimal user interaction.\n\nJust to confirm, if a WebView opens `example.com` website and an IFrame on this website exploits this vulnerability, the data on `example.com` will be compromised, but the data in Twitter's app will be safe.  Is this correct?\n\n\nThank you for thinking of Twitter security","automated_response":false,"created_at":"2020-06-24T01:40:45.293Z","updated_at":"2020-06-24T01:40:45.293Z","actor":{"username":"bugtriage-sophia","cleared":false,"url":"/bugtriage-sophia","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":8400216,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"Hello @bugtriage-sophia,\n\nThat's correct, in a scenario where the attacker's goal is to obtain data on `example.com`.\n\nAs far as I can tell, the Twitter app itself does not automatically provide any sensitive data or APIs to the Card's WebView.\n\nHowever, in another scenario, the attacker's goal could be to alter page contents to their benefit within the WebView. This can be used to procure data from the user while the user thinks they're entering data requested by `example.com`. Or show altered `user-trusted.example.com` contents indicating the next page is safe, and then send the user to a malicious website. Most if not all other XSS impact scenarios are possible.\n\nIn all scenarios, `example.com` can be `twitter.com` if a compromised/malicious iframe exists even on a single page on a trusted origin and no other mitigations are in place. Performing a UXSS attack on `twitter.com` is likely to be more effective within the Twitter app itself, compared to performing the attack on `twitter.com` in another vulnerable app.\n\nGiven that Google Chrome and other major browsers are not vulnerable to this UXSS, an attacker will be forced to use a popular vulnerable app, such as Twitter, to perform the attack against their target (whether the target's an individual or a wide audience).\n\nEven for patched WebView users, there's benefits to enabling multiwindow support in WebViews. Enabling also prevents unwanted top-level navigation to HTTPS URLs using the same technique. e.g. iframe in `example.com` obtains user interaction, then redirects top-level page to `attacker.com`. This top-level HTTPS navigation behavior does not allow phishing attacks in the Card's WebView because in most cases^ the URL of the current page is shown to the user, but it is still likely undesired behavior which can be used to redirect users to an ad or an attacker-controlled malicious page they did not intend to visit.\n\n^ Most cases, not all cases, because I found a vulnerability related to URL display, which I'll submit within a few days.\n\nRegards,\nAlesandro","automated_response":false,"created_at":"2020-06-24T22:02:24.330Z","updated_at":"2020-06-24T22:02:24.330Z","actor":{"username":"alesandroortiz","cleared":true,"url":"/alesandroortiz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/281/801/9c6833231ccd8fb957dfd04cc325d7ea2cf4b81b_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8400292,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"For reference, the activity for Video Website Cards is `/com/twitter/android/revenue/BrowserWithDockedVideoActivity.class`","automated_response":false,"created_at":"2020-06-24T22:10:05.929Z","updated_at":"2020-06-24T22:10:05.929Z","actor":{"username":"alesandroortiz","cleared":true,"url":"/alesandroortiz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/281/801/9c6833231ccd8fb957dfd04cc325d7ea2cf4b81b_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8400586,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Thanks for your response @alesandroortiz,\n\n\u003ePrerequisites:\nSystem with unpatched Android WebView (prior to version 83.0.4103.106)\nTwitter Video Website Card with landing URL pointed to a PoC URL. (Provides WebView with WebSettings.setSupportMultipleWindows() kept at default or set to false.)\nPoC 1: https://twitter.com/AlesandroOrtizR/status/1275538453183238144\nPoC 2: https://twitter.com/AlesandroOrtizR/status/1275538647702548480\n\nWe had a bit of trouble reproducing this behavior using your POC links. We tested this behavior using an Android 10 device and version `8.49.0` of Twitter's app.  You state this behavior can only be reproduced on systems with an unpatched Android WebView.  Can you tell us which Android devices currently use an unpatched Android WebView? \n\nThank you for thinking of Twitter security","automated_response":false,"created_at":"2020-06-24T23:11:30.270Z","updated_at":"2020-06-24T23:11:30.270Z","actor":{"username":"bugtriage-sophia","cleared":false,"url":"/bugtriage-sophia","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":8400721,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"Hello @bugtriage-sophia,\n\nI'm assuming https://twitter.com/ncctest4/status/1275927707671359489 is someone from Twitter Security? That account retweeted both PoCs. Please confirm. When done with verification, please delete the public Tweets in order to maintain Chromium embargo. I will also delete the PoC promoted-only Tweets once the issue has been fixed in the Twitter app, since my understanding is they may be visible to certain Twitter partners via data feeds.\n\nThe Android System WebView package, while a system package, is independent of Android OS version. This is the Play Store URL: https://play.google.com/store/apps/details?id=com.google.android.webview\n\nAny device which has not updated the Android System WebView package on/after June 15th is still vulnerable, regardless of Android OS version. Version `83.0.4103.106` of the WebView package was released on that day. You may also uninstall updates using the Play Store link above and tapping \"uninstall\".\n\nChromium team recommended vendors implement mitigations on their end for users who delay updating or cannot/do not update, to mitigate this issue for the largest number of users possible, as soon as possible The patch source has been publicly available since June 3rd and the patch is easily analyzable by bad actors, therefore in-the-wild exploitation has been a possibility since that date. Chromium will also disclose the CVE-2020-6506 report details in September.\n\nRegards,\nAlesandro","automated_response":false,"created_at":"2020-06-24T23:40:55.036Z","updated_at":"2020-06-24T23:48:28.075Z","actor":{"username":"alesandroortiz","cleared":true,"url":"/alesandroortiz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/281/801/9c6833231ccd8fb957dfd04cc325d7ea2cf4b81b_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8401159,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"FYI, report #906433 is a URL spoofing vulnerability which could be chained with this UXSS vulnerability to perform URL spoofing attacks on a wider-range of targets.","automated_response":false,"created_at":"2020-06-25T01:41:46.550Z","updated_at":"2020-06-25T01:41:46.550Z","actor":{"username":"alesandroortiz","cleared":true,"url":"/alesandroortiz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/281/801/9c6833231ccd8fb957dfd04cc325d7ea2cf4b81b_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8412156,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you for your report @alesandroortiz,\n\nWe are investigating the behavior you described and will get back to you when we have more information.\n\nThank you for thinking of Twitter security\n\n","automated_response":false,"created_at":"2020-06-25T22:05:54.881Z","updated_at":"2020-06-25T22:05:54.881Z","actor":{"username":"bugtriage-sophia","cleared":false,"url":"/bugtriage-sophia","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":8422482,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thank you for your report. We believe it may be a valid security issue and will investigate it further. It could take some time to find and update the root cause for an issue, so we thank you for your patience.\n\nThank you for helping keep Twitter secure!","automated_response":false,"created_at":"2020-06-26T18:35:48.388Z","updated_at":"2020-06-26T18:35:48.388Z","actor":{"username":"yongjink","cleared":false,"url":"/yongjink","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8473584,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Thank you for your patience @alesandroortiz\n\nAfter an investigation, we are having a bit of trouble understanding how this specific vulnerability impacts Twitter's app.  Our Android app uses \"Chrome Custom Tabs\" instead of WebViews to open 3rd party links, so it should not be impacted by this vulnerability. Is this assessment correct? If not, can you provide us a bit more information that explains how our app is impacted by this behavior? In addition, can you provide us a video that demonstrates this vulnerability on an official Twitter app, so we can ensure we fully understand your steps to reproduce?\n\nThank you for thinking of Twitter security","automated_response":false,"created_at":"2020-07-01T20:08:07.896Z","updated_at":"2020-07-01T20:08:22.175Z","actor":{"username":"bugtriage-sophia","cleared":false,"url":"/bugtriage-sophia","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":8474174,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"Hello @bugtriage-sophia,\n\nThe assessment is mostly correct. Most 3rd party links do open in a Chrome Custom Tab. However, a Video Website Card will also open 3rd party URLs and does so using a custom WebView with the vulnerable configuration.\n\nTo quote the report:\n\u003e Twitter for Android uses WebViews to render the URL in Video Website Cards.\n\nThe video was provided in the report: Attachment F880242\n\nThe video uses the Tweets linked in the report. Those Tweets contain the Video Website Cards which load the 3rd party URL (attacker URL). The video demonstrates that when a user taps a Video Website Card, the Twitter app opens a vulnerable WebView (instead of a Chrome Custom Tab) and renders the attacker URL.\n\nBelow are clearer repro steps for Scenario 1:\n1. View this Tweet which contains the Video Website Card: https://twitter.com/AlesandroOrtizR/status/1275538453183238144\n2. Tap/click the Video Website Card in the Tweet, which loads the attacker URL in vulnerable WebView (`https://alesandroortiz.com/security/chromiumwebview/cve-2020-6506.html`)\n3. Tap/click iframe.\n\nRegards,\nAlesandro","automated_response":false,"created_at":"2020-07-01T21:26:08.787Z","updated_at":"2020-07-01T21:26:08.787Z","actor":{"username":"alesandroortiz","cleared":true,"url":"/alesandroortiz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/281/801/9c6833231ccd8fb957dfd04cc325d7ea2cf4b81b_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8475086,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you once again for your response @alesandroortiz,\n\nWe have resumed our investigation of the behavior you described and will get back to you when we have more information.\n\nThank you for thinking of Twitter security.","automated_response":false,"created_at":"2020-07-02T00:43:07.510Z","updated_at":"2020-07-02T00:43:07.510Z","actor":{"username":"bugtriage-sophia","cleared":false,"url":"/bugtriage-sophia","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":8521529,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you for your patience @alesandroortiz,\n\nWe are still investigating the behavior you described. However, we have finished our initial assessment, so you can now delete your POC Tweets to prevent this attack from being leaked to the public. \n\nIf you could delete these public POCs as soon as possible, it would be much obliged. \n\nThank you for thinking of Twitter security.","automated_response":false,"created_at":"2020-07-06T21:51:15.492Z","updated_at":"2020-07-06T21:51:15.492Z","actor":{"username":"bugtriage-sophia","cleared":false,"url":"/bugtriage-sophia","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":8521566,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @bugtriage-sophia,\n\nThanks for update, I've deleted the PoC Tweets for this report. Let me know if you need more info or have any questions.\n\nRegards,\nAlesandro","automated_response":false,"created_at":"2020-07-06T21:58:07.958Z","updated_at":"2020-07-06T21:59:20.864Z","actor":{"username":"alesandroortiz","cleared":true,"url":"/alesandroortiz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/281/801/9c6833231ccd8fb957dfd04cc325d7ea2cf4b81b_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8746121,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thank you for your report. We believe it may be a valid security issue and will investigate it further. It could take some time to find and update the root cause for an issue, so we thank you for your patience.\n\nThank you for helping keep Twitter secure!","automated_response":false,"created_at":"2020-07-24T18:03:13.611Z","updated_at":"2020-07-24T18:03:13.611Z","actor":{"username":"yongjink","cleared":false,"url":"/yongjink","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8771594,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Thanks again. As mentioned we’ll keep you updated as we investigate further. As a reminder, please remember to keep the details of this report private until we have fully investigated and addressed the issue.","automated_response":false,"created_at":"2020-07-27T19:55:51.197Z","updated_at":"2020-07-27T19:55:51.197Z","actor":{"url":"/twitter","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/061/85a63a443f017ad8353de4f68ebf52fdd61c345a_original./fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Twitter"}},"bounty_amount":"560.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"twitter","collaborator":{"username":"alesandroortiz","url":"/alesandroortiz"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8771611,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for bounty! Let me know if you need more info, have any questions, or have a build ready for mitigation verification.","automated_response":false,"created_at":"2020-07-27T19:58:13.500Z","updated_at":"2020-07-27T19:58:13.500Z","actor":{"username":"alesandroortiz","cleared":true,"url":"/alesandroortiz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/281/801/9c6833231ccd8fb957dfd04cc325d7ea2cf4b81b_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8858980,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"We consider this issue to be fixed now. Can you please confirm?\n\nThank you for helping keep Twitter secure!","automated_response":false,"created_at":"2020-08-05T20:56:56.522Z","updated_at":"2020-08-05T20:56:56.522Z","actor":{"username":"yongjink","cleared":false,"url":"/yongjink","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"alesandroortiz","url":"/alesandroortiz"},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8859906,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @yongjink,\n\nVerified as mitigated in version 8.56.0-release.00 (released August 3rd) via behavioral testing and code analysis. I see option 1a was used to mitigate and new window creation is blocked. The mitigation is enabled if the `android_webview_ANDROID_64173_workaround_enabled` experiment flag is enabled (disabled by default in code, but presumably rolled out to everyone now.)\n\nThanks for mitigating on your end!\n\nRegards,\nAlesandro","automated_response":false,"created_at":"2020-08-06T00:39:06.919Z","updated_at":"2020-08-06T00:39:06.919Z","actor":{"username":"alesandroortiz","cleared":true,"url":"/alesandroortiz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/281/801/9c6833231ccd8fb957dfd04cc325d7ea2cf4b81b_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8898445,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"As an FYI, https://crbug.com/1083819 is scheduled to be disclosed on or around September 9, 2020 by the Chromium Security Team. The crbug report does not directly identify any affected vendors. However, affected vendors should strive to mitigate the vulnerability for unpatched WebView users before the disclosure date, to help prevent in-the-wild exploitation.\n\nThanks again for mitigating in the Twitter app! No further action necessary other than pushing the update out to as many users as possible.","automated_response":false,"created_at":"2020-08-10T21:28:56.434Z","updated_at":"2020-08-10T21:29:10.992Z","actor":{"username":"alesandroortiz","cleared":true,"url":"/alesandroortiz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/281/801/9c6833231ccd8fb957dfd04cc325d7ea2cf4b81b_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9175657,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Requesting disclosure, since this is scheduled to be disclosed in a few hours. An article on CVE-2020-6506 will also be up on https://AlesandroOrtiz.com\n\nPlease verify that https://crbug.com/1083819 is publicly accessible before accepting the disclosure request.","automated_response":false,"created_at":"2020-09-09T23:20:37.782Z","updated_at":"2020-09-09T23:20:37.782Z","first_to_agree":true,"actor":{"username":"alesandroortiz","cleared":true,"url":"/alesandroortiz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/281/801/9c6833231ccd8fb957dfd04cc325d7ea2cf4b81b_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9183264,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"CVE-2020-6506 is now disclosed: https://alesandroortiz.com/articles/uxss-android-webview-cve-2020-6506/\n\nYou may disclose this report.","automated_response":false,"created_at":"2020-09-10T19:31:36.833Z","updated_at":"2020-09-10T19:31:36.833Z","actor":{"username":"alesandroortiz","cleared":true,"url":"/alesandroortiz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/281/801/9c6833231ccd8fb957dfd04cc325d7ea2cf4b81b_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9322202,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2020-09-24T19:11:25.536Z","updated_at":"2020-09-24T19:11:25.536Z","actor":{"username":"agoldman","cleared":false,"url":"/agoldman","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9322203,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2020-09-24T19:11:25.637Z","updated_at":"2020-09-24T19:11:25.637Z","actor":{"username":"agoldman","cleared":false,"url":"/agoldman","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9322370,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@agoldman: Thanks for disclosing.","automated_response":false,"created_at":"2020-09-24T19:23:22.297Z","updated_at":"2020-09-24T19:23:22.297Z","actor":{"username":"alesandroortiz","cleared":true,"url":"/alesandroortiz","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/281/801/9c6833231ccd8fb957dfd04cc325d7ea2cf4b81b_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"twitter","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"id":24595,"category":"researcher","content":"More details on CVE-2020-6506 available at: https://alesandroortiz.com/articles/uxss-android-webview-cve-2020-6506/","can_view?":true,"can_create?":false,"attachments":[],"user":{"id":281801,"username":"alesandroortiz","name":"Alesandro Ortiz","bio":"","cleared":true,"website":"https://AlesandroOrtiz.com","location":"","created_at":"2018-05-24T05:05:41.479Z","url":"https://hackerone.com/alesandroortiz","anc_triager":false,"hackerone_triager":false,"hackerone_employee":null,"user_type":"hacker","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/281/801/9c6833231ccd8fb957dfd04cc325d7ea2cf4b81b_original.png/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/000/281/801/9c6833231ccd8fb957dfd04cc325d7ea2cf4b81b_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c","xtralarge":"https://profile-photos.hackerone-user-content.com/variants/000/281/801/9c6833231ccd8fb957dfd04cc325d7ea2cf4b81b_original.png/c11036e2d3f8b05af4b5da5984ccdec6f786b763c8abceb4e68042e10dcdae85"}}}]}