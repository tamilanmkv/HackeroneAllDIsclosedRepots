{"id":508184,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC81MDgxODQ=","url":"https://hackerone.com/reports/508184","title":"Persistent XSS in Note objects","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2019-03-12T04:17:55.553Z","submitted_at":"2019-03-12T04:17:55.553Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"saltyyolk","url":"/saltyyolk","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/252/596/b03010470e2928f744f71fb5c1685806f1878341_original.jpeg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":264,"url":"https://hackerone.com/gitlab","handle":"gitlab","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/264/8dd359f496ba6c5b97c5126dc86924a00fd7ef26_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/264/8dd359f496ba6c5b97c5126dc86924a00fd7ef26_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"GitLab","twitter_handle":"gitlab","website":"https://about.gitlab.com","about":"A single application for the entire software development lifecycle."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2019-07-19T00:03:17.197Z","bug_reporter_agreed_on_going_public_at":"2019-07-19T00:03:17.100Z","team_member_agreed_on_going_public_at":"2019-07-18T16:50:47.322Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"**Summary:**\nSome cache invalidation and project import logic issues enable an attacker to import a project with XSS payloads in places like MR discussions and similar places where a Note object exists.\n\n**Description:**\nThere are basically 3 issues causing the XSS here:\nAll attributes of Note objects are controllable in `project.json`, for example `note_html` and `cached_markdown_version`.\n\nNow I can control the value of `note_html` to contain my XSS payload, but the problem is that the value of this field is a `CacheMarkdownField`, it's regenerated from the value of `note` during new object creation (when `note_object.note_html_invalidated?` returns true). The next question is how to trick GitLab that the field does not need to be regenerated.\n\nin `app/models/concerns/cache_markdown_field.rb`\n```\n      define_method(invalidation_method) do\n        changed_fields = changed_attributes.keys\n        invalidations  = changed_fields \u0026 [markdown_field.to_s, *INVALIDATED_BY]\n        invalidations.delete(markdown_field.to_s) if changed_fields.include?(\"#{markdown_field}_html\")\n\n        !invalidations.empty? || !cached_html_up_to_date?(markdown_field)\n      end\n```\n\nThere are 2 checks here (also the last 2 issues):\nthe first one is:\n```\n        INVALIDATED_BY = %w[author project].freeze\n...\n        invalidations  = changed_fields \u0026 [markdown_field.to_s, *INVALIDATED_BY]\n        invalidations.delete(markdown_field.to_s) if changed_fields.include?(\"#{markdown_field}_html\")\n```\n\n```\nnote_object.changed_attributes.keys\n=\u003e [\"note\", \"noteable_type\", \"author_id\", \"created_at\", \"updated_at\", \"project_id\", \"line_code\", \"position\", \"original_position\", \"note_html\", \"cached_markdown_version\", \"change_position\", \"attachment\"]\n```\n\nThis check is, unfortunately, voided because\n+ Neither `author` nor `project` is in the changed_attributes list, but `author_id` and `project_id`\n+ `note` is deleted from `invalidations` because `note_html` is also changed\nSo invalidations is empty.\n\nand the other one is:\n```\n!cached_html_up_to_date?(markdown_field)\n```\nIt basically checks whether attribute `cached_markdown_version` equals to `latest_cached_markdown_version`\nThis is really interesting, because I found that `latest_cached_markdown_version` is always 917504 in my GitLab instance (also gitlab.com). Looks like `local_version` is always 0 for at least Notes in MR.\n\n```\n  def latest_cached_markdown_version\n    @latest_cached_markdown_version ||= (CacheMarkdownField::CACHE_COMMONMARK_VERSION \u003c\u003c 16) | local_version\n  end\n\n  def local_version\n    return local_markdown_version if has_attribute?(:local_markdown_version)\n\n    settings = Gitlab::CurrentSettings.current_application_settings\n\n    if settings.respond_to?(:local_markdown_version)\n      settings.local_markdown_version\n    else\n      0\n    end\n  end\n```\n\nFinally, I could set `note_html` to the XSS payload, and `cached_markdown_version` to the magic number to avoid my payload being overwritten by GitLab. :P\n\n\n## Steps To Reproduce:\n\n(Add details for how we can reproduce the issue)\n\n  1. Create an export of a project with at least 1 discussion in at least 1 merge request.\n  1. Modify the project.json, add field `note_html` and `cached_markdown_version`\n\n```\n      \"notes\": [\n        {\n          \"id\": 1,\n          \"note\": \"interesting note here\",\n          \"note_html\": \"\u003cimg src=\\\"test\\\" onerror=\\\"alert(document.domain)\\\"\u003e\u003c/img\u003ehtml overwritten\",\n          \"cached_markdown_version\": 917504,\n```\n\n  1. Import the modified project\n  1. View the only discussion of the imported project.\n\n## Supporting Material/References:\n\nCheck `https://gitlab.com/Nyangawa/xss/merge_requests/1`, you should be able to see a pop-up.\n\n## Impact\n\nThis is a typical persistent XSS issue and the link I mentioned above is accessible publicly, so all GitLab users are vulnerable theoretically.","vulnerability_information_html":"\u003cp\u003e\u003cstrong\u003eSummary:\u003c/strong\u003e\u003cbr\u003e\nSome cache invalidation and project import logic issues enable an attacker to import a project with XSS payloads in places like MR discussions and similar places where a Note object exists.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eDescription:\u003c/strong\u003e\u003cbr\u003e\nThere are basically 3 issues causing the XSS here:\u003cbr\u003e\nAll attributes of Note objects are controllable in \u003ccode\u003eproject.json\u003c/code\u003e, for example \u003ccode\u003enote_html\u003c/code\u003e and \u003ccode\u003ecached_markdown_version\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eNow I can control the value of \u003ccode\u003enote_html\u003c/code\u003e to contain my XSS payload, but the problem is that the value of this field is a \u003ccode\u003eCacheMarkdownField\u003c/code\u003e, it\u0026#39;s regenerated from the value of \u003ccode\u003enote\u003c/code\u003e during new object creation (when \u003ccode\u003enote_object.note_html_invalidated?\u003c/code\u003e returns true). The next question is how to trick GitLab that the field does not need to be regenerated.\u003c/p\u003e\n\n\u003cp\u003ein \u003ccode\u003eapp/models/concerns/cache_markdown_field.rb\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e      define_method(invalidation_method) do\n        changed_fields = changed_attributes.keys\n        invalidations  = changed_fields \u0026amp; [markdown_field.to_s, *INVALIDATED_BY]\n        invalidations.delete(markdown_field.to_s) if changed_fields.include?(\u0026quot;#{markdown_field}_html\u0026quot;)\n\n        !invalidations.empty? || !cached_html_up_to_date?(markdown_field)\n      end\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere are 2 checks here (also the last 2 issues):\u003cbr\u003e\nthe first one is:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e        INVALIDATED_BY = %w[author project].freeze\n...\n        invalidations  = changed_fields \u0026amp; [markdown_field.to_s, *INVALIDATED_BY]\n        invalidations.delete(markdown_field.to_s) if changed_fields.include?(\u0026quot;#{markdown_field}_html\u0026quot;)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003enote_object.changed_attributes.keys\n=\u0026gt; [\u0026quot;note\u0026quot;, \u0026quot;noteable_type\u0026quot;, \u0026quot;author_id\u0026quot;, \u0026quot;created_at\u0026quot;, \u0026quot;updated_at\u0026quot;, \u0026quot;project_id\u0026quot;, \u0026quot;line_code\u0026quot;, \u0026quot;position\u0026quot;, \u0026quot;original_position\u0026quot;, \u0026quot;note_html\u0026quot;, \u0026quot;cached_markdown_version\u0026quot;, \u0026quot;change_position\u0026quot;, \u0026quot;attachment\u0026quot;]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis check is, unfortunately, voided because\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eNeither \u003ccode\u003eauthor\u003c/code\u003e nor \u003ccode\u003eproject\u003c/code\u003e is in the changed_attributes list, but \u003ccode\u003eauthor_id\u003c/code\u003e and \u003ccode\u003eproject_id\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003enote\u003c/code\u003e is deleted from \u003ccode\u003einvalidations\u003c/code\u003e because \u003ccode\u003enote_html\u003c/code\u003e is also changed\nSo invalidations is empty.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eand the other one is:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e!cached_html_up_to_date?(markdown_field)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIt basically checks whether attribute \u003ccode\u003ecached_markdown_version\u003c/code\u003e equals to \u003ccode\u003elatest_cached_markdown_version\u003c/code\u003e\u003cbr\u003e\nThis is really interesting, because I found that \u003ccode\u003elatest_cached_markdown_version\u003c/code\u003e is always 917504 in my GitLab instance (also gitlab.com). Looks like \u003ccode\u003elocal_version\u003c/code\u003e is always 0 for at least Notes in MR.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e  def latest_cached_markdown_version\n    @latest_cached_markdown_version ||= (CacheMarkdownField::CACHE_COMMONMARK_VERSION \u0026lt;\u0026lt; 16) | local_version\n  end\n\n  def local_version\n    return local_markdown_version if has_attribute?(:local_markdown_version)\n\n    settings = Gitlab::CurrentSettings.current_application_settings\n\n    if settings.respond_to?(:local_markdown_version)\n      settings.local_markdown_version\n    else\n      0\n    end\n  end\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eFinally, I could set \u003ccode\u003enote_html\u003c/code\u003e to the XSS payload, and \u003ccode\u003ecached_markdown_version\u003c/code\u003e to the magic number to avoid my payload being overwritten by GitLab. :P\u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003cp\u003e(Add details for how we can reproduce the issue)\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eCreate an export of a project with at least 1 discussion in at least 1 merge request.\u003c/li\u003e\n\u003cli\u003eModify the project.json, add field \u003ccode\u003enote_html\u003c/code\u003e and \u003ccode\u003ecached_markdown_version\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e      \u0026quot;notes\u0026quot;: [\n        {\n          \u0026quot;id\u0026quot;: 1,\n          \u0026quot;note\u0026quot;: \u0026quot;interesting note here\u0026quot;,\n          \u0026quot;note_html\u0026quot;: \u0026quot;\u0026lt;img src=\\\u0026quot;test\\\u0026quot; onerror=\\\u0026quot;alert(document.domain)\\\u0026quot;\u0026gt;\u0026lt;/img\u0026gt;html overwritten\u0026quot;,\n          \u0026quot;cached_markdown_version\u0026quot;: 917504,\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003col\u003e\n\u003cli\u003eImport the modified project\u003c/li\u003e\n\u003cli\u003eView the only discussion of the imported project.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"supporting-material-references\"\u003eSupporting Material/References:\u003c/h2\u003e\n\n\u003cp\u003eCheck \u003ccode\u003ehttps://gitlab.com/Nyangawa/xss/merge_requests/1\u003c/code\u003e, you should be able to see a pop-up.\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eThis is a typical persistent XSS issue and the link I mentioned above is accessible publicly, so all GitLab users are vulnerable theoretically.\u003c/p\u003e\n","bounty_amount":"4500.0","formatted_bounty":"$4,500","weakness":{"id":62,"name":"Cross-site Scripting (XSS) - Stored"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":439816,"file_name":"Screen_Shot_2019-03-12_at_11.45.35_AM.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/439/816/b1321e628e8982c5ded514672072b7c6d449010d/Screen_Shot_2019-03-12_at_11.45.35_AM.png?response-content-disposition=attachment%3B%20filename%3D%22Screen_Shot_2019-03-12_at_11.45.35_AM.png%22%3B%20filename%2A%3DUTF-8%27%27Screen_Shot_2019-03-12_at_11.45.35_AM.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQRAVCXZTG%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T061202Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCDC1SbghdXLcy9ot06DANg74r5EiCC3XZ9CQGAdi%2BmbgIhALBQDzrYaszHyI6V41WOAEV%2Fa%2FxVgBgdKj18DrlZlW1RKrQDCFYQARoMMDEzNjE5Mjc0ODQ5IgxgXaQ5tEaz15kO93YqkQPMn8lqJM5b%2F2UF4vgQzRZODqw%2FjPEjzpD61mE7LpyVCQKuiixef4EDRyTs5YaVZ%2BSeI6BYbm829Q00SoHZnAn9tGULy0VEKf9Lyq8uAs7eAOStN9gpb9p9GsQ2vxpwHzC%2F%2FjQuXDX8lTd6eIkj3L4VFhPdt4MGf%2FwzTbeirX69pmEGa7VpqUl%2BzQFSRmiyNkLz0iIRuGyUxcUtEFnAa4dcYImN8d5Xmzj3VKwszN5CZZekG0f6wVgiDQt2PU05Sm4mXV8F7Zsd2gCjxy0LByxZo8wVIQRR7XpJjeAXw7Y%2BrcntwG4VG16O2JBB13PV47avtAluDB7xEmxCn7fC%2B0gCkgtqX5FvemeTqZkzDj%2BNAE87%2BEwY1GKygDSgK%2BDrUlCwwYU%2FB1k9vGEpOa46oz6dP6MWDopeRWpW%2Fh2qwIShnMsIk%2BmfjH9n%2FnOGNwWwQp93Hlr6OPw%2F8tYLstkLZrNH3jzkkWMoWcsrv71HzpJiG6RZtm22uXPNaQTbmOYqMX%2BCryjdGcVIctKAsj5EliP0zjCb4Kr%2FBTrqAW3ufL%2FR%2FpkxPRO%2BUhyyvDPzgPmCSraR2g7lBy3KlX6LZ3JukP4SRvLInSvSu0w4T7VQh0EVNyALDb1flUgqzAKwYanyEiiHqHeCF6g4fX5%2Fuz8knjUQsnKmjOQfBtyaMe0qlW%2BHWCfwsR%2Fh2SNKi%2BVT7%2FCT2Ct%2Fia0RQuGDOtTr7KGlRg89Qz6oCZtR4isqOEM5yt6saYHHNTOAelO07weXRwFwKuKqmrZYMA5sa9p7XKqJAwmjMWMyFxAcEDHOluiNcMsa9JfilicFsycW11kxP5ZdIbUgRRdK1IdlTu3Ykx5X3L1RmsfWjw%3D%3D\u0026X-Amz-Signature=d79749377aa764322f929e543edb505f66eaf88a424e4dec075e0291f2557275","file_size":177091,"type":"image/png"}],"allow_singular_disclosure_at":null,"vote_count":132,"voters":["sustenance","is-","byq","sp1d3rs","sultancad","bluething","bull","bl4de","spam404","rreiss","and 122 more..."],"severity":{"rating":"high","author_type":"Team"},"structured_scope":{"databaseId":18138,"asset_type":"URL","asset_identifier":"gitlab.com","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":4304439,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @nyangawa,\n\nThank you for submitting this report. We will investigate the issue as soon as possible.\nDue to our current workload, we will get back within 20 business days with an update.\n\nPlease refrain from submitting your report or inquiring about its status through\nadditional channels, as this unnecessarily binds resources in the security team.\n\nBest regards,\nGitLab Security Team\n","markdown_message":"\u003cp\u003eHi \u003ca href=\"/nyangawa\"\u003e@nyangawa\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThank you for submitting this report. We will investigate the issue as soon as possible.\u003cbr\u003e\nDue to our current workload, we will get back within 20 business days with an update.\u003c/p\u003e\n\n\u003cp\u003ePlease refrain from submitting your report or inquiring about its status through\u003cbr\u003e\nadditional channels, as this unnecessarily binds resources in the security team.\u003c/p\u003e\n\n\u003cp\u003eBest regards,\u003cbr\u003e\nGitLab Security Team\u003c/p\u003e\n","automated_response":true,"created_at":"2019-03-12T04:26:40.012Z","updated_at":"2019-03-12T04:26:40.012Z","actor":{"username":"gitlab-securitybot","cleared":false,"url":"/gitlab-securitybot","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":4306768,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"After some simple inspection, I think this issue affects most of the exportable objects which has any `cache_markdown_field`. For example, `title`, `description` of `Issue` and `title`, `description`, `content` of `Snippet` and so on. However, as the fix of these issues will be the same (probably in `app/models/concerns/cache_markdown_field.rb`?). And to save both your time and mine, I'm not going to submit more reports like this one. :P\n\nBest regards,\nLi\n","markdown_message":"\u003cp\u003eAfter some simple inspection, I think this issue affects most of the exportable objects which has any \u003ccode\u003ecache_markdown_field\u003c/code\u003e. For example, \u003ccode\u003etitle\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e of \u003ccode\u003eIssue\u003c/code\u003e and \u003ccode\u003etitle\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003econtent\u003c/code\u003e of \u003ccode\u003eSnippet\u003c/code\u003e and so on. However, as the fix of these issues will be the same (probably in \u003ccode\u003eapp/models/concerns/cache_markdown_field.rb\u003c/code\u003e?). And to save both your time and mine, I\u0026#39;m not going to submit more reports like this one. :P\u003c/p\u003e\n\n\u003cp\u003eBest regards,\u003cbr\u003e\nLi\u003c/p\u003e\n","automated_response":false,"created_at":"2019-03-12T10:48:01.731Z","updated_at":"2019-03-12T10:48:01.731Z","actor":{"username":"saltyyolk","cleared":false,"url":"/saltyyolk","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/252/596/b03010470e2928f744f71fb5c1685806f1878341_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4307743,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2019-03-12T13:27:49.525Z","updated_at":"2019-03-12T13:27:49.525Z","additional_data":{"old_severity":null,"new_severity":"High","old_severity_id":null,"new_severity_id":314819},"actor":{"username":"no-longer-with-company","cleared":false,"url":"/no-longer-with-company","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/072/324/c6fb0a069a32f1e9f503089aa18807ad593549e0_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4308093,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":".","markdown_message":"\u003cp\u003e.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-03-12T14:18:55.203Z","updated_at":"2019-03-12T14:27:52.509Z","actor":{"username":"no-longer-with-company","cleared":false,"url":"/no-longer-with-company","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/072/324/c6fb0a069a32f1e9f503089aa18807ad593549e0_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4308098,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Hello,\n\nThank you for submitting this report.\n\nWe have verified this finding and have escalated to our engineering team.  We will be tracking progress internally at https://gitlab.com/gitlab-org/gitlab-ce/issues/58856.  This issue will be made public 30 days following the release of a patch.\n\nWe will continue to update you via HackerOne as a patch is scheduled for release.\n\nBest regards,\nSecurity Team | GitLab Inc.","markdown_message":"\u003cp\u003eHello,\u003c/p\u003e\n\n\u003cp\u003eThank you for submitting this report.\u003c/p\u003e\n\n\u003cp\u003eWe have verified this finding and have escalated to our engineering team.  We will be tracking progress internally at \u003ca title=\"https://gitlab.com/gitlab-org/gitlab-ce/issues/58856\" href=\"/redirect?url=https%3A%2F%2Fgitlab.com%2Fgitlab-org%2Fgitlab-ce%2Fissues%2F58856\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://gitlab.com/gitlab-org/gitlab-ce/issues/58856\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.  This issue will be made public 30 days following the release of a patch.\u003c/p\u003e\n\n\u003cp\u003eWe will continue to update you via HackerOne as a patch is scheduled for release.\u003c/p\u003e\n\n\u003cp\u003eBest regards,\u003cbr\u003e\nSecurity Team | GitLab Inc.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-03-12T14:19:30.220Z","updated_at":"2019-03-12T14:19:30.220Z","actor":{"username":"no-longer-with-company","cleared":false,"url":"/no-longer-with-company","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/072/324/c6fb0a069a32f1e9f503089aa18807ad593549e0_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4313196,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"ETA for fix:\n\nHi @nyangawa,\n\nThe GitLab issue created from your report is currently scheduled for 2019-05-22.\n\nThank you again for contacting us!\n\nBest regards,\nGitLab Security Team\n","markdown_message":"\u003cp\u003eETA for fix:\u003c/p\u003e\n\n\u003cp\u003eHi \u003ca href=\"/nyangawa\"\u003e@nyangawa\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThe GitLab issue created from your report is currently scheduled for 2019-05-22.\u003c/p\u003e\n\n\u003cp\u003eThank you again for contacting us!\u003c/p\u003e\n\n\u003cp\u003eBest regards,\u003cbr\u003e\nGitLab Security Team\u003c/p\u003e\n","automated_response":true,"created_at":"2019-03-13T04:40:06.904Z","updated_at":"2019-03-13T04:40:06.904Z","actor":{"username":"gitlab-securitybot","cleared":false,"url":"/gitlab-securitybot","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":4981822,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Hi,\n\nThank you again for the report! Your finding has been patched in GitLab version 11.11.1 and we are awarding a bounty. Congratulations!\n\nPlease let us know if you find that our patch does not mitigate your finding. Your report will be published in 30 days in GitLab's issue tracker.\n\nWe look forward to your next report!\n\nBest regards,\nSecurity Team | GitLab Inc.\n","markdown_message":"\u003cp\u003eHi,\u003c/p\u003e\n\n\u003cp\u003eThank you again for the report! Your finding has been patched in GitLab version 11.11.1 and we are awarding a bounty. Congratulations!\u003c/p\u003e\n\n\u003cp\u003ePlease let us know if you find that our patch does not mitigate your finding. Your report will be published in 30 days in GitLab\u0026#39;s issue tracker.\u003c/p\u003e\n\n\u003cp\u003eWe look forward to your next report!\u003c/p\u003e\n\n\u003cp\u003eBest regards,\u003cbr\u003e\nSecurity Team | GitLab Inc.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-03T14:23:58.590Z","updated_at":"2019-06-03T14:23:58.590Z","actor":{"username":"no-longer-with-company","cleared":false,"url":"/no-longer-with-company","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/072/324/c6fb0a069a32f1e9f503089aa18807ad593549e0_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"saltyyolk","url":"/saltyyolk"},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4981843,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2019-06-03T14:24:07.880Z","updated_at":"2019-06-03T14:24:07.880Z","actor":{"url":"/gitlab","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/264/8dd359f496ba6c5b97c5126dc86924a00fd7ef26_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"GitLab"}},"bounty_amount":"4500.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"gitlab","collaborator":{"username":"saltyyolk","url":"/saltyyolk"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5361745,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-07-18T16:50:47.372Z","updated_at":"2019-07-18T16:50:47.372Z","first_to_agree":true,"actor":{"username":"no-longer-with-company","cleared":false,"url":"/no-longer-with-company","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/072/324/c6fb0a069a32f1e9f503089aa18807ad593549e0_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5365960,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-07-19T00:03:17.131Z","updated_at":"2019-07-19T00:03:17.131Z","actor":{"username":"saltyyolk","cleared":false,"url":"/saltyyolk","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/252/596/b03010470e2928f744f71fb5c1685806f1878341_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5365961,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-07-19T00:03:17.221Z","updated_at":"2019-07-19T00:03:17.221Z","actor":{"username":"saltyyolk","cleared":false,"url":"/saltyyolk","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/252/596/b03010470e2928f744f71fb5c1685806f1878341_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"gitlab","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}