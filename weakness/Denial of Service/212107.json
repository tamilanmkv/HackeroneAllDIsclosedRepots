{"id":212107,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yMTIxMDc=","url":"https://hackerone.com/reports/212107","title":"Null pointer dereference in mrb_class","state":"Closed","substate":"resolved","severity_rating":"low","readable_substate":"Resolved","created_at":"2017-03-10T00:58:59.157Z","submitted_at":"2017-03-10T00:58:59.157Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"dgaletic","url":"/dgaletic","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":15668,"url":"https://hackerone.com/shopify-scripts","handle":"shopify-scripts","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"shopify-scripts","twitter_handle":"","website":"","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2017-03-14T21:12:28.984Z","bug_reporter_agreed_on_going_public_at":"2017-03-14T21:12:28.948Z","team_member_agreed_on_going_public_at":"2017-03-14T21:11:17.091Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"The following code demonstrates a segfault in mruby and mruby-engine:\n\n    module A module A\n    ensure\n        module A module A module A module A\n        ensure\n            module A module A module A module A module A module A\n               a \n            ensure\n                module A\n                    yield\n                end\n            end end end end end end\n        end end end end\n    end end\n\nThe mruby crash is due to a null pointer dereference in `mrb_class` (class.h:50):\n\n    49│   default:\n    50├\u003e    return mrb_obj_ptr(v)-\u003ec;\n    51│   }\n\n(gdb) print mrb_obj_ptr(v)\n$1 = (struct RObject *) 0x0\n(gdb) print v\n$2 = {value = {f = 0, p = 0x0, i = 0, sym = 0}, tt = 49}\n\nThe sandbox crash happens during a call to KHASH_DEFINE (class.c:19). Examining the assembly suggests the crash happens when trying to dereference the rsi register:\n\n(gdb) x/i $rip\n=\u003e 0x7ffff402f490 \u003ckh_get_mt\u003e:  mov    eax,DWORD PTR [rsi]\n(gdb) p $rsi\n$4 = 32\n\nExamining mruby with Valgrind shows two invalid reads on the following line (vm.c:1867):\n\n    if (mrb_nil_p(stack[m1+r+m2])) {\n    \nValgrind output:\n\n    ==11371== Invalid read of size 4\n    ==11371==    at 0x41FCEB: mrb_vm_exec (vm.c:1867)\n    ==11371==    by 0x41B684: mrb_vm_run (vm.c:822)\n    ==11371==    by 0x42386C: mrb_run (vm.c:2570)\n    ==11371==    by 0x419D40: ecall (vm.c:314)\n    ==11371==    by 0x41EEF2: mrb_vm_exec (vm.c:1651)\n    ==11371==    by 0x41B684: mrb_vm_run (vm.c:822)\n    ==11371==    by 0x42386C: mrb_run (vm.c:2570)\n    ==11371==    by 0x419D40: ecall (vm.c:314)\n    ==11371==    by 0x41CAD1: mrb_vm_exec (vm.c:1132)\n    ==11371==    by 0x41B684: mrb_vm_run (vm.c:822)\n    ==11371==    by 0x42386C: mrb_run (vm.c:2570)\n    ==11371==    by 0x419D40: ecall (vm.c:314)\n    ==11371==  Address 0x56271f8 is 8 bytes after a block of size 16 alloc'd\n    ==11371==    at 0x4C2AB80: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n    ==11371==    by 0x4C2CF1F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n    ==11371==    by 0x40F300: mrb_default_allocf (state.c:60)\n    ==11371==    by 0x428156: mrb_realloc_simple (gc.c:201)\n    ==11371==    by 0x4281D8: mrb_realloc (gc.c:215)\n    ==11371==    by 0x4282A4: mrb_malloc (gc.c:236)\n    ==11371==    by 0x419A8A: mrb_env_unshare (vm.c:259)\n    ==11371==    by 0x419B33: cipop (vm.c:278)\n    ==11371==    by 0x41ED8E: mrb_vm_exec (vm.c:1624)\n    ==11371==    by 0x41B684: mrb_vm_run (vm.c:822)\n    ==11371==    by 0x42386C: mrb_run (vm.c:2570)\n    ==11371==    by 0x419D40: ecall (vm.c:314)\n    ==11371== \n    ==11371== Invalid read of size 4\n    ==11371==    at 0x41FD1B: mrb_vm_exec (vm.c:1867)\n    ==11371==    by 0x41B684: mrb_vm_run (vm.c:822)\n    ==11371==    by 0x42386C: mrb_run (vm.c:2570)\n    ==11371==    by 0x419D40: ecall (vm.c:314)\n    ==11371==    by 0x41EEF2: mrb_vm_exec (vm.c:1651)\n    ==11371==    by 0x41B684: mrb_vm_run (vm.c:822)\n    ==11371==    by 0x42386C: mrb_run (vm.c:2570)\n    ==11371==    by 0x419D40: ecall (vm.c:314)\n    ==11371==    by 0x41CAD1: mrb_vm_exec (vm.c:1132)\n    ==11371==    by 0x41B684: mrb_vm_run (vm.c:822)\n    ==11371==    by 0x42386C: mrb_run (vm.c:2570)\n    ==11371==    by 0x419D40: ecall (vm.c:314)\n    ==11371==  Address 0x56271f0 is 0 bytes after a block of size 16 alloc'd\n    ==11371==    at 0x4C2AB80: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n    ==11371==    by 0x4C2CF1F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n    ==11371==    by 0x40F300: mrb_default_allocf (state.c:60)\n    ==11371==    by 0x428156: mrb_realloc_simple (gc.c:201)\n    ==11371==    by 0x4281D8: mrb_realloc (gc.c:215)\n    ==11371==    by 0x4282A4: mrb_malloc (gc.c:236)\n    ==11371==    by 0x419A8A: mrb_env_unshare (vm.c:259)\n    ==11371==    by 0x419B33: cipop (vm.c:278)\n    ==11371==    by 0x41ED8E: mrb_vm_exec (vm.c:1624)\n    ==11371==    by 0x41B684: mrb_vm_run (vm.c:822)\n    ==11371==    by 0x42386C: mrb_run (vm.c:2570)\n    ==11371==    by 0x419D40: ecall (vm.c:314)\n    ==11371== \n    trace:\n\t    [15] crash_input:9\n\t    [14] crash_input:8\n\t    [12] crash_input:5\n\t    [11] crash_input:5\n\t    [10] crash_input:5\n\t    [9] crash_input:5\n\t    [8] crash_input:5\n\t    [6] crash_input:3\n\t    [5] crash_input:3\n\t    [4] crash_input:3\n\t    [3] crash_input:3\n\t    [1] crash_input:1\n\t    [0] crash_input:1\n    LocalJumpError: unexpected yield\n    ==11371== \n    ==11371== HEAP SUMMARY:\n    ==11371==     in use at exit: 0 bytes in 0 blocks\n    ==11371==   total heap usage: 4,735 allocs, 4,735 frees, 872,977 bytes allocated\n    ==11371== \n    ==11371== All heap blocks were freed -- no leaks are possible\n    ==11371== \n    ==11371== For counts of detected and suppressed errors, rerun with: -v\n    ==11371== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)\n\n    \nAs `m1`, `r` and `m2` are all 0 during the invalid reads, it seems `stack` is pointing beyond allocated memory. Note that running with Valgrind appears to change the behaviour of the program: it does not result in a segfault, raising a LocalJumpError instead.\n\nWe are still examining the bug and hope to provide a fix soon.\n\nTest platform:\nLinux Mint 17.3 (Cinnamon 64-bit), built with gcc version 4.8.4 (Ubuntu 4.8.4-2ubuntu1~14.04.3)\n\nmruby-engine SHA: 09be20e67888b20bebf9b0588bc3cbec7f55325f\nmruby/mruby submodule SHA: 63dbed00946afda34178a479cfa38fa78d620a00\n\nThank you,\nDinko Galetic\nDenis Kasak\n\n","bounty_amount":"800.0","formatted_bounty":"$800","weakness":{"id":48,"name":"Denial of Service"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2017-04-13T21:11:17.143Z","allow_singular_disclosure_after":-141843183.79137915,"singular_disclosure_allowed":true,"vote_count":2,"voters":["eveeez","spetr0x"],"severity":{"rating":"low","author_type":"User"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":1531214,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you for reporting this bug! This is an automated response to let you know that we've received your issue, and we'll process it as soon as possible.\n\nDue to the large volume of reports we have received, it may take us up to three weeks to respond. Thank you for your patience!","automated_response":true,"created_at":"2017-03-10T00:58:59.355Z","updated_at":"2017-03-10T00:58:59.355Z","actor":{"url":"/shopify-scripts","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"shopify-scripts"}},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1533357,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thank you for your report. We've reproduced the crash and opened an issue upstream: https://github.com/mruby/mruby/issues/3501","automated_response":false,"created_at":"2017-03-10T20:44:48.643Z","updated_at":"2017-03-10T20:44:48.643Z","actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1540229,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Thanks again for your report. This issue was resolved in the following upstream commit: https://github.com/mruby/mruby/commit/877f43bca5eb2d23610665dd8e03f04fa63c6b33\n\nOur next round of bounty decisions will take place within two weeks, so we'll be in touch with you again soon.","automated_response":false,"created_at":"2017-03-14T14:46:15.958Z","updated_at":"2017-03-14T14:46:15.958Z","actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"dgaletic","url":"/dgaletic"},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1541590,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Thanks for helping improve the security of Shopify and the MRuby project!","automated_response":false,"created_at":"2017-03-14T21:11:11.650Z","updated_at":"2017-03-14T21:11:11.650Z","actor":{"url":"/shopify-scripts","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"shopify-scripts"}},"bounty_amount":"800.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"shopify-scripts","collaborator":{"username":"dgaletic","url":"/dgaletic"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1541592,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2017-03-14T21:11:17.113Z","updated_at":"2017-03-14T21:11:17.113Z","first_to_agree":true,"actor":{"username":"andrewdunbar","cleared":false,"url":"/andrewdunbar","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/019/164/5b0e89675ed6dbb9df87223e9f8f58e2125bb56b_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1541602,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2017-03-14T21:12:28.965Z","updated_at":"2017-03-14T21:12:28.965Z","actor":{"username":"dgaletic","cleared":true,"url":"/dgaletic","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1541603,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2017-03-14T21:12:29.001Z","updated_at":"2017-03-14T21:12:29.001Z","actor":{"username":"dgaletic","cleared":true,"url":"/dgaletic","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}