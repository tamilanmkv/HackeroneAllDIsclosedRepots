{"id":665722,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC82NjU3MjI=","url":"https://hackerone.com/reports/665722","title":"“email” MFA mode allows bypassing MFA from victim’s device when the device trust is not expired","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2019-08-02T02:55:13.236Z","submitted_at":"2019-08-02T02:55:13.236Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"l1nkworld","url":"/l1nkworld","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/wJZjNYf89j799BNbqdwRV3nR/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":22746,"url":"https://hackerone.com/grammarly","handle":"grammarly","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/022/746/a2bf7f90c683af5214fcc74c1df6804286ee97ce_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/022/746/a2bf7f90c683af5214fcc74c1df6804286ee97ce_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Grammarly","twitter_handle":"","website":"https://www.grammarly.com","about":"Grammarly makes sure everything you type is clear, effective, and mistake-free."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-08-12T18:19:39.032Z","bug_reporter_agreed_on_going_public_at":"2019-08-12T18:19:38.878Z","team_member_agreed_on_going_public_at":"2019-08-12T17:00:22.857Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"**Summary:**\nIt is possible bypass MFA without the need to have the phone code.\n\n**Description:** \nWhen we turn on the MFA and we have the user and password of the user, it is possible bypass the MFA only changing some values the endpoint POST `auth.grammarly.com//v3/api/login`\n\n## Steps To Reproduce:\nNote: \n- Use burp suite or another tool to intercept the requests\n\n  1. Turn on and configure your MFA\n  2. Login with your email and password\n  3. The page of MFA is going to appear\n  4. Enter any random number\n  5. when you press the button \"sign in securely\" intercept the request POST `auth.grammarly.com/v3/api/login` and in the POST message change the fields:\n- `\"mode\":\"sms\"` by `\"mode\":\"email\"`\n-  `\"secureLogin\":true` by `\"secureLogin\":false`\n 6. send the modification and check, you are in your account! It was not necessary to enter the phone code.\n\n## Impact\n\nThe attacker can bypass the experimental MFA, If the attacker has the email and password, the attacker can login in the account without the need of the phone code.","vulnerability_information_html":"\u003cp\u003e\u003cstrong\u003eSummary:\u003c/strong\u003e\u003cbr\u003e\nIt is possible bypass MFA without the need to have the phone code.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eDescription:\u003c/strong\u003e \u003cbr\u003e\nWhen we turn on the MFA and we have the user and password of the user, it is possible bypass the MFA only changing some values the endpoint POST \u003ccode\u003eauth.grammarly.com//v3/api/login\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003cp\u003eNote: \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eUse burp suite or another tool to intercept the requests\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003col\u003e\n\u003cli\u003eTurn on and configure your MFA\u003c/li\u003e\n\u003cli\u003eLogin with your email and password\u003c/li\u003e\n\u003cli\u003eThe page of MFA is going to appear\u003c/li\u003e\n\u003cli\u003eEnter any random number\u003c/li\u003e\n\u003cli\u003ewhen you press the button \u0026quot;sign in securely\u0026quot; intercept the request POST \u003ccode\u003eauth.grammarly.com/v3/api/login\u003c/code\u003e and in the POST message change the fields:\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003e\u0026quot;mode\u0026quot;:\u0026quot;sms\u0026quot;\u003c/code\u003e by \u003ccode\u003e\u0026quot;mode\u0026quot;:\u0026quot;email\u0026quot;\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003e \u003ccode\u003e\u0026quot;secureLogin\u0026quot;:true\u003c/code\u003e by \u003ccode\u003e\u0026quot;secureLogin\u0026quot;:false\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003esend the modification and check, you are in your account! It was not necessary to enter the phone code.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eThe attacker can bypass the experimental MFA, If the attacker has the email and password, the attacker can login in the account without the need of the phone code.\u003c/p\u003e\n","bounty_amount":"2500.0","formatted_bounty":"$2,500","weakness":{"id":27,"name":"Improper Authentication - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2019-09-11T17:00:23.002Z","allow_singular_disclosure_after":-41002505.331479795,"singular_disclosure_allowed":true,"vote_count":64,"voters":["checkm50","nullhe4d","secator","mashoud1122","spam404","mik317","sameerphad72","metnew","secxena","mygf","and 54 more..."],"severity":{"rating":"medium","author_type":"Team"},"structured_scope":{"databaseId":1367,"asset_type":"URL","asset_identifier":"auth.grammarly.com","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":5486128,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Hi @linkworld, \n\nThank you for your submission! I'm not able to see any MFA settings under my account settings, Can you please help me to find the path to enable MFA for an account? \n\nCurrently, I'm looking at https://account.grammarly.com","markdown_message":"\u003cp\u003eHi \u003ca href=\"/linkworld\"\u003e@linkworld\u003c/a\u003e, \u003c/p\u003e\n\n\u003cp\u003eThank you for your submission! I\u0026#39;m not able to see any MFA settings under my account settings, Can you please help me to find the path to enable MFA for an account? \u003c/p\u003e\n\n\u003cp\u003eCurrently, I\u0026#39;m looking at \u003ca title=\"https://account.grammarly.com\" href=\"/redirect?url=https%3A%2F%2Faccount.grammarly.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://account.grammarly.com\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-08-02T09:17:21.477Z","updated_at":"2019-08-02T09:17:21.477Z","actor":{"username":"chessmast3r","cleared":false,"url":"/chessmast3r","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/220/459/6b3c5fca9df9cde7fe36b55238b13d2cea86ea80_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5486190,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"Hi @linkworld,\n\nSorry for this confusion. \nCurrently, reports related to MFA are only triaged by Grammarly.\n\nThanks for your submission!","markdown_message":"\u003cp\u003eHi \u003ca href=\"/linkworld\"\u003e@linkworld\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eSorry for this confusion. \u003cbr\u003e\nCurrently, reports related to MFA are only triaged by Grammarly.\u003c/p\u003e\n\n\u003cp\u003eThanks for your submission!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-08-02T09:27:08.250Z","updated_at":"2019-08-02T09:27:57.365Z","actor":{"username":"vladimir_suslenko","cleared":false,"url":"/vladimir_suslenko","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5506176,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Hey @linkworld,\n\nWe can't reproduce the issue you've reported.\nPlease, provide a detailed PoC:\n- the HTTP request, which allows bypassing MFA\n- required conditions, if any\n- a screencast, to make sure there's no miscommunication here\n\nWe think a valid session cookie in the `Cookie` header might cause the issue similar to the described one.\nIf you can't reproduce the issue, please self-close the report.\n\nThanks!","markdown_message":"\u003cp\u003eHey \u003ca href=\"/linkworld\"\u003e@linkworld\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eWe can\u0026#39;t reproduce the issue you\u0026#39;ve reported.\u003cbr\u003e\nPlease, provide a detailed PoC:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ethe HTTP request, which allows bypassing MFA\u003c/li\u003e\n\u003cli\u003erequired conditions, if any\u003c/li\u003e\n\u003cli\u003ea screencast, to make sure there\u0026#39;s no miscommunication here\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWe think a valid session cookie in the \u003ccode\u003eCookie\u003c/code\u003e header might cause the issue similar to the described one.\u003cbr\u003e\nIf you can\u0026#39;t reproduce the issue, please self-close the report.\u003c/p\u003e\n\n\u003cp\u003eThanks!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-08-05T19:16:15.544Z","updated_at":"2019-08-05T19:16:15.544Z","actor":{"username":"vladimir_suslenko","cleared":false,"url":"/vladimir_suslenko","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5514631,"is_internal":false,"editable":false,"type":"Activities::ReportVulnerabilityTypesUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2019-08-06T22:42:16.065Z","updated_at":"2019-08-06T22:42:16.065Z","additional_data":{"added_weaknesses":[{"id":27,"name":"Improper Authentication - Generic"}],"removed_weaknesses":[{"id":87,"name":"Insufficiently Protected Credentials"}]},"actor":{"username":"vladimir_suslenko","cleared":false,"url":"/vladimir_suslenko","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5514648,"is_internal":false,"editable":false,"type":"Activities::ReportTitleUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2019-08-06T22:45:20.132Z","updated_at":"2019-08-06T22:45:20.132Z","additional_data":{"old_title":"Bypass MFA","new_title":"“email” MFA mode allows bypassing MFA from victim’s device when the device trust is not expired"},"actor":{"username":"vladimir_suslenko","cleared":false,"url":"/vladimir_suslenko","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5514675,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2019-08-06T22:49:11.316Z","updated_at":"2019-08-06T22:49:11.316Z","additional_data":{"old_severity":"Critical (9.1)","new_severity":"Medium","old_severity_id":483559,"new_severity_id":486762},"actor":{"username":"vladimir_suslenko","cleared":false,"url":"/vladimir_suslenko","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5514686,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Hey @linkworld,\n\nThanks for your report! We confirm this report as valid.\n\nPlease, note that the impact and severity are subject to changes. ","markdown_message":"\u003cp\u003eHey \u003ca href=\"/linkworld\"\u003e@linkworld\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThanks for your report! We confirm this report as valid.\u003c/p\u003e\n\n\u003cp\u003ePlease, note that the impact and severity are subject to changes. \u003c/p\u003e\n","automated_response":false,"created_at":"2019-08-06T22:52:00.109Z","updated_at":"2019-08-06T22:52:00.109Z","actor":{"username":"vladimir_suslenko","cleared":false,"url":"/vladimir_suslenko","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5514830,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @vladimir_suslenko \n\nsorry for late response, I'm glad you could reproduce it, let me know if you need something more.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/vladimir_suslenko\"\u003e@vladimir_suslenko\u003c/a\u003e \u003c/p\u003e\n\n\u003cp\u003esorry for late response, I\u0026#39;m glad you could reproduce it, let me know if you need something more.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-08-06T23:36:32.159Z","updated_at":"2019-08-06T23:36:32.159Z","actor":{"username":"l1nkworld","cleared":false,"url":"/l1nkworld","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/wJZjNYf89j799BNbqdwRV3nR/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5539181,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"@linkworld thanks for a valuable finding! Keep up the good work.","markdown_message":"\u003cp\u003e\u003ca href=\"/linkworld\"\u003e@linkworld\u003c/a\u003e thanks for a valuable finding! Keep up the good work.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-08-09T13:10:46.424Z","updated_at":"2019-08-09T13:10:46.424Z","actor":{"url":"/grammarly","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/022/746/a2bf7f90c683af5214fcc74c1df6804286ee97ce_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Grammarly"}},"bounty_amount":"2500.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"grammarly","collaborator":{"username":"l1nkworld","url":"/l1nkworld"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5540143,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Hey @linkworld,\n\nWe want to give some insights regarding the vulnerability:\n\n1. After performing a significant auth-related action (like sign up or sign-in with MFA), the device (from which the action was performed) become trusted for a limited amount of time. It was described in [\"MFA doc\"](https://docs.google.com/document/d/1WEQo6gWDGvrbfrxmpu4eywq-o_InpZupmNnRw7TX0sQ/edit#heading=h.6bjkbgt2hx8k).\n2. MFA doesn't challenge requests to change MFA settings from the trusted device.\n3. Devices identify themselves by `tdi` cookie. This cookie is `Secure` and `HTTPonly`. `tdi` cookie is valid only when the request is made from the device with the same UserAgent.\n4. The vulnerability allowed bypassing MFA when the following conditions met:\n  - Login request was made from the device with the same `tdi` cookie and `UserAgent` header.\n  - Login request was made when the device's trust wasn't expired.\n\nThis may sound a bit complex, but in reality, the scenario may be described as:\n\n0. Victim's account has MFA enabled.\n1. Attackers know the victim's login and password, but they don't have access to TOTP or backup codes.\n2. Attackers somehow can disclose `httponly; Secure` `tdi` cookie and `UserAgent` header from the victim's device.\n3. Victim signs-in via the device.\n4. Only in this case, the attacker can bypass MFA leveraging:\n- victim's login+password, \n- `tdi` cookie and `UserAgent` header - if attackers have access to `tdi`, it's likely they have/had access to the active session of the victim.\n- device trust timeframe, which is 15 minutes for sign-in.\n\nWe assigned \"Medium\" severity to this vulnerability because of high number of required conditions.\n\nOur device trust mechanism will become more explicit soon. \nThe vulnerability was resolved.\n\nEnjoy the bounty!","markdown_message":"\u003cp\u003eHey \u003ca href=\"/linkworld\"\u003e@linkworld\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eWe want to give some insights regarding the vulnerability:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eAfter performing a significant auth-related action (like sign up or sign-in with MFA), the device (from which the action was performed) become trusted for a limited amount of time. It was described in \u003ca href=\"/redirect?url=https%3A%2F%2Fdocs.google.com%2Fdocument%2Fd%2F1WEQo6gWDGvrbfrxmpu4eywq-o_InpZupmNnRw7TX0sQ%2Fedit%23heading%3Dh.6bjkbgt2hx8k\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003e\u0026quot;MFA doc\u0026quot;\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eMFA doesn\u0026#39;t challenge requests to change MFA settings from the trusted device.\u003c/li\u003e\n\u003cli\u003eDevices identify themselves by \u003ccode\u003etdi\u003c/code\u003e cookie. This cookie is \u003ccode\u003eSecure\u003c/code\u003e and \u003ccode\u003eHTTPonly\u003c/code\u003e. \u003ccode\u003etdi\u003c/code\u003e cookie is valid only when the request is made from the device with the same UserAgent.\u003c/li\u003e\n\u003cli\u003eThe vulnerability allowed bypassing MFA when the following conditions met:\n\n\u003cul\u003e\n\u003cli\u003eLogin request was made from the device with the same \u003ccode\u003etdi\u003c/code\u003e cookie and \u003ccode\u003eUserAgent\u003c/code\u003e header.\u003c/li\u003e\n\u003cli\u003eLogin request was made when the device\u0026#39;s trust wasn\u0026#39;t expired.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThis may sound a bit complex, but in reality, the scenario may be described as:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eVictim\u0026#39;s account has MFA enabled.\u003c/li\u003e\n\u003cli\u003eAttackers know the victim\u0026#39;s login and password, but they don\u0026#39;t have access to TOTP or backup codes.\u003c/li\u003e\n\u003cli\u003eAttackers somehow can disclose \u003ccode\u003ehttponly; Secure\u003c/code\u003e \u003ccode\u003etdi\u003c/code\u003e cookie and \u003ccode\u003eUserAgent\u003c/code\u003e header from the victim\u0026#39;s device.\u003c/li\u003e\n\u003cli\u003eVictim signs-in via the device.\u003c/li\u003e\n\u003cli\u003eOnly in this case, the attacker can bypass MFA leveraging:\u003c/li\u003e\n\u003cli\u003evictim\u0026#39;s login+password, \u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003etdi\u003c/code\u003e cookie and \u003ccode\u003eUserAgent\u003c/code\u003e header - if attackers have access to \u003ccode\u003etdi\u003c/code\u003e, it\u0026#39;s likely they have/had access to the active session of the victim.\u003c/li\u003e\n\u003cli\u003edevice trust timeframe, which is 15 minutes for sign-in.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eWe assigned \u0026quot;Medium\u0026quot; severity to this vulnerability because of high number of required conditions.\u003c/p\u003e\n\n\u003cp\u003eOur device trust mechanism will become more explicit soon. \u003cbr\u003e\nThe vulnerability was resolved.\u003c/p\u003e\n\n\u003cp\u003eEnjoy the bounty!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-08-09T15:50:47.061Z","updated_at":"2019-08-09T15:54:51.325Z","actor":{"username":"vladimir_suslenko","cleared":false,"url":"/vladimir_suslenko","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"l1nkworld","url":"/l1nkworld"},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5540323,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for the explanation and the reward, when you changed to medium and renamed title, I re-checked the vulnerability and you are right, it is medium, thanks It is my first bug bounty and I'm very happy for this, have a nice day!","markdown_message":"\u003cp\u003eThanks for the explanation and the reward, when you changed to medium and renamed title, I re-checked the vulnerability and you are right, it is medium, thanks It is my first bug bounty and I\u0026#39;m very happy for this, have a nice day!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-08-09T16:13:00.817Z","updated_at":"2019-08-09T16:13:00.817Z","actor":{"username":"l1nkworld","cleared":false,"url":"/l1nkworld","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/wJZjNYf89j799BNbqdwRV3nR/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5557571,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-08-12T17:00:22.902Z","updated_at":"2019-08-12T17:00:22.902Z","first_to_agree":true,"actor":{"username":"vladimir_suslenko","cleared":false,"url":"/vladimir_suslenko","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5558130,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-08-12T18:19:38.932Z","updated_at":"2019-08-12T18:19:38.932Z","actor":{"username":"l1nkworld","cleared":false,"url":"/l1nkworld","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/wJZjNYf89j799BNbqdwRV3nR/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5558131,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-08-12T18:19:39.052Z","updated_at":"2019-08-12T18:19:39.052Z","actor":{"username":"l1nkworld","cleared":false,"url":"/l1nkworld","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/wJZjNYf89j799BNbqdwRV3nR/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"grammarly","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"id":17726,"category":"team","content":"A vulnerability was reported in scope of the Grammarly MFA challenge. No users were affected.\n@linkworld identified a vulnerability that allowed bypassing MFA if specific conditions were met:\n- Attacker has access to `httponly;secure` `tdi` cookie of the victim's particular device.\n- Attacker knows `UserAgent` of the victim's device.\n- Attacker can issue a crafted request during a fixed timeframe after the victim has signed in from the particular device.\n\nYou can discover additional details about this vulnerability in [this comment](https://hackerone.com/reports/665722#activity-5540323).\n\nThanks, @linkworld!","can_view?":true,"can_edit?":false,"content_html":"\u003cp\u003eA vulnerability was reported in scope of the Grammarly MFA challenge. No users were affected.\u003cbr\u003e\n\u003ca href=\"/linkworld\"\u003e@linkworld\u003c/a\u003e identified a vulnerability that allowed bypassing MFA if specific conditions were met:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAttacker has access to \u003ccode\u003ehttponly;secure\u003c/code\u003e \u003ccode\u003etdi\u003c/code\u003e cookie of the victim\u0026#39;s particular device.\u003c/li\u003e\n\u003cli\u003eAttacker knows \u003ccode\u003eUserAgent\u003c/code\u003e of the victim\u0026#39;s device.\u003c/li\u003e\n\u003cli\u003eAttacker can issue a crafted request during a fixed timeframe after the victim has signed in from the particular device.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eYou can discover additional details about this vulnerability in \u003ca href=\"https://hackerone.com/reports/665722#activity-5540323\"\u003ethis comment\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThanks, \u003ca href=\"/linkworld\"\u003e@linkworld\u003c/a\u003e!\u003c/p\u003e\n"},{"category":"researcher","can_view?":true,"can_create?":false}]}