{"id":888930,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84ODg5MzA=","url":"https://hackerone.com/reports/888930","title":"SAML Response Reuse on hackerone.com/users/saml/auth","state":"Closed","substate":"resolved","severity_rating":"low","readable_substate":"Resolved","created_at":"2020-06-01T21:34:28.618Z","submitted_at":"2020-06-01T21:34:28.618Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"samtink","url":"/samtink","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":13,"url":"https://hackerone.com/security","handle":"security","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"HackerOne","twitter_handle":"Hacker0x01","website":"https://hackerone.com","about":"Vulnerability disclosure should be safe, transparent, and rewarding."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2020-07-24T18:51:30.591Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2020-06-24T18:51:13.990Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"**Summary:**\nWhen logging in with SAML, the user's IDP authenticates the user and generates a SAML response. The IDP then redirects the user's browser back to HackerOne to submit the SAML response. Upon receiving the SAML response, HackerOne validates it, sets a session cookie in the user's browser, and logs the user in. The SAML response can be captured and resubmitted to H1 repeatedly until it expires. Every time H1 receives the captured SAML response it sets a new session cookie and logs the user in.\n\n**Description:**\n\n### Steps To Reproduce\n\n1. Make sure your email address is set to use your organization's SSO provider. Make sure you can capture and replay traffic using Burp suite or some other proxy.\n2. Go to the H1 login screen and enter your email. Press the login button to be sent to your organization's SAML provider (IDP).\n3. Log into your org's IDP and capture the SAML response from the IDP. The request that needs to be captured is the POST request to hackerone.come/users/saml/auth. In the message body you can find the SAML response. The easiest way to capture and replay is to send it to the repeater tab in Burp. \n4. Resend the POST request with the SAML response to H1 and observe the successful response with a new session identifier. Send 4-5 more times and observe the successful responses and new session id's. \n\n### Your Environment (Browser version, Device, etc)\n\n * Burp Version: ████████\n * Browser: █████████\n * SSO Provider: █████████\n * SAML Response TTL: ██████████.\n\n### Remediation:\n\nAfter a SAML response is used store the assertion ID and it's expiration in a list. When a SAML response has been received and validated, check the assertion ID against the previously mentioned list. If the ID is in the list, throw an error and do not log the user in. Once an ID in the list is past it's expiration then remove it from the list (since it will fail anyway for being expired).\n\n## Impact\n\nLikelihood:\nThere is a fairly high barrier of entry to be able to use this flaw. An attacker would have to obtain a valid SAML response. This could be done via MITM, phishing, XSS, etc. None of which are super easy but none are impossible. The likelihood of an attacker being able to obtain a SAML response varies greatly between different organizations and their respective security postures. The likelihood increases the longer the SAML response is valid for. It can be set to as little as a few minutes or up to several weeks. The organization's IDP is responsible for setting how long a SAML response is valid. \n\nImpact:\nIf an attacker would successfully capture and use a SAML response they would log into H1 as the user who generated the SAML response. Depending on which user they log in as they could have full control over an organizations H1 program or they could have only read only permissions. This could allow the attacker to see undisclosed vulnerabilities and full instructions on how to exploit them. The attacker could also pose as a member of the organization and tarnish relations with security researchers. The attacker could lock members of the organization out by removing permissions. So ultimately, the attacker would inherit whatever permissions from the user they stole the SAML response from.","bounty_amount":"500.0","formatted_bounty":"$500","weakness":{"id":27,"name":"Improper Authentication - Generic"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2020-07-24T18:51:14.139Z","allow_singular_disclosure_after":-38350037.232487164,"singular_disclosure_allowed":true,"vote_count":20,"voters":["tk0","base_64","th4nu_0x0","sudi","realtess","sodium_","since2003","rac_fckscty","exadmin","moon_shadow","and 10 more..."],"severity":{"rating":"low","author_type":"Team"},"structured_scope":{"databaseId":3,"asset_type":"URL","asset_identifier":"https://hackerone.com","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":8173644,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Hey @samtink thanks for the report!\n\nIt's true that we don't have replay protection implemented that prevents replay of the exact same request. However, we do mitigate this by respecting the `NotBefore` and `NotOnOrAfter` fields which would prevent replays to a short time window and leaves a little room in case some issues allowing the usability to be a little easier. The length of the time between `NotBefore` and `NotOnOrAfter` is controlled by the IDP, so this is usually a risk that can be managed by the customer.\n\nDo you think there's anything I've missed here?\n\nThanks!\n@bencode ","automated_response":false,"created_at":"2020-06-02T00:49:42.249Z","updated_at":"2020-06-02T00:49:42.249Z","actor":{"username":"bencode","cleared":false,"url":"/bencode","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/117/ddaa1da4e004e1234c6857c42f9bfa8df85b5ccf_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8181649,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"Hey @bencode,\n\nI agree that in most situations respecting the `NotBefore` and `NotOnOrAfter` fields is a mitigating control. However, due to the sensitivity of the information contained in H1 and potential impact, I don't think relying on one control is enough to sufficiently mitigate the risk. \n\nLet's say an attacker got control of an account in our organization using this method. (The below are based on my limited understanding of H1, please correct me if anything is incorrect.)\n1. As an organization we have no way to determine whether someone is maliciously using one of our accounts. Unless, of course, the attacker is making it blatantly obvious. \n2. If we do discover an attacker is maliciously using one of our accounts, we can't do anything besides lock the account they are using. However, this would prevent the valid user from performing their job duties. As an organization we don't have a way to revoke sessions. Changing the user's password wouldn't invalidate the SAML response or the H1 session.\n3. If we do somehow invalidate the attackers session, we have no way to determine the scope of what the attacker did besides what is listed in the audit log.\n\nFinally, the [Security and Privacy Considerations for SAML v2.0](https://docs.oasis-open.org/security/saml/v2.0/saml-sec-consider-2.0-os.pdf) states the SP is responsible for preventing reuse for the SAML binding we are using. The POST binding is discussed in section 6.4 with the replay issue addressed in section 6.4.5.\n\nPlease let me know if you have any questions.\nThanks,\n@samtink","automated_response":false,"created_at":"2020-06-02T17:11:54.366Z","updated_at":"2020-06-02T17:11:54.366Z","actor":{"username":"samtink","cleared":false,"url":"/samtink","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8184234,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"I'll discuss this with the team.","automated_response":false,"created_at":"2020-06-03T00:23:16.295Z","updated_at":"2020-06-03T00:23:16.295Z","actor":{"username":"bencode","cleared":false,"url":"/bencode","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/117/ddaa1da4e004e1234c6857c42f9bfa8df85b5ccf_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8275325,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","automated_response":false,"created_at":"2020-06-12T16:59:42.535Z","updated_at":"2020-06-12T16:59:42.535Z","additional_data":{"old_severity":"Medium (6.2)","new_severity":"Low","old_severity_id":738390,"new_severity_id":748165},"actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8275581,"is_internal":false,"editable":false,"type":"Activities::BugRetesting","message":"Hi @samtink - thanks again for bringing this to our attention, we released a fix for this! We've adjusted the severity to low because 1) the SAML payload could only be reused within 10 minutes and 2) it depends on an attacker having access to the SAML payload. Our reasoning is that if an attacker would have access to the payload, it is likely that they could also have access to the cookie that would be returned to the user on the first successful authentication attempt. As a mitigation, we've further reduced the possible attack window by blocking all subsequent SAML payloads that try to authenticate with the same ID (scoped to the SAML provider). Can you retest this finding? Thanks!","automated_response":false,"created_at":"2020-06-12T17:12:28.006Z","updated_at":"2020-06-12T17:12:28.237Z","actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","report_retest":{"id":1602,"retest_subscription":{"handled_by_triage":false}},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8275742,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Thanks again, @samtink!","automated_response":false,"created_at":"2020-06-12T17:13:53.766Z","updated_at":"2020-06-12T17:13:53.766Z","actor":{"url":"/security","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"HackerOne"}},"bounty_amount":"500.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"security","collaborator":{"username":"samtink","url":"/samtink"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8276243,"is_internal":false,"editable":false,"type":"Activities::UserCompletedRetest","message":"It looks like the fix is using the SAML response ID to check for reuse. In SAML responses there are two signatures. The assertion signature and the message signature. Currently, H1 does not throw an error if the SAML message signature is missing. This means I can remove the message signature and modify the response ID to a different value without causing signature validation to fail. By changing the response ID H1 does not recognize it as a previously used assertion. Here are the steps I took:\n1. Log in to H1 using SAML and capture the SAML response.\n2. Resubmit the SAML response and observe that it can not be reused.\n3. Remove the entire signature object below the response ID but do not alter the assertion signature object.\n4. Modify the response ID slightly and resubmit. Observe a successful authentication response with a valid session cookie.\n\nThere are two ways to fix this. The first would be to throw an error if the response signature is missing. The second would be to store and check the assertion ID instead of the response ID. In my opinion, the first solution would be better. Allowing the message signature to be missing could lead to more issues and allows an attacker to modify everything besides the assertion itself.\n\nPlease let me know if you need any more info or clarification.","automated_response":false,"created_at":"2020-06-12T18:26:03.939Z","updated_at":"2020-06-12T18:26:03.939Z","actor":{"username":"samtink","cleared":false,"url":"/samtink","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8325952,"is_internal":false,"editable":false,"type":"Activities::ReportRetestApproved","message":"Thanks @samtink for the retest. To be clear, this would require an attacker to not just have access to the request, but now need to have the ability to tamper with it, so something like a man-in-the-middle attack. So, we've reduced the scope of the attacks so far.\n\nAs for signing, I've been looking into this and trying to get a better understanding of our SAML library (https://github.com/onelogin/ruby-saml) and how it deals with Response and Assertion signatures. The default behavior is to require one of the 2 to be signed, as you saw. I'm pulling data from our logs to determine if 1) SAML responses (not just assertions) are generally being signed and 2) If we can enforce them with the library we have.\n\nI'm concerned that based on the variety of providers we support, we probably have a mix of behaviors, either signing both or just assertions.","automated_response":false,"created_at":"2020-06-17T23:55:35.564Z","updated_at":"2020-09-11T11:07:46.748Z","actor":{"url":"/security","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"HackerOne"}},"genius_execution_id":null,"team_handle":"security","report_retest_user":{"user":{"username":"samtink"},"report_retest":{"retest_subscription":{"tag":"new","handled_by_triage":false,"awarding_retesters":true}}},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8325953,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Revert report state to triaged from retesting","automated_response":false,"created_at":"2020-06-17T23:55:35.738Z","updated_at":"2020-06-17T23:55:35.738Z","actor":{"username":"bencode","cleared":false,"url":"/bencode","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/117/ddaa1da4e004e1234c6857c42f9bfa8df85b5ccf_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8345653,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"You're welcome! Always happy to help. I do agree that the scope of the attacks has been reduced by the checks put into place. I did not take into account the variety of different IDPs you receive SAML responses from so I also agree that forcing both signatures to be present may not be feasible. I think the best course of action would be to use the assertion ID instead of the response ID. In this case modifying the assertion ID would cause signature validation to fail even if one of the signatures is missing.","automated_response":false,"created_at":"2020-06-19T17:33:15.057Z","updated_at":"2020-06-19T17:33:15.057Z","actor":{"username":"samtink","cleared":false,"url":"/samtink","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8398386,"is_internal":false,"editable":false,"type":"Activities::BugRetesting","message":"Hey @samtink,\n\nI researched a bit and unfortunately we do have a decent percentage of Idps sending only 1 signature, so I've gone ahead with the Assertion ID approach. Do you mind taking another look at this?\n\nThanks!","automated_response":false,"created_at":"2020-06-24T18:19:50.045Z","updated_at":"2020-06-24T18:19:50.246Z","actor":{"username":"bencode","cleared":false,"url":"/bencode","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/117/ddaa1da4e004e1234c6857c42f9bfa8df85b5ccf_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","report_retest":{"id":1667,"retest_subscription":{"handled_by_triage":false}},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8398495,"is_internal":false,"editable":false,"type":"Activities::UserCompletedRetest","message":"The fix is working as intended. With either the message or assertion signature present, modification of the assertion ID to try and bypass the reuse fix will cause signature validation to fail. ","automated_response":false,"created_at":"2020-06-24T18:35:45.529Z","updated_at":"2020-06-24T18:35:45.529Z","actor":{"username":"samtink","cleared":false,"url":"/samtink","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8398796,"is_internal":false,"editable":false,"type":"Activities::ReportRetestApproved","message":"Thanks for validating!","automated_response":false,"created_at":"2020-06-24T18:49:26.686Z","updated_at":"2020-09-11T11:07:46.758Z","actor":{"url":"/security","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"HackerOne"}},"genius_execution_id":null,"team_handle":"security","report_retest_user":{"user":{"username":"samtink"},"report_retest":{"retest_subscription":{"tag":"new","handled_by_triage":false,"awarding_retesters":true}}},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8398798,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","automated_response":false,"created_at":"2020-06-24T18:49:26.801Z","updated_at":"2020-06-24T18:49:26.801Z","actor":{"username":"bencode","cleared":false,"url":"/bencode","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/117/ddaa1da4e004e1234c6857c42f9bfa8df85b5ccf_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"samtink","url":"/samtink"},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8398864,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"We appreciate the help and working through the solution with us @samtink. As with all resolved reports, we'd like to publicly disclose this vulnerability. Thanks and happy hacking!","automated_response":false,"created_at":"2020-06-24T18:51:14.009Z","updated_at":"2020-06-24T18:51:14.009Z","first_to_agree":true,"actor":{"username":"bencode","cleared":false,"url":"/bencode","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/117/ddaa1da4e004e1234c6857c42f9bfa8df85b5ccf_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8621492,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Can we do limited disclosure on this report? If I remember correctly, only the summary will be available to be viewed. Is this summary the one I created when I submitted this report? Or would it be a new one that I would create using the \"create hacker summary\" button above?","automated_response":false,"created_at":"2020-07-16T17:28:07.524Z","updated_at":"2020-07-16T17:28:07.524Z","actor":{"username":"samtink","cleared":false,"url":"/samtink","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8621546,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @samtink - you'll have to provide a summary at the top of the report if that's what you'd prefer. Is there any particular reason you don't want this report to be fully disclosed? We believe that your report is a great example for other researchers to learn from how to write a report and community with programs. Let me know!","automated_response":false,"created_at":"2020-07-16T17:34:09.365Z","updated_at":"2020-07-16T17:34:09.365Z","actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8725107,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @samtink - we didn't hear back from you yet, so I went ahead and provided your report as the summary and switched it to limited disclosure. Let me know if you still only want to disclose the summary. I think the timeline is a great collaboration and would be a great example for others, but we're OK only disclosing the report, too.","automated_response":false,"created_at":"2020-07-23T16:59:58.156Z","updated_at":"2020-07-23T16:59:58.156Z","actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8727263,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Sorry for the late response. Full disclosure is fine as long as the environment information I included is redacted. If it can't be redacted then we will have to do limited disclosure. ","automated_response":false,"created_at":"2020-07-23T18:43:53.436Z","updated_at":"2020-07-23T18:43:53.436Z","actor":{"username":"samtink","cleared":false,"url":"/samtink","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8727308,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @samtink - absolutely! I've redacted the environment information and updated the report to full public disclosure again. If you're OK with the disclosure, you can also explicitly agree to immediately disclose the report now. Otherwise, it'll be automatically disclosed tomorrow.","automated_response":false,"created_at":"2020-07-23T18:47:35.178Z","updated_at":"2020-07-23T18:47:35.178Z","actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8746530,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2020-07-24T18:51:30.635Z","updated_at":"2020-07-24T18:51:30.635Z","actor":{"url":"/security","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"HackerOne"}},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}