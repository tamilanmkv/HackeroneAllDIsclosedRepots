{"id":1278254,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMjc4MjU0","url":"https://hackerone.com/reports/1278254","title":"Built-in TLS module unexpectedly treats \"rejectUnauthorized: undefined\" as \"rejectUnauthorized: false\", disabling all certificate validation","state":"Closed","substate":"resolved","severity_rating":"low","readable_substate":"Resolved","created_at":"2021-07-26T16:29:32.712Z","submitted_at":"2021-07-26T16:29:32.818Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"pimterry","url":"/pimterry","profile_picture_urls":{"small":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/w3wnkoizub9qacv4b9jf39lwcih0/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c?response-content-disposition=inline%3B%20filename%3D%22speaking-1000px.jpg%22%3B%20filename%2A%3DUTF-8%27%27speaking-1000px.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ4W3YS5FD%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T133622Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJGMEQCIGFHTfvNreCpBEx6ma8SNDd1vDDIfs0%2Bg65AmwngiTYQAiAlnCpBqU%2FBhidkHb7BIm1B5mCQRUOVIXp%2BQseSrlRN5iqDBAju%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIMMkyyP6srRKwJnYw5KtcDHeBEJsk4F2SMjLLnKF6VZQ8gTH0LrxcCVqXSMNgZR1F18PpwhYbU8Qwfn4rOecOjc%2FGfNk3djcauIei8aKCcLnzshwHWQSvd29UhjSLaczWwVEte3ncX5%2F7TLBeg7zRQpsc0zFB20Cm8vF8Z5NfsChYhN7bulkH%2FDfJw16%2BYS1fZkQzhsF%2FUaEP8JAGkMj5v5WOr%2FLnx6%2FMMhK6%2BsDFWaIeUhAxulEbhuEZZ6dgcu1gqMyUwcg6D9rjwyKS9mTsUA%2BHVlKPil1lPtr7SxO3tf2vD8Cw7bLkyy75qgFHEvuDCUCELKpXfBVH6PD30xPvCzrVd0fptlqCTt6Cpd5I3iyyU9RW0SJyHzyBPACEpWDB8exeuJzM7TEeRFCbnl0%2FkfEHmTDCBuuqKxE7cVRG87tuNtO3iVLpOhHCzOtUoK2Il4kvMh2HPZMpvYIGHtynKBM%2BIh69sGJa0yvDoN%2FRI6PAGM02ZolRkS4bZfQfYm7fOPbpLxrQWbSljfYgc7qbAOT56FKw4Ty4wTdxJVV1NLklUpTvIFuc4wqfUdZCvpJj%2BZaH0CSm%2FQv7WX13ukuacZxFgzkAlzUArGS2%2FgJQFovV4hCQKUkAlBpn1fxDFCB%2FBfj2XYH0lMJ7wkIsGOqYBZLVkkm4v7ciHR6x1EZfGmDDAlA8GWCaRs%2B7p4f0zSrCh5MwJxKYAhCMitoCHTMbKlCWaIdMl5rpmPNjCa3GtIbMpvdZUwpN0EhEKHvK6WgKkHhzE8vZn5llsPReTP2V7t22qBXykSYg%2BgK2etoazMxx4eBGAB7YXcUmHU%2FW%2FCsmGlbwbgrQPl3suOkp4ARb2LIsd96p9ZA9i%2BG4DSDrVOakuIKwh2Q%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=eea96d5219c16abf7084f32d092d35486d1cf1a18dc3f96caf7bd57fcefaa737"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":22984,"url":"https://hackerone.com/nodejs","handle":"nodejs","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"Node.js","twitter_handle":"nodejs","website":"https://nodejs.org","about":"The Node.js JavaScript Runtime"}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2021-22939"],"singular_disclosure_disabled":false,"disclosed_at":"2021-09-10T17:53:06.439Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2021-08-11T17:52:55.991Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"\u003e NOTE! Thanks for submitting a report! Please replace *all* the [square] sections below with the pertinent details. Remember, the more detail you provide, the easier it is for us to triage and respond quickly, so be sure to take your time filling out the report!\n\n**Summary:** \"rejectUnauthorized: false\" disables all TLS validation, and should not be set in almost all circumstances. The documentation says only the specific 'false' value will disable this validation, but in fact a 'undefined' value does also disables it, unexpectedly disabling TLS entirely.\n\n**Description:**\n\nThe documentation for tls.connect (https://nodejs.org/api/tls.html#tls_tls_connect_options_callback) says:\n\n\u003e rejectUnauthorized \u003cboolean\u003e If not false, the server certificate is verified against the list of supplied CAs. An 'error' event is emitted if verification fails; err.code contains the OpenSSL error code. Default: true.\n\nThis is not true (see repro below) - in addition to `false`, an explicit `undefined` value does also disable server certificate verification.\n\nThis is very problematic, because it's reasonable to assume that `undefined` will be equivalent to setting the default, and it's also easy to accidentally produce undefined fields when dynamically building configuration. In any system that has done so, they are unknowingly silently not validating any TLS connections.\n\nI've discovered this because I've found that https://www.npmjs.com/package/global-agent does exactly this (uses explicit undefineds when building options objects) and it is vulnerable because of this issue (i.e. all users of that package are by default unintentionally not validating TLS certificates for all connections).\n\nThis appears to affect all active node versions. Unless I'm missing something, this seems very bad.\n\n## Steps To Reproduce:\n\nRepro code:\n\n```\nconst https = require('https');\nconst request = https.get('https://expired.badssl.com', { rejectUnauthorized: undefined });\nrequest.on('error', (e) =\u003e console.log('Request failed:', e.message));\nrequest.on('response', (e) =\u003e console.log('Request succeeded'));\n```\n\n  1. Run the above\n  2. The request succeeds! It should not, because expired.badssl.com by design has an expired TLS certificate\n  3. Remove the { rejectUnauthorized: undefined } option, or change it to 'true'\n  4. It fails, as expected, due to an expired certificate.\n\n## Impact:\n\nThis breaks all TLS and HTTPS security for anybody who accidentally provides an undefined value, assuming it will be equivalent to providing no value at all.\n\n## Impact\n\nBreaks all HTTPS protections, so complete disclosure or trivial manipulation of all HTTPS requests and responses by anybody capable of MITMing the TCP connection.","bounty_amount":"150.0","formatted_bounty":"$150","weakness":{"id":28,"name":"Improper Certificate Validation"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2021-09-10T17:52:56.124Z","allow_singular_disclosure_after":-2663006.021292584,"singular_disclosure_allowed":true,"vote_count":19,"voters":["alp","khizer47","akashhamal0x01","indianblackparrot","w4ve","stizz080","eddotexe","0xczar","scriptedshakil","johnx-wick","and 9 more..."],"severity":{"rating":"low","author_type":"Team"},"structured_scope":{"databaseId":666,"asset_type":"SOURCE_CODE","asset_identifier":"https://github.com/nodejs/node","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":12706052,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks, @pimterry for reporting!  It seems `tls.connect` fails to assign the default value to `rejectUnauthorized` options property if it is explicitly set to `undefined`. This causes the request to succeed with authorization error `CERT_HAS_EXPIRED`. \n","automated_response":false,"created_at":"2021-07-28T00:34:42.862Z","updated_at":"2021-07-28T00:38:18.964Z","actor":{"username":"kumarak39","cleared":false,"url":"/kumarak39","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":12706723,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I have limited experience with JS. Is it a good practice to explicitly assign `undefined` to the property? The assignment operation fails to mutate the property because it is explicitly assigned. https://github.com/nodejs/node/blob/master/lib/_tls_wrap.js#L1595","automated_response":false,"created_at":"2021-07-28T03:40:36.474Z","updated_at":"2021-07-28T03:40:36.474Z","actor":{"username":"kumarak39","cleared":false,"url":"/kumarak39","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":12716562,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"\u003e I have limited experience with JS. Is it a good practice to explicitly assign undefined to the property?\n\nIt's certainly very common practice, I think it's the standard way to write code in most relevant cases. It's messy to build an object literal with properties that may or may not be included, so the normal approach is to instead include every property that's might be included, but set irrelevant values to undefined. I would expect almost all JS devs to assume that the Node APIs will treat undefined the same as providing no value at all. In this case, at least one million-downloads-a-week npm library is doing exactly that when building options for this specific API: https://github.com/gajus/global-agent/blob/3735fa1cac1a6680caa5afd853edba38674d8f27/src/classes/Agent.ts#L169\n\nThis is partly codified into JS itself too, e.g. JavaScript's built-in syntax for default parameters treats an explicit undefined the same as not providing a value, and uses the default instead of `undefined`. See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Default_parameters#passing_undefined_vs._other_falsy_values for example.\n\nAlso, every other Node.js APIs I've seen does follow this pattern correctly. For example, writable streams have an optional `emitClose` option which defaults to true. If explicitly set to undefined, `true` is correctly used just as if the option was not provided:\n\n```\nnew stream.Writable({ emitClose: undefined })._writableState.emitClose // Prints 'true'\n```\n\n\u003e This causes the request to succeed with authorization error CERT_HAS_EXPIRED. \n\nTo be clear: I think you mean \"succeed, instead of failing with authorization error CERT_HAS_EXPIRED\". It does not show any error at all when `undefined` is provided, it just silently makes an insecure request instead.","automated_response":false,"created_at":"2021-07-28T14:25:10.336Z","updated_at":"2021-07-28T14:25:10.336Z","actor":{"username":"pimterry","cleared":false,"url":"/pimterry","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/w3wnkoizub9qacv4b9jf39lwcih0/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%22speaking-1000px.jpg%22%3B%20filename%2A%3DUTF-8%27%27speaking-1000px.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ4W3YS5FD%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T133622Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJGMEQCIGFHTfvNreCpBEx6ma8SNDd1vDDIfs0%2Bg65AmwngiTYQAiAlnCpBqU%2FBhidkHb7BIm1B5mCQRUOVIXp%2BQseSrlRN5iqDBAju%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIMMkyyP6srRKwJnYw5KtcDHeBEJsk4F2SMjLLnKF6VZQ8gTH0LrxcCVqXSMNgZR1F18PpwhYbU8Qwfn4rOecOjc%2FGfNk3djcauIei8aKCcLnzshwHWQSvd29UhjSLaczWwVEte3ncX5%2F7TLBeg7zRQpsc0zFB20Cm8vF8Z5NfsChYhN7bulkH%2FDfJw16%2BYS1fZkQzhsF%2FUaEP8JAGkMj5v5WOr%2FLnx6%2FMMhK6%2BsDFWaIeUhAxulEbhuEZZ6dgcu1gqMyUwcg6D9rjwyKS9mTsUA%2BHVlKPil1lPtr7SxO3tf2vD8Cw7bLkyy75qgFHEvuDCUCELKpXfBVH6PD30xPvCzrVd0fptlqCTt6Cpd5I3iyyU9RW0SJyHzyBPACEpWDB8exeuJzM7TEeRFCbnl0%2FkfEHmTDCBuuqKxE7cVRG87tuNtO3iVLpOhHCzOtUoK2Il4kvMh2HPZMpvYIGHtynKBM%2BIh69sGJa0yvDoN%2FRI6PAGM02ZolRkS4bZfQfYm7fOPbpLxrQWbSljfYgc7qbAOT56FKw4Ty4wTdxJVV1NLklUpTvIFuc4wqfUdZCvpJj%2BZaH0CSm%2FQv7WX13ukuacZxFgzkAlzUArGS2%2FgJQFovV4hCQKUkAlBpn1fxDFCB%2FBfj2XYH0lMJ7wkIsGOqYBZLVkkm4v7ciHR6x1EZfGmDDAlA8GWCaRs%2B7p4f0zSrCh5MwJxKYAhCMitoCHTMbKlCWaIdMl5rpmPNjCa3GtIbMpvdZUwpN0EhEKHvK6WgKkHhzE8vZn5llsPReTP2V7t22qBXykSYg%2BgK2etoazMxx4eBGAB7YXcUmHU%2FW%2FCsmGlbwbgrQPl3suOkp4ARb2LIsd96p9ZA9i%2BG4DSDrVOakuIKwh2Q%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=c3d8bd0dc1f970ac90f6b2decbece7df7895172c9bb565b2489d80ecbb992e66"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":12716626,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"There are multiple places where we explicitly check for `rejectUnauthorized !== false`.\nExample: https://github.com/nodejs/node/blob/3f0b62375b3a4edc8365b803749e8dd5abc706b0/lib/_tls_wrap.js#L1192\n\nMaybe there's one (or more) place where it's not done like this?\n\nRefs: https://github.com/nodejs/node/commit/348cc80a3cbf0f4271ed30418c6ed661bdeede7b","automated_response":false,"created_at":"2021-07-28T14:31:36.010Z","updated_at":"2021-07-28T14:31:36.010Z","actor":{"username":"targos","cleared":false,"url":"/targos","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/oti7obr6lrnkqed20csu0w8rh9en/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%22targos-small.jpg%22%3B%20filename%2A%3DUTF-8%27%27targos-small.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ4W3YS5FD%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T133622Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJGMEQCIGFHTfvNreCpBEx6ma8SNDd1vDDIfs0%2Bg65AmwngiTYQAiAlnCpBqU%2FBhidkHb7BIm1B5mCQRUOVIXp%2BQseSrlRN5iqDBAju%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIMMkyyP6srRKwJnYw5KtcDHeBEJsk4F2SMjLLnKF6VZQ8gTH0LrxcCVqXSMNgZR1F18PpwhYbU8Qwfn4rOecOjc%2FGfNk3djcauIei8aKCcLnzshwHWQSvd29UhjSLaczWwVEte3ncX5%2F7TLBeg7zRQpsc0zFB20Cm8vF8Z5NfsChYhN7bulkH%2FDfJw16%2BYS1fZkQzhsF%2FUaEP8JAGkMj5v5WOr%2FLnx6%2FMMhK6%2BsDFWaIeUhAxulEbhuEZZ6dgcu1gqMyUwcg6D9rjwyKS9mTsUA%2BHVlKPil1lPtr7SxO3tf2vD8Cw7bLkyy75qgFHEvuDCUCELKpXfBVH6PD30xPvCzrVd0fptlqCTt6Cpd5I3iyyU9RW0SJyHzyBPACEpWDB8exeuJzM7TEeRFCbnl0%2FkfEHmTDCBuuqKxE7cVRG87tuNtO3iVLpOhHCzOtUoK2Il4kvMh2HPZMpvYIGHtynKBM%2BIh69sGJa0yvDoN%2FRI6PAGM02ZolRkS4bZfQfYm7fOPbpLxrQWbSljfYgc7qbAOT56FKw4Ty4wTdxJVV1NLklUpTvIFuc4wqfUdZCvpJj%2BZaH0CSm%2FQv7WX13ukuacZxFgzkAlzUArGS2%2FgJQFovV4hCQKUkAlBpn1fxDFCB%2FBfj2XYH0lMJ7wkIsGOqYBZLVkkm4v7ciHR6x1EZfGmDDAlA8GWCaRs%2B7p4f0zSrCh5MwJxKYAhCMitoCHTMbKlCWaIdMl5rpmPNjCa3GtIbMpvdZUwpN0EhEKHvK6WgKkHhzE8vZn5llsPReTP2V7t22qBXykSYg%2BgK2etoazMxx4eBGAB7YXcUmHU%2FW%2FCsmGlbwbgrQPl3suOkp4ARb2LIsd96p9ZA9i%2BG4DSDrVOakuIKwh2Q%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=54975c3d32a7415c1d90bd554b634e55252b4a4599801fa124e8bc8215e85b02"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":12716722,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The code linked there fixed this only for servers, for incoming client certificate validation. It looks like this was never fixed for outgoing TLS connection verification of server certificates.\n\nI think this is the likely culprit: https://github.com/nodejs/node/blob/master/lib/_tls_wrap.js#L680","automated_response":false,"created_at":"2021-07-28T14:41:25.921Z","updated_at":"2021-07-28T14:41:25.921Z","actor":{"username":"pimterry","cleared":false,"url":"/pimterry","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/w3wnkoizub9qacv4b9jf39lwcih0/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%22speaking-1000px.jpg%22%3B%20filename%2A%3DUTF-8%27%27speaking-1000px.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ4W3YS5FD%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T133622Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJGMEQCIGFHTfvNreCpBEx6ma8SNDd1vDDIfs0%2Bg65AmwngiTYQAiAlnCpBqU%2FBhidkHb7BIm1B5mCQRUOVIXp%2BQseSrlRN5iqDBAju%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIMMkyyP6srRKwJnYw5KtcDHeBEJsk4F2SMjLLnKF6VZQ8gTH0LrxcCVqXSMNgZR1F18PpwhYbU8Qwfn4rOecOjc%2FGfNk3djcauIei8aKCcLnzshwHWQSvd29UhjSLaczWwVEte3ncX5%2F7TLBeg7zRQpsc0zFB20Cm8vF8Z5NfsChYhN7bulkH%2FDfJw16%2BYS1fZkQzhsF%2FUaEP8JAGkMj5v5WOr%2FLnx6%2FMMhK6%2BsDFWaIeUhAxulEbhuEZZ6dgcu1gqMyUwcg6D9rjwyKS9mTsUA%2BHVlKPil1lPtr7SxO3tf2vD8Cw7bLkyy75qgFHEvuDCUCELKpXfBVH6PD30xPvCzrVd0fptlqCTt6Cpd5I3iyyU9RW0SJyHzyBPACEpWDB8exeuJzM7TEeRFCbnl0%2FkfEHmTDCBuuqKxE7cVRG87tuNtO3iVLpOhHCzOtUoK2Il4kvMh2HPZMpvYIGHtynKBM%2BIh69sGJa0yvDoN%2FRI6PAGM02ZolRkS4bZfQfYm7fOPbpLxrQWbSljfYgc7qbAOT56FKw4Ty4wTdxJVV1NLklUpTvIFuc4wqfUdZCvpJj%2BZaH0CSm%2FQv7WX13ukuacZxFgzkAlzUArGS2%2FgJQFovV4hCQKUkAlBpn1fxDFCB%2FBfj2XYH0lMJ7wkIsGOqYBZLVkkm4v7ciHR6x1EZfGmDDAlA8GWCaRs%2B7p4f0zSrCh5MwJxKYAhCMitoCHTMbKlCWaIdMl5rpmPNjCa3GtIbMpvdZUwpN0EhEKHvK6WgKkHhzE8vZn5llsPReTP2V7t22qBXykSYg%2BgK2etoazMxx4eBGAB7YXcUmHU%2FW%2FCsmGlbwbgrQPl3suOkp4ARb2LIsd96p9ZA9i%2BG4DSDrVOakuIKwh2Q%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=c3d8bd0dc1f970ac90f6b2decbece7df7895172c9bb565b2489d80ecbb992e66"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":12721129,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks, @pimterry, and @targos for references. \nI think there should be a similar check inside TLS connect function if the `rejectUnauthorized` property fails to initialize with default value because it is explicitly set to `undefined`.\n\nhttps://github.com/nodejs/node/blob/master/lib/_tls_wrap.js#L1602\n```\noptions.rejectUnauthorized = options.rejectUnauthorized !== false;\n```\nThis will avoid leaking the `undefined` value to the connection handler (`onSecureConnect`).\n\n@pimterry, The authorization error (`CERT_HAS_EXPIRED`) shows up on enabling the debug logs for TLS module. \n ","automated_response":false,"created_at":"2021-07-28T18:01:23.484Z","updated_at":"2021-07-28T18:01:23.484Z","actor":{"username":"kumarak39","cleared":false,"url":"/kumarak39","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":12777670,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Confirmed, this should be checked.","automated_response":false,"created_at":"2021-08-02T08:20:24.324Z","updated_at":"2021-08-02T08:20:24.324Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":12825352,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":null,"automated_response":false,"created_at":"2021-08-04T15:46:21.144Z","updated_at":"2021-08-04T15:46:21.144Z","additional_data":{"old_severity":"Critical (9.8)","new_severity":"Medium (5.9)","old_severity_id":1164701,"new_severity_id":1177829},"actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":12825355,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":null,"automated_response":false,"created_at":"2021-08-04T15:46:41.685Z","updated_at":"2021-08-04T15:46:41.685Z","additional_data":{"old_severity":"Medium (5.9)","new_severity":"Low","old_severity_id":1177829,"new_severity_id":1177830},"actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":12825365,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I have updated the security classification to \"low\"","automated_response":false,"created_at":"2021-08-04T15:48:04.156Z","updated_at":"2021-08-04T15:48:04.156Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":12825739,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Can you explain why?\n\nIt seems very easy for applications \u0026 libraries to hit this issue accidentally (there are popular examples live on npm today, and the docs specifically say that the vulnerable code here is correct). For affected applications, this unexpectedly and silently disables all verification of server's HTTPS certificates, which is a very serious impact, and exploiting this in a vulnerable application is trivial (use any HTTPS certificate you like and it's always trusted).\n\nJust a couple of months ago, the exact same issue (in an npm module, rather than node itself) was reported as 9.4 critical: https://nvd.nist.gov/vuln/detail/CVE-2021-31597.\n\nSimilar reports for other tools and vulnerabilities, in generally harder-to-exploit scenarios, all seem to be rated high or above: https://nvd.nist.gov/vuln/detail/CVE-2016-11086, https://nvd.nist.gov/vuln/detail/CVE-2020-11050, https://nvd.nist.gov/vuln/detail/CVE-2021-29504","automated_response":false,"created_at":"2021-08-04T16:19:22.250Z","updated_at":"2021-08-04T16:19:22.250Z","actor":{"username":"pimterry","cleared":false,"url":"/pimterry","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/w3wnkoizub9qacv4b9jf39lwcih0/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%22speaking-1000px.jpg%22%3B%20filename%2A%3DUTF-8%27%27speaking-1000px.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ4W3YS5FD%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T133622Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJGMEQCIGFHTfvNreCpBEx6ma8SNDd1vDDIfs0%2Bg65AmwngiTYQAiAlnCpBqU%2FBhidkHb7BIm1B5mCQRUOVIXp%2BQseSrlRN5iqDBAju%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIMMkyyP6srRKwJnYw5KtcDHeBEJsk4F2SMjLLnKF6VZQ8gTH0LrxcCVqXSMNgZR1F18PpwhYbU8Qwfn4rOecOjc%2FGfNk3djcauIei8aKCcLnzshwHWQSvd29UhjSLaczWwVEte3ncX5%2F7TLBeg7zRQpsc0zFB20Cm8vF8Z5NfsChYhN7bulkH%2FDfJw16%2BYS1fZkQzhsF%2FUaEP8JAGkMj5v5WOr%2FLnx6%2FMMhK6%2BsDFWaIeUhAxulEbhuEZZ6dgcu1gqMyUwcg6D9rjwyKS9mTsUA%2BHVlKPil1lPtr7SxO3tf2vD8Cw7bLkyy75qgFHEvuDCUCELKpXfBVH6PD30xPvCzrVd0fptlqCTt6Cpd5I3iyyU9RW0SJyHzyBPACEpWDB8exeuJzM7TEeRFCbnl0%2FkfEHmTDCBuuqKxE7cVRG87tuNtO3iVLpOhHCzOtUoK2Il4kvMh2HPZMpvYIGHtynKBM%2BIh69sGJa0yvDoN%2FRI6PAGM02ZolRkS4bZfQfYm7fOPbpLxrQWbSljfYgc7qbAOT56FKw4Ty4wTdxJVV1NLklUpTvIFuc4wqfUdZCvpJj%2BZaH0CSm%2FQv7WX13ukuacZxFgzkAlzUArGS2%2FgJQFovV4hCQKUkAlBpn1fxDFCB%2FBfj2XYH0lMJ7wkIsGOqYBZLVkkm4v7ciHR6x1EZfGmDDAlA8GWCaRs%2B7p4f0zSrCh5MwJxKYAhCMitoCHTMbKlCWaIdMl5rpmPNjCa3GtIbMpvdZUwpN0EhEKHvK6WgKkHhzE8vZn5llsPReTP2V7t22qBXykSYg%2BgK2etoazMxx4eBGAB7YXcUmHU%2FW%2FCsmGlbwbgrQPl3suOkp4ARb2LIsd96p9ZA9i%2BG4DSDrVOakuIKwh2Q%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=c3d8bd0dc1f970ac90f6b2decbece7df7895172c9bb565b2489d80ecbb992e66"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":12826100,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"From my point of view this requires quite significant pre-existing permissions to be able to exploit this deliberately. Therefore my CVE assessment is \nhttps://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:L/AC:H/PR:H/UI:N/S:U/C:L/I:N/A:N\u0026version=3.1.","automated_response":false,"created_at":"2021-08-04T17:06:23.047Z","updated_at":"2021-08-04T17:06:23.047Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":12826662,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"\u003e From my point of view this requires quite significant pre-existing permissions to be able to exploit this deliberately\n\nMaybe there's a misunderstanding then? There are no permissions required to exploit this, as far as I'm aware. Anybody on the local network (same wifi) or remote network path (ISPs) of a vulnerable application can observe and change all HTTPS traffic from vulnerable applications, with no access to the application or device required.\n\nMore specifically, \"privileges required: high\"/PR:H from the CVSS definition (https://www.first.org/cvss/specification-document#2-1-3-Privileges-Required-PR) means \"significant (e.g., administrative) control over the vulnerable component\". That is _not_ required for this vulnerability - you can attack a vulnerable application remotely with no control or access whatsoever to the device. Or is there something I'm missing, that means that that's not true?\n\nMaybe we're conflating privileges and MitM access? That should be under attack complexity separately though. From the spec, a specific example of AC:H is \"The attacker must inject themselves into the logical network path between the target and the resource requested by the victim in order to read and/or modify network communications\".\n\nSince an attack can arbitrarily change responses, not just observe them, integrity of the \"trustworthiness and veracity of information\" is very directly impacted too, that should not be 'None'. Availability is a bit less clear, but you can plausibly inject huge responses to clients who trust the server and aren't expecting lots of data to quickly take clients offline.\n\nI guess at the end of the day it's up to you, but imo this seems like a very serious understatement of the significant risk to any impacted users here, and every other similar CVE in the past has considered complete \u0026 silent failure of TLS verification to be a high or critical issue.","automated_response":false,"created_at":"2021-08-04T17:33:16.451Z","updated_at":"2021-08-04T17:33:16.451Z","actor":{"username":"pimterry","cleared":false,"url":"/pimterry","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/w3wnkoizub9qacv4b9jf39lwcih0/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%22speaking-1000px.jpg%22%3B%20filename%2A%3DUTF-8%27%27speaking-1000px.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ4W3YS5FD%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T133622Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJGMEQCIGFHTfvNreCpBEx6ma8SNDd1vDDIfs0%2Bg65AmwngiTYQAiAlnCpBqU%2FBhidkHb7BIm1B5mCQRUOVIXp%2BQseSrlRN5iqDBAju%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIMMkyyP6srRKwJnYw5KtcDHeBEJsk4F2SMjLLnKF6VZQ8gTH0LrxcCVqXSMNgZR1F18PpwhYbU8Qwfn4rOecOjc%2FGfNk3djcauIei8aKCcLnzshwHWQSvd29UhjSLaczWwVEte3ncX5%2F7TLBeg7zRQpsc0zFB20Cm8vF8Z5NfsChYhN7bulkH%2FDfJw16%2BYS1fZkQzhsF%2FUaEP8JAGkMj5v5WOr%2FLnx6%2FMMhK6%2BsDFWaIeUhAxulEbhuEZZ6dgcu1gqMyUwcg6D9rjwyKS9mTsUA%2BHVlKPil1lPtr7SxO3tf2vD8Cw7bLkyy75qgFHEvuDCUCELKpXfBVH6PD30xPvCzrVd0fptlqCTt6Cpd5I3iyyU9RW0SJyHzyBPACEpWDB8exeuJzM7TEeRFCbnl0%2FkfEHmTDCBuuqKxE7cVRG87tuNtO3iVLpOhHCzOtUoK2Il4kvMh2HPZMpvYIGHtynKBM%2BIh69sGJa0yvDoN%2FRI6PAGM02ZolRkS4bZfQfYm7fOPbpLxrQWbSljfYgc7qbAOT56FKw4Ty4wTdxJVV1NLklUpTvIFuc4wqfUdZCvpJj%2BZaH0CSm%2FQv7WX13ukuacZxFgzkAlzUArGS2%2FgJQFovV4hCQKUkAlBpn1fxDFCB%2FBfj2XYH0lMJ7wkIsGOqYBZLVkkm4v7ciHR6x1EZfGmDDAlA8GWCaRs%2B7p4f0zSrCh5MwJxKYAhCMitoCHTMbKlCWaIdMl5rpmPNjCa3GtIbMpvdZUwpN0EhEKHvK6WgKkHhzE8vZn5llsPReTP2V7t22qBXykSYg%2BgK2etoazMxx4eBGAB7YXcUmHU%2FW%2FCsmGlbwbgrQPl3suOkp4ARb2LIsd96p9ZA9i%2BG4DSDrVOakuIKwh2Q%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=c3d8bd0dc1f970ac90f6b2decbece7df7895172c9bb565b2489d80ecbb992e66"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":12864342,"is_internal":false,"editable":false,"type":"Activities::CveIdAdded","message":"","automated_response":false,"created_at":"2021-08-06T18:10:01.207Z","updated_at":"2021-08-06T18:10:01.207Z","cve_ids":["CVE-2021-22939"],"actor":{"username":"mhdawson","cleared":false,"url":"/mhdawson","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":12911150,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Who should be crediting this vulnerability to?","automated_response":false,"created_at":"2021-08-10T10:46:36.634Z","updated_at":"2021-08-10T10:46:36.634Z","actor":{"username":"mcollina","cleared":false,"url":"/mcollina","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":12911413,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Tim Perry, from HTTP Toolkit. Thanks.","automated_response":false,"created_at":"2021-08-10T10:57:43.568Z","updated_at":"2021-08-10T10:57:43.568Z","actor":{"username":"pimterry","cleared":false,"url":"/pimterry","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/w3wnkoizub9qacv4b9jf39lwcih0/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%22speaking-1000px.jpg%22%3B%20filename%2A%3DUTF-8%27%27speaking-1000px.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ4W3YS5FD%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T133622Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJGMEQCIGFHTfvNreCpBEx6ma8SNDd1vDDIfs0%2Bg65AmwngiTYQAiAlnCpBqU%2FBhidkHb7BIm1B5mCQRUOVIXp%2BQseSrlRN5iqDBAju%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIMMkyyP6srRKwJnYw5KtcDHeBEJsk4F2SMjLLnKF6VZQ8gTH0LrxcCVqXSMNgZR1F18PpwhYbU8Qwfn4rOecOjc%2FGfNk3djcauIei8aKCcLnzshwHWQSvd29UhjSLaczWwVEte3ncX5%2F7TLBeg7zRQpsc0zFB20Cm8vF8Z5NfsChYhN7bulkH%2FDfJw16%2BYS1fZkQzhsF%2FUaEP8JAGkMj5v5WOr%2FLnx6%2FMMhK6%2BsDFWaIeUhAxulEbhuEZZ6dgcu1gqMyUwcg6D9rjwyKS9mTsUA%2BHVlKPil1lPtr7SxO3tf2vD8Cw7bLkyy75qgFHEvuDCUCELKpXfBVH6PD30xPvCzrVd0fptlqCTt6Cpd5I3iyyU9RW0SJyHzyBPACEpWDB8exeuJzM7TEeRFCbnl0%2FkfEHmTDCBuuqKxE7cVRG87tuNtO3iVLpOhHCzOtUoK2Il4kvMh2HPZMpvYIGHtynKBM%2BIh69sGJa0yvDoN%2FRI6PAGM02ZolRkS4bZfQfYm7fOPbpLxrQWbSljfYgc7qbAOT56FKw4Ty4wTdxJVV1NLklUpTvIFuc4wqfUdZCvpJj%2BZaH0CSm%2FQv7WX13ukuacZxFgzkAlzUArGS2%2FgJQFovV4hCQKUkAlBpn1fxDFCB%2FBfj2XYH0lMJ7wkIsGOqYBZLVkkm4v7ciHR6x1EZfGmDDAlA8GWCaRs%2B7p4f0zSrCh5MwJxKYAhCMitoCHTMbKlCWaIdMl5rpmPNjCa3GtIbMpvdZUwpN0EhEKHvK6WgKkHhzE8vZn5llsPReTP2V7t22qBXykSYg%2BgK2etoazMxx4eBGAB7YXcUmHU%2FW%2FCsmGlbwbgrQPl3suOkp4ARb2LIsd96p9ZA9i%2BG4DSDrVOakuIKwh2Q%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=c3d8bd0dc1f970ac90f6b2decbece7df7895172c9bb565b2489d80ecbb992e66"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":12938744,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Published: https://nodejs.org/en/blog/vulnerability/aug-2021-security-releases/","automated_response":false,"created_at":"2021-08-11T17:52:28.925Z","updated_at":"2021-08-11T17:52:28.925Z","actor":{"username":"mhdawson","cleared":false,"url":"/mhdawson","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":12938749,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","automated_response":false,"created_at":"2021-08-11T17:52:46.751Z","updated_at":"2021-08-11T17:52:46.751Z","actor":{"username":"mhdawson","cleared":false,"url":"/mhdawson","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"pimterry","url":"/pimterry"},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":12938752,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2021-08-11T17:52:56.011Z","updated_at":"2021-08-11T17:52:56.011Z","first_to_agree":true,"actor":{"username":"mhdawson","cleared":false,"url":"/mhdawson","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":13407400,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2021-09-10T17:53:06.480Z","updated_at":"2021-09-10T17:53:06.480Z","actor":{"url":"/nodejs","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Node.js"}},"genius_execution_id":null,"team_handle":"nodejs","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":13555826,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","automated_response":false,"created_at":"2021-09-21T10:26:38.206Z","updated_at":"2021-09-21T10:26:38.206Z","actor":{"url":"/nodejs","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Node.js"}},"bounty_amount":"150.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"nodejs","collaborator":{"username":"pimterry","url":"/pimterry"},"actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}