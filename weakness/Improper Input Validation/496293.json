{"id":496293,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC80OTYyOTM=","url":"https://hackerone.com/reports/496293","title":"[url-parse] Improper Validation and Sanitization","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2019-02-14T22:41:05.962Z","submitted_at":"2019-02-14T22:41:05.962Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"ronperris","url":"/ronperris","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/267/443/1a8173396b482236436c5172363ceb9f64ef27dd_original.jpeg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":23949,"url":"https://hackerone.com/nodejs-ecosystem","handle":"nodejs-ecosystem","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Node.js third-party modules","twitter_handle":"","website":"https://nodejs.org/en/security/","about":"This program is used to handle vulnerabilities in the Node.js ecosystem."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2020-8124"],"singular_disclosure_disabled":false,"disclosed_at":"2020-01-27T09:10:53.941Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2020-01-27T09:10:25.181Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"\u003e NOTE! Thanks for submitting a report! Please replace *all* the [square] sections below with the pertinent details. Remember, the more detail you provide, the easier it is for us to triage and respond quickly, so be sure to take your time filling out the report!\n\nI would like to report Improper Validation and Sanitization in url-parse.\n\nIt allows attacker-controlled URL values to bypass validation and sanitization.\n\n# Module\n\n**module name:** url-parse\n**version:** 1.4.4\n**npm page:** `https://www.npmjs.com/package/url-parse`\n\n## Module Description\n\nThe url-parse method exposes two different API interfaces. The url interface that you know from Node.js and the new URL interface that is available in the latest browsers.\n\n## Module Stats\n\n\u003e Replace stats below with numbers from npm’s module page:\n\n5,544,078 downloads in the last week\n\n# Vulnerability\n\n## Vulnerability Description\n\nWhen using url-parse in the browser the protocol of the URL returned by the parser is not validated correctly. In the Node.js environment strings like, ` javascript:` return and empty string on the resulting URL object, but in the browser the current `document.location.protocol` is used when the provided URL doesn't match the validation expression `/^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\S\\s]*)/i`.\n\n## Steps To Reproduce:\n\nAdd the following `test to test/test.js` and run `npm run test-browser`.\n\n assume(parse.extractProtocol(' javscript:')).eql({\n        slashes: false,\n        protocol: '',\n        rest: ''\n      })\n\n# Wrap up\nLine 199 in index.js is setting the protocol to location.protocol, this is probably not the right move.\n\nurl protocol = extracted.protocol || location.protocol || '';\n\n\u003e Select Y or N for the following statements:\n\n- I contacted the maintainer to let them know: [Y] \n- I opened an issue in the related repository: [N]\n\n## Impact\n\nBypass input sanitization and validation.","vulnerability_information_html":"\u003cblockquote\u003e\n\u003cp\u003eNOTE! Thanks for submitting a report! Please replace \u003cem\u003eall\u003c/em\u003e the [square] sections below with the pertinent details. Remember, the more detail you provide, the easier it is for us to triage and respond quickly, so be sure to take your time filling out the report!\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eI would like to report Improper Validation and Sanitization in url-parse.\u003c/p\u003e\n\n\u003cp\u003eIt allows attacker-controlled URL values to bypass validation and sanitization.\u003c/p\u003e\n\n\u003ch1 id=\"module\"\u003eModule\u003c/h1\u003e\n\n\u003cp\u003e\u003cstrong\u003emodule name:\u003c/strong\u003e url-parse\u003cbr\u003e\n\u003cstrong\u003eversion:\u003c/strong\u003e 1.4.4\u003cbr\u003e\n\u003cstrong\u003enpm page:\u003c/strong\u003e \u003ccode\u003ehttps://www.npmjs.com/package/url-parse\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2 id=\"module-description\"\u003eModule Description\u003c/h2\u003e\n\n\u003cp\u003eThe url-parse method exposes two different API interfaces. The url interface that you know from Node.js and the new URL interface that is available in the latest browsers.\u003c/p\u003e\n\n\u003ch2 id=\"module-stats\"\u003eModule Stats\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eReplace stats below with numbers from npm’s module page:\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e5,544,078 downloads in the last week\u003c/p\u003e\n\n\u003ch1 id=\"vulnerability\"\u003eVulnerability\u003c/h1\u003e\n\n\u003ch2 id=\"vulnerability-description\"\u003eVulnerability Description\u003c/h2\u003e\n\n\u003cp\u003eWhen using url-parse in the browser the protocol of the URL returned by the parser is not validated correctly. In the Node.js environment strings like, \u003ccode\u003ejavascript:\u003c/code\u003e return and empty string on the resulting URL object, but in the browser the current \u003ccode\u003edocument.location.protocol\u003c/code\u003e is used when the provided URL doesn\u0026#39;t match the validation expression \u003ccode\u003e/^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\S\\s]*)/i\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003cp\u003eAdd the following \u003ccode\u003etest to test/test.js\u003c/code\u003e and run \u003ccode\u003enpm run test-browser\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eassume(parse.extractProtocol(\u0026#39; javscript:\u0026#39;)).eql({\u003cbr\u003e\n        slashes: false,\u003cbr\u003e\n        protocol: \u0026#39;\u0026#39;,\u003cbr\u003e\n        rest: \u0026#39;\u0026#39;\u003cbr\u003e\n      })\u003c/p\u003e\n\n\u003ch1 id=\"wrap-up\"\u003eWrap up\u003c/h1\u003e\n\n\u003cp\u003eLine 199 in index.js is setting the protocol to location.protocol, this is probably not the right move.\u003c/p\u003e\n\n\u003cp\u003eurl protocol = extracted.protocol || location.protocol || \u0026#39;\u0026#39;;\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eSelect Y or N for the following statements:\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cul\u003e\n\u003cli\u003eI contacted the maintainer to let them know: [Y] \u003c/li\u003e\n\u003cli\u003eI opened an issue in the related repository: [N]\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eBypass input sanitization and validation.\u003c/p\u003e\n","weakness":{"id":107,"name":"Improper Input Validation"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2020-02-26T09:10:25.276Z","allow_singular_disclosure_after":-26513871.63673005,"singular_disclosure_allowed":true,"vote_count":6,"voters":["duckoverflow","exception","zimmer75","b9372d4605459ca97219795","v13rsba","ssenyondwa"],"severity":{"rating":"high","score":7.3,"author_type":"Team","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"low","user_interaction":"required","scope":"unchanged","confidentiality":"high","integrity":"high","availability":"none"}},"structured_scope":{"databaseId":12928,"asset_type":"SOURCE_CODE","asset_identifier":"url-parse","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":4152347,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello,\nThanks for reporting this to us. Someone will quickly look at this report and triage it.","markdown_message":"\u003cp\u003eHello,\u003cbr\u003e\nThanks for reporting this to us. Someone will quickly look at this report and triage it.\u003c/p\u003e\n","automated_response":true,"created_at":"2019-02-14T22:41:11.641Z","updated_at":"2019-02-14T22:41:11.641Z","actor":{"username":"vdeturckheim_dev","cleared":false,"url":"/vdeturckheim_dev","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":4237286,"is_internal":false,"editable":false,"type":"Activities::ChangedScope","message":"","markdown_message":"","automated_response":false,"created_at":"2019-03-01T18:20:31.975Z","updated_at":"2019-03-01T18:20:31.975Z","actor":{"username":"ronperris","cleared":false,"url":"/ronperris","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/267/443/1a8173396b482236436c5172363ceb9f64ef27dd_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"old_scope":"url-parse","new_scope":"None","genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4237339,"is_internal":false,"editable":false,"type":"Activities::ChangedScope","message":"","markdown_message":"","automated_response":false,"created_at":"2019-03-01T18:24:36.718Z","updated_at":"2019-03-01T18:24:36.718Z","actor":{"username":"ronperris","cleared":false,"url":"/ronperris","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/267/443/1a8173396b482236436c5172363ceb9f64ef27dd_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"old_scope":"None","new_scope":"url-parse","genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4237355,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2019-03-01T18:26:29.510Z","updated_at":"2019-03-01T18:26:29.510Z","actor":{"username":"ronperris","cleared":false,"url":"/ronperris","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/267/443/1a8173396b482236436c5172363ceb9f64ef27dd_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4289120,"is_internal":false,"editable":false,"type":"Activities::ReportTitleUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2019-03-08T22:04:02.092Z","updated_at":"2019-03-08T22:04:02.092Z","additional_data":{"old_title":"Improper Validation and Sanitization","new_title":"[url-parse] Improper Validation and Sanitization"},"actor":{"username":"ronperris","cleared":false,"url":"/ronperris","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/267/443/1a8173396b482236436c5172363ceb9f64ef27dd_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4459634,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":"","markdown_message":"","automated_response":false,"created_at":"2019-04-03T17:33:42.425Z","updated_at":"2019-04-03T17:33:42.425Z","actor":{"username":"3rdeden","cleared":false,"url":"/3rdeden","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4459652,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I have a patch working for this, which basically just trims() all input before it's parsed but it's breaking one of the existing tests that explicity wants unicode whitespace at the end of the URL. An alternate fix would just do a trim left so the whitespace infront of the protocol would be trimmed creating the desired result again.","markdown_message":"\u003cp\u003eI have a patch working for this, which basically just trims() all input before it\u0026#39;s parsed but it\u0026#39;s breaking one of the existing tests that explicity wants unicode whitespace at the end of the URL. An alternate fix would just do a trim left so the whitespace infront of the protocol would be trimmed creating the desired result again.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-03T17:37:21.294Z","updated_at":"2019-04-03T17:37:21.294Z","actor":{"username":"3rdeden","cleared":false,"url":"/3rdeden","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4460423,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@3rdeden That sounds good. That will patch the exploit path I reported.","markdown_message":"\u003cp\u003e\u003ca href=\"/3rdeden\"\u003e@3rdeden\u003c/a\u003e That sounds good. That will patch the exploit path I reported.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-03T19:14:27.674Z","updated_at":"2019-04-03T19:14:27.674Z","actor":{"username":"ronperris","cleared":false,"url":"/ronperris","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/267/443/1a8173396b482236436c5172363ceb9f64ef27dd_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4543299,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Should be resolved in url-parse@1.4.5\n\n- Referenced git commit: https://github.com/unshiftio/url-parse/commit/3ecd256f127c3ada36a84d9b8dd3ebd14316274b with the fix.","markdown_message":"\u003cp\u003eShould be resolved in \u003ca title=\"url-parse@1.4.5\" href=\"mailto:url-parse@1.4.5\" rel=\"nofollow noopener noreferrer\"\u003eurl-parse@1.4.5\u003c/a\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eReferenced git commit: \u003ca title=\"https://github.com/unshiftio/url-parse/commit/3ecd256f127c3ada36a84d9b8dd3ebd14316274b\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Funshiftio%2Furl-parse%2Fcommit%2F3ecd256f127c3ada36a84d9b8dd3ebd14316274b\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/unshiftio/url-parse/commit/3ecd256f127c3ada36a84d9b8dd3ebd14316274b\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e with the fix.\u003c/li\u003e\n\u003c/ul\u003e\n","automated_response":false,"created_at":"2019-04-11T22:44:23.906Z","updated_at":"2019-04-11T22:44:23.906Z","actor":{"username":"3rdeden","cleared":false,"url":"/3rdeden","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6860272,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2020-01-24T10:49:18.565Z","updated_at":"2020-01-24T10:49:18.565Z","additional_data":{"old_severity":null,"new_severity":"Critical (9.1)","old_severity_id":null,"new_severity_id":617096},"actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6860286,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2020-01-24T10:50:49.706Z","updated_at":"2020-01-24T10:50:49.706Z","additional_data":{"old_severity":"Critical (9.1)","new_severity":"High (7.3)","old_severity_id":617096,"new_severity_id":617097},"actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6878679,"is_internal":false,"editable":false,"type":"Activities::ReportVulnerabilityTypesUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2020-01-27T09:08:24.097Z","updated_at":"2020-01-27T09:08:24.097Z","additional_data":{"added_weaknesses":[{"id":107,"name":"Improper Input Validation"}],"removed_weaknesses":[]},"actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6878704,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2020-01-27T09:10:18.012Z","updated_at":"2020-01-27T09:10:18.012Z","actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"ronperris","url":"/ronperris"},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6878710,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-01-27T09:10:25.195Z","updated_at":"2020-01-27T09:10:25.195Z","first_to_agree":true,"actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6878718,"is_internal":false,"editable":false,"type":"Activities::ManuallyDisclosed","message":"","markdown_message":"","automated_response":false,"created_at":"2020-01-27T09:10:53.829Z","updated_at":"2020-01-27T09:10:53.829Z","actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}