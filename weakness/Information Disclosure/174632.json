{"id":174632,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNzQ2MzI=","url":"https://hackerone.com/reports/174632","title":"Information disclosure in mmap module - python 2.7.12","state":"Closed","substate":"resolved","severity_rating":"low","readable_substate":"Resolved","created_at":"2016-10-08T08:55:54.903Z","submitted_at":"2016-10-08T08:55:54.903Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"aerodudrizzt","url":"/aerodudrizzt","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":27,"url":"https://hackerone.com/ibb-python","handle":"ibb-python","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/027/c46b79d4c73a7b34d61a717ed19ae719a0b67b2e_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/027/c46b79d4c73a7b34d61a717ed19ae719a0b67b2e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Python (IBB)","twitter_handle":"","website":"http://www.python.org/news/security","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-10-13T09:03:00.383Z","bug_reporter_agreed_on_going_public_at":"2019-10-13T09:03:00.312Z","team_member_agreed_on_going_public_at":"2019-10-13T09:01:05.565Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"First thing first, the report was sent to python's security mailing list on the 27.8.16 and was fixed by benjamin on the 5.10.16 (rev 144f10202076), and acknowledged be me today (8.10.16).\n\nIn a security audit I made to the mmap module in python (2.7.12), I have found a **major information leak** vulnerability. Here are the relevant details:\n* mmap module uses size_t pos, size for boundary checks before read/write access to the mmaped file\n* The resize() function, in both windows and linux, updates only the size variable, and **ignores** the pos variable\n* resize() that shrinks the mapped file can lead to a situation in which pos \u003e size, thus breaking the code's invariant\n* A later call to read() or readline() can leverage this point into reading from a different memory page:\n* read():\n * The only check is an assert() that size \u003e= pos\n * Than an int variable is declared and used:\n  * n = self-\u003esize - self-\u003epos; // n is now negative\n  * n is adjusted to be: n = PY_SSIZE_T_MAX;\n  * n is now a poor upper bound to the read operation that follows\n* readline():\n * no size checks are done, the checks are passed to the memchr() function\n * memchr(start, '\\n', self-\u003esize - self-\u003epos)\n * memchr() receives size_t as the length parameter, thus making the size bound negligible\n * read will now \"steal\" data from another page: PyString_FromStringAndSize(start, (eol - start))\n\nThe exploitation will only work in case that there is an adjacent memory page, otherwise the read() / memchr() will cause a segfault while reading outside of the process memory mapped pages.\n\nI have exploited the vulnerability and demonstrated it's possible effects on a windows 7 computer. On a linux machine there should be (probably) some small adjustments to the demo script. Attached are the attack script and it's result in a successful attack attempt.\n\nAs i mentioned at the beginning, the vulnerability was fixed and acknowledged to block the described attacks.\nEyal.","vulnerability_information_html":"\u003cp\u003eFirst thing first, the report was sent to python\u0026#39;s security mailing list on the 27.8.16 and was fixed by benjamin on the 5.10.16 (rev 144f10202076), and acknowledged be me today (8.10.16).\u003c/p\u003e\n\n\u003cp\u003eIn a security audit I made to the mmap module in python (2.7.12), I have found a \u003cstrong\u003emajor information leak\u003c/strong\u003e vulnerability. Here are the relevant details:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003emmap module uses size_t pos, size for boundary checks before read/write access to the mmaped file\u003c/li\u003e\n\u003cli\u003eThe resize() function, in both windows and linux, updates only the size variable, and \u003cstrong\u003eignores\u003c/strong\u003e the pos variable\u003c/li\u003e\n\u003cli\u003eresize() that shrinks the mapped file can lead to a situation in which pos \u0026gt; size, thus breaking the code\u0026#39;s invariant\u003c/li\u003e\n\u003cli\u003eA later call to read() or readline() can leverage this point into reading from a different memory page:\u003c/li\u003e\n\u003cli\u003eread():\n\n\u003cul\u003e\n\u003cli\u003eThe only check is an assert() that size \u0026gt;= pos\u003c/li\u003e\n\u003cli\u003eThan an int variable is declared and used:\u003c/li\u003e\n\u003cli\u003en = self-\u0026gt;size - self-\u0026gt;pos; // n is now negative\u003c/li\u003e\n\u003cli\u003en is adjusted to be: n = PY_SSIZE_T_MAX;\u003c/li\u003e\n\u003cli\u003en is now a poor upper bound to the read operation that follows\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003ereadline():\n\n\u003cul\u003e\n\u003cli\u003eno size checks are done, the checks are passed to the memchr() function\u003c/li\u003e\n\u003cli\u003ememchr(start, \u0026#39;\\n\u0026#39;, self-\u0026gt;size - self-\u0026gt;pos)\u003c/li\u003e\n\u003cli\u003ememchr() receives size_t as the length parameter, thus making the size bound negligible\u003c/li\u003e\n\u003cli\u003eread will now \u0026quot;steal\u0026quot; data from another page: PyString_FromStringAndSize(start, (eol - start))\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe exploitation will only work in case that there is an adjacent memory page, otherwise the read() / memchr() will cause a segfault while reading outside of the process memory mapped pages.\u003c/p\u003e\n\n\u003cp\u003eI have exploited the vulnerability and demonstrated it\u0026#39;s possible effects on a windows 7 computer. On a linux machine there should be (probably) some small adjustments to the demo script. Attached are the attack script and it\u0026#39;s result in a successful attack attempt.\u003c/p\u003e\n\n\u003cp\u003eAs i mentioned at the beginning, the vulnerability was fixed and acknowledged to block the described attacks.\u003cbr\u003e\nEyal.\u003c/p\u003e\n","bounty_amount":"500.0","formatted_bounty":"$500","weakness":{"id":18,"name":"Information Disclosure"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":126670,"file_name":"mmap_test.py","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/126/670/cf76b4cbe40ddcc8efcba2e9f014423b3b49adb2/mmap_test.py?response-content-disposition=attachment%3B%20filename%3D%22mmap_test.py%22%3B%20filename%2A%3DUTF-8%27%27mmap_test.py\u0026response-content-type=text%2Fplain\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ4IZIDGEJ%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T044220Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHgvhPRXI%2B7x6zNGnfFbWtzZacTUlKPt3VwSApQji3YyAiEA2Y%2FuJ72LgjXuchHTkycORzGcHp9y6ZUl%2BeyKz%2FFfjlAqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDHblJHa0bCSVtoiX8yqRA7Ct%2F1l8ihdf2xXnJNUaJGv7nq%2F1b1xXdqHLpOjb5bN22Ac%2BQjHl%2Bna1KjqQx0Qu8Fcs0WQUm6dGPZbHLiP%2FRkIHh6FlY41MtajX39mvBrMgWCmioQD4vc7NSsiqHLG4GmvgnIM0wWXfwwv%2Fmq%2BjRWJQacOyz7e9kYXzI%2BQkViUKmcuV48xoXGswHYXnPSqKC6IqSk0Rgc6j2xAmne60g5PNHQf%2BehWLSoXupow19n2vF%2BE4dhw1ZLX%2B9fBct02t5%2B41MEA5z30yhC52UxDX9%2BedHi3rXpTTyV%2FX%2BWfdeGSGSqmwrTAcipCpz01NR%2Fkk3srD5BLQB%2B6BdeDlwwcltfcgYdKO39yRPNyZePA9ihdN%2B4YHA7%2FY9ufCPbEevGDvtv3mVStbES31aUOxSmGNj%2B8fMMJqFBAtD4Qx54l8UFyMf%2BQ8PPbA0OLpU9rjip1L0zxevK6IGISP%2FPlDldWsNQvfi1Xn6QvRkmL1ANNGXqycx5MDUJExPyV801VOQ68%2FfbB87Cmdd8xIJWUNtmpsIgDtMO2wqv8FOusBRxy8OOzTGCKFydY5xn2aZtaPj3obazs55j%2BS5FoY%2BdkqAuB4pbyPDlTBBI%2Fe4ZIYYBH9t51VaQaRwrhKPTTntuBcC2b5uuKcGXYq9rnIAgbUHulNqSoxgZep0wAjzrLEFeECcDfqDCjG1QyXJkGQyq3UjLElJNKzeGgK4y5hW9emXis3wfoUPLixiL7W8M52b0Q9HQrT0RxnkkNSLj7aPyOAVCPImHNwjJ%2FI2KIbB5iD4e9PbxcHFvjKgkNUQh2pESECovpzx%2BAz7wsT%2FUMRieGT%2BFtMt1o90%2BewPxe95i025ZqzwWI1aVcXtA%3D%3D\u0026X-Amz-Signature=1dbc05781c11c9d070f4657added6599909a613ad3ae18893e2589c97f8c4460","file_size":825,"type":"text/plain"},{"id":126671,"file_name":"mmap_info_leak_poc.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/126/671/5997a9463f2f1f96a1d1d705bcd4f9adee3a74a1/mmap_info_leak_poc.png?response-content-disposition=attachment%3B%20filename%3D%22mmap_info_leak_poc.png%22%3B%20filename%2A%3DUTF-8%27%27mmap_info_leak_poc.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ4IZIDGEJ%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T044220Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHgvhPRXI%2B7x6zNGnfFbWtzZacTUlKPt3VwSApQji3YyAiEA2Y%2FuJ72LgjXuchHTkycORzGcHp9y6ZUl%2BeyKz%2FFfjlAqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDHblJHa0bCSVtoiX8yqRA7Ct%2F1l8ihdf2xXnJNUaJGv7nq%2F1b1xXdqHLpOjb5bN22Ac%2BQjHl%2Bna1KjqQx0Qu8Fcs0WQUm6dGPZbHLiP%2FRkIHh6FlY41MtajX39mvBrMgWCmioQD4vc7NSsiqHLG4GmvgnIM0wWXfwwv%2Fmq%2BjRWJQacOyz7e9kYXzI%2BQkViUKmcuV48xoXGswHYXnPSqKC6IqSk0Rgc6j2xAmne60g5PNHQf%2BehWLSoXupow19n2vF%2BE4dhw1ZLX%2B9fBct02t5%2B41MEA5z30yhC52UxDX9%2BedHi3rXpTTyV%2FX%2BWfdeGSGSqmwrTAcipCpz01NR%2Fkk3srD5BLQB%2B6BdeDlwwcltfcgYdKO39yRPNyZePA9ihdN%2B4YHA7%2FY9ufCPbEevGDvtv3mVStbES31aUOxSmGNj%2B8fMMJqFBAtD4Qx54l8UFyMf%2BQ8PPbA0OLpU9rjip1L0zxevK6IGISP%2FPlDldWsNQvfi1Xn6QvRkmL1ANNGXqycx5MDUJExPyV801VOQ68%2FfbB87Cmdd8xIJWUNtmpsIgDtMO2wqv8FOusBRxy8OOzTGCKFydY5xn2aZtaPj3obazs55j%2BS5FoY%2BdkqAuB4pbyPDlTBBI%2Fe4ZIYYBH9t51VaQaRwrhKPTTntuBcC2b5uuKcGXYq9rnIAgbUHulNqSoxgZep0wAjzrLEFeECcDfqDCjG1QyXJkGQyq3UjLElJNKzeGgK4y5hW9emXis3wfoUPLixiL7W8M52b0Q9HQrT0RxnkkNSLj7aPyOAVCPImHNwjJ%2FI2KIbB5iD4e9PbxcHFvjKgkNUQh2pESECovpzx%2BAz7wsT%2FUMRieGT%2BFtMt1o90%2BewPxe95i025ZqzwWI1aVcXtA%3D%3D\u0026X-Amz-Signature=c9ce53ad781a473eb8240a2c64ba8fd54a3467cb23cba67705435e53c756f0a2","file_size":69122,"type":"image/png"}],"allow_singular_disclosure_at":"2019-11-12T09:01:05.673Z","allow_singular_disclosure_after":-35667674.426750705,"singular_disclosure_allowed":true,"vote_count":30,"voters":["mik317","nessun00x","smodnix","spetr0x","zventsen","eccentricnature29","hackerbobby","migeek","antikvar","metinahmet0816","and 20 more..."],"severity":{"rating":"low","score":3.7,"author_type":"Team","metrics":{"attack_vector":"network","attack_complexity":"high","privileges_required":"none","user_interaction":"none","scope":"unchanged","confidentiality":"low","integrity":"none","availability":"none"}},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":1250453,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"After the report will be handled and closed, would it be OK to publicly disclose it? (official CVE, etc.)?","markdown_message":"\u003cp\u003eAfter the report will be handled and closed, would it be OK to publicly disclose it? (official CVE, etc.)?\u003c/p\u003e\n","automated_response":false,"created_at":"2016-10-17T09:31:15.847Z","updated_at":"2016-10-17T09:31:15.847Z","actor":{"username":"aerodudrizzt","cleared":false,"url":"/aerodudrizzt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-python","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1273382,"is_internal":false,"editable":false,"type":"Activities::HackerRequestedMediation","message":"I submitted my report in the HackerOne site only after I sent the details to python's security team and they patched my findings. Even though it is stated that 3 weeks are \"within Python's typical response timeframe\", these are 3 weeks waiting for the ibb panel, on top of the 1.5 months I waited for the real python security team (not counted in this site's statistics).\n\nI only ask that there will be some reply to my report (or to my question about the CVE procedure) so I would know that my report has been seen / is currently discussed. In the current state it seems like this is a 3 weeks wait while the report is not even known to the panel, and this is quite a long period for a response time.\n\nThanks in advance,\nEyal.","markdown_message":"\u003cp\u003eI submitted my report in the HackerOne site only after I sent the details to python\u0026#39;s security team and they patched my findings. Even though it is stated that 3 weeks are \u0026quot;within Python\u0026#39;s typical response timeframe\u0026quot;, these are 3 weeks waiting for the ibb panel, on top of the 1.5 months I waited for the real python security team (not counted in this site\u0026#39;s statistics).\u003c/p\u003e\n\n\u003cp\u003eI only ask that there will be some reply to my report (or to my question about the CVE procedure) so I would know that my report has been seen / is currently discussed. In the current state it seems like this is a 3 weeks wait while the report is not even known to the panel, and this is quite a long period for a response time.\u003c/p\u003e\n\n\u003cp\u003eThanks in advance,\u003cbr\u003e\nEyal.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-10-28T19:19:39.782Z","updated_at":"2016-10-28T19:19:39.782Z","actor":{"username":"aerodudrizzt","cleared":false,"url":"/aerodudrizzt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-python","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1338957,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2016-12-03T20:06:25.156Z","updated_at":"2016-12-03T20:06:25.156Z","additional_data":{"old_severity":"Critical (10.0)","new_severity":"Low (3.7)","old_severity_id":916,"new_severity_id":11343},"actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-python","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1338959,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2016-12-03T20:06:39.705Z","updated_at":"2016-12-03T20:06:39.705Z","actor":{"url":"/ibb-python","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/027/c46b79d4c73a7b34d61a717ed19ae719a0b67b2e_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Python (IBB)"}},"bounty_amount":"500.0","bounty_currency":"usd","genius_execution_id":null,"team_handle":"ibb-python","collaborator":{"username":"aerodudrizzt","url":"/aerodudrizzt"},"actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1338961,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you for the patience Eyal!\n\n\u003e After the report will be handled and closed, would it be OK to publicly disclose it? (official CVE, etc.)?\n\nThe project maintainers will need to provide an answer here. But if I were to speculate I'd assume public disclosure is allowed at this point (given the commit is released, although I wouldn't expect a CVE given the severity if one hasn't already been assigned.","markdown_message":"\u003cp\u003eThank you for the patience Eyal!\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAfter the report will be handled and closed, would it be OK to publicly disclose it? (official CVE, etc.)?\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe project maintainers will need to provide an answer here. But if I were to speculate I\u0026#39;d assume public disclosure is allowed at this point (given the commit is released, although I wouldn\u0026#39;t expect a CVE given the severity if one hasn\u0026#39;t already been assigned.\u003c/p\u003e\n","automated_response":false,"created_at":"2016-12-03T20:09:43.915Z","updated_at":"2016-12-03T20:09:43.915Z","actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-python","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1338962,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2016-12-03T20:09:52.120Z","updated_at":"2016-12-03T20:09:52.120Z","actor":{"username":"arice","cleared":false,"url":"/arice","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/020/83152cb2d070f3f6a63c1b61bae47257722b5ad2_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"aerodudrizzt","url":"/aerodudrizzt"},"genius_execution_id":null,"team_handle":"ibb-python","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1339177,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks","markdown_message":"\u003cp\u003eThanks\u003c/p\u003e\n","automated_response":false,"created_at":"2016-12-03T21:36:15.588Z","updated_at":"2016-12-03T21:36:15.588Z","actor":{"username":"aerodudrizzt","cleared":false,"url":"/aerodudrizzt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-python","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6025385,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-13T09:01:05.587Z","updated_at":"2019-10-13T09:01:05.587Z","first_to_agree":true,"actor":{"username":"reed","cleared":false,"url":"/reed","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/132/66d7eadcea16b878bb67bfd697b9542250a801a7_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"ibb-python","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6025446,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-13T09:03:00.339Z","updated_at":"2019-10-13T09:03:00.339Z","actor":{"username":"aerodudrizzt","cleared":false,"url":"/aerodudrizzt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-python","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6025447,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-10-13T09:03:00.405Z","updated_at":"2019-10-13T09:03:00.405Z","actor":{"username":"aerodudrizzt","cleared":false,"url":"/aerodudrizzt","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"ibb-python","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}