{"id":481164,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC80ODExNjQ=","url":"https://hackerone.com/reports/481164","title":"Monero can leak unitialized memory","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2019-01-16T21:33:28.884Z","submitted_at":"2019-01-16T21:33:28.884Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"guido","url":"/guido","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":7731,"url":"https://hackerone.com/monero","handle":"monero","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/007/731/55634f7fcd917725c7a5771cc6e7c9b4d5fe0c22_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/007/731/55634f7fcd917725c7a5771cc6e7c9b4d5fe0c22_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":false,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Monero","twitter_handle":"monero","website":"https://getmonero.org","about":" Monero: the secure, private, untraceable cryptocurrency"}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-07-02T22:49:44.832Z","bug_reporter_agreed_on_going_public_at":"2019-06-03T14:19:44.708Z","team_member_agreed_on_going_public_at":"2019-07-02T22:49:44.413Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"See this proof of concept:\n\n```cpp\n#include \u003cnet/http_client.h\u003e\n#include \u003crpc/core_rpc_server_commands_defs.h\u003e\n#include \u003cstorages/http_abstract_invoke.h\u003e\n\nINITIALIZE_EASYLOGGINGPP\n\ntemplate \u003cclass T\u003e\nstatic void invoke_http_json(void)\n{\n    typename T::request ireq;\n    typename T::response ires;\n\n    std::string req_param;\n    if(!epee::serialization::store_t_to_json(ireq, req_param)) {\n        return;\n    }\n    printf(\"%s\\n\", req_param.c_str());\n}\n\nint main(void)\n{\n    while ( true ) {\n        const unsigned char which = rand() % 65;\n        printf(\"which: %u\\n\", which);\n        switch ( which ) {\n            case 0:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_HEIGHT\u003e();\n                break;\n\n            case 1:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_BLOCKS_FAST\u003e();\n                break;\n\n            case 2:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_BLOCKS_BY_HEIGHT\u003e();\n                break;\n\n            case 3:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_ALT_BLOCKS_HASHES\u003e();\n                break;\n\n            case 4:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_HASHES_FAST\u003e();\n                break;\n\n            case 5:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_ADDRESS_TXS\u003e();\n                break;\n\n            case 6:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_ADDRESS_INFO\u003e();\n                break;\n\n            case 7:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_UNSPENT_OUTS\u003e();\n                break;\n\n            case 8:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_RANDOM_OUTS\u003e();\n                break;\n\n            case 9:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_SUBMIT_RAW_TX\u003e();\n                break;\n\n            case 10:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_LOGIN\u003e();\n                break;\n\n            case 11:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_IMPORT_WALLET_REQUEST\u003e();\n                break;\n\n            case 12:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_TRANSACTIONS\u003e();\n                break;\n\n            case 13:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_IS_KEY_IMAGE_SPENT\u003e();\n                break;\n\n            case 14:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_TX_GLOBAL_OUTPUTS_INDEXES\u003e();\n                break;\n\n            case 15:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_OUTPUTS_BIN\u003e();\n                break;\n\n            case 16:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_OUTPUTS\u003e();\n                break;\n\n            case 17:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_SEND_RAW_TX\u003e();\n                break;\n\n            case 18:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_START_MINING\u003e();\n                break;\n\n            case 19:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_INFO\u003e();\n                break;\n\n            case 20:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_STOP_MINING\u003e();\n                break;\n\n            case 21:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_MINING_STATUS\u003e();\n                break;\n\n            case 22:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_SAVE_BC\u003e();\n                break;\n\n            case 25:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GETBLOCKTEMPLATE\u003e();\n                break;\n\n            case 27:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GENERATEBLOCKS\u003e();\n                break;\n\n            case 28:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_LAST_BLOCK_HEADER\u003e();\n                break;\n\n            case 29:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_BLOCK_HEADER_BY_HASH\u003e();\n                break;\n\n            case 30:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_BLOCK_HEADER_BY_HEIGHT\u003e();\n                break;\n\n            case 31:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_BLOCK\u003e();\n                break;\n\n            case 32:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_PEER_LIST\u003e();\n                break;\n\n            case 33:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_SET_LOG_HASH_RATE\u003e();\n                break;\n\n            case 34:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_SET_LOG_LEVEL\u003e();\n                break;\n\n            case 35:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_SET_LOG_CATEGORIES\u003e();\n                break;\n\n            case 36:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_TRANSACTION_POOL\u003e();\n                break;\n\n            case 37:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_TRANSACTION_POOL_HASHES_BIN\u003e();\n                break;\n\n            case 38:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_TRANSACTION_POOL_HASHES\u003e();\n                break;\n\n            case 39:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_TRANSACTION_POOL_BACKLOG\u003e();\n                break;\n\n            case 40:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_TRANSACTION_POOL_STATS\u003e();\n                break;\n\n            case 41:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_CONNECTIONS\u003e();\n                break;\n\n            case 42:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_BLOCK_HEADERS_RANGE\u003e();\n                break;\n\n            case 43:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_STOP_DAEMON\u003e();\n                break;\n\n            case 44:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_FAST_EXIT\u003e();\n                break;\n\n            case 45:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_LIMIT\u003e();\n                break;\n\n            case 46:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_SET_LIMIT\u003e();\n                break;\n\n            case 47:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_OUT_PEERS\u003e();\n                break;\n\n            case 48:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_IN_PEERS\u003e();\n                break;\n\n            case 49:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_START_SAVE_GRAPH\u003e();\n                break;\n\n            case 50:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_STOP_SAVE_GRAPH\u003e();\n                break;\n\n            case 51:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_HARD_FORK_INFO\u003e();\n                break;\n\n            case 52:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GETBANS\u003e();\n                break;\n\n            case 53:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_SETBANS\u003e();\n                break;\n\n            case 54:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_FLUSH_TRANSACTION_POOL\u003e();\n                break;\n\n            case 55:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_OUTPUT_HISTOGRAM\u003e();\n                break;\n\n            case 56:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_VERSION\u003e();\n                break;\n\n            case 57:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_COINBASE_TX_SUM\u003e();\n                break;\n\n            case 58:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_BASE_FEE_ESTIMATE\u003e();\n                break;\n\n            case 59:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_ALTERNATE_CHAINS\u003e();\n                break;\n\n            case 60:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_UPDATE\u003e();\n                break;\n\n            case 61:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_RELAY_TX\u003e();\n                break;\n\n            case 62:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_SYNC_INFO\u003e();\n                break;\n\n            case 63:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_GET_OUTPUT_DISTRIBUTION\u003e();\n                break;\n\n            case 64:\n                invoke_http_json\u003ccryptonote::COMMAND_RPC_POP_BLOCKS\u003e();\n                break;\n        }\n    }\n\n    return 0;\n}\n```\n\nCompile:\n\n```\ng++ -std=c++11 -I $MONERO_PATH/src -I $MONERO_PATH/contrib/epee/include -I $MONERO_PATH/external/easylogging++ $MONERO_PATH/external/easylogging++/easylogging++.cc uninitialized-memory-send.cpp -lpthread -lboost_system -lcrypto -lssl\n```\n\nRun:\n\n```\n./a.out | head -n1000000 | sort -u \u003eoutput\n```\n\nIf you examine ```output```, you'll see that JSON is generated with random data. This is uninitialized memory created at the instantiation of ```ireq```.\n\nTo solve this, initialize ```ireq```. For example, change\n\n```\n    typename T::request ireq;\n```\n\nto\n\n```\n    boost::value_initialized\u003ctypename T::request\u003e _ireq;\n    typename T::request\u0026 ireq = _ireq;\n\n```\n\nCompile and run again, and you'll see that the random data is now gone.\n\nAmong other places, ```src/wallet/wallet2.cpp``` contains many calls to ```invoke_http_json```, with some ```::request``` structs initialized with ```AUTO_VAL_INIT```, but some not.\n```invoke_http_json``` serializes the ```::request``` struct exactly like in my proof-of-concept which is then sent to the RPC server:\n\n\n```\nnamespace epee\n{\n  namespace net_utils\n  {\n    template\u003cclass t_request, class t_response, class t_transport\u003e\n    bool invoke_http_json(const boost::string_ref uri, const t_request\u0026 out_struct, t_response\u0026 result_struct, t_transport\u0026 transport, std::chrono::milliseconds timeout = std::chrono::seconds(15), const boost::string_ref method = \"GET\")\n    {   \n      std::string req_param;\n      if(!serialization::store_t_to_json(out_struct, req_param))\n        return false;\n\n      http::fields_list additional_params;\n      additional_params.push_back(std::make_pair(\"Content-Type\",\"application/json; charset=utf-8\"));\n\n      const http::http_response_info* pri = NULL;\n      if(!transport.invoke(uri, method, req_param, timeout, std::addressof(pri), std::move(additional_params)))  \n      ...\n      ...\n```\n\nAny outbound traffic (bootstrap node/public RPC server/other) where the ```::request``` struct is not explicitly initialized, is thus susceptible to leaking uninitialized memory. Uninitialized memory is never literally uninitialized -- it contains remnants of previous use of the same memory region, and this can include cryptographic or other private material.\n\n## Impact\n\nLeaking sensitive data to untrusted network peers.","vulnerability_information_html":"\u003cp\u003eSee this proof of concept:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight cpp\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;net/http_client.h\u0026gt;\n#include \u0026lt;rpc/core_rpc_server_commands_defs.h\u0026gt;\n#include \u0026lt;storages/http_abstract_invoke.h\u0026gt;\n\u003c/span\u003e\n\u003cspan class=\"n\"\u003eINITIALIZE_EASYLOGGINGPP\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e \u003cspan class=\"n\"\u003eireq\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e \u003cspan class=\"n\"\u003eires\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"n\"\u003ereq_param\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eepee\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eserialization\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estore_t_to_json\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eireq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq_param\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;%s\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq_param\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ec_str\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003ewhich\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erand\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"mi\"\u003e65\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;which: %u\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ewhich\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003ewhich\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_HEIGHT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_BLOCKS_FAST\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_BLOCKS_BY_HEIGHT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_ALT_BLOCKS_HASHES\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_HASHES_FAST\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_ADDRESS_TXS\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_ADDRESS_INFO\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_UNSPENT_OUTS\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_RANDOM_OUTS\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_SUBMIT_RAW_TX\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_LOGIN\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_IMPORT_WALLET_REQUEST\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e12\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_TRANSACTIONS\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e13\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_IS_KEY_IMAGE_SPENT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e14\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_TX_GLOBAL_OUTPUTS_INDEXES\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e15\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_OUTPUTS_BIN\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e16\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_OUTPUTS\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e17\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_SEND_RAW_TX\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e18\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_START_MINING\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e19\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_INFO\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_STOP_MINING\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e21\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_MINING_STATUS\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e22\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_SAVE_BC\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e25\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GETBLOCKTEMPLATE\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e27\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GENERATEBLOCKS\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e28\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_LAST_BLOCK_HEADER\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e29\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_BLOCK_HEADER_BY_HASH\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e30\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_BLOCK_HEADER_BY_HEIGHT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e31\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_BLOCK\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e32\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_PEER_LIST\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e33\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_SET_LOG_HASH_RATE\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e34\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_SET_LOG_LEVEL\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e35\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_SET_LOG_CATEGORIES\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e36\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_TRANSACTION_POOL\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e37\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_TRANSACTION_POOL_HASHES_BIN\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e38\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_TRANSACTION_POOL_HASHES\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e39\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_TRANSACTION_POOL_BACKLOG\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e40\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_TRANSACTION_POOL_STATS\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e41\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_CONNECTIONS\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_BLOCK_HEADERS_RANGE\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e43\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_STOP_DAEMON\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e44\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_FAST_EXIT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e45\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_LIMIT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e46\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_SET_LIMIT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e47\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_OUT_PEERS\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e48\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_IN_PEERS\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e49\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_START_SAVE_GRAPH\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e50\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_STOP_SAVE_GRAPH\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e51\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_HARD_FORK_INFO\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e52\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GETBANS\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e53\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_SETBANS\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e54\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_FLUSH_TRANSACTION_POOL\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e55\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_OUTPUT_HISTOGRAM\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e56\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_VERSION\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e57\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_COINBASE_TX_SUM\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e58\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_BASE_FEE_ESTIMATE\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e59\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_ALTERNATE_CHAINS\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e60\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_UPDATE\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e61\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_RELAY_TX\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e62\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_SYNC_INFO\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e63\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_GET_OUTPUT_DISTRIBUTION\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e64\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003einvoke_http_json\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecryptonote\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_RPC_POP_BLOCKS\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eCompile:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eg++ -std=c++11 -I $MONERO_PATH/src -I $MONERO_PATH/contrib/epee/include -I $MONERO_PATH/external/easylogging++ $MONERO_PATH/external/easylogging++/easylogging++.cc uninitialized-memory-send.cpp -lpthread -lboost_system -lcrypto -lssl\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRun:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e./a.out | head -n1000000 | sort -u \u0026gt;output\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf you examine \u003ccode\u003eoutput\u003c/code\u003e, you\u0026#39;ll see that JSON is generated with random data. This is uninitialized memory created at the instantiation of \u003ccode\u003eireq\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eTo solve this, initialize \u003ccode\u003eireq\u003c/code\u003e. For example, change\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e    typename T::request ireq;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eto\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e    boost::value_initialized\u0026lt;typename T::request\u0026gt; _ireq;\n    typename T::request\u0026amp; ireq = _ireq;\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eCompile and run again, and you\u0026#39;ll see that the random data is now gone.\u003c/p\u003e\n\n\u003cp\u003eAmong other places, \u003ccode\u003esrc/wallet/wallet2.cpp\u003c/code\u003e contains many calls to \u003ccode\u003einvoke_http_json\u003c/code\u003e, with some \u003ccode\u003e::request\u003c/code\u003e structs initialized with \u003ccode\u003eAUTO_VAL_INIT\u003c/code\u003e, but some not.\u003cbr\u003e\n\u003ccode\u003einvoke_http_json\u003c/code\u003e serializes the \u003ccode\u003e::request\u003c/code\u003e struct exactly like in my proof-of-concept which is then sent to the RPC server:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003enamespace epee\n{\n  namespace net_utils\n  {\n    template\u0026lt;class t_request, class t_response, class t_transport\u0026gt;\n    bool invoke_http_json(const boost::string_ref uri, const t_request\u0026amp; out_struct, t_response\u0026amp; result_struct, t_transport\u0026amp; transport, std::chrono::milliseconds timeout = std::chrono::seconds(15), const boost::string_ref method = \u0026quot;GET\u0026quot;)\n    {   \n      std::string req_param;\n      if(!serialization::store_t_to_json(out_struct, req_param))\n        return false;\n\n      http::fields_list additional_params;\n      additional_params.push_back(std::make_pair(\u0026quot;Content-Type\u0026quot;,\u0026quot;application/json; charset=utf-8\u0026quot;));\n\n      const http::http_response_info* pri = NULL;\n      if(!transport.invoke(uri, method, req_param, timeout, std::addressof(pri), std::move(additional_params)))  \n      ...\n      ...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAny outbound traffic (bootstrap node/public RPC server/other) where the \u003ccode\u003e::request\u003c/code\u003e struct is not explicitly initialized, is thus susceptible to leaking uninitialized memory. Uninitialized memory is never literally uninitialized -- it contains remnants of previous use of the same memory region, and this can include cryptographic or other private material.\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eLeaking sensitive data to untrusted network peers.\u003c/p\u003e\n","weakness":{"id":18,"name":"Information Disclosure"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2019-07-03T14:19:44.786Z","allow_singular_disclosure_after":-47058326.07799429,"singular_disclosure_allowed":true,"vote_count":5,"voters":["mygf","guido","tems","armansameer","lovebugpaul"],"severity":{"rating":"medium","author_type":"User"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":3993235,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Seems valid. Thanks.\n","markdown_message":"\u003cp\u003eSeems valid. Thanks.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-01-17T14:35:46.558Z","updated_at":"2019-01-17T14:35:46.558Z","actor":{"username":"moneromooo","cleared":false,"url":"/moneromooo","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3994740,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"As far as I can tell this could also be a problem in ```node_server\u003ct_payload_net_handler\u003e::try_ping```:\n\n\n```cpp\n      COMMAND_PING::request req;\n      COMMAND_PING::response rsp;\n      //vc2010 workaround\n      /*std::string ip_ = ip;\n      std::string port_=port;\n      peerid_type pr_ = pr;\n      auto cb_ = cb;*/\n\n      // GCC 5.1.0 gives error with second use of uint64_t (peerid_type) variable.\n      peerid_type pr_ = pr;\n\n      bool inv_call_res = epee::net_utils::async_invoke_remote_command2\u003cCOMMAND_PING::response\u003e(ping_context.m_connection_id, COMMAND_PING::ID, req, m_net_server.get_config_object(),\n\n```\n\nNote that ```req``` is not initialized.\n\nThen:\n\n```cpp\n    template\u003cclass t_result, class t_arg, class callback_t, class t_transport\u003e\n    bool async_invoke_remote_command2(boost::uuids::uuid conn_id, int command, const t_arg\u0026 out_struct, t_transport\u0026 transport, const callback_t \u0026cb, size_t inv_timeout = LEVIN_DEFAULT_TIMEOUT_PRECONFIGURED)                                                                                                                                                                                                         \n    {   \n      typename serialization::portable_storage stg;\n      const_cast\u003ct_arg\u0026\u003e(out_struct).store(stg);//TODO: add true const support to searilzation\n      std::string buff_to_send;\n      stg.store_to_binary(buff_to_send);\n      int res = transport.invoke_async(command, buff_to_send, conn_id, [cb, command](int code, const std::string\u0026 buff, typename t_transport::connection_context\u0026 context)-\u003ebool \n```\n\nSo uninitialized ```COMMAND_PING::request``` -\u003e ```portable_storage``` -\u003e ```std::string``` -\u003e send.\n\nAt the other two locations where ```async_invoke_remote_command2``` is called (```do_handshake_with_peer``` and ```do_peer_timed_sync```), the request struct *does* appear to be initialized.\n\nI can write a test/poc if required.","markdown_message":"\u003cp\u003eAs far as I can tell this could also be a problem in \u003ccode\u003enode_server\u0026lt;t_payload_net_handler\u0026gt;::try_ping\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight cpp\"\u003e\u003ccode\u003e      \u003cspan class=\"n\"\u003eCOMMAND_PING\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eCOMMAND_PING\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e \u003cspan class=\"n\"\u003ersp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e//vc2010 workaround\u003c/span\u003e\n      \u003cspan class=\"cm\"\u003e/*std::string ip_ = ip;\n      std::string port_=port;\n      peerid_type pr_ = pr;\n      auto cb_ = cb;*/\u003c/span\u003e\n\n      \u003cspan class=\"c1\"\u003e// GCC 5.1.0 gives error with second use of uint64_t (peerid_type) variable.\u003c/span\u003e\n      \u003cspan class=\"n\"\u003epeerid_type\u003c/span\u003e \u003cspan class=\"n\"\u003epr_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n      \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003einv_call_res\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eepee\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enet_utils\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003easync_invoke_remote_command2\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eCOMMAND_PING\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eping_context\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_connection_id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eCOMMAND_PING\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eID\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003em_net_server\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget_config_object\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNote that \u003ccode\u003ereq\u003c/code\u003e is not initialized.\u003c/p\u003e\n\n\u003cp\u003eThen:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight cpp\"\u003e\u003ccode\u003e    \u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003et_result\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003et_arg\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ecallback_t\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003et_transport\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"nf\"\u003easync_invoke_remote_command2\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eboost\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003euuids\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003euuid\u003c/span\u003e \u003cspan class=\"n\"\u003econn_id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ecommand\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003et_arg\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eout_struct\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003et_transport\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003etransport\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003ecallback_t\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ecb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003einv_timeout\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eLEVIN_DEFAULT_TIMEOUT_PRECONFIGURED\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e                                                                                                                                                                                                         \n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e   \n      \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eserialization\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eportable_storage\u003c/span\u003e \u003cspan class=\"n\"\u003estg\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n      \u003cspan class=\"k\"\u003econst_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003et_arg\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eout_struct\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"n\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estg\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//TODO: add true const support to searilzation\u003c/span\u003e\n      \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"n\"\u003ebuff_to_send\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n      \u003cspan class=\"n\"\u003estg\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estore_to_binary\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebuff_to_send\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n      \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eres\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etransport\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einvoke_async\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecommand\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebuff_to_send\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003econn_id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ecb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecommand\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ecode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ebuff\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003et_transport\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003econnection_context\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSo uninitialized \u003ccode\u003eCOMMAND_PING::request\u003c/code\u003e -\u0026gt; \u003ccode\u003eportable_storage\u003c/code\u003e -\u0026gt; \u003ccode\u003estd::string\u003c/code\u003e -\u0026gt; send.\u003c/p\u003e\n\n\u003cp\u003eAt the other two locations where \u003ccode\u003easync_invoke_remote_command2\u003c/code\u003e is called (\u003ccode\u003edo_handshake_with_peer\u003c/code\u003e and \u003ccode\u003edo_peer_timed_sync\u003c/code\u003e), the request struct \u003cem\u003edoes\u003c/em\u003e appear to be initialized.\u003c/p\u003e\n\n\u003cp\u003eI can write a test/poc if required.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-01-17T19:02:16.664Z","updated_at":"2019-01-17T19:02:16.664Z","actor":{"username":"guido","cleared":false,"url":"/guido","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3994759,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"It's odd that ASAN never said anything here. And with your code either. Any idea why ? I wouldn't execpt it to consider the stack to be always OK...","markdown_message":"\u003cp\u003eIt\u0026#39;s odd that ASAN never said anything here. And with your code either. Any idea why ? I wouldn\u0026#39;t execpt it to consider the stack to be always OK...\u003c/p\u003e\n","automated_response":false,"created_at":"2019-01-17T19:07:01.551Z","updated_at":"2019-01-17T19:07:01.551Z","actor":{"username":"moneromooo","cleared":false,"url":"/moneromooo","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3994775,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"COMMAND_PING::request is empty. Still a good idea to init in case some fields get added later though.","markdown_message":"\u003cp\u003eCOMMAND_PING::request is empty. Still a good idea to init in case some fields get added later though.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-01-17T19:09:34.874Z","updated_at":"2019-01-17T19:09:34.874Z","actor":{"username":"moneromooo","cleared":false,"url":"/moneromooo","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3994786,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Right..\n\nYeah, ASAN does not detect uninitialized memory. It only detects out-of-bounds access and similar things like (use-after-free), but that is not the case here; the uninitialized memory that is accessed, is a valid memory region.\nTo detect uninitialized memory, you need MemorySanitizer, but this is a bit more work.\nhttps://github.com/google/sanitizers/wiki/MemorySanitizer","markdown_message":"\u003cp\u003eRight..\u003c/p\u003e\n\n\u003cp\u003eYeah, ASAN does not detect uninitialized memory. It only detects out-of-bounds access and similar things like (use-after-free), but that is not the case here; the uninitialized memory that is accessed, is a valid memory region.\u003cbr\u003e\nTo detect uninitialized memory, you need MemorySanitizer, but this is a bit more work.\u003cbr\u003e\n\u003ca title=\"https://github.com/google/sanitizers/wiki/MemorySanitizer\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fgoogle%2Fsanitizers%2Fwiki%2FMemorySanitizer\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/google/sanitizers/wiki/MemorySanitizer\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-01-17T19:11:02.039Z","updated_at":"2019-01-17T19:11:02.039Z","actor":{"username":"guido","cleared":false,"url":"/guido","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4000505,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"https://paste.debian.net/hidden/851c994c/ has the proposed patch (large one, auto inits request/response structures so forgetting the init for any one of them should not matter anymore). base64 gzip, since the raw patch was too large for the site.","markdown_message":"\u003cp\u003e\u003ca title=\"https://paste.debian.net/hidden/851c994c/\" href=\"/redirect?url=https%3A%2F%2Fpaste.debian.net%2Fhidden%2F851c994c%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://paste.debian.net/hidden/851c994c/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e has the proposed patch (large one, auto inits request/response structures so forgetting the init for any one of them should not matter anymore). base64 gzip, since the raw patch was too large for the site.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-01-18T15:17:00.489Z","updated_at":"2019-01-18T15:17:30.029Z","actor":{"username":"moneromooo","cleared":false,"url":"/moneromooo","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4004608,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Looks like I uploaded the wrong one. Use https://paste.debian.net/hidden/08326a0b/","markdown_message":"\u003cp\u003eLooks like I uploaded the wrong one. Use \u003ca title=\"https://paste.debian.net/hidden/08326a0b/\" href=\"/redirect?url=https%3A%2F%2Fpaste.debian.net%2Fhidden%2F08326a0b%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://paste.debian.net/hidden/08326a0b/\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-01-19T14:40:11.742Z","updated_at":"2019-01-19T14:40:11.742Z","actor":{"username":"moneromooo","cleared":false,"url":"/moneromooo","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4013158,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@guido can you confirm the fix?","markdown_message":"\u003cp\u003e\u003ca href=\"/guido\"\u003e@guido\u003c/a\u003e can you confirm the fix?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-01-21T19:05:40.312Z","updated_at":"2019-01-21T19:05:40.312Z","actor":{"username":"anonimal","cleared":false,"url":"/anonimal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/040/857/f23cc3be09a21e17bc43975987c10ba2b6427239_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4013303,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@anonimal @moneromooo yes, confirmed that this resolves the issue.","markdown_message":"\u003cp\u003e\u003ca href=\"/anonimal\"\u003e@anonimal\u003c/a\u003e \u003ca href=\"/moneromooo\"\u003e@moneromooo\u003c/a\u003e yes, confirmed that this resolves the issue.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-01-21T19:41:26.345Z","updated_at":"2019-01-21T19:41:26.345Z","actor":{"username":"guido","cleared":false,"url":"/guido","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4013337,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Thank you @guido. Please paste an XMR address if you wish to receive bounty.","markdown_message":"\u003cp\u003eThank you \u003ca href=\"/guido\"\u003e@guido\u003c/a\u003e. Please paste an XMR address if you wish to receive bounty.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-01-21T19:54:04.006Z","updated_at":"2019-01-21T19:54:04.006Z","actor":{"username":"anonimal","cleared":false,"url":"/anonimal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/040/857/f23cc3be09a21e17bc43975987c10ba2b6427239_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"guido","url":"/guido"},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4013363,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"48XB817vPzmEhwEGvw5zcLSnT1aRMBbN1jQUnUXMLpoyJE7jgXpdPsUNYgXg3ddcKbA2u3wpGqmHhT3DbTZCMjmV6vSY3bt","markdown_message":"\u003cp\u003e48XB817vPzmEhwEGvw5zcLSnT1aRMBbN1jQUnUXMLpoyJE7jgXpdPsUNYgXg3ddcKbA2u3wpGqmHhT3DbTZCMjmV6vSY3bt\u003c/p\u003e\n","automated_response":false,"created_at":"2019-01-21T20:06:31.848Z","updated_at":"2019-01-21T20:06:31.848Z","actor":{"username":"guido","cleared":false,"url":"/guido","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4020027,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Sent 20 XMR: \u003c4edc83cd7ba358bd4a718cdd683385c424f408ba5cc726ce2737b205cbd88c24\u003e","markdown_message":"\u003cp\u003eSent 20 XMR: \u0026lt;4edc83cd7ba358bd4a718cdd683385c424f408ba5cc726ce2737b205cbd88c24\u0026gt;\u003c/p\u003e\n","automated_response":false,"created_at":"2019-01-22T19:42:52.460Z","updated_at":"2019-01-22T19:42:52.460Z","actor":{"username":"luigi1111w","cleared":false,"url":"/luigi1111w","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4020057,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks!","markdown_message":"\u003cp\u003eThanks!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-01-22T19:50:20.674Z","updated_at":"2019-01-22T19:50:20.674Z","actor":{"username":"guido","cleared":false,"url":"/guido","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4020067,"is_internal":false,"editable":false,"type":"Activities::SwagAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2019-01-22T19:52:37.888Z","updated_at":"2019-01-22T19:52:37.888Z","actor":{"url":"/monero","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/007/731/55634f7fcd917725c7a5771cc6e7c9b4d5fe0c22_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Monero"}},"reporter":{"username":"guido","url":"/guido"},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4131018,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"FYI, we're forking early due to good evidence that one party has \u003e 50% hash rate. There are very few changes in this fork, so the patch to the bug you reported isn't it, as it'd be pretty conspicuous. There will be a full release expected shortly after, which will include this patch.","markdown_message":"\u003cp\u003eFYI, we\u0026#39;re forking early due to good evidence that one party has \u0026gt; 50% hash rate. There are very few changes in this fork, so the patch to the bug you reported isn\u0026#39;t it, as it\u0026#39;d be pretty conspicuous. There will be a full release expected shortly after, which will include this patch.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-02-11T18:13:05.357Z","updated_at":"2019-02-11T18:13:05.357Z","actor":{"username":"moneromooo","cleared":false,"url":"/moneromooo","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4131101,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Ok, thanks for letting me know. I'll keep the vulnerability private until your public announcement.","markdown_message":"\u003cp\u003eOk, thanks for letting me know. I\u0026#39;ll keep the vulnerability private until your public announcement.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-02-11T18:25:20.882Z","updated_at":"2019-02-11T18:25:20.882Z","actor":{"username":"guido","cleared":false,"url":"/guido","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4567462,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"It's been two months, can we disclose now?","markdown_message":"\u003cp\u003eIt\u0026#39;s been two months, can we disclose now?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-15T21:17:13.076Z","updated_at":"2019-04-15T21:17:13.076Z","first_to_agree":true,"actor":{"username":"guido","cleared":false,"url":"/guido","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4608358,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @guido.\n\nPer industry standard, and per our VRP; we aim for no later than 90 days to publicly disclose.  After speaking with the VRP team, we've decided that this report should be disclosed *along with* the next release. If the release doesn't happen soon though, HackerOne will automatically disclose this report in 24 days regardless of our status.\n\nIf you *do* decide to disclose, please give us a little bit of time to prepare for that if possible. Technically, per our VRP, this report is allowed to be disclosed now if you wish but we would appreciate waiting until the next release.\n\nLet me know if you have any question, thanks.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/guido\"\u003e@guido\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003ePer industry standard, and per our VRP; we aim for no later than 90 days to publicly disclose.  After speaking with the VRP team, we\u0026#39;ve decided that this report should be disclosed \u003cem\u003ealong with\u003c/em\u003e the next release. If the release doesn\u0026#39;t happen soon though, HackerOne will automatically disclose this report in 24 days regardless of our status.\u003c/p\u003e\n\n\u003cp\u003eIf you \u003cem\u003edo\u003c/em\u003e decide to disclose, please give us a little bit of time to prepare for that if possible. Technically, per our VRP, this report is allowed to be disclosed now if you wish but we would appreciate waiting until the next release.\u003c/p\u003e\n\n\u003cp\u003eLet me know if you have any question, thanks.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-20T23:27:04.289Z","updated_at":"2019-04-20T23:27:04.289Z","actor":{"username":"anonimal","cleared":false,"url":"/anonimal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/040/857/f23cc3be09a21e17bc43975987c10ba2b6427239_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4608364,"is_internal":false,"editable":false,"type":"Activities::CancelledDisclosureRequest","message":"Cancelling the disclosure request, but do you have a projected date or time frame for the next release?","markdown_message":"\u003cp\u003eCancelling the disclosure request, but do you have a projected date or time frame for the next release?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-20T23:32:48.600Z","updated_at":"2019-04-20T23:32:48.600Z","actor":{"username":"guido","cleared":false,"url":"/guido","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4615155,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Next release is probably within a couple weeks.","markdown_message":"\u003cp\u003eNext release is probably within a couple weeks.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-22T15:38:55.602Z","updated_at":"2019-04-22T15:38:55.602Z","actor":{"username":"moneromooo","cleared":false,"url":"/moneromooo","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4981658,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"It's been nearly half a year. It's time for disclosure. Please agree to this disclosure request within 7 days. If it's still closed then, I will disclose myself.","markdown_message":"\u003cp\u003eIt\u0026#39;s been nearly half a year. It\u0026#39;s time for disclosure. Please agree to this disclosure request within 7 days. If it\u0026#39;s still closed then, I will disclose myself.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-03T14:19:44.733Z","updated_at":"2019-06-03T14:19:44.733Z","first_to_agree":true,"actor":{"username":"guido","cleared":false,"url":"/guido","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4992378,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"OK, fair enough. I'll prod the pony again for a release, but if it doesn't, well, he doesn't.","markdown_message":"\u003cp\u003eOK, fair enough. I\u0026#39;ll prod the pony again for a release, but if it doesn\u0026#39;t, well, he doesn\u0026#39;t.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-06-04T11:21:27.944Z","updated_at":"2019-06-04T11:21:27.944Z","actor":{"username":"moneromooo","cleared":false,"url":"/moneromooo","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5241811,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @guido,\n\nRegarding this report and your tweet, I would like to say a few things:\n\nFirstly, I want to say that I know exactly how you feel. I've been in a similar position with other projects in the past and, as a fellow hacker, it is beyond frustrating to have to deal with the time constraints of other projects. For me, it's a simple solution: provide a report + the 0day/PoC + and a patch, and then the project will update with a release immediately. The only limitation to this would be if having a release at N time would cause more harm than not. But, even though that is partially the case here, I still agree with your sentiment and I do think that untimeliness in this context is a severe and dangerous issue that should be resolved (we thank fluffypony for his contributions, but his actions shouldn't reflect on the project as a whole).\n\nSecondly, your reports have been extremely valuable to the project and I would love to see you continue hacking on this codebase. I would like to extend my personal thanks to you and also say thanks on behalf of the people involved in this project that don't have a strong voice nor fully understand what we (you and I and the team) are doing here. If there's anything we can do to help you with your work, I'll do everything in my power to help.\n\nThirdly, because of the persistent untimeliness issues regarding code merges and releases (a common complaint for years now), I have offered (to the team) to have my lawyer writeup a legal affirmation stating that I will do no harm to the monero codebase etc., signed by yours truly, and then have it certified by a notary public. Consequently, I would take partial responsibility for merging pull requests and/or providing regular releases while working closely with moneromooo and the dev team on a regular basis. Having been here since 2015, I know that I'm fully qualified for this role and have proven my trust in code security over the past 4 years (2 of which have been here on the VRP team of which I created).\n\n@guido We're all ears, and if you're not happy with anything we're doing, please feel free to ask questions or make requests.","markdown_message":"\u003cp\u003eHi \u003ca href=\"/guido\"\u003e@guido\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eRegarding this report and your tweet, I would like to say a few things:\u003c/p\u003e\n\n\u003cp\u003eFirstly, I want to say that I know exactly how you feel. I\u0026#39;ve been in a similar position with other projects in the past and, as a fellow hacker, it is beyond frustrating to have to deal with the time constraints of other projects. For me, it\u0026#39;s a simple solution: provide a report + the 0day/PoC + and a patch, and then the project will update with a release immediately. The only limitation to this would be if having a release at N time would cause more harm than not. But, even though that is partially the case here, I still agree with your sentiment and I do think that untimeliness in this context is a severe and dangerous issue that should be resolved (we thank fluffypony for his contributions, but his actions shouldn\u0026#39;t reflect on the project as a whole).\u003c/p\u003e\n\n\u003cp\u003eSecondly, your reports have been extremely valuable to the project and I would love to see you continue hacking on this codebase. I would like to extend my personal thanks to you and also say thanks on behalf of the people involved in this project that don\u0026#39;t have a strong voice nor fully understand what we (you and I and the team) are doing here. If there\u0026#39;s anything we can do to help you with your work, I\u0026#39;ll do everything in my power to help.\u003c/p\u003e\n\n\u003cp\u003eThirdly, because of the persistent untimeliness issues regarding code merges and releases (a common complaint for years now), I have offered (to the team) to have my lawyer writeup a legal affirmation stating that I will do no harm to the monero codebase etc., signed by yours truly, and then have it certified by a notary public. Consequently, I would take partial responsibility for merging pull requests and/or providing regular releases while working closely with moneromooo and the dev team on a regular basis. Having been here since 2015, I know that I\u0026#39;m fully qualified for this role and have proven my trust in code security over the past 4 years (2 of which have been here on the VRP team of which I created).\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"/guido\"\u003e@guido\u003c/a\u003e We\u0026#39;re all ears, and if you\u0026#39;re not happy with anything we\u0026#39;re doing, please feel free to ask questions or make requests.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-02T22:48:37.520Z","updated_at":"2019-07-02T22:48:37.520Z","actor":{"username":"anonimal","cleared":false,"url":"/anonimal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/040/857/f23cc3be09a21e17bc43975987c10ba2b6427239_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5241817,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-07-02T22:49:44.461Z","updated_at":"2019-07-02T22:49:44.461Z","actor":{"username":"anonimal","cleared":false,"url":"/anonimal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/040/857/f23cc3be09a21e17bc43975987c10ba2b6427239_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5241818,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-07-02T22:49:44.851Z","updated_at":"2019-07-02T22:49:44.851Z","actor":{"username":"anonimal","cleared":false,"url":"/anonimal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/040/857/f23cc3be09a21e17bc43975987c10ba2b6427239_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5261676,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you. No worries.","markdown_message":"\u003cp\u003eThank you. No worries.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-05T19:52:14.368Z","updated_at":"2019-07-05T19:52:14.368Z","actor":{"username":"guido","cleared":false,"url":"/guido","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/002/983/e55b0b2324777fb7efc2de4212fd8d337ca816bd_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"monero","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}