{"id":493176,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC80OTMxNzY=","url":"https://hackerone.com/reports/493176","title":"Partial report contents leakage - via HTTP/2 concurrent stream handling","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2019-02-09T01:32:15.116Z","submitted_at":"2019-02-09T01:32:15.116Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"tomvg","url":"/tomvg","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/088/bcadc0a4a87f5627226b724ae0dcacbee32cc3e7_original.jpg/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":13,"url":"https://hackerone.com/security","handle":"security","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"HackerOne","twitter_handle":"Hacker0x01","website":"https://hackerone.com","about":"Vulnerability disclosure should be safe, transparent, and rewarding."}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2021-08-05T20:07:09.752Z","bug_reporter_agreed_on_going_public_at":"2021-08-05T10:40:17.578Z","team_member_agreed_on_going_public_at":"2021-08-05T20:07:09.589Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"**Summary:**\n\nThe concurrent handling of HTTP/2 streams allows for a \"timeless timing attack\": instead of timing, the ordering of responses is used, making the attack resilient to network jitter. As the `/bugs.json` endpoint takes slightly longer to process when a query returns results, it is possible to reliably determine whether this query had one or more results. This can then be used to reveal information about (un)disclosed bug reports in a cross-site search attack, among other things, finding vulnerable endpoints.\n\n**Description:**\n\nA timing attack against `/bugs.json` was reported in #350432 and #350432 (and possibly #4701 - though this one isn't public, so I don't know the details). These prior reports aimed to determine the response size, and from that infer the number of results returned for a particular query. For the two public reports, the timing measurements were not reliably enough for an attack. I tried to replicate and improve these attacks (with the timing techniques we used for [HEIST](https://tom.vg/papers/heist_blackhat2016.pdf#page=5)), and found that indeed noy reliable results could be obtained, presumably due to relatively high (network) jitter. The \"timing\" attack in this report works quite differently, and in fact it is not really a timing attack in the sense that it doesn't use timing information (which is what makes it a lot more resilient against jitter). Furthermore, it does not attempt to determine the response size, but rather the server processing time.\n\nThe concept of the attack is pretty straightforward: the attacker triggers 2 simultaneous requests with `fetch()`, one to a baseline query that returns no results (e.g. `/bugs.json?text_query=NO_RESULT_WILL_BE_FOUND`), and one for a query for something the attacker is interested in (e.g. `/bugs.json?text_query=/bugs.json%20timing`). As `hackerone.com` is using HTTP/2, the two requests will be sent over the same TCP connection, in two TCP packets following right after each other (this makes that they will arrive at almost exactly the same time at the server, since any jitter experienced by the first packet will also be experienced by the second). As the two HTTP/2 streams are concurrent, they will be processed in parallel on the server. As there is a difference in processing time, even when this is minimal (against my own server, I found that an execution time difference of 1-5 Âµsec is measurable from the browser), one request will generate a response faster than the other. The server will send these responses as soon as they are ready. As soon as the client receives the headers of a response, it will resolve the `Promise` returned by the `fetch()` call. This allows the attacker to determine which response was generated first (and this which took the least/most execution time).\n\nIf the target query does not contain any results, the execution time will be the same as the baseline, and the probability that the response is in the same order as the requests were sent, is approximately 50%. In case the target query does yield results, the probability that the response for the target query comes in last, is higher (because the server needed some additional time to process). Because this attack is still subjective to jitter in processing time (typically one or more magnitudes smaller than the network jitter experienced in typical timing attacks), the attacker would have to collect a number of measurements and count the response ordering for them. In my tests, I found that 20 request-pairs suffice to provide a reliable result. In fact, for all the tests I've run, all attacks were successful, even when I tried to run it from the airport WiFi.\n\nIronically, the only time that the attack was not working, was when the baseline query erroneously returned results. I belief this is probably a bug in HackerOne caused by some sort of race condition (at the time of testing, I was sending quite a lot of requests in parallel until I noticed there's in fact some rate limiting in effect). It might be worth to explore this further; may be just a bug, or may somehow be exploitable. It's hard for me to replicate though... If it's easier for you to track this, I can open a separate report, though I haven't been able to show any security impact for this bug.\n\n### PoC||GTFO\n\nI implemented a basic proof-of-concept, hosted [here](https://poc.tom.vg/hackerone/hackerone-bugs.json-concurrent-requests.html). To use it, just change the `text_query` parameter to something that would have at least one result. Next, simply click start and wait 6-7 seconds. If you find that the value (or values, if you select multiple iterations) of `numCorrectBaseline` is lower than those of `numCorrectTarget`, it means that the attack was successful (as the response for the target URL was slower). These are the results I obtained for 10 iterations, on my home WiFi connection:\n\n```json\n{\n    \"numCorrectBaseline\": [11, 10, 9, 8, 6, 9, 10, 6, 10, 11],\n    \"numCorrectTarget\": [15, 18, 14, 16, 15, 16, 14, 13, 16, 20]\n}\n```\n\nFrom this it seems clear that the attack is quite robust (would be neat if you could replicate this!).\n\nIt appears that `/bugs/count/` (and possibly some other endpoint that I haven't tested) might also be affected by these issues, though the `/bugs/count/` endpoint seems slightly less robust (I assume since it has to retrieve less information from the database).\n\n\n### Mitigation\n\nI assume that you are well aware on how to mitigate these types of vulnerabilities. But adding it just for the sake of completeness...\n\n1. CSRF token: I noticed that on `/bugs`, the request for `/bugs.json` would already include the `x-csrf-token` header. However, its value is not validate. Such a CSRF token would mitigate the vulnerability\n2. In #350432 it was mentioned that this endpoint would be deprecated (and removed?), and replaced with GraphQL requiring a token to query the information; of course this would also work (and hopefully this report might expedite the process)\n3. SameSite cookies: if the `__Host-session` cookie was served with e.g. `SameSite=lax`, this attack would not be possible.\n\n\n\n### Optional: Your Environment (Browser version, Device, etc)\n\n* Tested on my Macbook Pro, both in Chrome and Firefox (up-to-date version), in a variety of network conditions (ethernet, WiFi, crappy WiFi)\n\n\n### Optional: Supporting Material/References (Screenshots)\n\n* I've included a screenshot of 5 iterations run over the airport WiFi.\n\n\n### Optional: Did you use [recon data made available by HackerOne](https://github.com/Hacker0x01/helpful-recon-data) to find this vulnerability?\n\nno\n\n## Impact\n\nThis vulnerability basically provides the attacker with search capabilities in the victim's reported bugs. The attacker could abuse this to discover vulnerable endpoints or other sensitive data. For instance, the attacker could start with a query for `https://hackerone.com/`, determine that the victim reported a vulnerability there, then cycle through all endpoints, `https://hackerone.com/activities`, `https://hackerone.com/apps`, ... and find which one was probably vulnerable (the vulnerable endpoint will likely be present in the report). Knowing the endpoint, the attacker could further refine the type of vulnerability by using several keywords, perhaps find the query parameters etc.\nSince the text search matches any substring (and not just on word-boundaries), the attacker could also brute-force certain secrets, e.g. when they were redacted in a public report.\n\nI hope that the basic PoC I made shows that this type of attack would indeed be feasible, otherwise, I can try to create a more extensive version.","bounty_amount":"2500.0","formatted_bounty":"$2,500","weakness":{"id":18,"name":"Information Disclosure"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":420715,"file_name":"screenshot-attack-from-airport-wifi.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/420/715/0617541799bf105c940245b02628d17d43068840/screenshot-attack-from-airport-wifi.png?response-content-disposition=attachment%3B%20filename%3D%22screenshot-attack-from-airport-wifi.png%22%3B%20filename%2A%3DUTF-8%27%27screenshot-attack-from-airport-wifi.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ67VGDS6J%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T150541Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJGMEQCIBUTJ%2BNbh3iGCDafndtBQHkqG1OchqwWgdsmguvhgcLdAiAZVuUXVW1VaXDOlTKJW4MkHKw5%2BpgOTsVzeaztjAVXniqDBAjv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIMAWL4B0QSi4hczgSpKtcD3VOAKPL2y75%2FC3vWJu4CxM2H0MhpokFUEt9l4V7Gq%2BkP2JZRIvSX1xKqm2Gk%2BJRjjqXa9QVImay%2FdjekrRmCYTSSDt9dxM0L0oVJr7N6F8ODRv2P7lMfnzU0QMlpmHbiPpiQb5vSlaxU6jX1ESO3u1VQpKIm%2B7BGH6YiJgHcf9pDdPJ24QxGmfk3jwQevnf60P1KEwb1KLJ2JtKpPhawQ8CP%2Fp%2B8Udd6EL0VEe2hP01M49Skdizp3cnpjBBz%2FKaJPQOVb%2FxLwhTaiAm4Gs7LWex0SieNQGn7QnS8LjaHWQ69N6yv2yl5daZ0uO8CMISq44OuSORn5NNfE6Wx49Y1QtLur%2BY0bpfImT2%2Bc3AvhGI16NMEhk5qpUfU2p6NU4IF0P6m2durenSRqQWtxyQafE31VSJU%2FhpOLcgkiLcYO84tTOPewOIMl9iBrNtCggjBX8%2FrEvRnKduv0F4uzhgiTrLXMqiHsoMRJfAlsnKSaskF2MN%2FW8oUK%2Fx2WHxpYJSGLi98vCnAnrjkI1O0VdepFdfxg4xzpi25EpMuF10ISO7%2BOVlPuH4gcxSmKXq2nnWHAyNBbYGCcXKMdnH%2BrKVSQO3JfLw8lTFoTNA9axFJVvLPV3N6%2FondMJKHkYsGOqYBXTEQgnOCUR6Njz81XybrbzJvU1Pc2hk4bMTrt1%2BCSeA%2FbFO392%2FoWlFJGmK4bl3JexiICV3H2r69Blx%2FAIbSxJ4%2Bl1Ric4x9veCmMmxtb3M7uvCDvG9rrJjEd5V99ttvzT1tURyLC0o%2FETycAhpeR4E%2BNiVWXOm1S8L2NA83yPbiobo0yaywdayHxWpEhNSXoJ8gkKAiNtIC0AZekCrrrdnKzbLEBw%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=d5400e0982985a42680621fc2a2457e40fd45bbb26e1ed10fd435485c0d66956","file_size":1065901,"type":"image/png"}],"allow_singular_disclosure_at":"2021-09-04T10:40:17.675Z","allow_singular_disclosure_after":-3212723.807912936,"singular_disclosure_allowed":true,"vote_count":57,"voters":["pyrrhon","neex","jeti","hipotermia","run_win","drsniper","jobert","sameerphad72","ali","0xd0m7","and 47 more..."],"severity":{"rating":"medium","score":6.6,"author_type":"Team","metrics":{"attack_vector":"network","attack_complexity":"high","privileges_required":"low","user_interaction":"required","scope":"unchanged","confidentiality":"high","integrity":"none","availability":"none"}},"structured_scope":{"databaseId":3,"asset_type":"URL","asset_identifier":"https://hackerone.com","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":4118280,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Regarding the `NO_RESULT_WILL_BE_FOUND` \"bug\"; I just noticed that `_` is interpreted as a word separator, and thus it makes sense that it returns some results. As such, please ignore that part of the report :) (the rest is still valid though)","automated_response":false,"created_at":"2019-02-09T02:15:46.196Z","updated_at":"2019-02-09T02:15:46.196Z","actor":{"username":"tomvg","cleared":false,"url":"/tomvg","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/088/bcadc0a4a87f5627226b724ae0dcacbee32cc3e7_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4129251,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for your submission. Just wanted to let you know that we are currently reviewing your report and will get back to you once we have additional information to share.\n\nKind regards,\n@EyeQ","automated_response":false,"created_at":"2019-02-11T16:28:30.334Z","updated_at":"2019-02-11T16:28:30.334Z","actor":{"username":"eyeq","cleared":false,"url":"/eyeq","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/260/224/73a49f0c9b82b7dde9fa6838b4cf7ceee82b714a_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4129301,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Hi @tomvg,\n\nThanks for bringing this report to us. Had a good read of the technique itself, and it sounded like a scientific paper :D\nHowever, although it makes sense, theoretically, the proof of concept here does not show any of the described impact points under the \"Impact\" section. \n\nWould it be possible for you to show a proof of concept on this attack, that would demonstrate any of the scenarios in the impact section? For example \"The attacker could abuse this to discover vulnerable endpoints or other sensitive data.\"\n\nThank you and have a nice day!\n@EyeQ","automated_response":false,"created_at":"2019-02-11T16:41:06.999Z","updated_at":"2019-02-11T16:41:06.999Z","actor":{"username":"eyeq","cleared":false,"url":"/eyeq","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/260/224/73a49f0c9b82b7dde9fa6838b4cf7ceee82b714a_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4130819,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"Hey EyeQ, this is indeed part of ongoing research :)\n\nI think the impact part may be missing some information. The idea behind it is that someone reports a vulnerability to a certain program (e.g. HackerOne). This report will typically contain something along the lines of \"I found an XSS in https://hackerone.com/foo.bar\". In this case the secret information is \"XSS\" and the specific endpoint. As an attacker, I would try to launch an XS-Search attack for all possible endpoints of hackerone.com (by setting the text_query parameter to these values. If the victim has indeed made such a report, one of the searches will have a non-empty result set (which can be determined with the attack). Knowing this, the attacker could start gathering more information about the report by triggering more queries.\nThe alternative is maybe easier to explain: finding redacted content: let's say the redacted content is a certain token in a URL e.g. example.com/?token=s3cr3t with s3cr3t being redacted. The attacker would launch a targeted attack against the person who reported it (or anyone for whom the search would show results. The attacker would thus try to send queryies in the form example.com/?token={a..z), would find that for s there is a match and then proceed to the next characters.\n\nI just left for holidays, so making a full-fledged PoC would not be for very soon, but I hope that this explanation makes some sense? It's also just an example of how this could be abused. In essence it's an XS-Search attack with very high accuracy.\n\nDid you manage to run the PoC that I included in my original report (and if so, what were the results). Note: you should replace the second URL with a search query that returns at least 1 result.\n\nLet me know if anything is still unclear!","automated_response":false,"created_at":"2019-02-11T17:46:58.867Z","updated_at":"2019-02-11T17:46:58.867Z","actor":{"username":"tomvg","cleared":false,"url":"/tomvg","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/088/bcadc0a4a87f5627226b724ae0dcacbee32cc3e7_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4130904,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I think the title might have been more accurately \"leaking partial bug report contents\" (as extracting all text from the report would be rather infeasible)","automated_response":false,"created_at":"2019-02-11T17:57:49.465Z","updated_at":"2019-02-11T17:57:49.465Z","actor":{"username":"tomvg","cleared":false,"url":"/tomvg","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/088/bcadc0a4a87f5627226b724ae0dcacbee32cc3e7_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4132144,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"In terms of what an actual attack would look like, and what the impact relates to, this is a good reference: https://medium.com/@luanherrera/xs-searching-googles-bug-tracker-to-find-out-vulnerable-source-code-50d8135b7549 Note that this leverages [browser-based timing attacks](https://tom.vg/papers/timing-attacks_ccs2015.pdf) that aim to estimate the response size. This wouldn't work here as the difference is too small to measure accurately.","automated_response":false,"created_at":"2019-02-11T21:22:03.115Z","updated_at":"2019-02-11T21:22:03.115Z","actor":{"username":"tomvg","cleared":false,"url":"/tomvg","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/088/bcadc0a4a87f5627226b724ae0dcacbee32cc3e7_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4134802,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I managed to make a slightly improved PoC that tries to guess the third character of the string `s3cr3t` from this report. It's hosted here: https://poc.tom.vg/hackerone/hackerone-improved-poc.html\nIn a real attack, I would use the entire alphabet and add some additional verifications that the guessed character is indeed correct before proceeding to the next one.\nI'm not sure if it's possible to search for phrases with a space in between (depends on how the search functionality is implemented), so that may be a limiting factor in exploitation of this specific type of attack since you need a known prefix (though dashes can still be part of the prefix, so something like `token-abcde` could still be searched with `token-` as a known prefix).\n\nNevertheless, in the other type of attack, where the adversary would search for specific keywords, this limiting factor is less of an issue. For example, the attacker could iterate over all endpoints of HackerOne, and with the matching one do a binary search over the weaknesses with the `weaknesses[]` parameter, and then try more specific keywords to figure out additional things from the report, ...\n\nI've added the results I got with 5 iterations from a rather unreliable WiFi connection. As you can see in the first case, the values are higher on average; this is because the character of the second URL is correct (if the character from the first URL would be correct, you would see lower-than-average values). For the others, neither guesses are correct, so the values should average out at 10 ideally (the two requests take the same amount of time, so there's a 50% probability that the order of responses is same/different as that of the requests).\n\nHope that clarifies things!","automated_response":false,"created_at":"2019-02-12T09:51:38.500Z","updated_at":"2019-02-12T09:51:38.500Z","actor":{"username":"tomvg","cleared":false,"url":"/tomvg","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/088/bcadc0a4a87f5627226b724ae0dcacbee32cc3e7_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":422433,"filename":"s3cr3t.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/422/433/c1b59a26d618f2209731edf7aaf829c33dd3b190/s3cr3t.png?response-content-disposition=attachment%3B%20filename%3D%22s3cr3t.png%22%3B%20filename%2A%3DUTF-8%27%27s3cr3t.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ67VGDS6J%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T150541Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJGMEQCIBUTJ%2BNbh3iGCDafndtBQHkqG1OchqwWgdsmguvhgcLdAiAZVuUXVW1VaXDOlTKJW4MkHKw5%2BpgOTsVzeaztjAVXniqDBAjv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIMAWL4B0QSi4hczgSpKtcD3VOAKPL2y75%2FC3vWJu4CxM2H0MhpokFUEt9l4V7Gq%2BkP2JZRIvSX1xKqm2Gk%2BJRjjqXa9QVImay%2FdjekrRmCYTSSDt9dxM0L0oVJr7N6F8ODRv2P7lMfnzU0QMlpmHbiPpiQb5vSlaxU6jX1ESO3u1VQpKIm%2B7BGH6YiJgHcf9pDdPJ24QxGmfk3jwQevnf60P1KEwb1KLJ2JtKpPhawQ8CP%2Fp%2B8Udd6EL0VEe2hP01M49Skdizp3cnpjBBz%2FKaJPQOVb%2FxLwhTaiAm4Gs7LWex0SieNQGn7QnS8LjaHWQ69N6yv2yl5daZ0uO8CMISq44OuSORn5NNfE6Wx49Y1QtLur%2BY0bpfImT2%2Bc3AvhGI16NMEhk5qpUfU2p6NU4IF0P6m2durenSRqQWtxyQafE31VSJU%2FhpOLcgkiLcYO84tTOPewOIMl9iBrNtCggjBX8%2FrEvRnKduv0F4uzhgiTrLXMqiHsoMRJfAlsnKSaskF2MN%2FW8oUK%2Fx2WHxpYJSGLi98vCnAnrjkI1O0VdepFdfxg4xzpi25EpMuF10ISO7%2BOVlPuH4gcxSmKXq2nnWHAyNBbYGCcXKMdnH%2BrKVSQO3JfLw8lTFoTNA9axFJVvLPV3N6%2FondMJKHkYsGOqYBXTEQgnOCUR6Njz81XybrbzJvU1Pc2hk4bMTrt1%2BCSeA%2FbFO392%2FoWlFJGmK4bl3JexiICV3H2r69Blx%2FAIbSxJ4%2Bl1Ric4x9veCmMmxtb3M7uvCDvG9rrJjEd5V99ttvzT1tURyLC0o%2FETycAhpeR4E%2BNiVWXOm1S8L2NA83yPbiobo0yaywdayHxWpEhNSXoJ8gkKAiNtIC0AZekCrrrdnKzbLEBw%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=09820fca6cf7129bc84f1938a03cf35d9b1dee0409eaf59253e1e361ff58b407"}],"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4168385,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Any update?","automated_response":false,"created_at":"2019-02-18T15:12:41.623Z","updated_at":"2019-02-18T15:12:41.623Z","actor":{"username":"tomvg","cleared":false,"url":"/tomvg","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/088/bcadc0a4a87f5627226b724ae0dcacbee32cc3e7_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4172788,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks again for the report, we're still looking into this and will respond in this ticket as soon as we have an update. Apologies for any inconvenience.\n\nKind regards,\n@EyeQ","automated_response":false,"created_at":"2019-02-19T13:12:48.680Z","updated_at":"2019-02-19T13:12:48.680Z","actor":{"username":"eyeq","cleared":false,"url":"/eyeq","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/260/224/73a49f0c9b82b7dde9fa6838b4cf7ceee82b714a_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4172805,"is_internal":false,"editable":false,"type":"Activities::ReportTitleUpdated","message":"","automated_response":false,"created_at":"2019-02-19T13:18:37.679Z","updated_at":"2019-02-19T13:18:37.679Z","additional_data":{"old_title":"Leaking bug report contents caused by HTTP/2 concurrent stream handling","new_title":"Partial report contents leakage - via HTTP/2 concurrent stream handling"},"actor":{"username":"eyeq","cleared":false,"url":"/eyeq","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/260/224/73a49f0c9b82b7dde9fa6838b4cf7ceee82b714a_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4172811,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","automated_response":false,"created_at":"2019-02-19T13:21:56.839Z","updated_at":"2019-02-19T13:21:56.839Z","additional_data":{"old_severity":"High (8.3)","new_severity":"Medium","old_severity_id":294327,"new_severity_id":299506},"actor":{"username":"eyeq","cleared":false,"url":"/eyeq","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/260/224/73a49f0c9b82b7dde9fa6838b4cf7ceee82b714a_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4172820,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Hi @tomvg, awesome research!\n\nThank you for your submission! I was able to validate your report, and have submitted it to the appropriate remediation team for review. They will let us know the final ruling on this report, and when/if a fix will be implemented. Please note that the status and severity are subject to change.\n\nPlease note that the severity was changed to Medium based on the likelihood and the not-ease of exploitation. However, the team might change this later on based on their further investigations.\n\nThank you and have a nice day!\n@EyeQ","automated_response":false,"created_at":"2019-02-19T13:24:51.797Z","updated_at":"2019-02-19T13:24:51.797Z","actor":{"username":"eyeq","cleared":false,"url":"/eyeq","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/260/224/73a49f0c9b82b7dde9fa6838b4cf7ceee82b714a_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4174989,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Great, thanks!\n\nRegarding the not-ease of exploitation, do you mean that in terms of the technique itself (e.g. the timing side-channel would not be sufficiently robust), or in terms of finding a useful way to exploit it? Also, what do you mean by likelihood, I'm not sure what it means in this context.\n(I'm mainly trying to get an idea of how this type of bug is perceived on your end)","automated_response":false,"created_at":"2019-02-19T19:03:00.374Z","updated_at":"2019-02-19T19:03:00.374Z","actor":{"username":"tomvg","cleared":false,"url":"/tomvg","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/088/bcadc0a4a87f5627226b724ae0dcacbee32cc3e7_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4179323,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","automated_response":false,"created_at":"2019-02-20T10:57:34.050Z","updated_at":"2019-02-20T10:57:34.050Z","additional_data":{"old_severity":"Medium","new_severity":"High","old_severity_id":299506,"new_severity_id":300137},"actor":{"username":"eyeq","cleared":false,"url":"/eyeq","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/260/224/73a49f0c9b82b7dde9fa6838b4cf7ceee82b714a_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4179337,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @tomvg,\n\nHave raised the report severity again, because of the nice POC code!! But as explained earlier, the team might change this later on.\n\nThe reason behind the likelihood is that you still need to target someone with access to the reports that you are looking to extract the information from (i.e. HackerOne team member), and social engineer him to deliver the malicious code somehow. Furthermore, according to the POC you provided, the victim must keep the page open for sometime in order to perform the required amount of requests, major the responses and so on, which might not be the case? That is what I meant by likelihood/ not-ease of exploitation.\n\nAnd yes, you are right, I was referring to \"in terms of finding a useful way to exploit it\".\n\nNevertheless, this is a nice technique here with a nice POC too :)\n\nThank you and have a nice day!\n@EyeQ","automated_response":false,"created_at":"2019-02-20T11:02:11.757Z","updated_at":"2019-02-20T11:07:36.204Z","actor":{"username":"eyeq","cleared":false,"url":"/eyeq","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/260/224/73a49f0c9b82b7dde9fa6838b4cf7ceee82b714a_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4186624,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks, @EyeQ!\n\nI think that social engineering someone to open a URL that hosts some JavaScript shouldn't be too hard (also, other than H1 team members, it could also be the person who reported it or someone who was invited to the report). In this regard, it should be quite similar to exploiting a reflected XSS vulnerability.\n\nThe exploit will indeed take some time to execute (mainly because the `/bugs.json` endpoint is rate-limited). However, there are a couple of techniques that allow an attacker to execute code even after some has closed a web page, mainly with service workers (e.g. see [this 2016 post by Homakov](https://sakurity.com/blog/2016/12/10/serviceworker_botnet.html) or [this recent research paper](https://arxiv.org/pdf/1810.00464.pdf)). (In my PoC, I just relied on the Fetch API, which is available in service workers).\n\nMy last PoC showed that when you have 2 characters, you can search for the next characters one by one. The main challenge is then to find the first 2 characters that are part of the secret. For this, the attacker could try the following combinations `{a..z}{a..z}` (676 possibilities) or `{0..f}{0..f}` (256 possibilities) for a hexadecimal secret. The attack can test 2 characters at once, takes 300ms per test, and requires 20-50 tests per character to be sufficiently confident. As such, 676/2*0.3s*20 = 2028 seconds (~34mins, or 85mins for 50 tests per character) are required to find the first two characters; for a hexadecimal secret, this comes down to approx. 13-32mins). From there, it takes about 1.5-3.5mins per character.\nNote 1: The values are worst-case, since on average only half of the space needs to be searched.\nNote 2: If the secret starts with the same 2 characters as any other word in the text, more requests are needed (for every unique first two characters, an additional 13 (or 8) tests are required.\nNote 3: If the attacker knows the first character of the secret (this seems quite likely in many cases), he just needs the 1.5-3.5mins per character.\nNote 4: If the possible secret values are within a predefined set, then only `len(set)/2` tests are needed.","automated_response":false,"created_at":"2019-02-21T14:18:28.397Z","updated_at":"2019-02-21T14:18:28.397Z","actor":{"username":"tomvg","cleared":false,"url":"/tomvg","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/088/bcadc0a4a87f5627226b724ae0dcacbee32cc3e7_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4374361,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":"","automated_response":false,"created_at":"2019-03-22T17:59:43.366Z","updated_at":"2019-03-22T17:59:43.366Z","additional_data":{"duplicate_report_id":513481},"actor":{"username":"localo","cleared":false,"url":"/localo","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4374462,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":"","automated_response":false,"created_at":"2019-03-22T18:16:54.155Z","updated_at":"2019-03-22T18:16:54.155Z","actor":{"username":"harleo","cleared":false,"url":"/harleo","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/135/231/af8441a48ec76a8df0a35ad91bdcbacea749a5f7_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4374543,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello @tomvg and thanks @pei for inviting,\n\nextremely interesting approach!\nMy friend @olfillasodikno and I have found something very similar and you're more than welcome to take a look at it if you wish to do so.\nAlso, we're open to provide any additional insights to help fix the underlying issue.\nWe're going to analyze the report more in-depth now and will comment if we have something to share.","automated_response":false,"created_at":"2019-03-22T18:35:32.932Z","updated_at":"2019-03-22T18:35:32.932Z","actor":{"username":"harleo","cleared":false,"url":"/harleo","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/135/231/af8441a48ec76a8df0a35ad91bdcbacea749a5f7_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4374682,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Cool! I'm definitely interested to have a look at your report if that's possible :)\n\nIn terms of fixing the issue, I think they're switching to GraphQL, requiring a unique token for the requests, which should mitigate the issue.","automated_response":false,"created_at":"2019-03-22T18:57:59.541Z","updated_at":"2019-03-22T18:57:59.541Z","actor":{"username":"tomvg","cleared":false,"url":"/tomvg","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/088/bcadc0a4a87f5627226b724ae0dcacbee32cc3e7_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4374745,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Sure, I will add you.\n","automated_response":false,"created_at":"2019-03-22T19:09:19.836Z","updated_at":"2019-03-22T19:09:19.836Z","actor":{"username":"localo","cleared":false,"url":"/localo","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4374762,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Sorry, just noticed that I am not able to do so. But I can attach our poc if you want.","automated_response":false,"created_at":"2019-03-22T19:12:10.429Z","updated_at":"2019-03-22T19:12:34.681Z","actor":{"username":"localo","cleared":false,"url":"/localo","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5073310,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Hi @tomvg - thanks again for your patience with us throughout this process. We haven't made any progress on this ticket in the last three months and discussed it internally to determine what we would do with this. We concluded that we didn't see this being prioritized in the next couple months, which means that there are two actions we can take. The first one is to close this as a duplicate of #4701. The other to close this as Informative for the time being. We were kind of split on this, because your PoC gave more accurate results than the original report. However, due to the global rate limiting that we have on `GET` requests made us believe that this isn't likely to be exploited in the wild. We know it's theoretically possible, but don't believe this is likely. I'm leaning towards closing this as Informative and awarding you with swag for now. If we end up resolving this in the next couple months, we'd reopen this report and mark it as resolved. Is there anything glaring that we're missing? Thanks again for your help and we'll make sure to recognize you for your efforts.","automated_response":false,"created_at":"2019-06-12T18:27:38.930Z","updated_at":"2019-06-12T18:27:38.930Z","actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5073936,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"Hey @jobert, since the original report, I found an additional technique that would make the attack more accurate. In short, it comes down to tricking the browser/OS into sending two GET requests in a single TCP packet. This makes them arrive at exactly the same time; in the previous example there was still a 1-2ms delay that reduced the accuracy. This new technique is a bit more complicated, so it would take more time to make a proper PoC, but I might be able to get an estimate on its improved accuracy. At what point (e.g. number of requests required per bit of leaked information) would you consider this sufficiently harmful to implement a fix?","automated_response":false,"created_at":"2019-06-12T19:49:28.648Z","updated_at":"2019-06-12T19:49:28.648Z","actor":{"username":"tomvg","cleared":false,"url":"/tomvg","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/088/bcadc0a4a87f5627226b724ae0dcacbee32cc3e7_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5749298,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"We're going to triage this and (finally) fix it. Note that we've had around 8 total reports of this over the years so we'll have to determine how to award the bounty, so please be patient. Thanks!","automated_response":false,"created_at":"2019-09-06T17:50:10.754Z","updated_at":"2019-09-06T17:50:10.754Z","actor":{"username":"bencode","cleared":false,"url":"/bencode","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/013/117/ddaa1da4e004e1234c6857c42f9bfa8df85b5ccf_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6257315,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","automated_response":false,"created_at":"2019-11-08T18:05:14.416Z","updated_at":"2019-11-08T18:05:14.416Z","additional_data":{"old_severity":"High","new_severity":"Medium (6.6)","old_severity_id":300137,"new_severity_id":560178},"actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6257340,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Hi @tomvg - thanks for your patience here. We appreciate your diligence and having argued us to fix it. We've released a change to the `/bugs.json` endpoint recently that moves everything to a `POST` request. Because this requires a CSRF token to work, we believe that this mitigates the security vulnerability that you reported. Many other people have submitted the same vulnerability (not exploit!) to us over the years, but because we believe that you were the first one to demonstrate a feasible attack, we're awarding you with $2,500 and bonuses to the other reports that reported unique exploitation scenarios. Thanks again and happy hacking!","automated_response":false,"created_at":"2019-11-08T18:09:24.813Z","updated_at":"2019-11-08T18:09:24.813Z","actor":{"url":"/security","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"HackerOne"}},"bounty_amount":"2500.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"security","collaborator":{"username":"tomvg","url":"/tomvg"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6257351,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","automated_response":false,"created_at":"2019-11-08T18:10:42.051Z","updated_at":"2019-11-08T18:10:42.051Z","actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"reporter":{"username":"tomvg","url":"/tomvg"},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6257852,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Cool, great to hear that it got fixed! I'm planning to work on an improved version of the attack in the coming weeks, but I guess I'll have find a different endpoint now :-)","automated_response":false,"created_at":"2019-11-08T19:09:41.059Z","updated_at":"2019-11-08T19:09:41.059Z","actor":{"username":"tomvg","cleared":false,"url":"/tomvg","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/088/bcadc0a4a87f5627226b724ae0dcacbee32cc3e7_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":12837240,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2021-08-05T10:40:17.608Z","updated_at":"2021-08-05T10:40:17.608Z","first_to_agree":true,"actor":{"username":"tomvg","cleared":false,"url":"/tomvg","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/088/bcadc0a4a87f5627226b724ae0dcacbee32cc3e7_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":12850445,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2021-08-05T20:07:09.621Z","updated_at":"2021-08-05T20:07:09.621Z","actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":12850447,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2021-08-05T20:07:09.808Z","updated_at":"2021-08-05T20:07:09.808Z","actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"security","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}