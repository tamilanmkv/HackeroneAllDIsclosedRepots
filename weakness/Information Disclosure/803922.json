{"id":803922,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84MDM5MjI=","url":"https://hackerone.com/reports/803922","title":"Missing resource identifier encoding may lead to security vulnerabilities","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2020-02-24T20:41:03.367Z","submitted_at":"2020-02-24T20:41:03.367Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"jobert","url":"/jobert","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":22,"url":"https://hackerone.com/rails","handle":"rails","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/000/022/5e2b46658c8b86bed62f574d8e1793f353cbbc63_original.png/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/022/5e2b46658c8b86bed62f574d8e1793f353cbbc63_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"Ruby on Rails","twitter_handle":null,"website":"http://rubyonrails.org/security","about":"Web development that doesn't hurt."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2020-8151"],"singular_disclosure_disabled":false,"disclosed_at":"2020-05-13T18:18:36.253Z","bug_reporter_agreed_on_going_public_at":"2020-05-05T22:43:56.784Z","team_member_agreed_on_going_public_at":"2020-05-13T18:18:36.146Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"(I initially submitted this to the GitHub repository because the ActiveResource repository is not listed in scope. I was redirected here by @rafaelfranca)\n\nA number of methods in the ActiveResource library, such as `ActiveResource::Base#find` and `ActiveResource::Base#exists?` don't URL encode the resource identifier that is passed to them. Consider the following code:\n\n```ruby\nrequire 'activeresource'\n \n class Test \u003c ActiveResource::Base\n   self.site = 'http://127.0.0.1:8080'\nend\n\nTest.exists? '?a=1'\n```\n\nThe code above is expected to make a request to `http://127.0.0.1:8080/tests/%3fa%3d1.json` by properly URL encoding the resource identifier. Instead, it makes a request to `http://127.0.0.1:8080/tests/?a=1.json`.\n\nThis was tested against ActiveResource 5.1.0 and 5.0.0, both have the same unexpected behavior.\n\n## Impact\n\nBecause the index `/tests/` returns an array of objects, the code will throw an exception. However, due to the time difference that could be observed, an attacker could potentially exploit this by injecting a filter parameter to index endpoint of the resource. E.g.\n\n| Resource identifier | Objects returned | RTT |\n| ---- | ---- | ---- |\n| `?type=a\u0026` | 1 | 500ms |\n| `?type=b\u0026` | 0 | 100ms |","weakness":{"id":18,"name":"Information Disclosure"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2020-06-04T22:43:56.883Z","allow_singular_disclosure_after":-42655556.07257149,"singular_disclosure_allowed":true,"vote_count":13,"voters":["pyrrhon","sameerphad72","mik317","zeroxyele","haxta4ok00","what_web","3x3s","wannabe_hacker","0skar","bencode","and 3 more..."],"severity":{"rating":"medium","score":4.8,"author_type":"Team","metrics":{"attack_vector":"network","attack_complexity":"high","privileges_required":"none","user_interaction":"none","scope":"unchanged","confidentiality":"low","integrity":"low","availability":"none"}},"structured_scope":{"databaseId":160,"asset_type":"SOURCE_CODE","asset_identifier":"https://github.com/rails/rails","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":7142428,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @jobert,\n\nThank you for your submission. Your report is currently being reviewed and the HackerOne triage team will get back to you once there is additional information to share.\n\nKind regards,\n@turtle_shell","automated_response":false,"created_at":"2020-02-25T08:50:23.822Z","updated_at":"2020-02-25T08:50:23.822Z","actor":{"username":"turtle_shell","cleared":false,"url":"/turtle_shell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/UEHxCfDVKTBNymNpNGb7qwy6/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7142798,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Hello @jobert and thanks for your report,\n\nUnfortunately, I am not an expert on Ruby on Rails. I will tell you all the steps I did so far to try to reproduce your bug\n\n1. `rails new site`\n1. install, update, etc.\n1.  Create a file `test_jobert.rb`  in `test` with\n\n```\nrequire 'activeresource'\n\n class Test \u003c ActiveResource::Base\n   self.site = 'http://127.0.0.1:3000'\nend\n\nTest.exists? '?a=1'\n```\n\n1. `irb -r ./test_jobert.rb`\n\nBut I have a route problem to `/tests/`, however I do see the unencoded request\n\n{F727817}\n\nCould you kindly guide me in the configuration of the test application to see the timing of the requests to `1` and `2`?\n\nThanks,\n\n@turtle_shell","automated_response":false,"created_at":"2020-02-25T09:11:56.996Z","updated_at":"2020-02-25T09:11:56.996Z","actor":{"username":"turtle_shell","cleared":false,"url":"/turtle_shell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/UEHxCfDVKTBNymNpNGb7qwy6/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":true,"hackerone_employee":null},"attachments":[{"id":727817,"filename":"Screenshot_2020-02-25_at_10.10.38.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/bEuthb6utnTV7fJLV6sqk2WL?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_2020-02-25_at_10.10.38.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_2020-02-25_at_10.10.38.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ57JDOB6N%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T152953Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHcaCXVzLXdlc3QtMiJGMEQCIEj%2FvPHmMbBPYj%2BEqI%2BytJ5vP%2BW1Gij3b1KCROLW2m2fAiAUI2BnkECXV9d7hwkeZDEOYP6soFW%2FVQ7MIgaTaOghmSqDBAjw%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIMaJpXtlkzQ%2F0YHokTKtcDqr54hfj92oRcu2Uf5AYn5X1dcYZ2fUSGzbf8TlAKPi%2BieszVvrvHI%2FlmbHmgiT1EynvsarNndOfkF2FRqu00jKx0CkmuRzepTozsI%2FVM4zmVsulVco0%2FTcUTH7ncLq5w17UCDOGpnW6JGeAot2EMSfGI%2BXeXow9Po2gINOm1gQnayfBCxU0Glim8HMTLVSft15PsLBhoVz6MQjjs5LpN9XS8yUG%2FvTzXTgclJY%2F9kWPo7VUzvyGgDBwaQ1NS4mY%2FwZ0AT%2BbZ6JXbFSX9ET%2BsjMi2Xi4Iz%2BSZK9IqUkrM05KykgVZmm0Jj83i2n43f%2BohD1oputpWW5Uu1cAXNs%2F4CRB2hvvyPQb%2B2khSXC6sOQi3exb9EuT5FkfOJXRD2w2ObGvWHxM%2BDQNczFHMaUBsCSSNn2cKqA093ghnjQ0g83xgTV9SBPb0QjpItD1Tnt9%2Bri%2FBh8RNCTedm%2Bor7TU6AnBCa6N50D96ANJhWhGw8kKZQdvzW0b0yw%2FH0clJ9XBtHGp1ul88rpA7tUuIoM7z31gr%2FReHR4G0fbpI0Bw%2BzUst%2BenEZyU7QQChxDc0u9loqAHNkWSJ3vDfDAhU2gFvocid02DAX%2FlKRXns4oUAYN7obhQgZX31MK2XkYsGOqYBmhNgLXdsx%2F8OPaK%2FmcpHbqK%2FVdgD3s09C%2FMBcjoeNruPiR%2B0%2FIpdgtcxNhaPoR0zb6re%2ByXh4v3hr2D2Z0%2BZCE4KiobLnf4PqE9a5czy2i5ctMeGIPCspubSRwCRBRORrnkT6%2FEocUc5PNqombEgctkvB80CoCyMfXpFqtIL0ne7x%2B%2B6lVkpXfm14Eb3XaRg7qWG7XL4Ud5U62KMTzbzA3t%2FxnvzsA%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=76f639e33718415293de68363fa7285297941984e1c869a411f0163ff0cc5da1"}],"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7149526,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"Hi @turtle_shell - the timing idea was just an example of how this could potentially result in a security vulnerability (which it did at HackerOne itself, ironically). It was a hypothetical where the `tests` resource would return any kind of objects. In HackerOne's case, it hit our payments backend where an attacker could determine the existence of private programs. The `site` in the model just has to point to any REST interface, doesn't have to be the project itself. Does that make sense?\n\nPS ActiveResource is *not* part of Rails by default, but it's maintained by them. I initially reported this through GitHub because it's not part of their BBP scope, but I was redirected here.","automated_response":false,"created_at":"2020-02-25T19:10:30.792Z","updated_at":"2020-02-25T19:11:51.306Z","actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7155072,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Hello @jobert,\n\nThank you for your submission! We were able to validate your report, and have submitted it to the appropriate remediation team for review. They will let us know the final ruling on this report, and when/if a fix will be implemented. Please note that the status and severity are subject to change.\n\nRegards,\n@turtle_shell","automated_response":false,"created_at":"2020-02-26T13:12:29.698Z","updated_at":"2020-02-26T13:12:29.698Z","actor":{"username":"turtle_shell","cleared":false,"url":"/turtle_shell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/UEHxCfDVKTBNymNpNGb7qwy6/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7155075,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","automated_response":false,"created_at":"2020-02-26T13:13:28.865Z","updated_at":"2020-02-26T13:13:28.865Z","additional_data":{"old_severity":null,"new_severity":"Medium (4.8)","old_severity_id":null,"new_severity_id":643753},"actor":{"username":"turtle_shell","cleared":false,"url":"/turtle_shell","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/UEHxCfDVKTBNymNpNGb7qwy6/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7545496,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @turtle_shell - I've written the patch for the vulnerability myself because this is currently affecting HackerOne. I've attached it to this comment and inlined it below. The root cause of the vulnerability lies in the `ActiveResource::Base.element_path` method. The given `id` parameter is currently encoded using `URI.parser.escape`. This encoding isn't sufficient, as won't encode characters like `?` and `/`. An alternative method, which is part of the default `URI` library, is `URI.encode_www_form_component`. This method will properly encode characters so that the backend will interpret them as the given ID rather than path components or query string.\n\nI'm happy to put this up in a PR, just say the word. All specs pass with the patch.\n\n```diff\ndiff --git a/lib/active_resource/base.rb b/lib/active_resource/base.rb\nindex 82cbc16..082f096 100644\n--- a/lib/active_resource/base.rb\n+++ b/lib/active_resource/base.rb\n@@ -774,7 +774,7 @@ module ActiveResource\n         check_prefix_options(prefix_options)\n \n         prefix_options, query_options = split_options(prefix_options) if query_options.nil?\n-        \"#{prefix(prefix_options)}#{collection_name}/#{URI.parser.escape id.to_s}#{format_extension}#{query_string(query_options)}\"\n+        \"#{prefix(prefix_options)}#{collection_name}/#{URI.encode_www_form_component(id.to_s)}#{format_extension}#{query_string(query_options)}\"\n       end\n \n       # Gets the element url for the given ID in +id+. If the +query_options+ parameter is omitted, Rails\ndiff --git a/test/cases/base_test.rb b/test/cases/base_test.rb\nindex e298b99..f95ae09 100644\n--- a/test/cases/base_test.rb\n+++ b/test/cases/base_test.rb\n@@ -688,7 +688,7 @@ class BaseTest \u003c ActiveSupport::TestCase\n     assert_equal \"/people/1/addresses/1.json\", StreetAddress.element_path(1, person_id: 1)\n     assert_equal \"/people/1/addresses/1.json\", StreetAddress.element_path(1, \"person_id\" =\u003e 1)\n     assert_equal \"/people/Greg/addresses/1.json\", StreetAddress.element_path(1, \"person_id\" =\u003e \"Greg\")\n-    assert_equal \"/people/ann%20mary/addresses/ann%20mary.json\", StreetAddress.element_path(:'ann mary', \"person_id\" =\u003e \"ann mary\")\n+    assert_equal \"/people/ann%20mary/addresses/ann+mary.json\", StreetAddress.element_path(:'ann mary', \"person_id\" =\u003e \"ann mary\")\n   end\n \n   def test_custom_element_path_without_required_prefix_param\ndiff --git a/test/cases/finder_test.rb b/test/cases/finder_test.rb\nindex cc49cd4..82e081d 100644\n--- a/test/cases/finder_test.rb\n+++ b/test/cases/finder_test.rb\n@@ -172,4 +172,20 @@ class FinderTest \u003c ActiveSupport::TestCase\n     david = Person.find(:one, from: :leader)\n     assert_equal \"David\", david.name\n   end\n+\n+  def test_find_identifier_encoding\n+    ActiveResource::HttpMock.respond_to { |m| m.get \"/people/%3F.json\", {}, @david }\n+\n+    david = Person.find(\"?\")\n+\n+    assert_equal \"David\", david.name\n+  end\n+\n+  def test_find_identifier_encoding_for_path_traversal\n+    ActiveResource::HttpMock.respond_to { |m| m.get \"/people/..%2F.json\", {}, @david }\n+\n+    david = Person.find(\"../\")\n+\n+    assert_equal \"David\", david.name\n+  end\n end\n```","automated_response":false,"created_at":"2020-04-05T03:56:23.821Z","updated_at":"2020-04-05T04:00:36.223Z","actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"attachments":[{"id":773991,"filename":"patch.diff","type":"text/x-patch","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/HmfbzMeE8CZKYbN9S19kbPLV?response-content-disposition=attachment%3B%20filename%3D%22patch.diff%22%3B%20filename%2A%3DUTF-8%27%27patch.diff\u0026response-content-type=text%2Fx-patch\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ57JDOB6N%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T152953Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHcaCXVzLXdlc3QtMiJGMEQCIEj%2FvPHmMbBPYj%2BEqI%2BytJ5vP%2BW1Gij3b1KCROLW2m2fAiAUI2BnkECXV9d7hwkeZDEOYP6soFW%2FVQ7MIgaTaOghmSqDBAjw%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIMaJpXtlkzQ%2F0YHokTKtcDqr54hfj92oRcu2Uf5AYn5X1dcYZ2fUSGzbf8TlAKPi%2BieszVvrvHI%2FlmbHmgiT1EynvsarNndOfkF2FRqu00jKx0CkmuRzepTozsI%2FVM4zmVsulVco0%2FTcUTH7ncLq5w17UCDOGpnW6JGeAot2EMSfGI%2BXeXow9Po2gINOm1gQnayfBCxU0Glim8HMTLVSft15PsLBhoVz6MQjjs5LpN9XS8yUG%2FvTzXTgclJY%2F9kWPo7VUzvyGgDBwaQ1NS4mY%2FwZ0AT%2BbZ6JXbFSX9ET%2BsjMi2Xi4Iz%2BSZK9IqUkrM05KykgVZmm0Jj83i2n43f%2BohD1oputpWW5Uu1cAXNs%2F4CRB2hvvyPQb%2B2khSXC6sOQi3exb9EuT5FkfOJXRD2w2ObGvWHxM%2BDQNczFHMaUBsCSSNn2cKqA093ghnjQ0g83xgTV9SBPb0QjpItD1Tnt9%2Bri%2FBh8RNCTedm%2Bor7TU6AnBCa6N50D96ANJhWhGw8kKZQdvzW0b0yw%2FH0clJ9XBtHGp1ul88rpA7tUuIoM7z31gr%2FReHR4G0fbpI0Bw%2BzUst%2BenEZyU7QQChxDc0u9loqAHNkWSJ3vDfDAhU2gFvocid02DAX%2FlKRXns4oUAYN7obhQgZX31MK2XkYsGOqYBmhNgLXdsx%2F8OPaK%2FmcpHbqK%2FVdgD3s09C%2FMBcjoeNruPiR%2B0%2FIpdgtcxNhaPoR0zb6re%2ByXh4v3hr2D2Z0%2BZCE4KiobLnf4PqE9a5czy2i5ctMeGIPCspubSRwCRBRORrnkT6%2FEocUc5PNqombEgctkvB80CoCyMfXpFqtIL0ne7x%2B%2B6lVkpXfm14Eb3XaRg7qWG7XL4Ud5U62KMTzbzA3t%2FxnvzsA%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=6265d2b6c30c05be5209ee006008e05ce68d169ec161fffd0916f2a74fc1d6d9"}],"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7701718,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The patch looks good to me.  I can apply and release.  I guess we need a CVE?","automated_response":false,"created_at":"2020-04-17T22:32:21.261Z","updated_at":"2020-04-17T22:32:21.261Z","actor":{"username":"tenderlove","cleared":false,"url":"/tenderlove","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/318/60d828744b5d16813ecbf975fdc453dc4a933f4f_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7701861,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I'm writing the CVE report for this.  You wouldn't happen to have a monkey patch handy that I can provide people as a work-around?","automated_response":false,"created_at":"2020-04-17T23:03:28.642Z","updated_at":"2020-04-17T23:03:28.642Z","actor":{"username":"tenderlove","cleared":false,"url":"/tenderlove","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/318/60d828744b5d16813ecbf975fdc453dc4a933f4f_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7702078,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"This monkey patch seems to do the job:\n\n```ruby\nmodule ActiveResource\n  class Base\n    class \u003c\u003c self\n      def element_path(id, prefix_options = {}, query_options = nil)\n        check_prefix_options(prefix_options)\n\n        prefix_options, query_options = split_options(prefix_options) if query_options.nil?\n        \"#{prefix(prefix_options)}#{collection_name}/#{URI.encode_www_form_component(id.to_s)}#{format_extension}#{query_string(query_options)}\"\n      end\n    end\n  end\nend\n```\n\nUnfortunately, because the encoding is part of the string returned from the method, it's a lot harder to leverage the gem method. Encoding and decoding the `id` parameter around the method is bound the introduce problems. Trying to parse the output again feels too error prone, too. Overwriting the method completely seems like the best solution here. Let me know if you have another idea on how to approach it.","automated_response":false,"created_at":"2020-04-17T23:51:42.981Z","updated_at":"2020-04-17T23:51:42.981Z","actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7708858,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@jobert I agree, overriding the method seems like the easiest way for a temporary fix","automated_response":false,"created_at":"2020-04-18T20:54:18.546Z","updated_at":"2020-04-18T20:54:18.546Z","actor":{"username":"tenderlove","cleared":false,"url":"/tenderlove","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/318/60d828744b5d16813ecbf975fdc453dc4a933f4f_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7708883,"is_internal":false,"editable":false,"type":"Activities::CveIdAdded","message":"","automated_response":false,"created_at":"2020-04-18T20:58:19.295Z","updated_at":"2020-04-18T20:58:19.295Z","cve_ids":["CVE-2020-8151"],"actor":{"username":"tenderlove","cleared":false,"url":"/tenderlove","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/318/60d828744b5d16813ecbf975fdc453dc4a933f4f_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7904484,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I'm going to ship this now.  The master branch has changes that are not released, so I'm going to put this security patch on top of the current released version and release that.","automated_response":false,"created_at":"2020-05-05T22:02:05.587Z","updated_at":"2020-05-05T22:02:05.587Z","actor":{"username":"tenderlove","cleared":false,"url":"/tenderlove","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/318/60d828744b5d16813ecbf975fdc453dc4a933f4f_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7904712,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"This is shipped, thank you!","automated_response":false,"created_at":"2020-05-05T22:22:17.643Z","updated_at":"2020-05-05T22:22:17.643Z","actor":{"username":"tenderlove","cleared":false,"url":"/tenderlove","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/318/60d828744b5d16813ecbf975fdc453dc4a933f4f_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"jobert","url":"/jobert"},"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7904882,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Great, thanks! We just updated the gem for HackerOne and removed the monkey patch. Seems like this is ready to be publicly disclosed. We'll also publicly disclose the security vulnerability we found in HackerOne that resulted in this report. For HackerOne, it resulted in information disclosure due to a timing attack, but at the end of the day, this seems like an HTTP parameter pollution vulnerability. It'll be available at https://hackerone.com/reports/800231 later this week.","automated_response":false,"created_at":"2020-05-05T22:43:56.809Z","updated_at":"2020-05-05T22:43:56.809Z","first_to_agree":true,"actor":{"username":"jobert","cleared":true,"url":"/jobert","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7992432,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2020-05-13T18:18:36.166Z","updated_at":"2020-05-13T18:18:36.166Z","actor":{"username":"tenderlove","cleared":false,"url":"/tenderlove","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/318/60d828744b5d16813ecbf975fdc453dc4a933f4f_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7992433,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2020-05-13T18:18:36.280Z","updated_at":"2020-05-13T18:18:36.280Z","actor":{"username":"tenderlove","cleared":false,"url":"/tenderlove","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/003/318/60d828744b5d16813ecbf975fdc453dc4a933f4f_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":11288681,"is_internal":false,"editable":false,"type":"Activities::NotEligibleForBounty","message":"","automated_response":false,"created_at":"2021-04-06T20:35:44.837Z","updated_at":"2021-04-06T20:35:44.837Z","actor":{"url":"/rails","ibb":true,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/000/022/5e2b46658c8b86bed62f574d8e1793f353cbbc63_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Ruby on Rails"}},"genius_execution_id":null,"team_handle":"rails","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}