{"id":640904,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC82NDA5MDQ=","url":"https://hackerone.com/reports/640904","title":"Yarn transfers npm credentials over unencrypted http connection","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2019-07-12T11:31:20.661Z","submitted_at":"2019-07-12T11:31:20.661Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"chalker","url":"/chalker","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":23949,"url":"https://hackerone.com/nodejs-ecosystem","handle":"nodejs-ecosystem","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Node.js third-party modules","twitter_handle":"","website":"https://nodejs.org/en/security/","about":"This program is used to handle vulnerabilities in the Node.js ecosystem."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2019-5448"],"singular_disclosure_disabled":false,"disclosed_at":"2019-08-14T11:27:55.400Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2019-07-15T11:27:50.320Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"# Module\n\n**module name:** yarn\n**version:** 1.16.0\n**npm page:** `https://www.npmjs.com/package/yarn`\n\n## Module Description\n\n\u003e Fast, reliable, and secure dependency management.\n\n## Module Stats\n\n\u003e Replace stats below with numbers from npm’s module page:\n\n166 703 downloads in the last day\n849 928 downloads in the last week\n3 772 290 downloads in the last month\n\n# Vulnerability\n\n## Vulnerability Description\n\nFor scoped packages that are listed as `resolved \"http://registry.npmjs.org/@...` in yarn.lock, yarn trasfers npm credentials (i.e. `_authToken`) over unencrypted http connection. This allows any MitM (for example, a proxy or a VPN) to sniff out npm credentials, given that the developer in question performs `yarn install` on such a yarn.lock file.\n\nA quick search shows that there is a number of `yarn.lock` files affected by this on GitHub, some examples:\n * https://github.com/EC-Nordbund/ec-verwaltungs-app/blob/ab961352d5dd53834a51793d6e2c4bc69a2b22d4/packages/api/yarn.lock#L36\n *  https://github.com/nujabes403/boilerplate2/blob/61613e526aec02c5dd4227457deb8676d66780d0/yarn.lock#L7\n\nThere seem to be __many of those__ on GitHub.\n\nLooks like not only it was possible to craft a yarn.lock with a malicious intent, but also this seems to be a common pattern that yarn created itself at some point or under some circumstances and that gets persistent from older versions.\n\n## Steps To Reproduce:\n\n1. Perform an `npm login` or just write `//registry.npmjs.org/:_authToken=38bb8d1f-a39b-47d1-a78e-3bf0626ff77e` (which is the format npm uses) to ~/.npmrc. **Doing this from your own account would leak your npm credentials on next steps, so better just use a placeholder.**\n2. Create an empty package with a single dependency on `\"@babel/core\": \"^7.5.4\"`\n3. Perform `yarn install`\n4. Replace all occurances of `https://registry.yarnpkg.com` with `http://registry.npmjs.org/` in the generated `yarn.lock`\n    \n    Alternatively to steps 2-4 -- just use an already existing yarn.lock with `resolved \"http://registry.npmjs.org/@` in it (lots of those on GitHub), but be careful with that.\n5. Clear yarn cache and node_modules: `rm -rf ~/.cache/yarn/ node_modules`. Let's assume you just downloaded an affected yarn.lock on your clean machine.\n6. Start wireshark with `tcp dst port 80` filter.\n7. Run `yarn install`\n\nObserved result is attached on a screenshot.\n\n## Supporting Material/References:\n\n- `Linux yoga 5.1.5-arch1-2-ARCH #1 SMP PREEMPT Mon May 27 03:37:39 UTC 2019 x86_64 GNU/Linux`\n- Node.js v12.6.0\n- npm 6.10.1\n\n# Wrap up\n\n\u003e Select Y or N for the following statements:\n\n- I contacted the maintainer to let them know: N \n- I opened an issue in the related repository: N\n\n## Impact\n\nAttacker (MitM) being able to:\n* Impersonate the affected account\n* Publish packages from the affected account that could also get used by the affected account/company in the future (for protected packages) and by anyone in the ecosystem (for public packages)\n* Perform logout and break installs of protected packages","vulnerability_information_html":"\u003ch1 id=\"module\"\u003eModule\u003c/h1\u003e\n\n\u003cp\u003e\u003cstrong\u003emodule name:\u003c/strong\u003e yarn\u003cbr\u003e\n\u003cstrong\u003eversion:\u003c/strong\u003e 1.16.0\u003cbr\u003e\n\u003cstrong\u003enpm page:\u003c/strong\u003e \u003ccode\u003ehttps://www.npmjs.com/package/yarn\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2 id=\"module-description\"\u003eModule Description\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eFast, reliable, and secure dependency management.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2 id=\"module-stats\"\u003eModule Stats\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eReplace stats below with numbers from npm’s module page:\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e166 703 downloads in the last day\u003cbr\u003e\n849 928 downloads in the last week\u003cbr\u003e\n3 772 290 downloads in the last month\u003c/p\u003e\n\n\u003ch1 id=\"vulnerability\"\u003eVulnerability\u003c/h1\u003e\n\n\u003ch2 id=\"vulnerability-description\"\u003eVulnerability Description\u003c/h2\u003e\n\n\u003cp\u003eFor scoped packages that are listed as \u003ccode\u003eresolved \u0026quot;http://registry.npmjs.org/@...\u003c/code\u003e in yarn.lock, yarn trasfers npm credentials (i.e. \u003ccode\u003e_authToken\u003c/code\u003e) over unencrypted http connection. This allows any MitM (for example, a proxy or a VPN) to sniff out npm credentials, given that the developer in question performs \u003ccode\u003eyarn install\u003c/code\u003e on such a yarn.lock file.\u003c/p\u003e\n\n\u003cp\u003eA quick search shows that there is a number of \u003ccode\u003eyarn.lock\u003c/code\u003e files affected by this on GitHub, some examples:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca title=\"https://github.com/EC-Nordbund/ec-verwaltungs-app/blob/ab961352d5dd53834a51793d6e2c4bc69a2b22d4/packages/api/yarn.lock#L36\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2FEC-Nordbund%2Fec-verwaltungs-app%2Fblob%2Fab961352d5dd53834a51793d6e2c4bc69a2b22d4%2Fpackages%2Fapi%2Fyarn.lock%23L36\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/EC-Nordbund/ec-verwaltungs-app/blob/ab961352d5dd53834a51793d6e2c4bc69a2b22d4/packages/api/yarn.lock#L36\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e \u003ca title=\"https://github.com/nujabes403/boilerplate2/blob/61613e526aec02c5dd4227457deb8676d66780d0/yarn.lock#L7\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fnujabes403%2Fboilerplate2%2Fblob%2F61613e526aec02c5dd4227457deb8676d66780d0%2Fyarn.lock%23L7\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/nujabes403/boilerplate2/blob/61613e526aec02c5dd4227457deb8676d66780d0/yarn.lock#L7\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThere seem to be \u003cstrong\u003emany of those\u003c/strong\u003e on GitHub.\u003c/p\u003e\n\n\u003cp\u003eLooks like not only it was possible to craft a yarn.lock with a malicious intent, but also this seems to be a common pattern that yarn created itself at some point or under some circumstances and that gets persistent from older versions.\u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003col\u003e\n\u003cli\u003ePerform an \u003ccode\u003enpm login\u003c/code\u003e or just write \u003ccode\u003e//registry.npmjs.org/:_authToken=38bb8d1f-a39b-47d1-a78e-3bf0626ff77e\u003c/code\u003e (which is the format npm uses) to ~/.npmrc. \u003cstrong\u003eDoing this from your own account would leak your npm credentials on next steps, so better just use a placeholder.\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003eCreate an empty package with a single dependency on \u003ccode\u003e\u0026quot;@babel/core\u0026quot;: \u0026quot;^7.5.4\u0026quot;\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003ePerform \u003ccode\u003eyarn install\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eReplace all occurances of \u003ccode\u003ehttps://registry.yarnpkg.com\u003c/code\u003e with \u003ccode\u003ehttp://registry.npmjs.org/\u003c/code\u003e in the generated \u003ccode\u003eyarn.lock\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eAlternatively to steps 2-4 -- just use an already existing yarn.lock with \u003ccode\u003eresolved \u0026quot;http://registry.npmjs.org/@\u003c/code\u003e in it (lots of those on GitHub), but be careful with that.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eClear yarn cache and node_modules: \u003ccode\u003erm -rf ~/.cache/yarn/ node_modules\u003c/code\u003e. Let\u0026#39;s assume you just downloaded an affected yarn.lock on your clean machine.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eStart wireshark with \u003ccode\u003etcp dst port 80\u003c/code\u003e filter.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eRun \u003ccode\u003eyarn install\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eObserved result is attached on a screenshot.\u003c/p\u003e\n\n\u003ch2 id=\"supporting-material-references\"\u003eSupporting Material/References:\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eLinux yoga 5.1.5-arch1-2-ARCH #1 SMP PREEMPT Mon May 27 03:37:39 UTC 2019 x86_64 GNU/Linux\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eNode.js v12.6.0\u003c/li\u003e\n\u003cli\u003enpm 6.10.1\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1 id=\"wrap-up\"\u003eWrap up\u003c/h1\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eSelect Y or N for the following statements:\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cul\u003e\n\u003cli\u003eI contacted the maintainer to let them know: N \u003c/li\u003e\n\u003cli\u003eI opened an issue in the related repository: N\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eAttacker (MitM) being able to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eImpersonate the affected account\u003c/li\u003e\n\u003cli\u003ePublish packages from the affected account that could also get used by the affected account/company in the future (for protected packages) and by anyone in the ecosystem (for public packages)\u003c/li\u003e\n\u003cli\u003ePerform logout and break installs of protected packages\u003c/li\u003e\n\u003c/ul\u003e\n","weakness":{"id":84,"name":"Missing Encryption of Sensitive Data"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":527543,"file_name":"Screenshot_20190712_142351.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/527/543/ce4b280cdc06cd143e6f5d6ef490d20c986d996c/Screenshot_20190712_142351.png?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_20190712_142351.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_20190712_142351.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQWPEA4QHM%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T063244Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIGXO5frUwVLGFxDWBVmHmNT%2B6JlROQ%2Fh2Ys%2Flt0prcUdAiEArvZZU6vxK8OPvx82Pcq8o33YhSQ8Sp596o4I%2B71KXboqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDFQ%2Btleyar2CCMIQ%2FiqRA0oRJaH4MzQaTEXIvcYpkTRptMnZ49JBLdqQm33GGvhffjnOoBNIPiTSi6pdezRRKGgr1r4B1IAGIEGp9Era8%2FVjLY%2F84nxA3XI4F09nEgobPjCz6yKQh3VdoZ1avIgB18X6MWbibE7XQhQRHNf12J4W05BmzThHdywp5K3hTdg4KpP7gfvCo%2F4Ktt%2BaXFH811I8QeWjv5pthBCzZLk1JVibgJtAmfExNo%2FtxD14kJX5VoKxRaaBIvOPag6Dr88HIlbNhmmeq6P6UFDhMg9j%2BZBNBeotHBDUM26EuglJC3Do5CNYJ80SHnZOD9OcD4YbxIEIacpSbw2zg1v%2F05gXvDdJmBfg2CZ6M3Oe9RFIGOz7K78vcnthqjsbMkTQtnYm3oSlLsPXOQzsk689VyQIvD%2FvISy3mc%2BR8fkse0nfZ6oo5yVZ1HDkUwyVBrEhVRwgA40ECaneL73yKaXHsGZZNplJZJjpVg7LmiK5cHcw%2BazOBUYiFhWrnigrx9zn8ACMeIxnoLYYF%2FbtR5yKptoMokcKMJrlqv8FOusBX%2FkI%2Bxq9aH44%2FxV%2FlmQ8l6YTA1mqoIeT5eUoTCncJ05WnGa6jf%2FtNIbVh9Bx6I91Z7cvfP3JjmvlVXGM09Nq4G51yOTYLbDJoC0v2WVQiP4QLA0yKhxXdlHnVerT6B%2BXgGwNCiB4w%2Ffx7IW3WkvZS7FvSLvhKxN%2B9Yzbcsj0UDJ9rocF7CIpeIiVb9ydgCK8v%2F9BCTjB%2F%2BHuRrXJoVvGbT4DVZuH1ZXzKIkP77S8Hw4QXRGhfqaoNmjdAKhfZNzKbjD5vOLqlD%2BBKIMWfferNFi8FhO7cNacpti15lmAJ1SKZ1SQQImXMFuysA%3D%3D\u0026X-Amz-Signature=59eb3a557b9aa9ea188b4ee7ea0b4a7ef6145d326a498ec895bb917c1e0b9990","file_size":466082,"type":"image/png"}],"allow_singular_disclosure_at":"2019-08-14T11:27:50.462Z","allow_singular_disclosure_after":-43441493.966525614,"singular_disclosure_allowed":true,"vote_count":8,"voters":["bl4de","optimus90","armansameer","rajivshah","wilkin27","eperstu","saboteurr","salex"],"severity":{"rating":"high","score":8.2,"author_type":"User","metrics":{"attack_vector":"network","attack_complexity":"high","privileges_required":"none","user_interaction":"required","scope":"changed","confidentiality":"high","integrity":"low","availability":"high"}},"structured_scope":{"databaseId":2986,"asset_type":"SOURCE_CODE","asset_identifier":"Other module","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":5306238,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2019-07-12T12:12:39.192Z","updated_at":"2019-07-12T12:12:39.192Z","actor":{"username":"vdeturckheim","cleared":false,"url":"/vdeturckheim","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/161/010/6f383ac0f9296c13b5ac0d38741f0685dbace58c_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5306270,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":"","markdown_message":"","automated_response":false,"created_at":"2019-07-12T12:19:44.355Z","updated_at":"2019-07-12T12:19:44.355Z","actor":{"username":"arcanis","cleared":false,"url":"/arcanis","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/EsbrQMX6UibsxVnUpxG8gLi7/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5306372,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"To give you some context, the npm registry returns (used to?) tarballs with the http protocol. This was tracked at least [here](https://npm.community/t/some-packages-have-dist-tarball-as-http-and-not-https/285/40), and lasted for at least a few months. I'm not sure whether it got fixed, but all the lockfiles generated during that time that referenced the affected packages store the bogus protocols.\n\nTo mitigate the issue we'll push an update that will lead Yarn to disregard the stored values (and what the registry returns) and always use https for the most common registries. This unfortunately won't fix the issue until after our users upgrade.\n\n---\n\nRegarding someone enabling this with a malicious intent in general (as in, submitting a PR to a project with a lockfile containing such a pattern), I'd tend to assume it's the user responsibility to review PRs, as a compromised lockfile (whether it's for Yarn or npm) will be dangerous in many ways (for example, you'd just have to put a typo somewhere in the resolved tarball url to download potentially different code). In fact, I've opened [a thread](https://github.com/github/linguist/issues/4348) in the past to ask for lockfiles to not be collapsed on Github precisely for this reason.","markdown_message":"\u003cp\u003eTo give you some context, the npm registry returns (used to?) tarballs with the http protocol. This was tracked at least \u003ca href=\"/redirect?url=https%3A%2F%2Fnpm.community%2Ft%2Fsome-packages-have-dist-tarball-as-http-and-not-https%2F285%2F40\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehere\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, and lasted for at least a few months. I\u0026#39;m not sure whether it got fixed, but all the lockfiles generated during that time that referenced the affected packages store the bogus protocols.\u003c/p\u003e\n\n\u003cp\u003eTo mitigate the issue we\u0026#39;ll push an update that will lead Yarn to disregard the stored values (and what the registry returns) and always use https for the most common registries. This unfortunately won\u0026#39;t fix the issue until after our users upgrade.\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cp\u003eRegarding someone enabling this with a malicious intent in general (as in, submitting a PR to a project with a lockfile containing such a pattern), I\u0026#39;d tend to assume it\u0026#39;s the user responsibility to review PRs, as a compromised lockfile (whether it\u0026#39;s for Yarn or npm) will be dangerous in many ways (for example, you\u0026#39;d just have to put a typo somewhere in the resolved tarball url to download potentially different code). In fact, I\u0026#39;ve opened \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fgithub%2Flinguist%2Fissues%2F4348\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ea thread\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e in the past to ask for lockfiles to not be collapsed on Github precisely for this reason.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-12T12:47:59.066Z","updated_at":"2019-07-12T12:47:59.066Z","actor":{"username":"arcanis","cleared":false,"url":"/arcanis","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/EsbrQMX6UibsxVnUpxG8gLi7/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5306449,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Affiliation notice: I am currently working for [Exodus](https://www.exodus.io/) and am sponsored by them to perform security research.","markdown_message":"\u003cp\u003eAffiliation notice: I am currently working for \u003ca href=\"/redirect?url=https%3A%2F%2Fwww.exodus.io%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eExodus\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e and am sponsored by them to perform security research.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-12T13:02:18.749Z","updated_at":"2019-07-12T13:02:18.749Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5306546,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Here's [a patch](https://github.com/yarnpkg/yarn/compare/https-enforcement?expand=1#diff-9917e0f368cd09d6825a5fb10c3c6d7c); can you confirm @chalker that it fixes the vulnerability you described?\n\nI've also opened an [issue](https://github.com/yarnpkg/berry/issues/293) on the v2 tracker to change our https policy starting from the v2 (we won't be able to do it in the v1 since it would be a breaking changes for people using third-party registries).","markdown_message":"\u003cp\u003eHere\u0026#39;s \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fyarnpkg%2Fyarn%2Fcompare%2Fhttps-enforcement%3Fexpand%3D1%23diff-9917e0f368cd09d6825a5fb10c3c6d7c\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ea patch\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e; can you confirm \u003ca href=\"/chalker\"\u003e@chalker\u003c/a\u003e that it fixes the vulnerability you described?\u003c/p\u003e\n\n\u003cp\u003eI\u0026#39;ve also opened an \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fyarnpkg%2Fberry%2Fissues%2F293\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eissue\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e on the v2 tracker to change our https policy starting from the v2 (we won\u0026#39;t be able to do it in the v1 since it would be a breaking changes for people using third-party registries).\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-12T13:20:39.624Z","updated_at":"2019-07-12T13:20:39.624Z","actor":{"username":"arcanis","cleared":false,"url":"/arcanis","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/EsbrQMX6UibsxVnUpxG8gLi7/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5306566,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@arcanis I think registry.npmjs.com should be also forced to use https? Not only registry.npmjs.org.","markdown_message":"\u003cp\u003e\u003ca href=\"/arcanis\"\u003e@arcanis\u003c/a\u003e I think registry.npmjs.com should be also forced to use https? Not only registry.npmjs.org.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-12T13:26:52.982Z","updated_at":"2019-07-12T13:27:08.414Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5306621,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Good point! Fixed in https://github.com/yarnpkg/yarn/pull/7393","markdown_message":"\u003cp\u003eGood point! Fixed in \u003ca title=\"https://github.com/yarnpkg/yarn/pull/7393\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fyarnpkg%2Fyarn%2Fpull%2F7393\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/yarnpkg/yarn/pull/7393\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-12T13:38:02.117Z","updated_at":"2019-07-12T13:38:02.117Z","actor":{"username":"arcanis","cleared":false,"url":"/arcanis","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/EsbrQMX6UibsxVnUpxG8gLi7/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5306623,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@arcanis Apart from that -- how possible would it be to not transfer auth at all for http:// registries, like it is apparently done for non-scoped npm packages? That should be a less breaking change than completely blacklisting http:// by default, perhaps it could be acceptable? Or not?","markdown_message":"\u003cp\u003e\u003ca href=\"/arcanis\"\u003e@arcanis\u003c/a\u003e Apart from that -- how possible would it be to not transfer auth at all for http:// registries, like it is apparently done for non-scoped npm packages? That should be a less breaking change than completely blacklisting http:// by default, perhaps it could be acceptable? Or not?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-12T13:38:48.540Z","updated_at":"2019-07-12T13:38:48.540Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5306669,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I'm not sure; the problem is that I'm guessing that some setups use third-party registries. On those setups, it's reasonable to assume that part of them are accessed through http. It's also reasonable to assume that part of them have some kind of authentication. Now the question is how much they intersect, and I lack data to have a real idea - although given the size of the JS ecosystem, even 1‰ would significantly break setups 😕\n\nGiven that we're already working on a major anyway (expected before the end of the year), I would tend to err on the cautious side and keep the existing behaviour for now.","markdown_message":"\u003cp\u003eI\u0026#39;m not sure; the problem is that I\u0026#39;m guessing that some setups use third-party registries. On those setups, it\u0026#39;s reasonable to assume that part of them are accessed through http. It\u0026#39;s also reasonable to assume that part of them have some kind of authentication. Now the question is how much they intersect, and I lack data to have a real idea - although given the size of the JS ecosystem, even 1‰ would significantly break setups 😕\u003c/p\u003e\n\n\u003cp\u003eGiven that we\u0026#39;re already working on a major anyway (expected before the end of the year), I would tend to err on the cautious side and keep the existing behaviour for now.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-12T13:48:39.012Z","updated_at":"2019-07-12T13:48:39.012Z","actor":{"username":"arcanis","cleared":false,"url":"/arcanis","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/EsbrQMX6UibsxVnUpxG8gLi7/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5306752,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":"","markdown_message":"","automated_response":false,"created_at":"2019-07-12T14:10:53.122Z","updated_at":"2019-07-12T14:10:53.122Z","actor":{"username":"aeleuterio","cleared":false,"url":"/aeleuterio","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5306765,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@aeleuterio would it be possible/sensible to auto-logout all tokens that were transfered to npm registry via unencrypted connection?","markdown_message":"\u003cp\u003e\u003ca href=\"/aeleuterio\"\u003e@aeleuterio\u003c/a\u003e would it be possible/sensible to auto-logout all tokens that were transfered to npm registry via unencrypted connection?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-12T14:14:12.471Z","updated_at":"2019-07-12T14:15:27.117Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5310377,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"\u003e Regarding someone enabling this with a malicious intent in general (as in, submitting a PR to a project with a lockfile containing such a pattern), I'd tend to assume it's the user responsibility to review PRs, as a compromised lockfile\n\nThe problem is that users probably won't catch that packages being resolved to `http://` could mean that the yarn lock is \"compromised\". A lot of such existing yarn.lock files that no one noticed (even with scoped packages) indicate that.\n\nMoreover, yarnpkg/yarn lockfile itself has a `http://`-resolved dep that apparently passed PR review: https://github.com/yarnpkg/yarn/blob/v1.17.3/yarn.lock#L5646. It's not scoped, but that difference might also be subtle while reviewing a PR. There are more of those in git history.","markdown_message":"\u003cblockquote\u003e\n\u003cp\u003eRegarding someone enabling this with a malicious intent in general (as in, submitting a PR to a project with a lockfile containing such a pattern), I\u0026#39;d tend to assume it\u0026#39;s the user responsibility to review PRs, as a compromised lockfile\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe problem is that users probably won\u0026#39;t catch that packages being resolved to \u003ccode\u003ehttp://\u003c/code\u003e could mean that the yarn lock is \u0026quot;compromised\u0026quot;. A lot of such existing yarn.lock files that no one noticed (even with scoped packages) indicate that.\u003c/p\u003e\n\n\u003cp\u003eMoreover, yarnpkg/yarn lockfile itself has a \u003ccode\u003ehttp://\u003c/code\u003e-resolved dep that apparently passed PR review: \u003ca title=\"https://github.com/yarnpkg/yarn/blob/v1.17.3/yarn.lock#L5646\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fyarnpkg%2Fyarn%2Fblob%2Fv1.17.3%2Fyarn.lock%23L5646\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/yarnpkg/yarn/blob/v1.17.3/yarn.lock#L5646\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. It\u0026#39;s not scoped, but that difference might also be subtle while reviewing a PR. There are more of those in git history.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-12T17:17:03.157Z","updated_at":"2019-07-12T17:28:03.165Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5310400,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@arcanis Re: https://github.com/yarnpkg/yarn/pull/7393 -- I can confirm that yarn with that PR does not use unencrypted connections to npm registry on my tests.\n\nBut perhaps it would make sense to also update the lockfile to point to https:// endpoints and write it to disk?\nSo that a fixed yarn.lock gets commited to the repo.","markdown_message":"\u003cp\u003e\u003ca href=\"/arcanis\"\u003e@arcanis\u003c/a\u003e Re: \u003ca title=\"https://github.com/yarnpkg/yarn/pull/7393\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fyarnpkg%2Fyarn%2Fpull%2F7393\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/yarnpkg/yarn/pull/7393\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e -- I can confirm that yarn with that PR does not use unencrypted connections to npm registry on my tests.\u003c/p\u003e\n\n\u003cp\u003eBut perhaps it would make sense to also update the lockfile to point to https:// endpoints and write it to disk?\u003cbr\u003e\nSo that a fixed yarn.lock gets commited to the repo.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-12T17:22:37.704Z","updated_at":"2019-07-12T17:22:53.987Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5310415,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":"","markdown_message":"","automated_response":false,"created_at":"2019-07-12T17:28:05.194Z","updated_at":"2019-07-12T17:28:05.194Z","actor":{"username":"adam_baldwin","cleared":false,"url":"/adam_baldwin","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/006/681/1cd93a2ad19ed2eb3ee91383a9c68b1f3bb1355b_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5310483,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"An example of an affected yarn.lock in a popular project (uses http: for scoped packages, leaks credentials): https://github.com/facebook/docusaurus/blob/v1.4.0/yarn.lock#L7, same file: https://github.com/facebook/docusaurus/blob/v1.6.0/v1/yarn.lock#L7\n\n@arcanis I do not think that this is something that is likely to be catched by PR review unless one knows what to look for.","markdown_message":"\u003cp\u003eAn example of an affected yarn.lock in a popular project (uses http: for scoped packages, leaks credentials): \u003ca title=\"https://github.com/facebook/docusaurus/blob/v1.4.0/yarn.lock#L7\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Fdocusaurus%2Fblob%2Fv1.4.0%2Fyarn.lock%23L7\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/facebook/docusaurus/blob/v1.4.0/yarn.lock#L7\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, same file: \u003ca title=\"https://github.com/facebook/docusaurus/blob/v1.6.0/v1/yarn.lock#L7\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Fdocusaurus%2Fblob%2Fv1.6.0%2Fv1%2Fyarn.lock%23L7\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/facebook/docusaurus/blob/v1.6.0/v1/yarn.lock#L7\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"/arcanis\"\u003e@arcanis\u003c/a\u003e I do not think that this is something that is likely to be catched by PR review unless one knows what to look for.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-12T17:43:58.544Z","updated_at":"2019-07-12T17:47:16.283Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5310590,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Also https://github.com/facebook/jest/blob/v23.4.0/yarn.lock#L101.\n\nThis looks *very* common, mostly coming from `@babel` and `@types` scopes.","markdown_message":"\u003cp\u003eAlso \u003ca title=\"https://github.com/facebook/jest/blob/v23.4.0/yarn.lock#L101\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Fjest%2Fblob%2Fv23.4.0%2Fyarn.lock%23L101\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/facebook/jest/blob/v23.4.0/yarn.lock#L101\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThis looks \u003cem\u003every\u003c/em\u003e common, mostly coming from \u003ccode\u003e@babel\u003c/code\u003e and \u003ccode\u003e@types\u003c/code\u003e scopes.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-12T18:12:46.135Z","updated_at":"2019-07-12T18:15:00.912Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5311902,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I see that a version of yarn with the fix from https://github.com/yarnpkg/yarn/pull/7393 was published as v1.17.3 (rc, not latest).\n\nWhat will the disclosure timeline look like?","markdown_message":"\u003cp\u003eI see that a version of yarn with the fix from \u003ca title=\"https://github.com/yarnpkg/yarn/pull/7393\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fyarnpkg%2Fyarn%2Fpull%2F7393\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/yarnpkg/yarn/pull/7393\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e was published as v1.17.3 (rc, not latest).\u003c/p\u003e\n\n\u003cp\u003eWhat will the disclosure timeline look like?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-12T21:30:45.150Z","updated_at":"2019-07-12T21:30:53.180Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5312040,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"We have some unrelated issues with the website, which affects the release process. Once it's back to normal I'll move the 1.17.3 to stable, and after that I think we'll post an article explaining the problem and suggesting to upgrade when users get the chance (and crediting you for the discovery). Does that sound reasonable?","markdown_message":"\u003cp\u003eWe have some unrelated issues with the website, which affects the release process. Once it\u0026#39;s back to normal I\u0026#39;ll move the 1.17.3 to stable, and after that I think we\u0026#39;ll post an article explaining the problem and suggesting to upgrade when users get the chance (and crediting you for the discovery). Does that sound reasonable?\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-12T21:42:42.470Z","updated_at":"2019-07-12T21:42:42.470Z","actor":{"username":"arcanis","cleared":false,"url":"/arcanis","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/EsbrQMX6UibsxVnUpxG8gLi7/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5312082,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The 1.17.3 reached stable, the blog post PR is here: https://github.com/yarnpkg/website/pull/980/files\nI plan to submit it tomorrow after getting some other maintainers to ack it.","markdown_message":"\u003cp\u003eThe 1.17.3 reached stable, the blog post PR is here: \u003ca title=\"https://github.com/yarnpkg/website/pull/980/files\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fyarnpkg%2Fwebsite%2Fpull%2F980%2Ffiles\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/yarnpkg/website/pull/980/files\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\nI plan to submit it tomorrow after getting some other maintainers to ack it.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-12T21:59:01.770Z","updated_at":"2019-07-12T21:59:01.770Z","actor":{"username":"arcanis","cleared":false,"url":"/arcanis","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/EsbrQMX6UibsxVnUpxG8gLi7/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5312099,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@arcanis Thanks! I am planning to file a blog post in my notes repo once that gets merged, mostly with information from this ticket. Does that sound good?\n\nAs for the blog post -- I would also recommend to refresh all npm tokens (i.e. to revoke them and relogin, and do that periodically in general) and to enable 2FA.","markdown_message":"\u003cp\u003e\u003ca href=\"/arcanis\"\u003e@arcanis\u003c/a\u003e Thanks! I am planning to file a blog post in my notes repo once that gets merged, mostly with information from this ticket. Does that sound good?\u003c/p\u003e\n\n\u003cp\u003eAs for the blog post -- I would also recommend to refresh all npm tokens (i.e. to revoke them and relogin, and do that periodically in general) and to enable 2FA.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-12T22:04:43.071Z","updated_at":"2019-07-12T22:08:32.926Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5312114,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"For sure 👍","markdown_message":"\u003cp\u003eFor sure 👍\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-12T22:06:47.664Z","updated_at":"2019-07-12T22:06:47.664Z","actor":{"username":"arcanis","cleared":false,"url":"/arcanis","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/EsbrQMX6UibsxVnUpxG8gLi7/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5312556,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@chalker do you have a list of tokens for us to revoke? We'll revoke them and contact users. Thank you for looping us in this issue!","markdown_message":"\u003cp\u003e\u003ca href=\"/chalker\"\u003e@chalker\u003c/a\u003e do you have a list of tokens for us to revoke? We\u0026#39;ll revoke them and contact users. Thank you for looping us in this issue!\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-12T23:22:04.688Z","updated_at":"2019-07-12T23:22:04.688Z","actor":{"username":"aeleuterio","cleared":false,"url":"/aeleuterio","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5314105,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Blog post released, and tweeted over at https://twitter.com/yarnpkg/status/1149960702356013056 🙂","markdown_message":"\u003cp\u003eBlog post released, and tweeted over at \u003ca title=\"https://twitter.com/yarnpkg/status/1149960702356013056\" href=\"/redirect?url=https%3A%2F%2Ftwitter.com%2Fyarnpkg%2Fstatus%2F1149960702356013056\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://twitter.com/yarnpkg/status/1149960702356013056\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e 🙂\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-13T08:37:32.788Z","updated_at":"2019-07-13T08:37:32.788Z","actor":{"username":"arcanis","cleared":false,"url":"/arcanis","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/EsbrQMX6UibsxVnUpxG8gLi7/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5314865,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@arcanis My post also released here: https://github.com/ChALkeR/notes/blob/master/Yarn-vuln.md\nThanks!\n\n@aeleuterio I do not, it is impossible to tell what tokens exactly were affected by this without having registry server-side logs (if there are any). I was asking if it would be possible (and reasonable) to implement a protocol check on the registry side that would mark all tokens received over http as compromised in real-time.","markdown_message":"\u003cp\u003e\u003ca href=\"/arcanis\"\u003e@arcanis\u003c/a\u003e My post also released here: \u003ca title=\"https://github.com/ChALkeR/notes/blob/master/Yarn-vuln.md\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2FChALkeR%2Fnotes%2Fblob%2Fmaster%2FYarn-vuln.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/ChALkeR/notes/blob/master/Yarn-vuln.md\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\nThanks!\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"/aeleuterio\"\u003e@aeleuterio\u003c/a\u003e I do not, it is impossible to tell what tokens exactly were affected by this without having registry server-side logs (if there are any). I was asking if it would be possible (and reasonable) to implement a protocol check on the registry side that would mark all tokens received over http as compromised in real-time.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-13T11:21:37.050Z","updated_at":"2019-07-13T11:21:37.050Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5322437,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"CVE required, will disclose when available.","markdown_message":"\u003cp\u003eCVE required, will disclose when available.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-15T11:16:37.226Z","updated_at":"2019-07-15T11:16:37.226Z","actor":{"username":"vdeturckheim","cleared":false,"url":"/vdeturckheim","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/161/010/6f383ac0f9296c13b5ac0d38741f0685dbace58c_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5322440,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2019-07-15T11:16:51.819Z","updated_at":"2019-07-15T11:16:51.819Z","actor":{"username":"vdeturckheim","cleared":false,"url":"/vdeturckheim","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/161/010/6f383ac0f9296c13b5ac0d38741f0685dbace58c_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"chalker","url":"/chalker"},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5322485,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-07-15T11:27:50.362Z","updated_at":"2019-07-15T11:27:50.362Z","first_to_agree":true,"actor":{"username":"vdeturckheim","cleared":false,"url":"/vdeturckheim","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/161/010/6f383ac0f9296c13b5ac0d38741f0685dbace58c_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5574206,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-08-14T11:27:55.462Z","updated_at":"2019-08-14T11:27:55.462Z","actor":{"url":"/nodejs-ecosystem","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Node.js third-party modules"}},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}