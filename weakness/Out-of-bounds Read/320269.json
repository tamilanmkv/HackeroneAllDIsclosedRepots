{"id":320269,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zMjAyNjk=","url":"https://hackerone.com/reports/320269","title":"`npmconf` (and `npm` js api) allocate and write to disk uninitialized memory content when a typed number is passed as input on Node.js 4.x","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2018-02-27T13:52:05.982Z","submitted_at":"2018-02-27T13:52:05.982Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"chalker","url":"/chalker","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":23949,"url":"https://hackerone.com/nodejs-ecosystem","handle":"nodejs-ecosystem","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Node.js third-party modules","twitter_handle":"","website":"https://nodejs.org/en/security/","about":"This program is used to handle vulnerabilities in the Node.js ecosystem."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2018-05-12T08:56:12.533Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2018-05-12T08:54:51.401Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"I would like to report a Buffer allocation issue in `npmconf` (and `npm` package js api).\nIt allows to extract sensitive content from uninitialized memory by passing typed input to `setCredentialsByURI`, limited to Node.js 4.x and below.\n\n# Module\n\n**module name:** `npmconf`\n**version:** 2.1.2\n**npm page:** `https://www.npmjs.com/package/npmconf`\n\n**module name:** `npm`\n**version:** 5.6.0\n**npm page:** `https://www.npmjs.com/package/npm`\n\n## Module Description\n\n\u003e The config thing npm uses\n\n## Module Stats\n\n### npmconf\n\n40 292 downloads in the last day\n219 837 downloads in the last week\n897 947 downloads in the last month\n\n~1 0775 364 estimated downloads per year\n\n`npmconf` is deprecated, but doesn't mention security issues and is still widely used, and the usage seems to *increase* over time.\n\n### npm\n\n`npm` download stats are not representive here, as it's mainly used as a CLI, not as JS api, but here they are (e.g. for comparison with `npmconf`):\n\n141 545 downloads in the last day\n1 067 194 downloads in the last week\n3 701 192 downloads in the last month\n\n~44 414 304 estimated downloads per year\n\n# Vulnerability\n\n## Vulnerability Description\n\nWhen a number is passed to the `password` property of `config.setCredentialsByURI`, `npmconf`/`npm` allocate uninitialized Buffer instances during conversion to base64 (on Node.js 4.x) due to missing type checks before passing user input to the `new Buffer()` constructor.\n\nThose Buffer instances could (and most likely will) contain sensitive information, see [Buffer-knows-everything.md](https://github.com/ChALkeR/notes/blob/master/Buffer-knows-everything.md).\n\nNode.js 4.x is stated as supported in `npm`.\n\n## Steps To Reproduce:\n\nUse Node.js 4.x LTS or below.\n\n### npmconf\n```js\nvar URI = \"https://registry.example.com:8661/\";\nrequire('npmconf').load({}, function (err, conf) {\n  conf.setCredentialsByURI(URI, {username: 'foo', email: 'boo@example.com', password: 200});\n  console.log(conf.getCredentialsByURI(URI)); // This just outputs the setting\n  // conf.save('user', function() {}) // Warning: writes base64-encoded uninitialized buffer .npmrc\n});\n```\n\n### npm\n```js\nvar URI = \"https://registry.example.com:8661/\";\nrequire('npm').load({}, function (err, npm) {\n  npm.config.setCredentialsByURI(URI, {username: 'foo', email: 'boo@example.com', password: 200});\n  console.log(npm.config.getCredentialsByURI(URI)); // This just outputs the setting\n  // npm.config.save('user', function() {}) // Warning: writes base64-encoded uninitialized buffer .npmrc\n});\n```\n\n## Supporting Material/References:\n\n- Arch Linux\n- Node.js v4.8.7 (latest in 4.x LTS branch)\n- npm 5.6.0\n\n# Wrap up\n\n- I contacted the maintainer to let him know: Y\n- I opened an issue in the related repository: N\n\nI reported this initially on 2016-01-20 over email, but didn't receive any response.\nProbably was deemed insignificant or out-of-scope, but I still think this should be fixed and disclosed.\n\n## Impact\n\nRead uninitialized memory, extracting sensitive information from it.\nCause a DoS by large Buffer allocation and conversion to string.","vulnerability_information_html":"\u003cp\u003eI would like to report a Buffer allocation issue in \u003ccode\u003enpmconf\u003c/code\u003e (and \u003ccode\u003enpm\u003c/code\u003e package js api).\u003cbr\u003e\nIt allows to extract sensitive content from uninitialized memory by passing typed input to \u003ccode\u003esetCredentialsByURI\u003c/code\u003e, limited to Node.js 4.x and below.\u003c/p\u003e\n\n\u003ch1 id=\"module\"\u003eModule\u003c/h1\u003e\n\n\u003cp\u003e\u003cstrong\u003emodule name:\u003c/strong\u003e \u003ccode\u003enpmconf\u003c/code\u003e\u003cbr\u003e\n\u003cstrong\u003eversion:\u003c/strong\u003e 2.1.2\u003cbr\u003e\n\u003cstrong\u003enpm page:\u003c/strong\u003e \u003ccode\u003ehttps://www.npmjs.com/package/npmconf\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003emodule name:\u003c/strong\u003e \u003ccode\u003enpm\u003c/code\u003e\u003cbr\u003e\n\u003cstrong\u003eversion:\u003c/strong\u003e 5.6.0\u003cbr\u003e\n\u003cstrong\u003enpm page:\u003c/strong\u003e \u003ccode\u003ehttps://www.npmjs.com/package/npm\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2 id=\"module-description\"\u003eModule Description\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe config thing npm uses\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2 id=\"module-stats\"\u003eModule Stats\u003c/h2\u003e\n\n\u003ch3 id=\"npmconf\"\u003enpmconf\u003c/h3\u003e\n\n\u003cp\u003e40 292 downloads in the last day\u003cbr\u003e\n219 837 downloads in the last week\u003cbr\u003e\n897 947 downloads in the last month\u003c/p\u003e\n\n\u003cp\u003e~1 0775 364 estimated downloads per year\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003enpmconf\u003c/code\u003e is deprecated, but doesn\u0026#39;t mention security issues and is still widely used, and the usage seems to \u003cem\u003eincrease\u003c/em\u003e over time.\u003c/p\u003e\n\n\u003ch3 id=\"npm\"\u003enpm\u003c/h3\u003e\n\n\u003cp\u003e\u003ccode\u003enpm\u003c/code\u003e download stats are not representive here, as it\u0026#39;s mainly used as a CLI, not as JS api, but here they are (e.g. for comparison with \u003ccode\u003enpmconf\u003c/code\u003e):\u003c/p\u003e\n\n\u003cp\u003e141 545 downloads in the last day\u003cbr\u003e\n1 067 194 downloads in the last week\u003cbr\u003e\n3 701 192 downloads in the last month\u003c/p\u003e\n\n\u003cp\u003e~44 414 304 estimated downloads per year\u003c/p\u003e\n\n\u003ch1 id=\"vulnerability\"\u003eVulnerability\u003c/h1\u003e\n\n\u003ch2 id=\"vulnerability-description\"\u003eVulnerability Description\u003c/h2\u003e\n\n\u003cp\u003eWhen a number is passed to the \u003ccode\u003epassword\u003c/code\u003e property of \u003ccode\u003econfig.setCredentialsByURI\u003c/code\u003e, \u003ccode\u003enpmconf\u003c/code\u003e/\u003ccode\u003enpm\u003c/code\u003e allocate uninitialized Buffer instances during conversion to base64 (on Node.js 4.x) due to missing type checks before passing user input to the \u003ccode\u003enew Buffer()\u003c/code\u003e constructor.\u003c/p\u003e\n\n\u003cp\u003eThose Buffer instances could (and most likely will) contain sensitive information, see \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2FChALkeR%2Fnotes%2Fblob%2Fmaster%2FBuffer-knows-everything.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eBuffer-knows-everything.md\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eNode.js 4.x is stated as supported in \u003ccode\u003enpm\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003cp\u003eUse Node.js 4.x LTS or below.\u003c/p\u003e\n\n\u003ch3 id=\"npmconf\"\u003enpmconf\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eURI\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttps://registry.example.com:8661/\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nx\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003enpmconf\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eload\u003c/span\u003e\u003cspan class=\"p\"\u003e({},\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003econf\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003econf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003esetCredentialsByURI\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eURI\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"na\"\u003eusername\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003efoo\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"na\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eboo@example.com\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"na\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e200\u003c/span\u003e\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003econf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetCredentialsByURI\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eURI\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e \u003cspan class=\"c1\"\u003e// This just outputs the setting\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// conf.save(\u0026#39;user\u0026#39;, function() {}) // Warning: writes base64-encoded uninitialized buffer .npmrc\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"npm\"\u003enpm\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eURI\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003ehttps://registry.example.com:8661/\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nx\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003enpm\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eload\u003c/span\u003e\u003cspan class=\"p\"\u003e({},\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003enpm\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003enpm\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003esetCredentialsByURI\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eURI\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"na\"\u003eusername\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003efoo\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"na\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eboo@example.com\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"na\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e200\u003c/span\u003e\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enpm\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetCredentialsByURI\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eURI\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e \u003cspan class=\"c1\"\u003e// This just outputs the setting\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// npm.config.save(\u0026#39;user\u0026#39;, function() {}) // Warning: writes base64-encoded uninitialized buffer .npmrc\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"supporting-material-references\"\u003eSupporting Material/References:\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eArch Linux\u003c/li\u003e\n\u003cli\u003eNode.js v4.8.7 (latest in 4.x LTS branch)\u003c/li\u003e\n\u003cli\u003enpm 5.6.0\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1 id=\"wrap-up\"\u003eWrap up\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003eI contacted the maintainer to let him know: Y\u003c/li\u003e\n\u003cli\u003eI opened an issue in the related repository: N\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eI reported this initially on 2016-01-20 over email, but didn\u0026#39;t receive any response.\u003cbr\u003e\nProbably was deemed insignificant or out-of-scope, but I still think this should be fixed and disclosed.\u003c/p\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eRead uninitialized memory, extracting sensitive information from it.\u003cbr\u003e\nCause a DoS by large Buffer allocation and conversion to string.\u003c/p\u003e\n","weakness":{"id":8,"name":"Out-of-bounds Read"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2018-06-11T08:54:51.518Z","allow_singular_disclosure_after":-80512779.89673297,"singular_disclosure_allowed":true,"vote_count":3,"voters":["bl4de","japz","0x08"],"severity":{"rating":"high","score":7.4,"author_type":"Team","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"none","user_interaction":"required","scope":"changed","confidentiality":"high","integrity":"none","availability":"none"}},"structured_scope":{"databaseId":9407,"asset_type":"SOURCE_CODE","asset_identifier":"npmconf","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":2538933,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2018-03-28T06:39:45.315Z","updated_at":"2018-03-28T06:39:45.315Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2538936,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @chalker,\n\nThanks for reporting this vulnerability.\nWhile both modules have shared maintainer (isaacs) there are other different collaborators between the projects.\n\nsince `npmconf` is already set as deprecated I assume there is not going to be any further fixes there but we just want to disclose the vulnerability, right?\n\nI'll invite some of the module maintainers for `npm`\n","markdown_message":"\u003cp\u003eHi \u003ca href=\"/chalker\"\u003e@chalker\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThanks for reporting this vulnerability.\u003cbr\u003e\nWhile both modules have shared maintainer (isaacs) there are other different collaborators between the projects.\u003c/p\u003e\n\n\u003cp\u003esince \u003ccode\u003enpmconf\u003c/code\u003e is already set as deprecated I assume there is not going to be any further fixes there but we just want to disclose the vulnerability, right?\u003c/p\u003e\n\n\u003cp\u003eI\u0026#39;ll invite some of the module maintainers for \u003ccode\u003enpm\u003c/code\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2018-03-28T06:42:30.800Z","updated_at":"2018-03-28T06:42:30.800Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2538955,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@lirantal Thanks.\n\nYes, it looks like npmconf indeed got deprecated by now.\nBut it has 1 088 971 downloads per month though and that appears to be *inceasing* (compare to numbers mentioned in the post above).\n\nIn fact, `npmconf` worries me *more* than `npm` here,  because for the latter almost all installs are probably for the CLI tool which is not affected, but `npmconf` is always used as an API, which is where the problem is.","markdown_message":"\u003cp\u003e\u003ca href=\"/lirantal\"\u003e@lirantal\u003c/a\u003e Thanks.\u003c/p\u003e\n\n\u003cp\u003eYes, it looks like npmconf indeed got deprecated by now.\u003cbr\u003e\nBut it has 1 088 971 downloads per month though and that appears to be \u003cem\u003einceasing\u003c/em\u003e (compare to numbers mentioned in the post above).\u003c/p\u003e\n\n\u003cp\u003eIn fact, \u003ccode\u003enpmconf\u003c/code\u003e worries me \u003cem\u003emore\u003c/em\u003e than \u003ccode\u003enpm\u003c/code\u003e here,  because for the latter almost all installs are probably for the CLI tool which is not affected, but \u003ccode\u003enpmconf\u003c/code\u003e is always used as an API, which is where the problem is.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-03-28T06:56:03.201Z","updated_at":"2018-03-28T06:56:03.201Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2542391,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":"","markdown_message":"","automated_response":false,"created_at":"2018-03-29T01:26:00.868Z","updated_at":"2018-03-29T01:26:00.868Z","actor":{"username":"iarna","cleared":false,"url":"/iarna","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2542483,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi, for the record, I'm the npm cli lead and one of the maintainers of many npm repos, including those two.\n\nRisk:\n\nYou loaded a config via `npmconf` (deprecated) or `npm` as a library (unsupported) and added a username and password pair where the password was a `Number` and then you called `save()`. At which point uninitialized memory from that process would be written to the user running the process's `.npmrc`.\n\nState of things:\n\n`npm` had a patch that coincidentally fixed this in `v6.0.0-next.0`, and I'd be happy to bring that patch `npm@5` as well. (`npm@6` is an active release candidate but in the meantime `npm@5` remains supported.) `npm` has 1908 dependents published on the registry. It is unknown how many use it as a library versus calling it as a cli. Some do, despite this being an unsupported mode of operation.\n\n`npmconf` has been deprecated since (at least) Jan 2016 and has been entirely unsupported since then. I would be happy, however, to do a new release of it with a patch, while retaining its deprecated status.` npmconf` has 123 dependents published to the registry.\n\nImpact:\n\nnpm's own use would only go through the code path with `new Buffer` on when adding a user on third party registries, as `registry.npmjs.com` authenticates via tokens and not username/password pairs. As @chalker noted, in that scenario, it's still not vulnerable as there's no way to force `npm` to pass anything in other than a `String`.\n\nI would be genuinely surprised if anyone using `npm` internals as a library or `npmconf` called `setCredentialsByURI`. \n\nA naive search seems to back this up: https://www.google.com/search?q=site%3Agithub.com+setCredentialsByURI\n\nWhich in contrast to a search for npmconf: https://www.google.com/search?q=site%3Agithub.com+npmconf\n\n","markdown_message":"\u003cp\u003eHi, for the record, I\u0026#39;m the npm cli lead and one of the maintainers of many npm repos, including those two.\u003c/p\u003e\n\n\u003cp\u003eRisk:\u003c/p\u003e\n\n\u003cp\u003eYou loaded a config via \u003ccode\u003enpmconf\u003c/code\u003e (deprecated) or \u003ccode\u003enpm\u003c/code\u003e as a library (unsupported) and added a username and password pair where the password was a \u003ccode\u003eNumber\u003c/code\u003e and then you called \u003ccode\u003esave()\u003c/code\u003e. At which point uninitialized memory from that process would be written to the user running the process\u0026#39;s \u003ccode\u003e.npmrc\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eState of things:\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003enpm\u003c/code\u003e had a patch that coincidentally fixed this in \u003ccode\u003ev6.0.0-next.0\u003c/code\u003e, and I\u0026#39;d be happy to bring that patch \u003ccode\u003enpm@5\u003c/code\u003e as well. (\u003ccode\u003enpm@6\u003c/code\u003e is an active release candidate but in the meantime \u003ccode\u003enpm@5\u003c/code\u003e remains supported.) \u003ccode\u003enpm\u003c/code\u003e has 1908 dependents published on the registry. It is unknown how many use it as a library versus calling it as a cli. Some do, despite this being an unsupported mode of operation.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003enpmconf\u003c/code\u003e has been deprecated since (at least) Jan 2016 and has been entirely unsupported since then. I would be happy, however, to do a new release of it with a patch, while retaining its deprecated status.\u003ccode\u003enpmconf\u003c/code\u003e has 123 dependents published to the registry.\u003c/p\u003e\n\n\u003cp\u003eImpact:\u003c/p\u003e\n\n\u003cp\u003enpm\u0026#39;s own use would only go through the code path with \u003ccode\u003enew Buffer\u003c/code\u003e on when adding a user on third party registries, as \u003ccode\u003eregistry.npmjs.com\u003c/code\u003e authenticates via tokens and not username/password pairs. As \u003ca href=\"/chalker\"\u003e@chalker\u003c/a\u003e noted, in that scenario, it\u0026#39;s still not vulnerable as there\u0026#39;s no way to force \u003ccode\u003enpm\u003c/code\u003e to pass anything in other than a \u003ccode\u003eString\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eI would be genuinely surprised if anyone using \u003ccode\u003enpm\u003c/code\u003e internals as a library or \u003ccode\u003enpmconf\u003c/code\u003e called \u003ccode\u003esetCredentialsByURI\u003c/code\u003e. \u003c/p\u003e\n\n\u003cp\u003eA naive search seems to back this up: \u003ca title=\"https://www.google.com/search?q=site%3Agithub.com+setCredentialsByURI\" href=\"/redirect?url=https%3A%2F%2Fwww.google.com%2Fsearch%3Fq%3Dsite%253Agithub.com%2BsetCredentialsByURI\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.google.com/search?q=site%3Agithub.com+setCredentialsByURI\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eWhich in contrast to a search for npmconf: \u003ca title=\"https://www.google.com/search?q=site%3Agithub.com+npmconf\" href=\"/redirect?url=https%3A%2F%2Fwww.google.com%2Fsearch%3Fq%3Dsite%253Agithub.com%2Bnpmconf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.google.com/search?q=site%3Agithub.com+npmconf\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2018-03-29T02:12:55.950Z","updated_at":"2018-03-29T02:12:55.950Z","actor":{"username":"iarna","cleared":false,"url":"/iarna","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2542717,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi, @iarna, and thanks for the reply on this!\n\n\u003e You loaded a config via npmconf (deprecated)\n\nCorrect. But the downloads/month of `npmconf` seem increasing over time.\n\n\u003e or npm as a library (unsupported)\n\nHuh? But `npmconf` [Readme](https://github.com/npm/npmconf#this-package-is-deprecated) redirects there:\n\n\u003e npm itself is the best tool to use to manage its configuration\n\nNext (*needed to break the citation*):\n\n\u003e and added a username and password pair where the password was a Number\n\nCorrect.\n\n\u003e and then you called save(). At which point uninitialized memory from that process would be written to the user running the process's .npmrc.\n\nNot entirely correct — `.save` call is not required. Please see the code snippets attached above — it is also a risk when someone does that in-memory, which could be more likely than writing to a file.\n\n\u003e npm had a patch that coincidentally fixed this in v6.0.0-next.0, and I'd be happy to bring that patch npm@5 as well. \n\nGreat, SGTM for npm@5 and npm@6.\n\n\u003e npmconf has been deprecated since (at least) Jan 2016 and has been entirely unsupported since then\n\nCoincidentally, Jan 2016 was the date of the original report to security@npmjs.com ;-). According to the git history, `npmconf` has been deprecated before the report, about for two weeks.\n\nAt the current time, what worries me about `npmconf` is its downloads/month stats rising over time — seems like the deprecation message upon install is not effective.\n\nI am not sure if that should be fixed or just disclosed with adding to vuln databases and changing the deprecation message to something more effective  — any approach would work to me. I understand the negative effects of making it seem that an unsupported package is supported, and I trust your opinion on that whatever path you choose here. Imo, even simply disclosing this issue might help a bit.\n\n\u003e I would be genuinely surprised if anyone using npm internals as a library or npmconf called setCredentialsByURI.\n\nI have found signs of that usage, though I assume it's fairly minimal, e.g. https://github.com/ctran/nexus-cli/blob/master/index.js#L124 would fit for «anyone», or https://github.com/HelloWallet/secret-service/blob/master/lib/modules.js#L334-L339. There seem to be more — but not a lot of them in public packages, so yes, for public packages the usage seems minimal.\n\nNikita.","markdown_message":"\u003cp\u003eHi, \u003ca href=\"/iarna\"\u003e@iarna\u003c/a\u003e, and thanks for the reply on this!\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eYou loaded a config via npmconf (deprecated)\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eCorrect. But the downloads/month of \u003ccode\u003enpmconf\u003c/code\u003e seem increasing over time.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eor npm as a library (unsupported)\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eHuh? But \u003ccode\u003enpmconf\u003c/code\u003e \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fnpm%2Fnpmconf%23this-package-is-deprecated\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003eReadme\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e redirects there:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003enpm itself is the best tool to use to manage its configuration\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eNext (\u003cem\u003eneeded to break the citation\u003c/em\u003e):\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eand added a username and password pair where the password was a Number\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eCorrect.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eand then you called save(). At which point uninitialized memory from that process would be written to the user running the process\u0026#39;s .npmrc.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eNot entirely correct — \u003ccode\u003e.save\u003c/code\u003e call is not required. Please see the code snippets attached above — it is also a risk when someone does that in-memory, which could be more likely than writing to a file.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003enpm had a patch that coincidentally fixed this in v6.0.0-next.0, and I\u0026#39;d be happy to bring that patch npm@5 as well. \u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eGreat, SGTM for npm@5 and npm@6.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003enpmconf has been deprecated since (at least) Jan 2016 and has been entirely unsupported since then\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eCoincidentally, Jan 2016 was the date of the original report to \u003ca title=\"security@npmjs.com\" href=\"mailto:security@npmjs.com\" rel=\"nofollow noopener noreferrer\"\u003esecurity@npmjs.com\u003c/a\u003e ;-). According to the git history, \u003ccode\u003enpmconf\u003c/code\u003e has been deprecated before the report, about for two weeks.\u003c/p\u003e\n\n\u003cp\u003eAt the current time, what worries me about \u003ccode\u003enpmconf\u003c/code\u003e is its downloads/month stats rising over time — seems like the deprecation message upon install is not effective.\u003c/p\u003e\n\n\u003cp\u003eI am not sure if that should be fixed or just disclosed with adding to vuln databases and changing the deprecation message to something more effective  — any approach would work to me. I understand the negative effects of making it seem that an unsupported package is supported, and I trust your opinion on that whatever path you choose here. Imo, even simply disclosing this issue might help a bit.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eI would be genuinely surprised if anyone using npm internals as a library or npmconf called setCredentialsByURI.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eI have found signs of that usage, though I assume it\u0026#39;s fairly minimal, e.g. \u003ca title=\"https://github.com/ctran/nexus-cli/blob/master/index.js#L124\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fctran%2Fnexus-cli%2Fblob%2Fmaster%2Findex.js%23L124\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/ctran/nexus-cli/blob/master/index.js#L124\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e would fit for «anyone», or \u003ca title=\"https://github.com/HelloWallet/secret-service/blob/master/lib/modules.js#L334-L339\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2FHelloWallet%2Fsecret-service%2Fblob%2Fmaster%2Flib%2Fmodules.js%23L334-L339\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/HelloWallet/secret-service/blob/master/lib/modules.js#L334-L339\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e. There seem to be more — but not a lot of them in public packages, so yes, for public packages the usage seems minimal.\u003c/p\u003e\n\n\u003cp\u003eNikita.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-03-29T05:38:03.575Z","updated_at":"2018-03-29T05:47:17.356Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2661156,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@chalker @iarna are we ok with disclosing the report?","markdown_message":"\u003cp\u003e\u003ca href=\"/chalker\"\u003e@chalker\u003c/a\u003e \u003ca href=\"/iarna\"\u003e@iarna\u003c/a\u003e are we ok with disclosing the report?\u003c/p\u003e\n","automated_response":false,"created_at":"2018-04-24T20:04:57.584Z","updated_at":"2018-04-24T20:04:57.584Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2729696,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@chalker @iarna\nping","markdown_message":"\u003cp\u003e\u003ca href=\"/chalker\"\u003e@chalker\u003c/a\u003e \u003ca href=\"/iarna\"\u003e@iarna\u003c/a\u003e\u003cbr\u003e\nping\u003c/p\u003e\n","automated_response":false,"created_at":"2018-05-11T15:39:12.158Z","updated_at":"2018-05-11T15:39:12.158Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2730097,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I'm fine with disclosing, having `npm` fixed and `npmconf` emitting an additional warning after disclosure with `npm audit` solves this.","markdown_message":"\u003cp\u003eI\u0026#39;m fine with disclosing, having \u003ccode\u003enpm\u003c/code\u003e fixed and \u003ccode\u003enpmconf\u003c/code\u003e emitting an additional warning after disclosure with \u003ccode\u003enpm audit\u003c/code\u003e solves this.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-05-11T17:24:14.873Z","updated_at":"2018-05-11T17:24:14.873Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2731157,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Cool, I'll go ahead with a public disclosure.\nThe report will be about `npmconf` with version 2.1.2 and no patched version, right?","markdown_message":"\u003cp\u003eCool, I\u0026#39;ll go ahead with a public disclosure.\u003cbr\u003e\nThe report will be about \u003ccode\u003enpmconf\u003c/code\u003e with version 2.1.2 and no patched version, right?\u003c/p\u003e\n","automated_response":false,"created_at":"2018-05-11T20:03:58.479Z","updated_at":"2018-05-11T20:03:58.479Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2731663,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"`npmconf` 2.1.3 has been published with a patch.","markdown_message":"\u003cp\u003e\u003ccode\u003enpmconf\u003c/code\u003e 2.1.3 has been published with a patch.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-05-11T22:03:43.627Z","updated_at":"2018-05-11T22:03:43.627Z","actor":{"username":"iarna","cleared":false,"url":"/iarna","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2733241,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks @iarna  , I see it.","markdown_message":"\u003cp\u003eThanks \u003ca href=\"/iarna\"\u003e@iarna\u003c/a\u003e  , I see it.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-05-12T08:53:07.885Z","updated_at":"2018-05-12T08:53:07.885Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2733243,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2018-05-12T08:54:19.692Z","updated_at":"2018-05-12T08:54:19.692Z","additional_data":{"old_severity":"Medium","new_severity":"High (7.4)","old_severity_id":123148,"new_severity_id":152749},"actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2733244,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2018-05-12T08:54:35.925Z","updated_at":"2018-05-12T08:54:35.925Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"chalker","url":"/chalker"},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2733245,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2018-05-12T08:54:51.470Z","updated_at":"2018-05-12T08:54:51.470Z","first_to_agree":true,"actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2733247,"is_internal":false,"editable":false,"type":"Activities::ManuallyDisclosed","message":"","markdown_message":"","automated_response":false,"created_at":"2018-05-12T08:56:12.456Z","updated_at":"2018-05-12T08:56:12.456Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2764949,"is_internal":false,"editable":false,"type":"Activities::ChangedScope","message":"","markdown_message":"","automated_response":false,"created_at":"2018-05-19T07:21:10.955Z","updated_at":"2018-05-19T07:21:10.955Z","actor":{"username":"lirantal","cleared":false,"url":"/lirantal","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"old_scope":"Other module","new_scope":"npmconf","genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}