{"id":993975,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC85OTM5NzU=","url":"https://hackerone.com/reports/993975","title":"[zenn-cli] Path traversal on Windows allows the attacker to read arbitrary .md files","state":"Closed","substate":"resolved","severity_rating":"low","readable_substate":"Resolved","created_at":"2020-09-29T11:09:14.277Z","submitted_at":"2020-09-29T11:09:14.384Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"ryotak","url":"/ryotak","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/Nb79aqy3v6SyMh8rwZZh43cu/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":23949,"url":"https://hackerone.com/nodejs-ecosystem","handle":"nodejs-ecosystem","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Node.js third-party modules","twitter_handle":"","website":"https://nodejs.org/en/security/","about":"This program is used to handle vulnerabilities in the Node.js ecosystem."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2020-10-29T19:33:06.837Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2020-09-29T19:33:00.417Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"## Summary\nI would like to report path traversal in `zenn-cli`.\nIt allows the attacker to read arbitrary `.md` files.\n\n# Module\n\n**module name:** `zenn-cli`\n**version:** `0.1.39`\n**npm page:** `https://www.npmjs.com/package/zenn-cli`\n\n## Module Description\n\nManage Zenn content locally üë©‚Äçüíª\n\n## Module Stats\n\n885 weekly downloads\n\n# Vulnerability\n\n## Vulnerability Description\n\nDue to improper sanitization in [this line](https://github.com/zenn-dev/zenn-editor/blob/master/packages/zenn-cli/utils/api/articles.ts#L32), it's possible to bypass sanitization via `\\` on Windows and allows the attacker to read arbitrary `.md` file from the victim's machine.\n\n## Steps To Reproduce:\n\n1. Create test directory: `mkdir zenn-test \u0026\u0026 zenn-test`\n2. Initialize npm project: `npm init --yes`\n3. Install `zenn-cli`: `npm install zenn-cli`\n4. Initialize `zenn-cli`: `npx zenn init`\n5. Create an article: `npx zenn new:article`\n6. Start preview server: `npx zenn preview`\n7. Open http://localhost:8000 in your browser.\n8. Click an article that you created in step 5.\n9. Find the URL in the following format from the Network tab of DevTools: `http://localhost:8000/_next/data/[Random String]/articles/[Slug of an article].json`\n10. Modify the URL you found above to the following and send request: `http://localhost:8000/_next/data/[Copy the random string from step 9]/articles/%5c..%5cREADME.json`\n11. You'll receive the content of the README.md that is in outside of `articles` directory.\n\n## Patch\n```\ndiff --git a/packages/zenn-cli/utils/api/articles.ts b/packages/zenn-cli/utils/api/articles.ts\nindex 294e7f3..06bfc7f 100644\n--- a/packages/zenn-cli/utils/api/articles.ts\n+++ b/packages/zenn-cli/utils/api/articles.ts\n@@ -29,7 +29,7 @@ export function getArticleBySlug(\n ): Article {\n   const fullPath = path.join(\n     articlesDirectory,\n-    `${slug.replace(/\\//g, \"\")}.md` // Prevent directory traversal\n+    `${slug.replace(/[/\\\\]/g, \"\")}.md` // Prevent directory traversal\n   );\n   let fileRaw;\n   try {\ndiff --git a/packages/zenn-cli/utils/api/books.ts b/packages/zenn-cli/utils/api/books.ts\nindex 25dca4c..b63ec70 100644\n--- a/packages/zenn-cli/utils/api/books.ts\n+++ b/packages/zenn-cli/utils/api/books.ts\n@@ -89,7 +89,7 @@ function getCoverDataUrl(fullDirPath: string): string | null {\n }\n \n export function getBookBySlug(slug: string, fields?: null | string[]): Book {\n-  const fullDirPath = path.join(booksDirectory, slug.replace(/\\//g, \"\")); // Prevent directory traversal\n+  const fullDirPath = path.join(booksDirectory, slug.replace(/[/\\\\]/g, \"\")); // Prevent directory traversal\n   const data = getConfigYamlData(fullDirPath);\n   if (!data) return null;\n \ndiff --git a/packages/zenn-cli/utils/api/chapters.ts b/packages/zenn-cli/utils/api/chapters.ts\nindex 91d878f..ae97ef6 100644\n--- a/packages/zenn-cli/utils/api/chapters.ts\n+++ b/packages/zenn-cli/utils/api/chapters.ts\n@@ -44,8 +44,8 @@ export function getChapter(\n   fields?: null | string[]\n ): Chapter {\n   const fullPath = path.join(\n-    getBookDirPath(bookSlug.replace(/\\//g, \"\")), // Prevent directory traversal\n-    `${position.replace(/\\//g, \"\")}.md`\n+    getBookDirPath(bookSlug.replace(/[/\\\\]/g, \"\")), // Prevent directory traversal\n+    `${position.replace(/[/\\\\]/g, \"\")}.md`\n   );\n   let fileRaw;\n   try {\n\n```\n\n\n## Supporting Material/References:\n\n{F1007381}\n\n# Wrap up\n\n- I contacted the maintainer to let them know: N \n- I opened an issue in the related repository: N\n\n## Impact\n\nIt's possible to read arbitrary `.md` files from the victim's machine while the victim is running `zenn-cli`'s preview server.","vulnerability_information_html":"\u003ch2 id=\"summary\"\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003eI would like to report path traversal in \u003ccode\u003ezenn-cli\u003c/code\u003e.\u003cbr\u003e\nIt allows the attacker to read arbitrary \u003ccode\u003e.md\u003c/code\u003e files.\u003c/p\u003e\n\n\u003ch1 id=\"module\"\u003eModule\u003c/h1\u003e\n\n\u003cp\u003e\u003cstrong\u003emodule name:\u003c/strong\u003e \u003ccode\u003ezenn-cli\u003c/code\u003e\u003cbr\u003e\n\u003cstrong\u003eversion:\u003c/strong\u003e \u003ccode\u003e0.1.39\u003c/code\u003e\u003cbr\u003e\n\u003cstrong\u003enpm page:\u003c/strong\u003e \u003ccode\u003ehttps://www.npmjs.com/package/zenn-cli\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2 id=\"module-description\"\u003eModule Description\u003c/h2\u003e\n\n\u003cp\u003eManage Zenn content locally üë©‚Äçüíª\u003c/p\u003e\n\n\u003ch2 id=\"module-stats\"\u003eModule Stats\u003c/h2\u003e\n\n\u003cp\u003e885 weekly downloads\u003c/p\u003e\n\n\u003ch1 id=\"vulnerability\"\u003eVulnerability\u003c/h1\u003e\n\n\u003ch2 id=\"vulnerability-description\"\u003eVulnerability Description\u003c/h2\u003e\n\n\u003cp\u003eDue to improper sanitization in \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fzenn-dev%2Fzenn-editor%2Fblob%2Fmaster%2Fpackages%2Fzenn-cli%2Futils%2Fapi%2Farticles.ts%23L32\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ethis line\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, it\u0026#39;s possible to bypass sanitization via \u003ccode\u003e\\\u003c/code\u003e on Windows and allows the attacker to read arbitrary \u003ccode\u003e.md\u003c/code\u003e file from the victim\u0026#39;s machine.\u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003col\u003e\n\u003cli\u003eCreate test directory: \u003ccode\u003emkdir zenn-test \u0026amp;\u0026amp; zenn-test\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eInitialize npm project: \u003ccode\u003enpm init --yes\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eInstall \u003ccode\u003ezenn-cli\u003c/code\u003e: \u003ccode\u003enpm install zenn-cli\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eInitialize \u003ccode\u003ezenn-cli\u003c/code\u003e: \u003ccode\u003enpx zenn init\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eCreate an article: \u003ccode\u003enpx zenn new:article\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eStart preview server: \u003ccode\u003enpx zenn preview\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eOpen \u003ca title=\"http://localhost:8000\" href=\"/redirect?url=http%3A%2F%2Flocalhost%3A8000\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://localhost:8000\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e in your browser.\u003c/li\u003e\n\u003cli\u003eClick an article that you created in step 5.\u003c/li\u003e\n\u003cli\u003eFind the URL in the following format from the Network tab of DevTools: \u003ccode\u003ehttp://localhost:8000/_next/data/[Random String]/articles/[Slug of an article].json\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eModify the URL you found above to the following and send request: \u003ccode\u003ehttp://localhost:8000/_next/data/[Copy the random string from step 9]/articles/%5c..%5cREADME.json\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eYou\u0026#39;ll receive the content of the README.md that is in outside of \u003ccode\u003earticles\u003c/code\u003e directory.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"patch\"\u003ePatch\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight diff\"\u003e\u003ccode\u003e\u003cspan class=\"gh\"\u003ediff --git a/packages/zenn-cli/utils/api/articles.ts b/packages/zenn-cli/utils/api/articles.ts\nindex 294e7f3..06bfc7f 100644\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- a/packages/zenn-cli/utils/api/articles.ts\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/packages/zenn-cli/utils/api/articles.ts\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -29,7 +29,7 @@\u003c/span\u003e export function getArticleBySlug(\n ): Article {\n   const fullPath = path.join(\n     articlesDirectory,\n\u003cspan class=\"gd\"\u003e-    `${slug.replace(/\\//g, \u0026quot;\u0026quot;)}.md` // Prevent directory traversal\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+    `${slug.replace(/[/\\\\]/g, \u0026quot;\u0026quot;)}.md` // Prevent directory traversal\n\u003c/span\u003e   );\n   let fileRaw;\n   try {\n\u003cspan class=\"gh\"\u003ediff --git a/packages/zenn-cli/utils/api/books.ts b/packages/zenn-cli/utils/api/books.ts\nindex 25dca4c..b63ec70 100644\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- a/packages/zenn-cli/utils/api/books.ts\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/packages/zenn-cli/utils/api/books.ts\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -89,7 +89,7 @@\u003c/span\u003e function getCoverDataUrl(fullDirPath: string): string | null {\n }\n\n export function getBookBySlug(slug: string, fields?: null | string[]): Book {\n\u003cspan class=\"gd\"\u003e-  const fullDirPath = path.join(booksDirectory, slug.replace(/\\//g, \u0026quot;\u0026quot;)); // Prevent directory traversal\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+  const fullDirPath = path.join(booksDirectory, slug.replace(/[/\\\\]/g, \u0026quot;\u0026quot;)); // Prevent directory traversal\n\u003c/span\u003e   const data = getConfigYamlData(fullDirPath);\n   if (!data) return null;\n\ndiff --git a/packages/zenn-cli/utils/api/chapters.ts b/packages/zenn-cli/utils/api/chapters.ts\n\u003cspan class=\"gh\"\u003eindex 91d878f..ae97ef6 100644\n\u003c/span\u003e\u003cspan class=\"gd\"\u003e--- a/packages/zenn-cli/utils/api/chapters.ts\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+++ b/packages/zenn-cli/utils/api/chapters.ts\n\u003c/span\u003e\u003cspan class=\"p\"\u003e@@ -44,8 +44,8 @@\u003c/span\u003e export function getChapter(\n   fields?: null | string[]\n ): Chapter {\n   const fullPath = path.join(\n\u003cspan class=\"gd\"\u003e-    getBookDirPath(bookSlug.replace(/\\//g, \u0026quot;\u0026quot;)), // Prevent directory traversal\n-    `${position.replace(/\\//g, \u0026quot;\u0026quot;)}.md`\n\u003c/span\u003e\u003cspan class=\"gi\"\u003e+    getBookDirPath(bookSlug.replace(/[/\\\\]/g, \u0026quot;\u0026quot;)), // Prevent directory traversal\n+    `${position.replace(/[/\\\\]/g, \u0026quot;\u0026quot;)}.md`\n\u003c/span\u003e   );\n   let fileRaw;\n   try {\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"supporting-material-references\"\u003eSupporting Material/References:\u003c/h2\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"zenn.mp4\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/wq5KEf3sk6koqZ8xxHfgFHi7?response-content-disposition=attachment%3B%20filename%3D%22zenn.mp4%22%3B%20filename%2A%3DUTF-8%27%27zenn.mp4\u0026amp;response-content-type=video%2Fmp4\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQVBWWKZ4H%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T071849Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCmEbZvVQ%2FI1GHRJjrhZK2Y6zh4lCWK725%2FwOpNu%2BnZkAIhAIZlqGHog%2B4PZMdnvhSU5APZbycPDz1wpNXbi5uE94ueKrQDCFUQARoMMDEzNjE5Mjc0ODQ5IgxU5AAHhqo1cPAzbTcqkQOGB5pEHXl6QCBCTSHUmyd%2FF8M3rpTqzp%2BOigrWU%2BrXYHZYm%2BGDawsiXhnqeD9o8Qw0b%2Fr0efVbRmhj5baoPrxgSiY%2B9zsreR3qClZZKnS0%2Brs8OqiMGd3clBbyfOxw2fa2vgQglV4dLF6EXSiGfxOms8eWdw%2F8mPtc81dMxDIlxTs50KUnd6aUjgG5BJs2k%2FL0rOKXYBS%2FdVqIQdN8JcCKMvqDv0u7pvSGEecQXa7pGdf07ufO02E64eU0OnaTeNyoq7WlZzT%2FGyvHjVtIvbXdPW15pwZm2Q4u8%2FW7ksSv4%2BxsESWLLCop0OeGUhtIppCDQlaMPC9JTj0HYKbMEGmZagmLfgHX4DKRg75%2FLNQViGcE%2FRCCaMxd6wrsv0dlz4dekjWvp4mXzLFkuKBM6c%2F%2BAemkmkgOJKnp%2FJUV1zJTe%2BO14GyIigsvxJqvrnKvkmsUrYwar1bX%2Be7UkqGzVbMAlsbRDNIOok7bVRXerhpXnbqFQsLWlqe%2BNfa4gSSfmgu4iIjCRRMdTWsvy2NQHfTsGjDAzar%2FBTrqAcniMm3eG7%2BxDZb9XVqMyQiSNyiuBD8pwO78bO8T3Uu8vSI3S05C6UCutmNkOnjR9D2NZaOgbFO4YujbW%2FY0mhhdjSppvg%2Bzdgu0AfZOou0DDwqm4vwEc0ekiNYUD6KHvD5tZwOaalihV5dSfbzoDyvfsJI6x7RYpBZmwPcshKw3Csz0uZew1JqrbUJVmc9v6q0aXols8bxyDKKPfp6siyzKhHELgTS3XGskds%2BWx5FaWemc%2Bo8QqyIuoOtWjmUwF39ydFOfg%2FyeKdwBxELGLKCSN8MyV6ov7IBrib4UiM%2F6l36ymDoHIX8ohg%3D%3D\u0026amp;X-Amz-Signature=0de7818cf5d3dbb120faa746d345c91c8eb20c9c6d6f3bc4afd632e30e10433e\" data-attachment-type=\"video/mp4\"\u003e\u003cvideo controls=\"controls\" src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/wq5KEf3sk6koqZ8xxHfgFHi7?response-content-disposition=attachment%3B%20filename%3D%22zenn.mp4%22%3B%20filename%2A%3DUTF-8%27%27zenn.mp4\u0026amp;response-content-type=video%2Fmp4\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQVBWWKZ4H%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T071849Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCmEbZvVQ%2FI1GHRJjrhZK2Y6zh4lCWK725%2FwOpNu%2BnZkAIhAIZlqGHog%2B4PZMdnvhSU5APZbycPDz1wpNXbi5uE94ueKrQDCFUQARoMMDEzNjE5Mjc0ODQ5IgxU5AAHhqo1cPAzbTcqkQOGB5pEHXl6QCBCTSHUmyd%2FF8M3rpTqzp%2BOigrWU%2BrXYHZYm%2BGDawsiXhnqeD9o8Qw0b%2Fr0efVbRmhj5baoPrxgSiY%2B9zsreR3qClZZKnS0%2Brs8OqiMGd3clBbyfOxw2fa2vgQglV4dLF6EXSiGfxOms8eWdw%2F8mPtc81dMxDIlxTs50KUnd6aUjgG5BJs2k%2FL0rOKXYBS%2FdVqIQdN8JcCKMvqDv0u7pvSGEecQXa7pGdf07ufO02E64eU0OnaTeNyoq7WlZzT%2FGyvHjVtIvbXdPW15pwZm2Q4u8%2FW7ksSv4%2BxsESWLLCop0OeGUhtIppCDQlaMPC9JTj0HYKbMEGmZagmLfgHX4DKRg75%2FLNQViGcE%2FRCCaMxd6wrsv0dlz4dekjWvp4mXzLFkuKBM6c%2F%2BAemkmkgOJKnp%2FJUV1zJTe%2BO14GyIigsvxJqvrnKvkmsUrYwar1bX%2Be7UkqGzVbMAlsbRDNIOok7bVRXerhpXnbqFQsLWlqe%2BNfa4gSSfmgu4iIjCRRMdTWsvy2NQHfTsGjDAzar%2FBTrqAcniMm3eG7%2BxDZb9XVqMyQiSNyiuBD8pwO78bO8T3Uu8vSI3S05C6UCutmNkOnjR9D2NZaOgbFO4YujbW%2FY0mhhdjSppvg%2Bzdgu0AfZOou0DDwqm4vwEc0ekiNYUD6KHvD5tZwOaalihV5dSfbzoDyvfsJI6x7RYpBZmwPcshKw3Csz0uZew1JqrbUJVmc9v6q0aXols8bxyDKKPfp6siyzKhHELgTS3XGskds%2BWx5FaWemc%2Bo8QqyIuoOtWjmUwF39ydFOfg%2FyeKdwBxELGLKCSN8MyV6ov7IBrib4UiM%2F6l36ymDoHIX8ohg%3D%3D\u0026amp;X-Amz-Signature=0de7818cf5d3dbb120faa746d345c91c8eb20c9c6d6f3bc4afd632e30e10433e\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/video\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"wrap-up\"\u003eWrap up\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003eI contacted the maintainer to let them know: N \u003c/li\u003e\n\u003cli\u003eI opened an issue in the related repository: N\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eIt\u0026#39;s possible to read arbitrary \u003ccode\u003e.md\u003c/code\u003e files from the victim\u0026#39;s machine while the victim is running \u003ccode\u003ezenn-cli\u003c/code\u003e\u0026#39;s preview server.\u003c/p\u003e\n","weakness":{"id":19,"name":"Path Traversal"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":1007366,"file_name":"fix.patch","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/cJokkD3Ve18W113GEMzgoPyv?response-content-disposition=attachment%3B%20filename%3D%22fix.patch%22%3B%20filename%2A%3DUTF-8%27%27fix.patch\u0026response-content-type=text%2Fx-patch\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQVBWWKZ4H%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T071849Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCmEbZvVQ%2FI1GHRJjrhZK2Y6zh4lCWK725%2FwOpNu%2BnZkAIhAIZlqGHog%2B4PZMdnvhSU5APZbycPDz1wpNXbi5uE94ueKrQDCFUQARoMMDEzNjE5Mjc0ODQ5IgxU5AAHhqo1cPAzbTcqkQOGB5pEHXl6QCBCTSHUmyd%2FF8M3rpTqzp%2BOigrWU%2BrXYHZYm%2BGDawsiXhnqeD9o8Qw0b%2Fr0efVbRmhj5baoPrxgSiY%2B9zsreR3qClZZKnS0%2Brs8OqiMGd3clBbyfOxw2fa2vgQglV4dLF6EXSiGfxOms8eWdw%2F8mPtc81dMxDIlxTs50KUnd6aUjgG5BJs2k%2FL0rOKXYBS%2FdVqIQdN8JcCKMvqDv0u7pvSGEecQXa7pGdf07ufO02E64eU0OnaTeNyoq7WlZzT%2FGyvHjVtIvbXdPW15pwZm2Q4u8%2FW7ksSv4%2BxsESWLLCop0OeGUhtIppCDQlaMPC9JTj0HYKbMEGmZagmLfgHX4DKRg75%2FLNQViGcE%2FRCCaMxd6wrsv0dlz4dekjWvp4mXzLFkuKBM6c%2F%2BAemkmkgOJKnp%2FJUV1zJTe%2BO14GyIigsvxJqvrnKvkmsUrYwar1bX%2Be7UkqGzVbMAlsbRDNIOok7bVRXerhpXnbqFQsLWlqe%2BNfa4gSSfmgu4iIjCRRMdTWsvy2NQHfTsGjDAzar%2FBTrqAcniMm3eG7%2BxDZb9XVqMyQiSNyiuBD8pwO78bO8T3Uu8vSI3S05C6UCutmNkOnjR9D2NZaOgbFO4YujbW%2FY0mhhdjSppvg%2Bzdgu0AfZOou0DDwqm4vwEc0ekiNYUD6KHvD5tZwOaalihV5dSfbzoDyvfsJI6x7RYpBZmwPcshKw3Csz0uZew1JqrbUJVmc9v6q0aXols8bxyDKKPfp6siyzKhHELgTS3XGskds%2BWx5FaWemc%2Bo8QqyIuoOtWjmUwF39ydFOfg%2FyeKdwBxELGLKCSN8MyV6ov7IBrib4UiM%2F6l36ymDoHIX8ohg%3D%3D\u0026X-Amz-Signature=0765dbf62ee485327b7bdccbf010dc98b87aa94a886d949337502a92406f89bc","file_size":1787,"type":"text/x-patch"},{"id":1007381,"file_name":"zenn.mp4","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/wq5KEf3sk6koqZ8xxHfgFHi7?response-content-disposition=attachment%3B%20filename%3D%22zenn.mp4%22%3B%20filename%2A%3DUTF-8%27%27zenn.mp4\u0026response-content-type=video%2Fmp4\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQVBWWKZ4H%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T071849Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCmEbZvVQ%2FI1GHRJjrhZK2Y6zh4lCWK725%2FwOpNu%2BnZkAIhAIZlqGHog%2B4PZMdnvhSU5APZbycPDz1wpNXbi5uE94ueKrQDCFUQARoMMDEzNjE5Mjc0ODQ5IgxU5AAHhqo1cPAzbTcqkQOGB5pEHXl6QCBCTSHUmyd%2FF8M3rpTqzp%2BOigrWU%2BrXYHZYm%2BGDawsiXhnqeD9o8Qw0b%2Fr0efVbRmhj5baoPrxgSiY%2B9zsreR3qClZZKnS0%2Brs8OqiMGd3clBbyfOxw2fa2vgQglV4dLF6EXSiGfxOms8eWdw%2F8mPtc81dMxDIlxTs50KUnd6aUjgG5BJs2k%2FL0rOKXYBS%2FdVqIQdN8JcCKMvqDv0u7pvSGEecQXa7pGdf07ufO02E64eU0OnaTeNyoq7WlZzT%2FGyvHjVtIvbXdPW15pwZm2Q4u8%2FW7ksSv4%2BxsESWLLCop0OeGUhtIppCDQlaMPC9JTj0HYKbMEGmZagmLfgHX4DKRg75%2FLNQViGcE%2FRCCaMxd6wrsv0dlz4dekjWvp4mXzLFkuKBM6c%2F%2BAemkmkgOJKnp%2FJUV1zJTe%2BO14GyIigsvxJqvrnKvkmsUrYwar1bX%2Be7UkqGzVbMAlsbRDNIOok7bVRXerhpXnbqFQsLWlqe%2BNfa4gSSfmgu4iIjCRRMdTWsvy2NQHfTsGjDAzar%2FBTrqAcniMm3eG7%2BxDZb9XVqMyQiSNyiuBD8pwO78bO8T3Uu8vSI3S05C6UCutmNkOnjR9D2NZaOgbFO4YujbW%2FY0mhhdjSppvg%2Bzdgu0AfZOou0DDwqm4vwEc0ekiNYUD6KHvD5tZwOaalihV5dSfbzoDyvfsJI6x7RYpBZmwPcshKw3Csz0uZew1JqrbUJVmc9v6q0aXols8bxyDKKPfp6siyzKhHELgTS3XGskds%2BWx5FaWemc%2Bo8QqyIuoOtWjmUwF39ydFOfg%2FyeKdwBxELGLKCSN8MyV6ov7IBrib4UiM%2F6l36ymDoHIX8ohg%3D%3D\u0026X-Amz-Signature=0de7818cf5d3dbb120faa746d345c91c8eb20c9c6d6f3bc4afd632e30e10433e","file_size":12704649,"type":"video/mp4"}],"allow_singular_disclosure_at":"2020-10-29T19:33:00.577Z","allow_singular_disclosure_after":-5226348.515247177,"singular_disclosure_allowed":true,"vote_count":1,"voters":["gr4nd_m4st3r"],"severity":{"rating":"low","author_type":"User"},"structured_scope":{"databaseId":2986,"asset_type":"SOURCE_CODE","asset_identifier":"Other module","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":9363792,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Currently, I'm trying to contact the developer.","markdown_message":"\u003cp\u003eCurrently, I\u0026#39;m trying to contact the developer.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-09-29T11:10:42.671Z","updated_at":"2020-09-29T11:10:42.671Z","actor":{"username":"ryotak","cleared":false,"url":"/ryotak","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/Nb79aqy3v6SyMh8rwZZh43cu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9364034,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I have submitted a patch to the developer. I think it'll be fixed soon.","markdown_message":"\u003cp\u003eI have submitted a patch to the developer. I think it\u0026#39;ll be fixed soon.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-09-29T11:39:42.530Z","updated_at":"2020-09-29T11:39:42.530Z","actor":{"username":"ryotak","cleared":false,"url":"/ryotak","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/Nb79aqy3v6SyMh8rwZZh43cu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9364404,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Patch has been merged in [this commit](https://github.com/zenn-dev/zenn-editor/commit/eb9e67b39f93f8fbe79c5e4ce3c333936c79cff4), and version 0.1.40 released with this patch.\nI'm not sure if I should close this report, so I'll leave this report open.","markdown_message":"\u003cp\u003ePatch has been merged in \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fzenn-dev%2Fzenn-editor%2Fcommit%2Feb9e67b39f93f8fbe79c5e4ce3c333936c79cff4\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ethis commit\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, and version 0.1.40 released with this patch.\u003cbr\u003e\nI\u0026#39;m not sure if I should close this report, so I\u0026#39;ll leave this report open.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-09-29T12:26:02.464Z","updated_at":"2020-09-29T12:26:43.243Z","actor":{"username":"ryotak","cleared":false,"url":"/ryotak","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/Nb79aqy3v6SyMh8rwZZh43cu/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9368976,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2020-09-29T19:32:14.962Z","updated_at":"2020-09-29T19:32:14.962Z","actor":{"username":"danielruf","cleared":false,"url":"/danielruf","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JjaMiHpqpLG3vx6VJMAA9KbK/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"ryotak","url":"/ryotak"},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9368982,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-09-29T19:33:00.458Z","updated_at":"2020-09-29T19:33:00.458Z","first_to_agree":true,"actor":{"username":"danielruf","cleared":false,"url":"/danielruf","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JjaMiHpqpLG3vx6VJMAA9KbK/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9674688,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-10-29T19:33:06.871Z","updated_at":"2020-10-29T19:33:06.871Z","actor":{"url":"/nodejs-ecosystem","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Node.js third-party modules"}},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}