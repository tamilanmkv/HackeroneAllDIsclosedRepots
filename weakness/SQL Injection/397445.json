{"id":397445,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zOTc0NDU=","url":"https://hackerone.com/reports/397445","title":"[express-cart] Customer and admin email enumeration through MongoDB injection","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2018-08-20T20:07:16.367Z","submitted_at":"2018-08-20T20:07:16.367Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"becojo","url":"/becojo","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/098/231/63593e9c91c71360cff543bc29b1ceaabaddb3da_original.jpg/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":23949,"url":"https://hackerone.com/nodejs-ecosystem","handle":"nodejs-ecosystem","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Node.js third-party modules","twitter_handle":"","website":"https://nodejs.org/en/security/","about":"This program is used to handle vulnerabilities in the Node.js ecosystem."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2018-09-10T22:58:42.734Z","bug_reporter_agreed_on_going_public_at":"2018-09-10T22:52:08.986Z","team_member_agreed_on_going_public_at":"2018-09-10T22:58:42.488Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"I would like to report an injection in express-cart\nIt allows to enumerate the email address of the customers and the administrators.\n\n# Module\n\n**module name:** express-cart\n**version:** 1.1.7\n**npm page:** `https://www.npmjs.com/package/express-cart`\n\n## Module Description\n\nexpressCart is a fully functional shopping cart built in Node.js (Express, MongoDB) with Stripe, PayPal and Authorize.net payments.\n\n## Module Stats\n\n31 downloads in the last week\n\n# Vulnerability\n\n## Vulnerability Description\n\nThe vulnerability is caused by the lack of user input sanitization in the login handlers. In both cases, the customer login and the admin login, parameters from the JSON body are sent directly into the MongoDB query which allows to insert operators. These operators can be used to extract the value of the field blindly in the same manner of a blind SQL injection. In this case, the `$regex` operator is used to guess each character of the token from the start. \n\n## Steps To Reproduce:\n\nUse MongoDB `$regex` operator to test if each characters of the emails in the database.\n\nThe provided Python script exploits the customer login to find all the customer emails in the database. Some recursion is used to make sure all of the fields\n\nThe attached screenshot is the customer list currently in my database. The output of the script is the following:\n\n```\n$ python exploit.py \nalan.k@example.com\nalice.r@hotmail.com\nben76543@gmail.com\nbob@test.com\n```\n\n## Patch\n\nEnsure the parameters are indeed strings before doing a MongoDB request. There are multiple ways this could be achieved. Using `toString` on the parameters is good enough. \n \n```\ndb.customers.findOne({email: req.body.loginEmail}, (err, customer) =\u003e { // eslint-disable-line\n```\nbecomes\n```\ndb.customers.findOne({email: req.body.loginEmail.toString()}, (err, customer) =\u003e { // eslint-disable-line\n```\n\nWhile a user can still trigger an exception by replacing `toString` with something else than a function, it effectively mitigates the vulnerability.\n\n## Supporting Material/References:\n\n- OS: Ubuntu 16.04.3 LTS\n- Node.js version: 8.11.1 \n- For the script: Python 2.7.12 and the requests package\n\n# Wrap up\n- I contacted the maintainer to let them know: No\n- I opened an issue in the related repository: No\n\n## Impact\n\nAdministrator emails could be used for phishing attemps and spam. Customers emails could be used by an adversary to deliver spam, steal customers and more. In this GDPR era, leaking customer emails is not very desirable.","vulnerability_information_html":"\u003cp\u003eI would like to report an injection in express-cart\u003cbr\u003e\nIt allows to enumerate the email address of the customers and the administrators.\u003c/p\u003e\n\n\u003ch1 id=\"module\"\u003eModule\u003c/h1\u003e\n\n\u003cp\u003e\u003cstrong\u003emodule name:\u003c/strong\u003e express-cart\u003cbr\u003e\n\u003cstrong\u003eversion:\u003c/strong\u003e 1.1.7\u003cbr\u003e\n\u003cstrong\u003enpm page:\u003c/strong\u003e \u003ccode\u003ehttps://www.npmjs.com/package/express-cart\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2 id=\"module-description\"\u003eModule Description\u003c/h2\u003e\n\n\u003cp\u003eexpressCart is a fully functional shopping cart built in Node.js (Express, MongoDB) with Stripe, PayPal and Authorize.net payments.\u003c/p\u003e\n\n\u003ch2 id=\"module-stats\"\u003eModule Stats\u003c/h2\u003e\n\n\u003cp\u003e31 downloads in the last week\u003c/p\u003e\n\n\u003ch1 id=\"vulnerability\"\u003eVulnerability\u003c/h1\u003e\n\n\u003ch2 id=\"vulnerability-description\"\u003eVulnerability Description\u003c/h2\u003e\n\n\u003cp\u003eThe vulnerability is caused by the lack of user input sanitization in the login handlers. In both cases, the customer login and the admin login, parameters from the JSON body are sent directly into the MongoDB query which allows to insert operators. These operators can be used to extract the value of the field blindly in the same manner of a blind SQL injection. In this case, the \u003ccode\u003e$regex\u003c/code\u003e operator is used to guess each character of the token from the start. \u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003cp\u003eUse MongoDB \u003ccode\u003e$regex\u003c/code\u003e operator to test if each characters of the emails in the database.\u003c/p\u003e\n\n\u003cp\u003eThe provided Python script exploits the customer login to find all the customer emails in the database. Some recursion is used to make sure all of the fields\u003c/p\u003e\n\n\u003cp\u003eThe attached screenshot is the customer list currently in my database. The output of the script is the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$ python exploit.py \nalan.k@example.com\nalice.r@hotmail.com\nben76543@gmail.com\nbob@test.com\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"patch\"\u003ePatch\u003c/h2\u003e\n\n\u003cp\u003eEnsure the parameters are indeed strings before doing a MongoDB request. There are multiple ways this could be achieved. Using \u003ccode\u003etoString\u003c/code\u003e on the parameters is good enough. \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003edb.customers.findOne({email: req.body.loginEmail}, (err, customer) =\u0026gt; { // eslint-disable-line\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ebecomes\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003edb.customers.findOne({email: req.body.loginEmail.toString()}, (err, customer) =\u0026gt; { // eslint-disable-line\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhile a user can still trigger an exception by replacing \u003ccode\u003etoString\u003c/code\u003e with something else than a function, it effectively mitigates the vulnerability.\u003c/p\u003e\n\n\u003ch2 id=\"supporting-material-references\"\u003eSupporting Material/References:\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eOS: Ubuntu 16.04.3 LTS\u003c/li\u003e\n\u003cli\u003eNode.js version: 8.11.1 \u003c/li\u003e\n\u003cli\u003eFor the script: Python 2.7.12 and the requests package\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1 id=\"wrap-up\"\u003eWrap up\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003eI contacted the maintainer to let them know: No\u003c/li\u003e\n\u003cli\u003eI opened an issue in the related repository: No\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eAdministrator emails could be used for phishing attemps and spam. Customers emails could be used by an adversary to deliver spam, steal customers and more. In this GDPR era, leaking customer emails is not very desirable.\u003c/p\u003e\n","weakness":{"id":67,"name":"SQL Injection"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":335811,"file_name":"expressCart-admin-emails.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/335/811/8ae9db0edc5d52b311969fc443da7d6070b0fbc1/expressCart-admin-emails.png?response-content-disposition=attachment%3B%20filename%3D%22expressCart-admin-emails.png%22%3B%20filename%2A%3DUTF-8%27%27expressCart-admin-emails.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQT27VLVF5%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T055052Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDyDghanG6vysQhpIAbM6%2FNloTNBCfelRP1BGB1eeXDqQIgbh0u2InfYPRbM%2F0t24amgCOkVvoWkVHPo82TR%2BcSzPAqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDG%2B9r1w6aCtbN7N%2FgSqRA8D1stzGXUi9998X9PqljCsxgqGb%2Fp5uwkl6HJ0ecyYUUOvKKK5bmjBmyhHU2siTJ5oMPHjZxACmC8QQR3zoStgvndU2Zk5FbI60XrAqVuUH%2BAK8pT26qvrZcq89M6eB7hRHvO%2BlRluLVtVVrfnC9UY0ATKZRmiYQyw9njaWy8e1cjtpV8uOzRbjAhSciTaQQ4Rof7K88HsyWXiwgfBdP3a0%2F0Eg3oYuiHO02sK0kJaBKVYS07wec5XsHKb5ikjLS61g4AVfdD4E0s3BTqyyWJeUCuyZ2YF95UI2CgkxcN5uOwwloEhHGonUYBlgrAIqXt%2FcecQNzktOM4Kjb30muwbzt0arTqS1XHySraj31WYHm2Cjy8AzyWIgNzu3Fq1xIENb3SovWG27JzCLGUyEU3ScE8nRNwiiydbGzKllImVZY%2BlC%2Bix1yqgNQOGSyxfVhY5J1d45Od%2BL4mUjygcLy%2FfzSKLf2qk3Prr%2BvcoxR9uUbkbtYRAEtizE%2BcIlRuTm3EFnBIvoMHCuplZLf4vZOpMrMLy9qv8FOusBWsgqdyTGkJS5%2BgtM3tHipB468LJZahmRjNSAud9TlniHiRJFpE4feQDaRgu4UD5waPGdkb1Mb3i2BGePA4gRyDu2hwL2UgW1yGpknpSCsy8uyMOhlVuIUyq7t0qBeid6h%2BvKgio2%2B05MKsls9XtVWxBqwW4LqYzc6KBQa0dOAdmkMORLktM2DWUfeoN%2FP12TUiKzRe%2BPGjaA3xBRgCZ2zNYmbNzYsoqOBfPEmbGygz2YZR0LAXBWrVpPc%2FJcYMLT6Jiu%2B2LCo6XyNRnu8YlFqwJ3EhjYkRvFzarUXssQ7cQHuLkop%2BkUTr8Vig%3D%3D\u0026X-Amz-Signature=904fdb5da7737c853375152bcd5d4c5cbc05d4f8f5d1be94be9c276eda9b9c0a","file_size":63267,"type":"image/png"},{"id":335814,"file_name":"exploit.py","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/335/814/dfca1bce80e984a67040b28fb27487f43432e760/exploit.py?response-content-disposition=attachment%3B%20filename%3D%22exploit.py%22%3B%20filename%2A%3DUTF-8%27%27exploit.py\u0026response-content-type=text%2Fx-python\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQT27VLVF5%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T055052Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDyDghanG6vysQhpIAbM6%2FNloTNBCfelRP1BGB1eeXDqQIgbh0u2InfYPRbM%2F0t24amgCOkVvoWkVHPo82TR%2BcSzPAqtAMIVBABGgwwMTM2MTkyNzQ4NDkiDG%2B9r1w6aCtbN7N%2FgSqRA8D1stzGXUi9998X9PqljCsxgqGb%2Fp5uwkl6HJ0ecyYUUOvKKK5bmjBmyhHU2siTJ5oMPHjZxACmC8QQR3zoStgvndU2Zk5FbI60XrAqVuUH%2BAK8pT26qvrZcq89M6eB7hRHvO%2BlRluLVtVVrfnC9UY0ATKZRmiYQyw9njaWy8e1cjtpV8uOzRbjAhSciTaQQ4Rof7K88HsyWXiwgfBdP3a0%2F0Eg3oYuiHO02sK0kJaBKVYS07wec5XsHKb5ikjLS61g4AVfdD4E0s3BTqyyWJeUCuyZ2YF95UI2CgkxcN5uOwwloEhHGonUYBlgrAIqXt%2FcecQNzktOM4Kjb30muwbzt0arTqS1XHySraj31WYHm2Cjy8AzyWIgNzu3Fq1xIENb3SovWG27JzCLGUyEU3ScE8nRNwiiydbGzKllImVZY%2BlC%2Bix1yqgNQOGSyxfVhY5J1d45Od%2BL4mUjygcLy%2FfzSKLf2qk3Prr%2BvcoxR9uUbkbtYRAEtizE%2BcIlRuTm3EFnBIvoMHCuplZLf4vZOpMrMLy9qv8FOusBWsgqdyTGkJS5%2BgtM3tHipB468LJZahmRjNSAud9TlniHiRJFpE4feQDaRgu4UD5waPGdkb1Mb3i2BGePA4gRyDu2hwL2UgW1yGpknpSCsy8uyMOhlVuIUyq7t0qBeid6h%2BvKgio2%2B05MKsls9XtVWxBqwW4LqYzc6KBQa0dOAdmkMORLktM2DWUfeoN%2FP12TUiKzRe%2BPGjaA3xBRgCZ2zNYmbNzYsoqOBfPEmbGygz2YZR0LAXBWrVpPc%2FJcYMLT6Jiu%2B2LCo6XyNRnu8YlFqwJ3EhjYkRvFzarUXssQ7cQHuLkop%2BkUTr8Vig%3D%3D\u0026X-Amz-Signature=765ed27310c0c5b02aa22bb7b2329d0d2f12c4a1698fa4419a61b5d31d6cc1b0","file_size":572,"type":"text/x-python"}],"allow_singular_disclosure_at":"2018-10-10T22:52:09.183Z","allow_singular_disclosure_after":-70009122.98023412,"singular_disclosure_allowed":true,"vote_count":6,"voters":["bl4de","saddeann","eveeez","siraneephoung629","serosh","mbilaljs"],"severity":{"rating":"high","score":8.2,"author_type":"Team","metrics":{"attack_vector":"network","attack_complexity":"high","privileges_required":"low","user_interaction":"none","scope":"changed","confidentiality":"high","integrity":"high","availability":"none"}},"structured_scope":{"databaseId":10291,"asset_type":"SOURCE_CODE","asset_identifier":"express-cart","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":3222458,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello,\nThanks for reporting this to us. Someone will quickly look at this report and triage it.","markdown_message":"\u003cp\u003eHello,\u003cbr\u003e\nThanks for reporting this to us. Someone will quickly look at this report and triage it.\u003c/p\u003e\n","automated_response":true,"created_at":"2018-08-20T20:25:01.325Z","updated_at":"2018-08-20T20:25:01.325Z","actor":{"username":"vdeturckheim_dev","cleared":false,"url":"/vdeturckheim_dev","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":3229271,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2018-08-22T08:21:55.838Z","updated_at":"2018-08-22T08:21:55.838Z","actor":{"username":"dagonza","cleared":false,"url":"/dagonza","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3229274,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for reporting it! I will have a look and come back to you.","markdown_message":"\u003cp\u003eThanks for reporting it! I will have a look and come back to you.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-08-22T08:22:32.949Z","updated_at":"2018-08-22T08:23:06.618Z","actor":{"username":"dagonza","cleared":false,"url":"/dagonza","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3269649,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@mrvautin I have invited you to this report as it is quite related to your work on #343726. I can confirm the vulnerability (after few tries as I am not too familiar with Mongo). Thanks","markdown_message":"\u003cp\u003e\u003ca href=\"/mrvautin\"\u003e@mrvautin\u003c/a\u003e I have invited you to this report as it is quite related to your work on \u003ca href=\"/reports/343726\"\u003e#343726\u003c/a\u003e. I can confirm the vulnerability (after few tries as I am not too familiar with Mongo). Thanks\u003c/p\u003e\n","automated_response":false,"created_at":"2018-08-30T13:40:32.668Z","updated_at":"2018-08-30T13:40:32.668Z","actor":{"username":"dagonza","cleared":false,"url":"/dagonza","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3269786,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":"","markdown_message":"","automated_response":false,"created_at":"2018-08-30T14:12:15.608Z","updated_at":"2018-08-30T14:12:15.608Z","actor":{"username":"mrvautin","cleared":false,"url":"/mrvautin","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3272812,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for reporting. This vuln has been fixed in the latest version. ","markdown_message":"\u003cp\u003eThanks for reporting. This vuln has been fixed in the latest version. \u003c/p\u003e\n","automated_response":false,"created_at":"2018-08-31T05:13:40.990Z","updated_at":"2018-08-31T05:13:40.990Z","actor":{"username":"mrvautin","cleared":false,"url":"/mrvautin","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3272814,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"https://github.com/mrvautin/expressCart/commit/b2234ef4f28225bb42f74bf6cf33759048aba518","markdown_message":"\u003cp\u003e\u003ca title=\"https://github.com/mrvautin/expressCart/commit/b2234ef4f28225bb42f74bf6cf33759048aba518\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fmrvautin%2FexpressCart%2Fcommit%2Fb2234ef4f28225bb42f74bf6cf33759048aba518\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/mrvautin/expressCart/commit/b2234ef4f28225bb42f74bf6cf33759048aba518\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2018-08-31T05:14:16.843Z","updated_at":"2018-08-31T05:14:16.843Z","actor":{"username":"mrvautin","cleared":false,"url":"/mrvautin","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3275539,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The fix works 👍","markdown_message":"\u003cp\u003eThe fix works 👍\u003c/p\u003e\n","automated_response":false,"created_at":"2018-08-31T15:47:30.177Z","updated_at":"2018-08-31T15:47:30.177Z","actor":{"username":"becojo","cleared":false,"url":"/becojo","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/098/231/63593e9c91c71360cff543bc29b1ceaabaddb3da_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3318648,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"I can confirm it. Thanks everyone for the quick response on this one. I will close the report.","markdown_message":"\u003cp\u003eI can confirm it. Thanks everyone for the quick response on this one. I will close the report.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-09-10T22:49:48.075Z","updated_at":"2018-09-10T22:49:48.075Z","actor":{"username":"dagonza","cleared":false,"url":"/dagonza","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3318650,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2018-09-10T22:50:04.301Z","updated_at":"2018-09-10T22:50:04.301Z","actor":{"username":"dagonza","cleared":false,"url":"/dagonza","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"becojo","url":"/becojo"},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3318656,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2018-09-10T22:52:09.095Z","updated_at":"2018-09-10T22:52:09.095Z","first_to_agree":true,"actor":{"username":"becojo","cleared":false,"url":"/becojo","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/098/231/63593e9c91c71360cff543bc29b1ceaabaddb3da_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3318668,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2018-09-10T22:58:42.611Z","updated_at":"2018-09-10T22:58:42.611Z","actor":{"username":"dagonza","cleared":false,"url":"/dagonza","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3318669,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2018-09-10T22:58:42.772Z","updated_at":"2018-09-10T22:58:42.772Z","actor":{"username":"dagonza","cleared":false,"url":"/dagonza","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":3318683,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2018-09-10T23:00:24.598Z","updated_at":"2018-09-10T23:00:24.598Z","additional_data":{"old_severity":"Medium","new_severity":"High (8.2)","old_severity_id":198976,"new_severity_id":208284},"actor":{"username":"dagonza","cleared":false,"url":"/dagonza","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}