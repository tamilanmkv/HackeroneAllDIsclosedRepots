{"id":198690,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xOTg2OTA=","url":"https://hackerone.com/reports/198690","title":"SSRF in alerts.newrelic.com exposes entire internal network","state":"Closed","substate":"resolved","severity_rating":"critical","readable_substate":"Resolved","created_at":"2017-01-16T09:56:00.229Z","submitted_at":"2017-01-16T09:56:00.229Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"albinowax","url":"/albinowax","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/056/414/9d843d496965d8c0e710de3867a41720c1577dc4_original.png/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c"},"is_me?":false,"cleared":true,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":17011,"url":"https://hackerone.com/newrelic","handle":"newrelic","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/017/011/eba06abb23bd6c9c7d719ddafb9fa83bd2d66aaa_original./43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/000/017/011/eba06abb23bd6c9c7d719ddafb9fa83bd2d66aaa_original./fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"New Relic","twitter_handle":"newrelic","website":"https://newrelic.com","about":"New Relic's Coordinated Disclosure Program"}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2017-08-22T17:14:40.220Z","bug_reporter_agreed_on_going_public_at":"2017-07-29T13:53:27.317Z","team_member_agreed_on_going_public_at":"2017-08-22T17:14:40.150Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"By sending a malformed HTTP request to alerts.newrelic.com, it's possible to trick that server into routing the request to an arbitrary location. This can be exploited by an internet based attacker to access internal services - doing a quick scan of █████████ I was able to access █████ etc. The attached screenshot shows some of the stuff I found.\n\nI found this issue using an experimental Burp Suite extension but you can replicate it using openssl. The following request will fetch ███\necho -e 'GET @█████/ HTTP/1.1\\r\\nHost: alerts.newrelic.com\\r\\n\\r\\n' | openssl s_client -ign_eof -connect alerts.newrelic.com:443\n\nThe request forwarded to ██████ will look like:\n```\nGET / HTTP/1.1\nX-Forwarded-Proto: https\nX-Request-Start: t=1484560126710000\nService-Gateway-Config: alerts.newrelic.com\nService-Gateway-Entitlements-Error: account id not found\nService-Gateway-Would-Have-Rejected: [\"account access\",\"login\"]\nX-Forwarded-Host: alerts.newrelic.com\nX-Forwarded-For: █████\nHost: alerts.█████\nX-NewRelic-ID: VRUEUFVWCQI=\nX-NewRelic-Transaction: PxQBVgBUCQIFU1daUVMBVgEFFB8EBw8RVU4aVA9eAwMCUA5XCQdRVFRTA0NKQQoCCVNTUg9TFTs=\nconnection: close\n```\n\nI believe the root cause is a poorly written rewrite rule translating @████/foo into http://alerts.██████████@█████████/foo\n\nI've reported this issue as 'critical' because I'm fairly confident I could compromise quite a few of the internal services I found - some of them appear to lack authentication entirely. I haven't gone beyond fetching the homepages of these applications, but if you'd like further evidence that this is a serious issue I'd be very happy to help.","weakness":{"id":68,"name":"Server-Side Request Forgery (SSRF)"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2017-08-28T13:53:27.378Z","allow_singular_disclosure_after":-130032410.61687027,"singular_disclosure_allowed":true,"vote_count":37,"voters":["flamezzz","tomnomnom","sp1d3rs","cdl","smiegles","albinowax","mashoud1122","shubs","tk0","bogdantcaciuc","and 27 more..."],"severity":{"rating":"critical","author_type":"User"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":1423640,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi James,\n\nthanks for your report and especially for reaching out via Twitter to make sure we saw it quickly, it's a company holiday for Martin Luther King Day here in Portland so that's much appreciated!\n\nWe agree that this is a very serious issue. We'll begin the process of getting it filed and fixed immediately.\n\nThanks again for the report and your help keeping New Relic secure, we're big fans of your work including the backslash powered scanning research and your work on Burp!\n\ncheers,\nIan\n","automated_response":false,"created_at":"2017-01-16T21:18:42.714Z","updated_at":"2017-01-16T21:18:42.714Z","actor":{"username":"imelven","cleared":false,"url":"/imelven","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/036/153/809e507ea6cd7c5c120920d1d4ce70336974d422_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1423659,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","automated_response":false,"created_at":"2017-01-16T21:29:45.399Z","updated_at":"2017-01-16T21:29:45.399Z","actor":{"username":"imelven","cleared":false,"url":"/imelven","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/036/153/809e507ea6cd7c5c120920d1d4ce70336974d422_original.jpeg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1426063,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Hi James,\n\nThank you for reporting this finding! We have identified the root cause and have pushed a patch to production. We believe this issue to be resolved.\n\nWe are also planning to submit an ticket to Apache to consider handling this case within the UriBuilder class, where forcing the path to contain a leading slash could help prevent this issue. Would you like us to credit you with the vulnerability discovery in the ticket?\n\nAs a small token of our thanks, following the link below will let you the size and shipping address for a New Relic t-shirt. Also, look out for an invite for a private HackerOne program that will be launching shortly.\n\nhttp://get.printfection.com/ztwfh/4974674756/syncxbknng\n\nCheers,\n\\- Alex\n","automated_response":false,"created_at":"2017-01-17T22:29:57.962Z","updated_at":"2017-01-17T22:29:57.962Z","actor":{"username":"ahamlin","cleared":false,"url":"/ahamlin","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/037/071/b10c1e5872fac616ba0f3b67bb1e6e06ba70fe6c_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"albinowax","url":"/albinowax"},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1426137,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi Alex, \n\nCool, it looks fixed from here. Longer term you might want to look into using a DMZ as a defence in depth solution if you aren't already. \n\nI'm definitely up for receiving credit for this find, though I didn't invent the technique myself - I got it from over at https://www.contextis.com//resources/blog/server-technologies-reverse-proxy-bypass/\n\nIf you don't mind, could you share the vulnerable rewrite rule (with any sensitive parts redacted)? It'll come in useful when explaining the root cause of this vulnerability. \n\nThanks for the tshirt!\n\nJames","automated_response":false,"created_at":"2017-01-17T22:55:05.094Z","updated_at":"2017-01-17T22:55:05.094Z","actor":{"username":"albinowax","cleared":true,"url":"/albinowax","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/056/414/9d843d496965d8c0e710de3867a41720c1577dc4_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1426388,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for the recommendation – we're always looking to add more layers of defense.\n\nHere is the ticket filed with Apache: https://issues.apache.org/jira/browse/HTTPCLIENT-1803\n\n... and here's a slightly redacted version of the Java code responsible for the vulnerability:\n\n         Url backendURL = ...\n         String uri = ctx.getRequest().getRawUri();\n\n         # this line added to patch vuln\n         uri = uri.startsWith(\"/\") ? uri : \"/\" + uri;\n \n         URI proxyUri;\n         try {\n             proxyUri = new URIBuilder(uri)\n                     .setHost(backendURL.getHost())\n                     .setPort(backendURL.getPort())\n                     .setScheme(backendURL.getScheme())\n                     .build();\n         } catch (URISyntaxException e) {\n             Util.sendError(ctx, 400, INVALID_REQUEST_URL);\n             return;\n         }\n\nCheers,\n\\- Alex","automated_response":false,"created_at":"2017-01-18T00:35:50.619Z","updated_at":"2017-01-18T00:35:50.619Z","actor":{"username":"ahamlin","cleared":false,"url":"/ahamlin","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/037/071/b10c1e5872fac616ba0f3b67bb1e6e06ba70fe6c_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1876015,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Many thanks for sharing the code, I've referenced it in a whitepaper over at http://blog.portswigger.net/2017/07/cracking-lens-targeting-https-hidden.html#expectations\n\nCould we publicly disclose this issue?","automated_response":false,"created_at":"2017-07-29T13:53:27.338Z","updated_at":"2017-07-29T13:53:27.338Z","first_to_agree":true,"actor":{"username":"albinowax","cleared":true,"url":"/albinowax","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/056/414/9d843d496965d8c0e710de3867a41720c1577dc4_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":1946765,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2017-08-22T17:14:40.181Z","updated_at":"2017-08-22T17:14:40.181Z","actor":{"username":"dmcmahon","cleared":false,"url":"/dmcmahon","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":1946766,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2017-08-22T17:14:40.241Z","updated_at":"2017-08-22T17:14:40.241Z","actor":{"username":"dmcmahon","cleared":false,"url":"/dmcmahon","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2694295,"is_internal":false,"editable":false,"type":"Activities::NotEligibleForBounty","message":"","automated_response":false,"created_at":"2018-05-03T03:35:34.597Z","updated_at":"2018-05-03T03:35:34.597Z","actor":{"url":"/newrelic","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/017/011/eba06abb23bd6c9c7d719ddafb9fa83bd2d66aaa_original./fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"New Relic"}},"genius_execution_id":null,"team_handle":"newrelic","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}