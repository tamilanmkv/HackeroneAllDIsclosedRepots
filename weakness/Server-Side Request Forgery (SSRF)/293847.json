{"id":293847,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yOTM4NDc=","url":"https://hackerone.com/reports/293847","title":"SSRF in /appsuite/api/autoconfig ","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2017-11-29T23:08:24.908Z","submitted_at":"2017-11-29T23:08:24.908Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"logan5","url":"/logan5","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/110/421/4eacc0e36a20a036380e88612bb8755d1dddda08_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":8906,"url":"https://hackerone.com/open-xchange","handle":"open-xchange","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Open-Xchange","twitter_handle":"openxchange","website":"https://www.open-xchange.com/","about":"Messaging, collaboration and office productivity software for service providers"}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2019-07-05T09:17:31.843Z","bug_reporter_agreed_on_going_public_at":"2019-07-05T09:17:31.764Z","team_member_agreed_on_going_public_at":"2019-07-04T11:16:40.279Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"FYI:  This was conducted on a local install of App Suite and not the sandbox.  App Suite version was: 7.8.4 Rev14\n\nHello,\n\nThere is a possible SSRF vulnerability in the following App Suite API endpoint that will primarily allow blind port scanning of the App Suite server and any internal servers firewalled off from the external network:\n\n**http://\u003cserveraddress\u003e/appsuite/api/autoconfig?action=get**\n\n\nPre-requisites for successful exploitation of vulnerability:\n\n**-Attacker server**\n**-Attacker held domain name**\n**-Valid session from login or anonymous link**\n\n##Summary\n\na) The above endpoint will send a POST request with the following parameters:\n\n**action=get\u0026email=\u003cemail address\u003e\u0026password=\u003cpassword\u003e\u0026session=\u003csession key\u003e**\n\nb) The email address in the POC uses **test@testserver64.com**.  Once the POST request is complete, a DNS lookup will be conducted for the following addresses:\n\n**autoconfig.testserver64.com**\n**imap.testserver64.com**\n**etc.**\n\nThe reasons for this request is to obtain a configuration XML file for setting up an email account in App Suite.  The lookup path is similar to the following:\n\n**http://autoconfig.testserver64.com/mail/config-v1.1.xml**\n\nConfig file reference: \n\nhttps://developer.mozilla.org/en-US/docs/Mozilla/Thunderbird/Autoconfiguration\n\n\nIf successful, a JSON response is received with server details from the config-v1.1.xml file.  If the request fails, a blank JSON response is received\n\nc) For this vulnerability to work, an attacker would require their own server with a domain name the same as what is entered for the email address.  In this case it is **testserver64.com** which I have added into the **/etc/hosts** file of the App Suite server to simulate a DNS lookup.\n\nd) From there, they would need to run a webserver that will re-direct all GET requests from the App Suite server for the configuration XML file back to the localhost address of App Suite on a rotating port number. e.g. **http://127.0.0.1:1, http://127.0.0.1:2, http://127.0.0.1:n**\n\ne)  After the App Suite server scans its own localhost address on a particular port, an empty response is returned to the user.   As this is a blind response and no error banners are returned, analysis of the HTTP request response times is required to determine what ports are responding.  This would allow fingerprinting of additional services that might be running.\n\n\n##POC \n\n{F243173}\n\nFiles attached:\n\n**Attacker_server.py (Python HTTP server)**\n**Request.py (Initiate connection to vulnerable endpoint)**\n**Script_output.txt (Results from port scan)**\n\na)\tAttacker server running on **192.168.0.6** will be running a Python webserver on port 80 **(attacker_server.py)**.  This will forward any GET requests back to the localhost of the sender on a port that rotates on every received request.  Below are some example access logs when a 301 redirect occurs:\n```\n192.168.0.16 - - [29/Nov/2017 22:22:48] \"GET /mail/config-v1.1.xml?emailaddress=bla%40testserver64.com HTTP/1.1\" 301 -\n\n192.168.0.16 - - [29/Nov/2017 22:22:59] \"GET /mail/config-v1.1.xml?emailaddress=bla%40testserver64.com HTTP/1.1\" 301 â€“\n```\n\nb) **request.py** will connect to the App Suite server on **192.168.0.16** and receive a session key and secret cookie.  It will then repeatedly send POST requests (default 20) to the vulnerable endpoint and log the response time.\n\nb)\tServer **192.168.0.10** will accept requests on port 100 only from **192.168.0.16**, this server will be used to demonstrate connecting to an internal server not accessible directly to the attacker.  Note.  Modification of the attacker_server.py script is required to probe 192.168.0.10 instead of the App Suite server.\n\nc) Netcat listeners are running on **ports 5,4** and **15** on the App Suite server and the additional server at **192.168.0.10, port 100**\n\n\n##Results\n\nThe **script_output.txt** file contains the following: the left column is the port number and the right is the response time, sorted longest time first.  As can be seen, **port 5, 14 and 15** have the longest HTTP response time before timeout:  \n```\n5: [11.061215]\n14: [10.926074]\n15: [10.914135]\n2: [1.068856]\n13: [1.050274]\n19: [1.044996]\n```\n(Extract from attached script_output.txt)\n\nNote.  Port 100 on 192.168.0.10 was not probed in this run and is missing from the output file.\n\nResponse times are however a difficult indicator of whether a port is open or not.  Some ports will not accept an HTTP connection and will close with an error instantly, so it can be difficult determining listening ports from closed ports.\n\n\n##Additional testing\n\n-From the below output, you can observe a successful connection through the firewall to a netcat listener on 192.168.0.10\n\n```\nGET / HTTP/1.1\nHost: 192.168.0.10:100\nConnection: Keep-Alive\nUser-Agent: Open-Xchange Auto-Config Client\n```\n\n-You can also see from the log below, a successful connection to the internal URL **/webservices** which is supposed to be restricted to 127.0.0.1 local access only.\n```\n192.168.0.6 - - [29/Nov/2017:20:19:19 +0000] \"POST /appsuite/api/autoconfig HTTP/1.1\" 200 11 \"-\" \"python-requests/2.18.1\"\n\n127.0.0.1 - - [29/Nov/2017:20:19:20 +0000] \"GET /webservices HTTP/1.1\" 200 6804 \"-\" \"Open-Xchange Auto-Config Client\"\n```\n\n## Impact\n\nOverall, this vulnerability is limited to reconnaissance of listening ports on the App Suite Server or other internal servers due to the blind response from the endpoint.  Theoretically, you could also alter the script to rotate through IP addresses and scan an internal subnet, although you may encounter the same issues with response times as demonstrated before.  I was unable to extract any data from this SSRF, I'm not sure if this would be possible or not with this vulnerability.\n\nAll the best.","vulnerability_information_html":"\u003cp\u003eFYI:  This was conducted on a local install of App Suite and not the sandbox.  App Suite version was: 7.8.4 Rev14\u003c/p\u003e\n\n\u003cp\u003eHello,\u003c/p\u003e\n\n\u003cp\u003eThere is a possible SSRF vulnerability in the following App Suite API endpoint that will primarily allow blind port scanning of the App Suite server and any internal servers firewalled off from the external network:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003ehttp://\u0026lt;serveraddress\u0026gt;/appsuite/api/autoconfig?action=get\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003ePre-requisites for successful exploitation of vulnerability:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e-Attacker server\u003c/strong\u003e\u003cbr\u003e\n\u003cstrong\u003e-Attacker held domain name\u003c/strong\u003e\u003cbr\u003e\n\u003cstrong\u003e-Valid session from login or anonymous link\u003c/strong\u003e\u003c/p\u003e\n\n\u003ch2 id=\"summary\"\u003eSummary\u003c/h2\u003e\n\n\u003cp\u003ea) The above endpoint will send a POST request with the following parameters:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eaction=get\u0026amp;email=\u0026lt;email address\u0026gt;\u0026amp;password=\u0026lt;password\u0026gt;\u0026amp;session=\u0026lt;session key\u0026gt;\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eb) The email address in the POC uses \u003cstrong\u003e\u003ca title=\"test@testserver64.com\" href=\"mailto:test@testserver64.com\" rel=\"nofollow noopener noreferrer\"\u003etest@testserver64.com\u003c/a\u003e\u003c/strong\u003e.  Once the POST request is complete, a DNS lookup will be conducted for the following addresses:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eautoconfig.testserver64.com\u003c/strong\u003e\u003cbr\u003e\n\u003cstrong\u003eimap.testserver64.com\u003c/strong\u003e\u003cbr\u003e\n\u003cstrong\u003eetc.\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eThe reasons for this request is to obtain a configuration XML file for setting up an email account in App Suite.  The lookup path is similar to the following:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003ca title=\"http://autoconfig.testserver64.com/mail/config-v1.1.xml\" href=\"/redirect?url=http%3A%2F%2Fautoconfig.testserver64.com%2Fmail%2Fconfig-v1.1.xml\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://autoconfig.testserver64.com/mail/config-v1.1.xml\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eConfig file reference: \u003c/p\u003e\n\n\u003cp\u003e\u003ca title=\"https://developer.mozilla.org/en-US/docs/Mozilla/Thunderbird/Autoconfiguration\" href=\"/redirect?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FMozilla%2FThunderbird%2FAutoconfiguration\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://developer.mozilla.org/en-US/docs/Mozilla/Thunderbird/Autoconfiguration\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eIf successful, a JSON response is received with server details from the config-v1.1.xml file.  If the request fails, a blank JSON response is received\u003c/p\u003e\n\n\u003cp\u003ec) For this vulnerability to work, an attacker would require their own server with a domain name the same as what is entered for the email address.  In this case it is \u003cstrong\u003etestserver64.com\u003c/strong\u003e which I have added into the \u003cstrong\u003e/etc/hosts\u003c/strong\u003e file of the App Suite server to simulate a DNS lookup.\u003c/p\u003e\n\n\u003cp\u003ed) From there, they would need to run a webserver that will re-direct all GET requests from the App Suite server for the configuration XML file back to the localhost address of App Suite on a rotating port number. e.g. \u003cstrong\u003e\u003ca title=\"http://127.0.0.1:1\" href=\"/redirect?url=http%3A%2F%2F127.0.0.1%3A1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://127.0.0.1:1\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, \u003ca title=\"http://127.0.0.1:2\" href=\"/redirect?url=http%3A%2F%2F127.0.0.1%3A2\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://127.0.0.1:2\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e, http://127.0.0.1:n\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003ee)  After the App Suite server scans its own localhost address on a particular port, an empty response is returned to the user.   As this is a blind response and no error banners are returned, analysis of the HTTP request response times is required to determine what ports are responding.  This would allow fingerprinting of additional services that might be running.\u003c/p\u003e\n\n\u003ch2 id=\"poc\"\u003ePOC\u003c/h2\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"poc.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/243/173/25cc95d7753b42e073457ff6d5d3c2d9638fd8d5/poc.png?response-content-disposition=attachment%3B%20filename%3D%22poc.png%22%3B%20filename%2A%3DUTF-8%27%27poc.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQVBWWKZ4H%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T052623Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCmEbZvVQ%2FI1GHRJjrhZK2Y6zh4lCWK725%2FwOpNu%2BnZkAIhAIZlqGHog%2B4PZMdnvhSU5APZbycPDz1wpNXbi5uE94ueKrQDCFUQARoMMDEzNjE5Mjc0ODQ5IgxU5AAHhqo1cPAzbTcqkQOGB5pEHXl6QCBCTSHUmyd%2FF8M3rpTqzp%2BOigrWU%2BrXYHZYm%2BGDawsiXhnqeD9o8Qw0b%2Fr0efVbRmhj5baoPrxgSiY%2B9zsreR3qClZZKnS0%2Brs8OqiMGd3clBbyfOxw2fa2vgQglV4dLF6EXSiGfxOms8eWdw%2F8mPtc81dMxDIlxTs50KUnd6aUjgG5BJs2k%2FL0rOKXYBS%2FdVqIQdN8JcCKMvqDv0u7pvSGEecQXa7pGdf07ufO02E64eU0OnaTeNyoq7WlZzT%2FGyvHjVtIvbXdPW15pwZm2Q4u8%2FW7ksSv4%2BxsESWLLCop0OeGUhtIppCDQlaMPC9JTj0HYKbMEGmZagmLfgHX4DKRg75%2FLNQViGcE%2FRCCaMxd6wrsv0dlz4dekjWvp4mXzLFkuKBM6c%2F%2BAemkmkgOJKnp%2FJUV1zJTe%2BO14GyIigsvxJqvrnKvkmsUrYwar1bX%2Be7UkqGzVbMAlsbRDNIOok7bVRXerhpXnbqFQsLWlqe%2BNfa4gSSfmgu4iIjCRRMdTWsvy2NQHfTsGjDAzar%2FBTrqAcniMm3eG7%2BxDZb9XVqMyQiSNyiuBD8pwO78bO8T3Uu8vSI3S05C6UCutmNkOnjR9D2NZaOgbFO4YujbW%2FY0mhhdjSppvg%2Bzdgu0AfZOou0DDwqm4vwEc0ekiNYUD6KHvD5tZwOaalihV5dSfbzoDyvfsJI6x7RYpBZmwPcshKw3Csz0uZew1JqrbUJVmc9v6q0aXols8bxyDKKPfp6siyzKhHELgTS3XGskds%2BWx5FaWemc%2Bo8QqyIuoOtWjmUwF39ydFOfg%2FyeKdwBxELGLKCSN8MyV6ov7IBrib4UiM%2F6l36ymDoHIX8ohg%3D%3D\u0026amp;X-Amz-Signature=aeb93273420978ebbe7bb5a8e520c537511b2f19ba77fad18949783208444b0b\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/243/173/25cc95d7753b42e073457ff6d5d3c2d9638fd8d5/poc.png?response-content-disposition=attachment%3B%20filename%3D%22poc.png%22%3B%20filename%2A%3DUTF-8%27%27poc.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQVBWWKZ4H%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T052623Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCmEbZvVQ%2FI1GHRJjrhZK2Y6zh4lCWK725%2FwOpNu%2BnZkAIhAIZlqGHog%2B4PZMdnvhSU5APZbycPDz1wpNXbi5uE94ueKrQDCFUQARoMMDEzNjE5Mjc0ODQ5IgxU5AAHhqo1cPAzbTcqkQOGB5pEHXl6QCBCTSHUmyd%2FF8M3rpTqzp%2BOigrWU%2BrXYHZYm%2BGDawsiXhnqeD9o8Qw0b%2Fr0efVbRmhj5baoPrxgSiY%2B9zsreR3qClZZKnS0%2Brs8OqiMGd3clBbyfOxw2fa2vgQglV4dLF6EXSiGfxOms8eWdw%2F8mPtc81dMxDIlxTs50KUnd6aUjgG5BJs2k%2FL0rOKXYBS%2FdVqIQdN8JcCKMvqDv0u7pvSGEecQXa7pGdf07ufO02E64eU0OnaTeNyoq7WlZzT%2FGyvHjVtIvbXdPW15pwZm2Q4u8%2FW7ksSv4%2BxsESWLLCop0OeGUhtIppCDQlaMPC9JTj0HYKbMEGmZagmLfgHX4DKRg75%2FLNQViGcE%2FRCCaMxd6wrsv0dlz4dekjWvp4mXzLFkuKBM6c%2F%2BAemkmkgOJKnp%2FJUV1zJTe%2BO14GyIigsvxJqvrnKvkmsUrYwar1bX%2Be7UkqGzVbMAlsbRDNIOok7bVRXerhpXnbqFQsLWlqe%2BNfa4gSSfmgu4iIjCRRMdTWsvy2NQHfTsGjDAzar%2FBTrqAcniMm3eG7%2BxDZb9XVqMyQiSNyiuBD8pwO78bO8T3Uu8vSI3S05C6UCutmNkOnjR9D2NZaOgbFO4YujbW%2FY0mhhdjSppvg%2Bzdgu0AfZOou0DDwqm4vwEc0ekiNYUD6KHvD5tZwOaalihV5dSfbzoDyvfsJI6x7RYpBZmwPcshKw3Csz0uZew1JqrbUJVmc9v6q0aXols8bxyDKKPfp6siyzKhHELgTS3XGskds%2BWx5FaWemc%2Bo8QqyIuoOtWjmUwF39ydFOfg%2FyeKdwBxELGLKCSN8MyV6ov7IBrib4UiM%2F6l36ymDoHIX8ohg%3D%3D\u0026amp;X-Amz-Signature=aeb93273420978ebbe7bb5a8e520c537511b2f19ba77fad18949783208444b0b\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eFiles attached:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eAttacker_server.py (Python HTTP server)\u003c/strong\u003e\u003cbr\u003e\n\u003cstrong\u003eRequest.py (Initiate connection to vulnerable endpoint)\u003c/strong\u003e\u003cbr\u003e\n\u003cstrong\u003eScript_output.txt (Results from port scan)\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003ea)  Attacker server running on \u003cstrong\u003e192.168.0.6\u003c/strong\u003e will be running a Python webserver on port 80 \u003cstrong\u003e(attacker_server.py)\u003c/strong\u003e.  This will forward any GET requests back to the localhost of the sender on a port that rotates on every received request.  Below are some example access logs when a 301 redirect occurs:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e192.168.0.16 - - [29/Nov/2017 22:22:48] \u0026quot;GET /mail/config-v1.1.xml?emailaddress=bla%40testserver64.com HTTP/1.1\u0026quot; 301 -\n\n192.168.0.16 - - [29/Nov/2017 22:22:59] \u0026quot;GET /mail/config-v1.1.xml?emailaddress=bla%40testserver64.com HTTP/1.1\u0026quot; 301 â€“\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eb) \u003cstrong\u003erequest.py\u003c/strong\u003e will connect to the App Suite server on \u003cstrong\u003e192.168.0.16\u003c/strong\u003e and receive a session key and secret cookie.  It will then repeatedly send POST requests (default 20) to the vulnerable endpoint and log the response time.\u003c/p\u003e\n\n\u003cp\u003eb)  Server \u003cstrong\u003e192.168.0.10\u003c/strong\u003e will accept requests on port 100 only from \u003cstrong\u003e192.168.0.16\u003c/strong\u003e, this server will be used to demonstrate connecting to an internal server not accessible directly to the attacker.  Note.  Modification of the attacker_server.py script is required to probe 192.168.0.10 instead of the App Suite server.\u003c/p\u003e\n\n\u003cp\u003ec) Netcat listeners are running on \u003cstrong\u003eports 5,4\u003c/strong\u003e and \u003cstrong\u003e15\u003c/strong\u003e on the App Suite server and the additional server at \u003cstrong\u003e192.168.0.10, port 100\u003c/strong\u003e\u003c/p\u003e\n\n\u003ch2 id=\"results\"\u003eResults\u003c/h2\u003e\n\n\u003cp\u003eThe \u003cstrong\u003escript_output.txt\u003c/strong\u003e file contains the following: the left column is the port number and the right is the response time, sorted longest time first.  As can be seen, \u003cstrong\u003eport 5, 14 and 15\u003c/strong\u003e have the longest HTTP response time before timeout:  \u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e5: [11.061215]\n14: [10.926074]\n15: [10.914135]\n2: [1.068856]\n13: [1.050274]\n19: [1.044996]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e(Extract from attached script_output.txt)\u003c/p\u003e\n\n\u003cp\u003eNote.  Port 100 on 192.168.0.10 was not probed in this run and is missing from the output file.\u003c/p\u003e\n\n\u003cp\u003eResponse times are however a difficult indicator of whether a port is open or not.  Some ports will not accept an HTTP connection and will close with an error instantly, so it can be difficult determining listening ports from closed ports.\u003c/p\u003e\n\n\u003ch2 id=\"additional-testing\"\u003eAdditional testing\u003c/h2\u003e\n\n\u003cp\u003e-From the below output, you can observe a successful connection through the firewall to a netcat listener on 192.168.0.10\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET / HTTP/1.1\nHost: 192.168.0.10:100\nConnection: Keep-Alive\nUser-Agent: Open-Xchange Auto-Config Client\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e-You can also see from the log below, a successful connection to the internal URL \u003cstrong\u003e/webservices\u003c/strong\u003e which is supposed to be restricted to 127.0.0.1 local access only.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e192.168.0.6 - - [29/Nov/2017:20:19:19 +0000] \u0026quot;POST /appsuite/api/autoconfig HTTP/1.1\u0026quot; 200 11 \u0026quot;-\u0026quot; \u0026quot;python-requests/2.18.1\u0026quot;\n\n127.0.0.1 - - [29/Nov/2017:20:19:20 +0000] \u0026quot;GET /webservices HTTP/1.1\u0026quot; 200 6804 \u0026quot;-\u0026quot; \u0026quot;Open-Xchange Auto-Config Client\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eOverall, this vulnerability is limited to reconnaissance of listening ports on the App Suite Server or other internal servers due to the blind response from the endpoint.  Theoretically, you could also alter the script to rotate through IP addresses and scan an internal subnet, although you may encounter the same issues with response times as demonstrated before.  I was unable to extract any data from this SSRF, I\u0026#39;m not sure if this would be possible or not with this vulnerability.\u003c/p\u003e\n\n\u003cp\u003eAll the best.\u003c/p\u003e\n","bounty_amount":"850.0","formatted_bounty":"$850","weakness":{"id":68,"name":"Server-Side Request Forgery (SSRF)"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":243173,"file_name":"poc.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/243/173/25cc95d7753b42e073457ff6d5d3c2d9638fd8d5/poc.png?response-content-disposition=attachment%3B%20filename%3D%22poc.png%22%3B%20filename%2A%3DUTF-8%27%27poc.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQVBWWKZ4H%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T052623Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCmEbZvVQ%2FI1GHRJjrhZK2Y6zh4lCWK725%2FwOpNu%2BnZkAIhAIZlqGHog%2B4PZMdnvhSU5APZbycPDz1wpNXbi5uE94ueKrQDCFUQARoMMDEzNjE5Mjc0ODQ5IgxU5AAHhqo1cPAzbTcqkQOGB5pEHXl6QCBCTSHUmyd%2FF8M3rpTqzp%2BOigrWU%2BrXYHZYm%2BGDawsiXhnqeD9o8Qw0b%2Fr0efVbRmhj5baoPrxgSiY%2B9zsreR3qClZZKnS0%2Brs8OqiMGd3clBbyfOxw2fa2vgQglV4dLF6EXSiGfxOms8eWdw%2F8mPtc81dMxDIlxTs50KUnd6aUjgG5BJs2k%2FL0rOKXYBS%2FdVqIQdN8JcCKMvqDv0u7pvSGEecQXa7pGdf07ufO02E64eU0OnaTeNyoq7WlZzT%2FGyvHjVtIvbXdPW15pwZm2Q4u8%2FW7ksSv4%2BxsESWLLCop0OeGUhtIppCDQlaMPC9JTj0HYKbMEGmZagmLfgHX4DKRg75%2FLNQViGcE%2FRCCaMxd6wrsv0dlz4dekjWvp4mXzLFkuKBM6c%2F%2BAemkmkgOJKnp%2FJUV1zJTe%2BO14GyIigsvxJqvrnKvkmsUrYwar1bX%2Be7UkqGzVbMAlsbRDNIOok7bVRXerhpXnbqFQsLWlqe%2BNfa4gSSfmgu4iIjCRRMdTWsvy2NQHfTsGjDAzar%2FBTrqAcniMm3eG7%2BxDZb9XVqMyQiSNyiuBD8pwO78bO8T3Uu8vSI3S05C6UCutmNkOnjR9D2NZaOgbFO4YujbW%2FY0mhhdjSppvg%2Bzdgu0AfZOou0DDwqm4vwEc0ekiNYUD6KHvD5tZwOaalihV5dSfbzoDyvfsJI6x7RYpBZmwPcshKw3Csz0uZew1JqrbUJVmc9v6q0aXols8bxyDKKPfp6siyzKhHELgTS3XGskds%2BWx5FaWemc%2Bo8QqyIuoOtWjmUwF39ydFOfg%2FyeKdwBxELGLKCSN8MyV6ov7IBrib4UiM%2F6l36ymDoHIX8ohg%3D%3D\u0026X-Amz-Signature=aeb93273420978ebbe7bb5a8e520c537511b2f19ba77fad18949783208444b0b","file_size":56038,"type":"image/png"},{"id":243186,"file_name":"script_output.txt","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/243/186/d2fea46ecaaf942706523ac365b1162c4b531a2d/script_output.txt?response-content-disposition=attachment%3B%20filename%3D%22script_output.txt%22%3B%20filename%2A%3DUTF-8%27%27script_output.txt\u0026response-content-type=text%2Fplain\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQVBWWKZ4H%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T052623Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCmEbZvVQ%2FI1GHRJjrhZK2Y6zh4lCWK725%2FwOpNu%2BnZkAIhAIZlqGHog%2B4PZMdnvhSU5APZbycPDz1wpNXbi5uE94ueKrQDCFUQARoMMDEzNjE5Mjc0ODQ5IgxU5AAHhqo1cPAzbTcqkQOGB5pEHXl6QCBCTSHUmyd%2FF8M3rpTqzp%2BOigrWU%2BrXYHZYm%2BGDawsiXhnqeD9o8Qw0b%2Fr0efVbRmhj5baoPrxgSiY%2B9zsreR3qClZZKnS0%2Brs8OqiMGd3clBbyfOxw2fa2vgQglV4dLF6EXSiGfxOms8eWdw%2F8mPtc81dMxDIlxTs50KUnd6aUjgG5BJs2k%2FL0rOKXYBS%2FdVqIQdN8JcCKMvqDv0u7pvSGEecQXa7pGdf07ufO02E64eU0OnaTeNyoq7WlZzT%2FGyvHjVtIvbXdPW15pwZm2Q4u8%2FW7ksSv4%2BxsESWLLCop0OeGUhtIppCDQlaMPC9JTj0HYKbMEGmZagmLfgHX4DKRg75%2FLNQViGcE%2FRCCaMxd6wrsv0dlz4dekjWvp4mXzLFkuKBM6c%2F%2BAemkmkgOJKnp%2FJUV1zJTe%2BO14GyIigsvxJqvrnKvkmsUrYwar1bX%2Be7UkqGzVbMAlsbRDNIOok7bVRXerhpXnbqFQsLWlqe%2BNfa4gSSfmgu4iIjCRRMdTWsvy2NQHfTsGjDAzar%2FBTrqAcniMm3eG7%2BxDZb9XVqMyQiSNyiuBD8pwO78bO8T3Uu8vSI3S05C6UCutmNkOnjR9D2NZaOgbFO4YujbW%2FY0mhhdjSppvg%2Bzdgu0AfZOou0DDwqm4vwEc0ekiNYUD6KHvD5tZwOaalihV5dSfbzoDyvfsJI6x7RYpBZmwPcshKw3Csz0uZew1JqrbUJVmc9v6q0aXols8bxyDKKPfp6siyzKhHELgTS3XGskds%2BWx5FaWemc%2Bo8QqyIuoOtWjmUwF39ydFOfg%2FyeKdwBxELGLKCSN8MyV6ov7IBrib4UiM%2F6l36ymDoHIX8ohg%3D%3D\u0026X-Amz-Signature=085a13717ef504fce47199471e17791b5bdac49ce3a911c9285ff8ce4b985a70","file_size":292,"type":"text/plain"},{"id":243187,"file_name":"attacker_server.py","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/243/187/87a3ca9631f6e547cb0e6e8872507cc071b6988e/attacker_server.py?response-content-disposition=attachment%3B%20filename%3D%22attacker_server.py%22%3B%20filename%2A%3DUTF-8%27%27attacker_server.py\u0026response-content-type=text%2Fx-python\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQVBWWKZ4H%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T052623Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCmEbZvVQ%2FI1GHRJjrhZK2Y6zh4lCWK725%2FwOpNu%2BnZkAIhAIZlqGHog%2B4PZMdnvhSU5APZbycPDz1wpNXbi5uE94ueKrQDCFUQARoMMDEzNjE5Mjc0ODQ5IgxU5AAHhqo1cPAzbTcqkQOGB5pEHXl6QCBCTSHUmyd%2FF8M3rpTqzp%2BOigrWU%2BrXYHZYm%2BGDawsiXhnqeD9o8Qw0b%2Fr0efVbRmhj5baoPrxgSiY%2B9zsreR3qClZZKnS0%2Brs8OqiMGd3clBbyfOxw2fa2vgQglV4dLF6EXSiGfxOms8eWdw%2F8mPtc81dMxDIlxTs50KUnd6aUjgG5BJs2k%2FL0rOKXYBS%2FdVqIQdN8JcCKMvqDv0u7pvSGEecQXa7pGdf07ufO02E64eU0OnaTeNyoq7WlZzT%2FGyvHjVtIvbXdPW15pwZm2Q4u8%2FW7ksSv4%2BxsESWLLCop0OeGUhtIppCDQlaMPC9JTj0HYKbMEGmZagmLfgHX4DKRg75%2FLNQViGcE%2FRCCaMxd6wrsv0dlz4dekjWvp4mXzLFkuKBM6c%2F%2BAemkmkgOJKnp%2FJUV1zJTe%2BO14GyIigsvxJqvrnKvkmsUrYwar1bX%2Be7UkqGzVbMAlsbRDNIOok7bVRXerhpXnbqFQsLWlqe%2BNfa4gSSfmgu4iIjCRRMdTWsvy2NQHfTsGjDAzar%2FBTrqAcniMm3eG7%2BxDZb9XVqMyQiSNyiuBD8pwO78bO8T3Uu8vSI3S05C6UCutmNkOnjR9D2NZaOgbFO4YujbW%2FY0mhhdjSppvg%2Bzdgu0AfZOou0DDwqm4vwEc0ekiNYUD6KHvD5tZwOaalihV5dSfbzoDyvfsJI6x7RYpBZmwPcshKw3Csz0uZew1JqrbUJVmc9v6q0aXols8bxyDKKPfp6siyzKhHELgTS3XGskds%2BWx5FaWemc%2Bo8QqyIuoOtWjmUwF39ydFOfg%2FyeKdwBxELGLKCSN8MyV6ov7IBrib4UiM%2F6l36ymDoHIX8ohg%3D%3D\u0026X-Amz-Signature=0a908bc635d6a966e201628ac2ff2fc2895bab2d8fe588aaece7b6d1ddc726ee","file_size":1006,"type":"text/x-python"},{"id":243188,"file_name":"request.py","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/243/188/51c2e3d5f2f4698ce8044cc42c4b51ff79859a70/request.py?response-content-disposition=attachment%3B%20filename%3D%22request.py%22%3B%20filename%2A%3DUTF-8%27%27request.py\u0026response-content-type=text%2Fx-python\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQVBWWKZ4H%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T052623Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCmEbZvVQ%2FI1GHRJjrhZK2Y6zh4lCWK725%2FwOpNu%2BnZkAIhAIZlqGHog%2B4PZMdnvhSU5APZbycPDz1wpNXbi5uE94ueKrQDCFUQARoMMDEzNjE5Mjc0ODQ5IgxU5AAHhqo1cPAzbTcqkQOGB5pEHXl6QCBCTSHUmyd%2FF8M3rpTqzp%2BOigrWU%2BrXYHZYm%2BGDawsiXhnqeD9o8Qw0b%2Fr0efVbRmhj5baoPrxgSiY%2B9zsreR3qClZZKnS0%2Brs8OqiMGd3clBbyfOxw2fa2vgQglV4dLF6EXSiGfxOms8eWdw%2F8mPtc81dMxDIlxTs50KUnd6aUjgG5BJs2k%2FL0rOKXYBS%2FdVqIQdN8JcCKMvqDv0u7pvSGEecQXa7pGdf07ufO02E64eU0OnaTeNyoq7WlZzT%2FGyvHjVtIvbXdPW15pwZm2Q4u8%2FW7ksSv4%2BxsESWLLCop0OeGUhtIppCDQlaMPC9JTj0HYKbMEGmZagmLfgHX4DKRg75%2FLNQViGcE%2FRCCaMxd6wrsv0dlz4dekjWvp4mXzLFkuKBM6c%2F%2BAemkmkgOJKnp%2FJUV1zJTe%2BO14GyIigsvxJqvrnKvkmsUrYwar1bX%2Be7UkqGzVbMAlsbRDNIOok7bVRXerhpXnbqFQsLWlqe%2BNfa4gSSfmgu4iIjCRRMdTWsvy2NQHfTsGjDAzar%2FBTrqAcniMm3eG7%2BxDZb9XVqMyQiSNyiuBD8pwO78bO8T3Uu8vSI3S05C6UCutmNkOnjR9D2NZaOgbFO4YujbW%2FY0mhhdjSppvg%2Bzdgu0AfZOou0DDwqm4vwEc0ekiNYUD6KHvD5tZwOaalihV5dSfbzoDyvfsJI6x7RYpBZmwPcshKw3Csz0uZew1JqrbUJVmc9v6q0aXols8bxyDKKPfp6siyzKhHELgTS3XGskds%2BWx5FaWemc%2Bo8QqyIuoOtWjmUwF39ydFOfg%2FyeKdwBxELGLKCSN8MyV6ov7IBrib4UiM%2F6l36ymDoHIX8ohg%3D%3D\u0026X-Amz-Signature=d10d26babae54d99ebd8dab7446781f563e62bb628388b1bb4775ae5f6ab2c12","file_size":2652,"type":"text/x-python"}],"allow_singular_disclosure_at":null,"vote_count":20,"voters":["sameerphad72","bughunterninja","mygf","masonhck357","imranhudaa","eddiez","trieulieuf9","cryptographer","armansameer","unsecury","and 10 more..."],"severity":{"rating":"medium","author_type":"Team"},"structured_scope":{"databaseId":551,"asset_type":"URL","asset_identifier":"sandbox.open-xchange.com","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":2190667,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for reporting this vulnerability to us. We take your feedback very serious and started the process of resolving and delivering a solution to our users. Please note that we will take care about public disclosure of the vulnerability and give our users a chance to update to a fixed version before. Therefor, please handle this finding with discretion until we publicly disclosed it.\n\nWe'll discuss the matter of bounty for this finding soon and will update you shortly. Would you like to be included in our advisories \"researcher credits\"?","markdown_message":"\u003cp\u003eThanks for reporting this vulnerability to us. We take your feedback very serious and started the process of resolving and delivering a solution to our users. Please note that we will take care about public disclosure of the vulnerability and give our users a chance to update to a fixed version before. Therefor, please handle this finding with discretion until we publicly disclosed it.\u003c/p\u003e\n\n\u003cp\u003eWe\u0026#39;ll discuss the matter of bounty for this finding soon and will update you shortly. Would you like to be included in our advisories \u0026quot;researcher credits\u0026quot;?\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-30T09:17:18.850Z","updated_at":"2017-11-30T09:17:18.850Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2190669,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thanks a lot for this very detailed report. We already have a configuration option in place that is used to restrict connections to externally or user-provided network data. Apparently those options are not considered by mail autoconfiguration. See \"com.openexchange.mail.account.blacklist\" at mail.properties for example.\n\nI agree that this can be used for reconnaissance of networks within another trust boundary, so this is a valid attack vector with limited direct impact on availability, confidentiality and integrity.","markdown_message":"\u003cp\u003eThanks a lot for this very detailed report. We already have a configuration option in place that is used to restrict connections to externally or user-provided network data. Apparently those options are not considered by mail autoconfiguration. See \u0026quot;com.openexchange.mail.account.blacklist\u0026quot; at mail.properties for example.\u003c/p\u003e\n\n\u003cp\u003eI agree that this can be used for reconnaissance of networks within another trust boundary, so this is a valid attack vector with limited direct impact on availability, confidentiality and integrity.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-30T09:20:20.936Z","updated_at":"2017-11-30T09:21:16.272Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2190807,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Many thanks for the quick response and triage, this was indeed an interesting find.  As for researcher credits, can you just add my name please:  Alan Watt\n\nCheers.","markdown_message":"\u003cp\u003eMany thanks for the quick response and triage, this was indeed an interesting find.  As for researcher credits, can you just add my name please:  Alan Watt\u003c/p\u003e\n\n\u003cp\u003eCheers.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-11-30T11:00:09.105Z","updated_at":"2017-11-30T11:00:09.105Z","actor":{"username":"logan5","cleared":false,"url":"/logan5","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/110/421/4eacc0e36a20a036380e88612bb8755d1dddda08_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2193278,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"We solved this vulnerability internally and will provide a backport to in-production releases during the next weeks.","markdown_message":"\u003cp\u003eWe solved this vulnerability internally and will provide a backport to in-production releases during the next weeks.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-12-01T08:29:08.765Z","updated_at":"2017-12-01T08:29:08.765Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2193279,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2017-12-01T08:29:32.689Z","updated_at":"2017-12-01T08:29:32.689Z","actor":{"url":"/open-xchange","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Open-Xchange"}},"bounty_amount":"850.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"open-xchange","collaborator":{"username":"logan5","url":"/logan5"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2193588,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Cheers for the fast resolution and bounty!  Can I ask, are security updates pushed out to the community repos as well?  As I'm aware you need a subscription for updates.","markdown_message":"\u003cp\u003eCheers for the fast resolution and bounty!  Can I ask, are security updates pushed out to the community repos as well?  As I\u0026#39;m aware you need a subscription for updates.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-12-01T12:57:38.601Z","updated_at":"2017-12-01T12:57:38.601Z","actor":{"username":"logan5","cleared":false,"url":"/logan5","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/110/421/4eacc0e36a20a036380e88612bb8755d1dddda08_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2193610,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey, its true that a subscription is required to access regular updates since those primarily contain paid enhancements which are only relevant for specific customers. However, in case of security updates we release those to the public repositories as well. As a bonus you get all the fixes from previous updates as well. We've no interest in creating a OSS/Commercial fork or shipping crippleware with known vulnerabilities to anyone.\n\nWith regards to scheduling this fix will most likely be delivered in January 2018.","markdown_message":"\u003cp\u003eHey, its true that a subscription is required to access regular updates since those primarily contain paid enhancements which are only relevant for specific customers. However, in case of security updates we release those to the public repositories as well. As a bonus you get all the fixes from previous updates as well. We\u0026#39;ve no interest in creating a OSS/Commercial fork or shipping crippleware with known vulnerabilities to anyone.\u003c/p\u003e\n\n\u003cp\u003eWith regards to scheduling this fix will most likely be delivered in January 2018.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-12-01T13:09:29.624Z","updated_at":"2017-12-01T13:09:29.624Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2193618,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2017-12-01T13:13:28.017Z","updated_at":"2017-12-01T13:13:28.017Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"logan5","url":"/logan5"},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2193636,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for the clarification, I thought it might be something like that.\n\nAll the best.","markdown_message":"\u003cp\u003eThanks for the clarification, I thought it might be something like that.\u003c/p\u003e\n\n\u003cp\u003eAll the best.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-12-01T13:23:33.163Z","updated_at":"2017-12-01T13:23:33.163Z","actor":{"username":"logan5","cleared":false,"url":"/logan5","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/110/421/4eacc0e36a20a036380e88612bb8755d1dddda08_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4916988,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2019-05-24T12:18:25.269Z","updated_at":"2019-05-24T12:18:25.269Z","additional_data":{"old_severity":null,"new_severity":"Medium","old_severity_id":null,"new_severity_id":401090},"actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5253131,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-07-04T11:16:40.353Z","updated_at":"2019-07-04T11:16:40.353Z","first_to_agree":true,"actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5258557,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-07-05T09:17:31.794Z","updated_at":"2019-07-05T09:17:31.794Z","actor":{"username":"logan5","cleared":false,"url":"/logan5","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/110/421/4eacc0e36a20a036380e88612bb8755d1dddda08_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5258558,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-07-05T09:17:31.866Z","updated_at":"2019-07-05T09:17:31.866Z","actor":{"username":"logan5","cleared":false,"url":"/logan5","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/110/421/4eacc0e36a20a036380e88612bb8755d1dddda08_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}