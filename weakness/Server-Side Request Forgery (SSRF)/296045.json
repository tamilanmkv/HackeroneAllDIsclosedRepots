{"id":296045,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yOTYwNDU=","url":"https://hackerone.com/reports/296045","title":"SSRF in VCARD photo upload functionality","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2017-12-07T21:03:02.889Z","submitted_at":"2017-12-07T21:03:02.889Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"logan5","url":"/logan5","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/110/421/4eacc0e36a20a036380e88612bb8755d1dddda08_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":8906,"url":"https://hackerone.com/open-xchange","handle":"open-xchange","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Open-Xchange","twitter_handle":"openxchange","website":"https://www.open-xchange.com/","about":"Messaging, collaboration and office productivity software for service providers"}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2019-07-05T09:23:06.236Z","bug_reporter_agreed_on_going_public_at":"2019-07-05T09:23:06.137Z","team_member_agreed_on_going_public_at":"2019-07-04T11:11:21.565Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"FYI - Tested on local installation of App Suite 7.8.4 REV 14, CentOS 7.4, x64\n\nHello,\n\nI believe I may have found another SSRF re-direct vulnerability which again will allow port scanning of the App Suite server and the internal network, this is similar to my earlier report: #293847\n\nThe endpoint is the following which is used to import contacts via external VCARD files:\n\n**http://\u003cdomain\u003e/appsuite/api/import?action=VCARD**\n\nPre-requisites to exploit this vulnerability are the following:\n\n-Attacker server\n-Attacker controlled domain name\n-vcard file\n-Valid session from login or anonymous link\n\n\n###Summary\n\nThe App Suite source code contains the following Java file which appears to be used to import a contact photograph via a URL, provided from a .vcard file:\n\n**backend/com.openexchange.contact.vcard.impl/src/com/openexchange/contact/vcard/impl/mapping/PhotoMapping.java**\n\n\nThe section of code at line numbers **427-465** does a decent job of ensuring that any URL entered is not a local address to the App Suite server.  I had to modify my PoC from my previous report to take this into account.\n\nFurther in this file, is the below section which handles redirect requests, line numbers **479-491**:\n```\n// Follow \u0026 check redirects recursively\n            if (urlConnnection instanceof HttpURLConnection) {\n                HttpURLConnection httpURLConnection = (HttpURLConnection) urlConnnection;\n                int responseCode = httpURLConnection.getResponseCode();\n                if (responseCode == HttpURLConnection.HTTP_MOVED_PERM || responseCode == HttpURLConnection.HTTP_MOVED_TEMP) {\n                    String redirectUrl = urlConnnection.getHeaderField(\"Location\");\n                    httpURLConnection.disconnect();\n                    return new LoadedImage(redirectUrl);\n                }\n                if (responseCode \u003e= 400) {\n                    addConversionWarning(warnings, \"PHOTO\", \"image URL \\\"\" + origUrlString + \"\\\" appears not to be valid, skipping import.\");\n                    return NULL_RESULT;\n                }\n            }\n```\n My interpretation was that if a redirect was sent that matched the following:\n\n**HTTP_MOVED_PERM**\n**HTTP_MOVED_TEMP**\n\nWhich translates to a **HTTP 301** and **302** response according to the following Java documentation:\n\n**https://docs.oracle.com/javase/7/docs/api/java/net/HttpURLConnection.html**\n\nThe returned URL would be re-checked to make sure it is not a local address.  The suspected vulnerability is the check of response codes 301 and 302, as it doesn’t take into account other HTTP re-direct response codes such as 303 and 305.  However, further testing proved that standard response codes were being accepted as well, e.g. 301/302.\n\nNote.  I am not a programmer so the above analysis might be incorrect\n\n\n###PoC Setup\n\n{F245109}\n\n\nThe below PoC will contain the following files:\n\n**attacker_server.py:**  (Attackers python web server running on TCP port 70, responses to all GET requests with a 301 re-direct to http://127.0.0.1 on a rotating TCP port\n\n**request.py:**  (Attackers python script that will submit login credentials to obtain a session cookie and then send 20 post requests to upload a VCARD)\n\n**test.vcard:**  (Attackers VCARD file based on the following example from Wikipedia https://en.wikipedia.org/wiki/VCard.  The file contains the following URL entry which is used to upload a photo to the contact entry:\n\n**: PHOTO;VALUE=URI;TYPE=GIF:http://testserver65.com:70/test.jpeg.**  \n\n**script_results.txt:**  (Results of HTTP response times per-port)\n\n\n###PoC\n\n1) The **attacker_server.py** script will run on **192.168.0.6** (Attacker server), this will setup a Python webserver running on **port 70** and will await a GET request.\n\n2) Netcat listeners are running on **TCP port 2, 6, 8, and 10** to simulate listening ports that will accept HTTP connections on the App Suite server.\n\n3) **request.py** will also run from the attacker server and connect to the target host **(192.168.0.16)**, this will POST **test.vcard** to the vulnerable endpoint multiples times, 20 by default.  Make sure the test.vcard file is in the script working directory or it won't be uploaded.\n\n4) The App Suite server will then carry out a DNS lookup to the photo URL which can be found in the vcard file\n\n**http://testserver65.com:70/test.jpeg**  \n\nIn this case I added the following in /etc/hosts: **\u003cWi-Fi gateway IP address\u003e testserver65.com** on the App Suite server.\n\nThe reason I’ve added a public IP address is that the Java file will block a private address during the initial POST.   So I used the gateway address on my home router to port-forward port 70 to port 70 on the attacker system (192.168.0.6).  I was using port 80 for something else in this case, hence the port change.\n\n5) The attacker webserver will send a **301** response back after each request with the following URL: **http://127.0.0.1:\u003cport number\u003e**.  The port number will rotate on every GET request.\n\n6) The HTTP response time will then be logged to the **script_output.txt** file when a port connection attempt is made.  Sorted in descending order of response time.\n\n\n###Results\n\n-Below are the results from the script_out.txt file.  As you can see, the listening ports on the App-Suite server have the longest response times.  (Port 2, 6, 8, 10)\n```\n2: [2.562081]\n6: [2.557924]\n10: [2.557095]\n8: [2.556498]\n1: [0.104492]\n3: [0.044996]\n9: [0.041817]\n4: [0.037032]\n7: [0.036648]\n5: [0.036015]\n```\n\n-Below is an extract of the responses from the Netcat listeners on the App Suite server:\n```\nGET / HTTP/1.1\nCache-Control: no-cache\nPragma: no-cache\nUser-Agent: Java/1.8.0_151\nHost: 127.0.0.1:2\nAccept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2\nConnection: keep-alive\n\nGET / HTTP/1.1\nCache-Control: no-cache\nPragma: no-cache\nUser-Agent: Java/1.8.0_151\nHost: 127.0.0.1:6\nAccept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2\nConnection: keep-alive\n```\n\nThe following HTTP re-direct codes were attempted, results below:\n\n```\n300 - multiple choices, failed\n301 - moved permanently, working\n302 - found, working\n303 - see other, working\n305 - use proxy, working\n307 - temporary redirect, failed\n308 - permanent redirect, failed\n\n```\n\n## Impact\n\nAgain, as with the previous report, this vulnerability can mainly be used for blind port scanning and IP discovery on the target host and any internal networks the target host has access to.  There was no ability to extract files or access other data.\n\nAll the best.","vulnerability_information_html":"\u003cp\u003eFYI - Tested on local installation of App Suite 7.8.4 REV 14, CentOS 7.4, x64\u003c/p\u003e\n\n\u003cp\u003eHello,\u003c/p\u003e\n\n\u003cp\u003eI believe I may have found another SSRF re-direct vulnerability which again will allow port scanning of the App Suite server and the internal network, this is similar to my earlier report: \u003ca href=\"/reports/293847\"\u003e#293847\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe endpoint is the following which is used to import contacts via external VCARD files:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003ehttp://\u0026lt;domain\u0026gt;/appsuite/api/import?action=VCARD\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003ePre-requisites to exploit this vulnerability are the following:\u003c/p\u003e\n\n\u003cp\u003e-Attacker server\u003cbr\u003e\n-Attacker controlled domain name\u003cbr\u003e\n-vcard file\u003cbr\u003e\n-Valid session from login or anonymous link\u003c/p\u003e\n\n\u003ch3 id=\"summary\"\u003eSummary\u003c/h3\u003e\n\n\u003cp\u003eThe App Suite source code contains the following Java file which appears to be used to import a contact photograph via a URL, provided from a .vcard file:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003ebackend/com.openexchange.contact.vcard.impl/src/com/openexchange/contact/vcard/impl/mapping/PhotoMapping.java\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eThe section of code at line numbers \u003cstrong\u003e427-465\u003c/strong\u003e does a decent job of ensuring that any URL entered is not a local address to the App Suite server.  I had to modify my PoC from my previous report to take this into account.\u003c/p\u003e\n\n\u003cp\u003eFurther in this file, is the below section which handles redirect requests, line numbers \u003cstrong\u003e479-491\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e// Follow \u0026amp; check redirects recursively\n            if (urlConnnection instanceof HttpURLConnection) {\n                HttpURLConnection httpURLConnection = (HttpURLConnection) urlConnnection;\n                int responseCode = httpURLConnection.getResponseCode();\n                if (responseCode == HttpURLConnection.HTTP_MOVED_PERM || responseCode == HttpURLConnection.HTTP_MOVED_TEMP) {\n                    String redirectUrl = urlConnnection.getHeaderField(\u0026quot;Location\u0026quot;);\n                    httpURLConnection.disconnect();\n                    return new LoadedImage(redirectUrl);\n                }\n                if (responseCode \u0026gt;= 400) {\n                    addConversionWarning(warnings, \u0026quot;PHOTO\u0026quot;, \u0026quot;image URL \\\u0026quot;\u0026quot; + origUrlString + \u0026quot;\\\u0026quot; appears not to be valid, skipping import.\u0026quot;);\n                    return NULL_RESULT;\n                }\n            }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eMy interpretation was that if a redirect was sent that matched the following:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eHTTP_MOVED_PERM\u003c/strong\u003e\u003cbr\u003e\n\u003cstrong\u003eHTTP_MOVED_TEMP\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eWhich translates to a \u003cstrong\u003eHTTP 301\u003c/strong\u003e and \u003cstrong\u003e302\u003c/strong\u003e response according to the following Java documentation:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003ca title=\"https://docs.oracle.com/javase/7/docs/api/java/net/HttpURLConnection.html\" href=\"/redirect?url=https%3A%2F%2Fdocs.oracle.com%2Fjavase%2F7%2Fdocs%2Fapi%2Fjava%2Fnet%2FHttpURLConnection.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://docs.oracle.com/javase/7/docs/api/java/net/HttpURLConnection.html\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eThe returned URL would be re-checked to make sure it is not a local address.  The suspected vulnerability is the check of response codes 301 and 302, as it doesn’t take into account other HTTP re-direct response codes such as 303 and 305.  However, further testing proved that standard response codes were being accepted as well, e.g. 301/302.\u003c/p\u003e\n\n\u003cp\u003eNote.  I am not a programmer so the above analysis might be incorrect\u003c/p\u003e\n\n\u003ch3 id=\"poc-setup\"\u003ePoC Setup\u003c/h3\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"poc_setup.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/245/109/f0a031d1fc0a1dede208445cdc98dd3f9b4733fe/poc_setup.png?response-content-disposition=attachment%3B%20filename%3D%22poc_setup.png%22%3B%20filename%2A%3DUTF-8%27%27poc_setup.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ25CUMV77%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T052708Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIAzPBxfjhI%2FOiR%2B1g7qgHtu%2BTSWR72ZbKmRPdv61x9tZAiEA7d5guv7RrcybHHoMbJ5xcSYkf5cIncRQif%2BDwrhUxL4qtAMIURABGgwwMTM2MTkyNzQ4NDkiDLU8cXGXokn2dJzgWyqRA5t82BwvWjjXR1flrxPY1G8nb%2BmyZbhMX7bIDSshUvXOZWrYMuqnjFp50lwKRioT0tqSyswhE%2FmxcGN2dZffgFfm45Y15zW32QivQspJz2zpwJxFycBtjnRvl%2FMGegWgMTliaPfGzxGYLkpzI0cHFjLk%2BKaC50Jxtx51oChC%2BCytCTVfzOq2Ax%2BcOQ92r8%2FEVvUqeZR%2BTPUidVPdANT%2FJyfcDkVZSZzQz9EjBhPlfadpw5dBs4QJ%2BDdADV0MdhKltTlk%2FyXYCPqWqRloAtWd1nGtuRb2iTe6dG%2FjlvEdGxsyq3XSWVpxob44SfkNT25WtiGoWTrQta7tHUBAIeejr1qo89oGEttSf7d8Lku1wWROst97KwhMf%2B%2Bj34q6jzK8i1Hw8XE5vydIGbQfSR452%2FCUDzasjIErk2%2F0Ktvsz%2Bx3csi5j3IwrXlZf4YgORAmKN1LdQQkzS%2BV1sgEfBg4MiQjSsKotzm%2FUgXxu10BwEW2Dhb8oNMpsZ1FjdjbCQGOQD7Feifp2fVzXkXhF1DMwndWMOrpqf8FOusBKlCtIwN5UHYU%2F5Q2IWJVa2twlUdU6iZvdqJG%2FbyL1HncSkMTTf174kVtrd08ZtfhfQ%2B%2FGZMeT3%2BWmMgtiSxiN8zlfLWyyOmRNNNrcZLeamXU8gijNm5O%2FRQyUqS40M%2B09rACFWxFC6eSAj2%2BBOBxHA6bEgtgV3Z6D4uLX3zxwXXu%2BF%2BhhCTXgcbobecE2HXiCLYk05uES7bSCIeUoggVUmunssom%2Bu8yCYvg2qvqpHVNwChBmtVZLiGt79EkgpsqfgvK113rJiRtjBkxEHINtbd%2FcmRPwl2VUc1W%2BEpCc%2FxxQcCayPndzJKPSw%3D%3D\u0026amp;X-Amz-Signature=603189b14bbdaeb9d659954de86dfa5d134717684af765e4d52dbfa3b34d4994\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/245/109/f0a031d1fc0a1dede208445cdc98dd3f9b4733fe/poc_setup.png?response-content-disposition=attachment%3B%20filename%3D%22poc_setup.png%22%3B%20filename%2A%3DUTF-8%27%27poc_setup.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ25CUMV77%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T052708Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIAzPBxfjhI%2FOiR%2B1g7qgHtu%2BTSWR72ZbKmRPdv61x9tZAiEA7d5guv7RrcybHHoMbJ5xcSYkf5cIncRQif%2BDwrhUxL4qtAMIURABGgwwMTM2MTkyNzQ4NDkiDLU8cXGXokn2dJzgWyqRA5t82BwvWjjXR1flrxPY1G8nb%2BmyZbhMX7bIDSshUvXOZWrYMuqnjFp50lwKRioT0tqSyswhE%2FmxcGN2dZffgFfm45Y15zW32QivQspJz2zpwJxFycBtjnRvl%2FMGegWgMTliaPfGzxGYLkpzI0cHFjLk%2BKaC50Jxtx51oChC%2BCytCTVfzOq2Ax%2BcOQ92r8%2FEVvUqeZR%2BTPUidVPdANT%2FJyfcDkVZSZzQz9EjBhPlfadpw5dBs4QJ%2BDdADV0MdhKltTlk%2FyXYCPqWqRloAtWd1nGtuRb2iTe6dG%2FjlvEdGxsyq3XSWVpxob44SfkNT25WtiGoWTrQta7tHUBAIeejr1qo89oGEttSf7d8Lku1wWROst97KwhMf%2B%2Bj34q6jzK8i1Hw8XE5vydIGbQfSR452%2FCUDzasjIErk2%2F0Ktvsz%2Bx3csi5j3IwrXlZf4YgORAmKN1LdQQkzS%2BV1sgEfBg4MiQjSsKotzm%2FUgXxu10BwEW2Dhb8oNMpsZ1FjdjbCQGOQD7Feifp2fVzXkXhF1DMwndWMOrpqf8FOusBKlCtIwN5UHYU%2F5Q2IWJVa2twlUdU6iZvdqJG%2FbyL1HncSkMTTf174kVtrd08ZtfhfQ%2B%2FGZMeT3%2BWmMgtiSxiN8zlfLWyyOmRNNNrcZLeamXU8gijNm5O%2FRQyUqS40M%2B09rACFWxFC6eSAj2%2BBOBxHA6bEgtgV3Z6D4uLX3zxwXXu%2BF%2BhhCTXgcbobecE2HXiCLYk05uES7bSCIeUoggVUmunssom%2Bu8yCYvg2qvqpHVNwChBmtVZLiGt79EkgpsqfgvK113rJiRtjBkxEHINtbd%2FcmRPwl2VUc1W%2BEpCc%2FxxQcCayPndzJKPSw%3D%3D\u0026amp;X-Amz-Signature=603189b14bbdaeb9d659954de86dfa5d134717684af765e4d52dbfa3b34d4994\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe below PoC will contain the following files:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eattacker_server.py:\u003c/strong\u003e  (Attackers python web server running on TCP port 70, responses to all GET requests with a 301 re-direct to \u003ca title=\"http://127.0.0.1\" href=\"/redirect?url=http%3A%2F%2F127.0.0.1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://127.0.0.1\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e on a rotating TCP port\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003erequest.py:\u003c/strong\u003e  (Attackers python script that will submit login credentials to obtain a session cookie and then send 20 post requests to upload a VCARD)\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003etest.vcard:\u003c/strong\u003e  (Attackers VCARD file based on the following example from Wikipedia \u003ca title=\"https://en.wikipedia.org/wiki/VCard\" href=\"/redirect?url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FVCard\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://en.wikipedia.org/wiki/VCard\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.  The file contains the following URL entry which is used to upload a photo to the contact entry:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e: PHOTO;VALUE=URI;TYPE=GIF:\u003ca title=\"http://testserver65.com:70/test.jpeg\" href=\"/redirect?url=http%3A%2F%2Ftestserver65.com%3A70%2Ftest.jpeg\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://testserver65.com:70/test.jpeg\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e.\u003c/strong\u003e  \u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003escript_results.txt:\u003c/strong\u003e  (Results of HTTP response times per-port)\u003c/p\u003e\n\n\u003ch3 id=\"poc\"\u003ePoC\u003c/h3\u003e\n\n\u003cp\u003e1) The \u003cstrong\u003eattacker_server.py\u003c/strong\u003e script will run on \u003cstrong\u003e192.168.0.6\u003c/strong\u003e (Attacker server), this will setup a Python webserver running on \u003cstrong\u003eport 70\u003c/strong\u003e and will await a GET request.\u003c/p\u003e\n\n\u003cp\u003e2) Netcat listeners are running on \u003cstrong\u003eTCP port 2, 6, 8, and 10\u003c/strong\u003e to simulate listening ports that will accept HTTP connections on the App Suite server.\u003c/p\u003e\n\n\u003cp\u003e3) \u003cstrong\u003erequest.py\u003c/strong\u003e will also run from the attacker server and connect to the target host \u003cstrong\u003e(192.168.0.16)\u003c/strong\u003e, this will POST \u003cstrong\u003etest.vcard\u003c/strong\u003e to the vulnerable endpoint multiples times, 20 by default.  Make sure the test.vcard file is in the script working directory or it won\u0026#39;t be uploaded.\u003c/p\u003e\n\n\u003cp\u003e4) The App Suite server will then carry out a DNS lookup to the photo URL which can be found in the vcard file\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003ca title=\"http://testserver65.com:70/test.jpeg\" href=\"/redirect?url=http%3A%2F%2Ftestserver65.com%3A70%2Ftest.jpeg\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://testserver65.com:70/test.jpeg\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/strong\u003e  \u003c/p\u003e\n\n\u003cp\u003eIn this case I added the following in /etc/hosts: \u003cstrong\u003e\u0026lt;Wi-Fi gateway IP address\u0026gt; testserver65.com\u003c/strong\u003e on the App Suite server.\u003c/p\u003e\n\n\u003cp\u003eThe reason I’ve added a public IP address is that the Java file will block a private address during the initial POST.   So I used the gateway address on my home router to port-forward port 70 to port 70 on the attacker system (192.168.0.6).  I was using port 80 for something else in this case, hence the port change.\u003c/p\u003e\n\n\u003cp\u003e5) The attacker webserver will send a \u003cstrong\u003e301\u003c/strong\u003e response back after each request with the following URL: \u003cstrong\u003e\u003ca title=\"http://127.0.0.1\" href=\"/redirect?url=http%3A%2F%2F127.0.0.1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://127.0.0.1\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u0026lt;port number\u0026gt;\u003c/strong\u003e.  The port number will rotate on every GET request.\u003c/p\u003e\n\n\u003cp\u003e6) The HTTP response time will then be logged to the \u003cstrong\u003escript_output.txt\u003c/strong\u003e file when a port connection attempt is made.  Sorted in descending order of response time.\u003c/p\u003e\n\n\u003ch3 id=\"results\"\u003eResults\u003c/h3\u003e\n\n\u003cp\u003e-Below are the results from the script_out.txt file.  As you can see, the listening ports on the App-Suite server have the longest response times.  (Port 2, 6, 8, 10)\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e2: [2.562081]\n6: [2.557924]\n10: [2.557095]\n8: [2.556498]\n1: [0.104492]\n3: [0.044996]\n9: [0.041817]\n4: [0.037032]\n7: [0.036648]\n5: [0.036015]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e-Below is an extract of the responses from the Netcat listeners on the App Suite server:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET / HTTP/1.1\nCache-Control: no-cache\nPragma: no-cache\nUser-Agent: Java/1.8.0_151\nHost: 127.0.0.1:2\nAccept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2\nConnection: keep-alive\n\nGET / HTTP/1.1\nCache-Control: no-cache\nPragma: no-cache\nUser-Agent: Java/1.8.0_151\nHost: 127.0.0.1:6\nAccept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2\nConnection: keep-alive\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe following HTTP re-direct codes were attempted, results below:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e300 - multiple choices, failed\n301 - moved permanently, working\n302 - found, working\n303 - see other, working\n305 - use proxy, working\n307 - temporary redirect, failed\n308 - permanent redirect, failed\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eAgain, as with the previous report, this vulnerability can mainly be used for blind port scanning and IP discovery on the target host and any internal networks the target host has access to.  There was no ability to extract files or access other data.\u003c/p\u003e\n\n\u003cp\u003eAll the best.\u003c/p\u003e\n","bounty_amount":"850.0","formatted_bounty":"$850","weakness":{"id":68,"name":"Server-Side Request Forgery (SSRF)"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":245094,"file_name":"test.vcard","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/245/094/01a8533dfae6d87ce83a32931ac0d5b410198bbf/test.vcard?response-content-disposition=attachment%3B%20filename%3D%22test.vcard%22%3B%20filename%2A%3DUTF-8%27%27test.vcard\u0026response-content-type=text%2Fvcard\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ25CUMV77%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T052708Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIAzPBxfjhI%2FOiR%2B1g7qgHtu%2BTSWR72ZbKmRPdv61x9tZAiEA7d5guv7RrcybHHoMbJ5xcSYkf5cIncRQif%2BDwrhUxL4qtAMIURABGgwwMTM2MTkyNzQ4NDkiDLU8cXGXokn2dJzgWyqRA5t82BwvWjjXR1flrxPY1G8nb%2BmyZbhMX7bIDSshUvXOZWrYMuqnjFp50lwKRioT0tqSyswhE%2FmxcGN2dZffgFfm45Y15zW32QivQspJz2zpwJxFycBtjnRvl%2FMGegWgMTliaPfGzxGYLkpzI0cHFjLk%2BKaC50Jxtx51oChC%2BCytCTVfzOq2Ax%2BcOQ92r8%2FEVvUqeZR%2BTPUidVPdANT%2FJyfcDkVZSZzQz9EjBhPlfadpw5dBs4QJ%2BDdADV0MdhKltTlk%2FyXYCPqWqRloAtWd1nGtuRb2iTe6dG%2FjlvEdGxsyq3XSWVpxob44SfkNT25WtiGoWTrQta7tHUBAIeejr1qo89oGEttSf7d8Lku1wWROst97KwhMf%2B%2Bj34q6jzK8i1Hw8XE5vydIGbQfSR452%2FCUDzasjIErk2%2F0Ktvsz%2Bx3csi5j3IwrXlZf4YgORAmKN1LdQQkzS%2BV1sgEfBg4MiQjSsKotzm%2FUgXxu10BwEW2Dhb8oNMpsZ1FjdjbCQGOQD7Feifp2fVzXkXhF1DMwndWMOrpqf8FOusBKlCtIwN5UHYU%2F5Q2IWJVa2twlUdU6iZvdqJG%2FbyL1HncSkMTTf174kVtrd08ZtfhfQ%2B%2FGZMeT3%2BWmMgtiSxiN8zlfLWyyOmRNNNrcZLeamXU8gijNm5O%2FRQyUqS40M%2B09rACFWxFC6eSAj2%2BBOBxHA6bEgtgV3Z6D4uLX3zxwXXu%2BF%2BhhCTXgcbobecE2HXiCLYk05uES7bSCIeUoggVUmunssom%2Bu8yCYvg2qvqpHVNwChBmtVZLiGt79EkgpsqfgvK113rJiRtjBkxEHINtbd%2FcmRPwl2VUc1W%2BEpCc%2FxxQcCayPndzJKPSw%3D%3D\u0026X-Amz-Signature=72d3ea4cd65c3a662f55b7de122615cc9cebe5c3c7016231d0f31d9347c96ff9","file_size":605,"type":"text/vcard"},{"id":245095,"file_name":"attacker_server.py","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/245/095/9ae4656e6eaa3912905dcaf86cca5a21ce9424e6/attacker_server.py?response-content-disposition=attachment%3B%20filename%3D%22attacker_server.py%22%3B%20filename%2A%3DUTF-8%27%27attacker_server.py\u0026response-content-type=text%2Fx-python\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ25CUMV77%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T052708Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIAzPBxfjhI%2FOiR%2B1g7qgHtu%2BTSWR72ZbKmRPdv61x9tZAiEA7d5guv7RrcybHHoMbJ5xcSYkf5cIncRQif%2BDwrhUxL4qtAMIURABGgwwMTM2MTkyNzQ4NDkiDLU8cXGXokn2dJzgWyqRA5t82BwvWjjXR1flrxPY1G8nb%2BmyZbhMX7bIDSshUvXOZWrYMuqnjFp50lwKRioT0tqSyswhE%2FmxcGN2dZffgFfm45Y15zW32QivQspJz2zpwJxFycBtjnRvl%2FMGegWgMTliaPfGzxGYLkpzI0cHFjLk%2BKaC50Jxtx51oChC%2BCytCTVfzOq2Ax%2BcOQ92r8%2FEVvUqeZR%2BTPUidVPdANT%2FJyfcDkVZSZzQz9EjBhPlfadpw5dBs4QJ%2BDdADV0MdhKltTlk%2FyXYCPqWqRloAtWd1nGtuRb2iTe6dG%2FjlvEdGxsyq3XSWVpxob44SfkNT25WtiGoWTrQta7tHUBAIeejr1qo89oGEttSf7d8Lku1wWROst97KwhMf%2B%2Bj34q6jzK8i1Hw8XE5vydIGbQfSR452%2FCUDzasjIErk2%2F0Ktvsz%2Bx3csi5j3IwrXlZf4YgORAmKN1LdQQkzS%2BV1sgEfBg4MiQjSsKotzm%2FUgXxu10BwEW2Dhb8oNMpsZ1FjdjbCQGOQD7Feifp2fVzXkXhF1DMwndWMOrpqf8FOusBKlCtIwN5UHYU%2F5Q2IWJVa2twlUdU6iZvdqJG%2FbyL1HncSkMTTf174kVtrd08ZtfhfQ%2B%2FGZMeT3%2BWmMgtiSxiN8zlfLWyyOmRNNNrcZLeamXU8gijNm5O%2FRQyUqS40M%2B09rACFWxFC6eSAj2%2BBOBxHA6bEgtgV3Z6D4uLX3zxwXXu%2BF%2BhhCTXgcbobecE2HXiCLYk05uES7bSCIeUoggVUmunssom%2Bu8yCYvg2qvqpHVNwChBmtVZLiGt79EkgpsqfgvK113rJiRtjBkxEHINtbd%2FcmRPwl2VUc1W%2BEpCc%2FxxQcCayPndzJKPSw%3D%3D\u0026X-Amz-Signature=1f98edf4c96a67aaaeb1c1f72b2493d584e7732765a6746fa1720958e86466e4","file_size":1006,"type":"text/x-python"},{"id":245096,"file_name":"PhotoMapping.java","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/245/096/cc45856826badd5c756951768938a30f9e7d0d61/PhotoMapping.java?response-content-disposition=attachment%3B%20filename%3D%22PhotoMapping.java%22%3B%20filename%2A%3DUTF-8%27%27PhotoMapping.java\u0026response-content-type=text%2Fplain\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ25CUMV77%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T052708Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIAzPBxfjhI%2FOiR%2B1g7qgHtu%2BTSWR72ZbKmRPdv61x9tZAiEA7d5guv7RrcybHHoMbJ5xcSYkf5cIncRQif%2BDwrhUxL4qtAMIURABGgwwMTM2MTkyNzQ4NDkiDLU8cXGXokn2dJzgWyqRA5t82BwvWjjXR1flrxPY1G8nb%2BmyZbhMX7bIDSshUvXOZWrYMuqnjFp50lwKRioT0tqSyswhE%2FmxcGN2dZffgFfm45Y15zW32QivQspJz2zpwJxFycBtjnRvl%2FMGegWgMTliaPfGzxGYLkpzI0cHFjLk%2BKaC50Jxtx51oChC%2BCytCTVfzOq2Ax%2BcOQ92r8%2FEVvUqeZR%2BTPUidVPdANT%2FJyfcDkVZSZzQz9EjBhPlfadpw5dBs4QJ%2BDdADV0MdhKltTlk%2FyXYCPqWqRloAtWd1nGtuRb2iTe6dG%2FjlvEdGxsyq3XSWVpxob44SfkNT25WtiGoWTrQta7tHUBAIeejr1qo89oGEttSf7d8Lku1wWROst97KwhMf%2B%2Bj34q6jzK8i1Hw8XE5vydIGbQfSR452%2FCUDzasjIErk2%2F0Ktvsz%2Bx3csi5j3IwrXlZf4YgORAmKN1LdQQkzS%2BV1sgEfBg4MiQjSsKotzm%2FUgXxu10BwEW2Dhb8oNMpsZ1FjdjbCQGOQD7Feifp2fVzXkXhF1DMwndWMOrpqf8FOusBKlCtIwN5UHYU%2F5Q2IWJVa2twlUdU6iZvdqJG%2FbyL1HncSkMTTf174kVtrd08ZtfhfQ%2B%2FGZMeT3%2BWmMgtiSxiN8zlfLWyyOmRNNNrcZLeamXU8gijNm5O%2FRQyUqS40M%2B09rACFWxFC6eSAj2%2BBOBxHA6bEgtgV3Z6D4uLX3zxwXXu%2BF%2BhhCTXgcbobecE2HXiCLYk05uES7bSCIeUoggVUmunssom%2Bu8yCYvg2qvqpHVNwChBmtVZLiGt79EkgpsqfgvK113rJiRtjBkxEHINtbd%2FcmRPwl2VUc1W%2BEpCc%2FxxQcCayPndzJKPSw%3D%3D\u0026X-Amz-Signature=7050adbb2b3cb5c845eb94c7b65ae1651d74af566b63f7c16411d219f3176481","file_size":26063,"type":"text/plain"},{"id":245098,"file_name":"request.py","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/245/098/059b47b79d49553bd02d086ed83b4ecb37c716d5/request.py?response-content-disposition=attachment%3B%20filename%3D%22request.py%22%3B%20filename%2A%3DUTF-8%27%27request.py\u0026response-content-type=text%2Fx-python\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ25CUMV77%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T052708Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIAzPBxfjhI%2FOiR%2B1g7qgHtu%2BTSWR72ZbKmRPdv61x9tZAiEA7d5guv7RrcybHHoMbJ5xcSYkf5cIncRQif%2BDwrhUxL4qtAMIURABGgwwMTM2MTkyNzQ4NDkiDLU8cXGXokn2dJzgWyqRA5t82BwvWjjXR1flrxPY1G8nb%2BmyZbhMX7bIDSshUvXOZWrYMuqnjFp50lwKRioT0tqSyswhE%2FmxcGN2dZffgFfm45Y15zW32QivQspJz2zpwJxFycBtjnRvl%2FMGegWgMTliaPfGzxGYLkpzI0cHFjLk%2BKaC50Jxtx51oChC%2BCytCTVfzOq2Ax%2BcOQ92r8%2FEVvUqeZR%2BTPUidVPdANT%2FJyfcDkVZSZzQz9EjBhPlfadpw5dBs4QJ%2BDdADV0MdhKltTlk%2FyXYCPqWqRloAtWd1nGtuRb2iTe6dG%2FjlvEdGxsyq3XSWVpxob44SfkNT25WtiGoWTrQta7tHUBAIeejr1qo89oGEttSf7d8Lku1wWROst97KwhMf%2B%2Bj34q6jzK8i1Hw8XE5vydIGbQfSR452%2FCUDzasjIErk2%2F0Ktvsz%2Bx3csi5j3IwrXlZf4YgORAmKN1LdQQkzS%2BV1sgEfBg4MiQjSsKotzm%2FUgXxu10BwEW2Dhb8oNMpsZ1FjdjbCQGOQD7Feifp2fVzXkXhF1DMwndWMOrpqf8FOusBKlCtIwN5UHYU%2F5Q2IWJVa2twlUdU6iZvdqJG%2FbyL1HncSkMTTf174kVtrd08ZtfhfQ%2B%2FGZMeT3%2BWmMgtiSxiN8zlfLWyyOmRNNNrcZLeamXU8gijNm5O%2FRQyUqS40M%2B09rACFWxFC6eSAj2%2BBOBxHA6bEgtgV3Z6D4uLX3zxwXXu%2BF%2BhhCTXgcbobecE2HXiCLYk05uES7bSCIeUoggVUmunssom%2Bu8yCYvg2qvqpHVNwChBmtVZLiGt79EkgpsqfgvK113rJiRtjBkxEHINtbd%2FcmRPwl2VUc1W%2BEpCc%2FxxQcCayPndzJKPSw%3D%3D\u0026X-Amz-Signature=9eefed12e9f9b8b7d80eb99357a05efccd139dc8d8ff5b988f99f01a9a60099d","file_size":2645,"type":"text/x-python"},{"id":245099,"file_name":"script_output.txt","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/245/099/7f90909d7441369c345094ee42e478ca5aa106de/script_output.txt?response-content-disposition=attachment%3B%20filename%3D%22script_output.txt%22%3B%20filename%2A%3DUTF-8%27%27script_output.txt\u0026response-content-type=text%2Fplain\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ25CUMV77%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T052708Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIAzPBxfjhI%2FOiR%2B1g7qgHtu%2BTSWR72ZbKmRPdv61x9tZAiEA7d5guv7RrcybHHoMbJ5xcSYkf5cIncRQif%2BDwrhUxL4qtAMIURABGgwwMTM2MTkyNzQ4NDkiDLU8cXGXokn2dJzgWyqRA5t82BwvWjjXR1flrxPY1G8nb%2BmyZbhMX7bIDSshUvXOZWrYMuqnjFp50lwKRioT0tqSyswhE%2FmxcGN2dZffgFfm45Y15zW32QivQspJz2zpwJxFycBtjnRvl%2FMGegWgMTliaPfGzxGYLkpzI0cHFjLk%2BKaC50Jxtx51oChC%2BCytCTVfzOq2Ax%2BcOQ92r8%2FEVvUqeZR%2BTPUidVPdANT%2FJyfcDkVZSZzQz9EjBhPlfadpw5dBs4QJ%2BDdADV0MdhKltTlk%2FyXYCPqWqRloAtWd1nGtuRb2iTe6dG%2FjlvEdGxsyq3XSWVpxob44SfkNT25WtiGoWTrQta7tHUBAIeejr1qo89oGEttSf7d8Lku1wWROst97KwhMf%2B%2Bj34q6jzK8i1Hw8XE5vydIGbQfSR452%2FCUDzasjIErk2%2F0Ktvsz%2Bx3csi5j3IwrXlZf4YgORAmKN1LdQQkzS%2BV1sgEfBg4MiQjSsKotzm%2FUgXxu10BwEW2Dhb8oNMpsZ1FjdjbCQGOQD7Feifp2fVzXkXhF1DMwndWMOrpqf8FOusBKlCtIwN5UHYU%2F5Q2IWJVa2twlUdU6iZvdqJG%2FbyL1HncSkMTTf174kVtrd08ZtfhfQ%2B%2FGZMeT3%2BWmMgtiSxiN8zlfLWyyOmRNNNrcZLeamXU8gijNm5O%2FRQyUqS40M%2B09rACFWxFC6eSAj2%2BBOBxHA6bEgtgV3Z6D4uLX3zxwXXu%2BF%2BhhCTXgcbobecE2HXiCLYk05uES7bSCIeUoggVUmunssom%2Bu8yCYvg2qvqpHVNwChBmtVZLiGt79EkgpsqfgvK113rJiRtjBkxEHINtbd%2FcmRPwl2VUc1W%2BEpCc%2FxxQcCayPndzJKPSw%3D%3D\u0026X-Amz-Signature=cc298292b5dd995ea250f3bfb443668a2b80ed005d37ea7bd810dc7426a7e315","file_size":141,"type":"text/plain"},{"id":245109,"file_name":"poc_setup.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/245/109/f0a031d1fc0a1dede208445cdc98dd3f9b4733fe/poc_setup.png?response-content-disposition=attachment%3B%20filename%3D%22poc_setup.png%22%3B%20filename%2A%3DUTF-8%27%27poc_setup.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ25CUMV77%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T052708Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIAzPBxfjhI%2FOiR%2B1g7qgHtu%2BTSWR72ZbKmRPdv61x9tZAiEA7d5guv7RrcybHHoMbJ5xcSYkf5cIncRQif%2BDwrhUxL4qtAMIURABGgwwMTM2MTkyNzQ4NDkiDLU8cXGXokn2dJzgWyqRA5t82BwvWjjXR1flrxPY1G8nb%2BmyZbhMX7bIDSshUvXOZWrYMuqnjFp50lwKRioT0tqSyswhE%2FmxcGN2dZffgFfm45Y15zW32QivQspJz2zpwJxFycBtjnRvl%2FMGegWgMTliaPfGzxGYLkpzI0cHFjLk%2BKaC50Jxtx51oChC%2BCytCTVfzOq2Ax%2BcOQ92r8%2FEVvUqeZR%2BTPUidVPdANT%2FJyfcDkVZSZzQz9EjBhPlfadpw5dBs4QJ%2BDdADV0MdhKltTlk%2FyXYCPqWqRloAtWd1nGtuRb2iTe6dG%2FjlvEdGxsyq3XSWVpxob44SfkNT25WtiGoWTrQta7tHUBAIeejr1qo89oGEttSf7d8Lku1wWROst97KwhMf%2B%2Bj34q6jzK8i1Hw8XE5vydIGbQfSR452%2FCUDzasjIErk2%2F0Ktvsz%2Bx3csi5j3IwrXlZf4YgORAmKN1LdQQkzS%2BV1sgEfBg4MiQjSsKotzm%2FUgXxu10BwEW2Dhb8oNMpsZ1FjdjbCQGOQD7Feifp2fVzXkXhF1DMwndWMOrpqf8FOusBKlCtIwN5UHYU%2F5Q2IWJVa2twlUdU6iZvdqJG%2FbyL1HncSkMTTf174kVtrd08ZtfhfQ%2B%2FGZMeT3%2BWmMgtiSxiN8zlfLWyyOmRNNNrcZLeamXU8gijNm5O%2FRQyUqS40M%2B09rACFWxFC6eSAj2%2BBOBxHA6bEgtgV3Z6D4uLX3zxwXXu%2BF%2BhhCTXgcbobecE2HXiCLYk05uES7bSCIeUoggVUmunssom%2Bu8yCYvg2qvqpHVNwChBmtVZLiGt79EkgpsqfgvK113rJiRtjBkxEHINtbd%2FcmRPwl2VUc1W%2BEpCc%2FxxQcCayPndzJKPSw%3D%3D\u0026X-Amz-Signature=603189b14bbdaeb9d659954de86dfa5d134717684af765e4d52dbfa3b34d4994","file_size":48368,"type":"image/png"}],"allow_singular_disclosure_at":null,"vote_count":49,"voters":["base_64","sameerphad72","mygf","eveeez","masonhck357","imranhudaa","ifrahiman","trieulieuf9","tems","salmanjamal","and 39 more..."],"severity":{"rating":"medium","author_type":"Team"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":2214458,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thanks for the report, we're going to look in to this as we made recent changes to a central HTTP handling library as a response to #293847.","markdown_message":"\u003cp\u003eThanks for the report, we\u0026#39;re going to look in to this as we made recent changes to a central HTTP handling library as a response to \u003ca href=\"/reports/293847\"\u003e#293847\u003c/a\u003e.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-12-11T14:44:31.394Z","updated_at":"2017-12-11T14:44:31.394Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2218523,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"No problem, let me know if you need any more info from me.\n\nAll the best.","markdown_message":"\u003cp\u003eNo problem, let me know if you need any more info from me.\u003c/p\u003e\n\n\u003cp\u003eAll the best.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-12-12T21:51:33.993Z","updated_at":"2017-12-12T21:51:33.993Z","actor":{"username":"logan5","cleared":false,"url":"/logan5","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/110/421/4eacc0e36a20a036380e88612bb8755d1dddda08_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2222226,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"We solved this vulnerability internally and will provide a backport to in-production releases during the next weeks.","markdown_message":"\u003cp\u003eWe solved this vulnerability internally and will provide a backport to in-production releases during the next weeks.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-12-14T10:11:15.332Z","updated_at":"2017-12-14T10:11:15.332Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"logan5","url":"/logan5"},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2222227,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2017-12-14T10:11:22.345Z","updated_at":"2017-12-14T10:11:22.345Z","actor":{"url":"/open-xchange","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Open-Xchange"}},"bounty_amount":"850.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"open-xchange","collaborator":{"username":"logan5","url":"/logan5"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2222503,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for the quick triage and bounty award!  I have one and possibly two additional SSRF vulnerabilities that I have discovered, would you prefer that I re-test them after you backport fixes in the coming weeks or submit them just now?\n\nAll the best.","markdown_message":"\u003cp\u003eThanks for the quick triage and bounty award!  I have one and possibly two additional SSRF vulnerabilities that I have discovered, would you prefer that I re-test them after you backport fixes in the coming weeks or submit them just now?\u003c/p\u003e\n\n\u003cp\u003eAll the best.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-12-14T12:45:30.338Z","updated_at":"2017-12-14T12:45:30.338Z","actor":{"username":"logan5","cleared":false,"url":"/logan5","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/110/421/4eacc0e36a20a036380e88612bb8755d1dddda08_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2222513,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"We've an internal build ready every couple of minutes and can validate your reports against it if you're fine with that approach. Doing this for two more reports should not be a problem for us.","markdown_message":"\u003cp\u003eWe\u0026#39;ve an internal build ready every couple of minutes and can validate your reports against it if you\u0026#39;re fine with that approach. Doing this for two more reports should not be a problem for us.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-12-14T12:49:47.614Z","updated_at":"2017-12-14T12:49:47.614Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2222545,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Sure, no problem for me.  I'll write them up and send them on in the next couple of days.\n\nCheers.","markdown_message":"\u003cp\u003eSure, no problem for me.  I\u0026#39;ll write them up and send them on in the next couple of days.\u003c/p\u003e\n\n\u003cp\u003eCheers.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-12-14T13:08:48.397Z","updated_at":"2017-12-14T13:08:48.397Z","actor":{"username":"logan5","cleared":false,"url":"/logan5","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/110/421/4eacc0e36a20a036380e88612bb8755d1dddda08_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4916987,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2019-05-24T12:18:19.732Z","updated_at":"2019-05-24T12:18:19.732Z","additional_data":{"old_severity":null,"new_severity":"Medium","old_severity_id":null,"new_severity_id":401089},"actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5253102,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-07-04T11:11:21.645Z","updated_at":"2019-07-04T11:11:21.645Z","first_to_agree":true,"actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5258577,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-07-05T09:23:06.170Z","updated_at":"2019-07-05T09:23:06.170Z","actor":{"username":"logan5","cleared":false,"url":"/logan5","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/110/421/4eacc0e36a20a036380e88612bb8755d1dddda08_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5258578,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-07-05T09:23:06.262Z","updated_at":"2019-07-05T09:23:06.262Z","actor":{"username":"logan5","cleared":false,"url":"/logan5","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/110/421/4eacc0e36a20a036380e88612bb8755d1dddda08_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}