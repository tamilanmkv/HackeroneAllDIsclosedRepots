{"id":299135,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yOTkxMzU=","url":"https://hackerone.com/reports/299135","title":"SSRF - RSS feed, blacklist bypass (301 re-direct)","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2017-12-18T20:30:18.422Z","submitted_at":"2017-12-18T20:30:18.422Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"logan5","url":"/logan5","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/110/421/4eacc0e36a20a036380e88612bb8755d1dddda08_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":8906,"url":"https://hackerone.com/open-xchange","handle":"open-xchange","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Open-Xchange","twitter_handle":"openxchange","website":"https://www.open-xchange.com/","about":"Messaging, collaboration and office productivity software for service providers"}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2019-07-05T09:10:09.782Z","bug_reporter_agreed_on_going_public_at":"2019-07-05T09:10:09.667Z","team_member_agreed_on_going_public_at":"2019-07-04T11:18:12.976Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"FYI - Tested on local installation of App Suite 7.8.4 REV 17\n\nHello,\n\nThere appears to be another SSRF re-direct vulnerability, similar to my earlier reports that will allow scanning of the App Suite local ports or internal hosts, regardless of blacklist protection in place.\n\nThe endpoint is the following which is used to import RSS feeds into the user’s portal view:\n\n**http://\u003cdomain\u003e/appsuite/api/rss?\u003csession\u003e**\n\nPre-requisites to exploit this vulnerability are the following:\n\n-Attacker server\n-Attacker controlled domain name\n-Valid session from login or anonymous link\n\n###Summary\n\nViewing the commit history of the backend source code, I came upon the following commit which put in place a blacklist to prevent the probing of localhost ports and internal IP addresses\n```\ncommit 8891d6999d967264376bafd86451dad8e419e4db\nAuthor: Martin Schneider \u003cmartin.schneider@open-xchange.com\u003e\nDate:   Wed Apr 20 10:09:51 2016 +0200\n\n    Fix for bug 45402: possibility to blacklist hosts and whitelist ports for RSS feeds to prevent SSRFs\n\n    (cherry picked from commit 072dc501f1f09d2cd567c3b3eaeb68eaa203e40b)\n```\n\nThis was dependent on what is entered in the following configuration property: **com.openexchange.messaging.rss.feed.blacklist** which is in the following file: **/opt/open-xchange/etc/rssmessaging.properties**\n\n```\n# Specifies a black-list for those hosts that are covered by denoted IP range; e.g. \"127.0.0.1-127.255.255.255, localhost, internal.domain.org\"\n# An empty value means no black-listing is active\n# Default is \"127.0.0.1-127.255.255.255,localhost\"\ncom.openexchange.messaging.rss.feed.blacklist=127.0.0.1-127.255.255.255,localhost,192.168.0.10\n```\n\nThe issue here is that regardless of the IP addresses that are blacklisted, this is bypassed when the App Suite server follows a 301 re-direct from the attacker’s server to a localhost port or internal IP address.\n\n###PoC Setup\n\n{F247933}\n\n\nThe below PoC will contain the following files:\n\n**attacker_server.py** (Attackers python web server running on TCP port 80, responses to all GET requests with a **301** re-direct to **http://192.168.0.10** on a rotating TCP port\n\n**request.py** (Attackers python script that will submit login credentials to obtain a session cookie and then send 20 PUT requests to add a RSS feed URL)\n\n**script_results.txt** (Results of HTTP responses against port number)\n\n\n###PoC\n\n-The **attacker_server.py** script will run on **192.168.0.6 (Attacker server)**, this will setup a Python webserver running on **port 80** and will await a GET request.\n\n-**request.py** will also run from the attacker server and connect to the App Suite server **(192.168.0.16)**, this will send a PUT request multiple times, 20 by default, to the RSS endpoint.\n\n-The App Suite server will then carry out a DNS lookup to the feedurl, this will be http://testserver64.com\nIn this case I added the following in **/etc/hosts: 192.168.0.6 testserver64.com**\n\n-The attacker webserver will send a 301 response back with the following URL: **http://192.168.0.10:\u003cport number\u003e.**  The port number will rotate on every GET request.\n\n-Netcat listeners are running on TCP port **2, 6, 8, and 10** to simulate listening ports that will accept HTTP connections on the target host: **192.168.0.10**\n\n -The HTTP response text will then be analysed to determine if a port is open or not using the following code in **requests.py**\n\n```\n# Check HTTP response text\n \n    if \"Cannot connect to RSS with URL\" in url_response:\n        return_message = \"BLACKLIST MATCH, ABORTED\"\n \n    elif \"Invalid RSS URL or not well-formed XML content provided by URL\" in url_response:\n        return_message = \"HTTP RESPONSE RECEIVED (INVALID RSS), PORT OPEN\"\n \n    elif \"Timeout while reading the RSS feed from URL\" in url_response:\n        return_message = \"PORT TIMEOUT, NETCAT LISTENER, PORT OPEN\"\n \n    elif \"Connection refused (Connection refused)\" in url_response:\n        return_message = \"CONNECTION REFUSED, PORT CLOSED\"\n \n    elif \"Unexpected end of file from server\" in url_response:\n        return_message = \"HTTP RESPONSE RECEIVED (EOF ERROR), PORT OPEN\"\n \n    elif \"\\\"data\\\":[]\" in url_response:\n        return_message = \"HTTP RESPONSE RECEIVED (EMPTY ARRAY), PORT OPEN\"\n \n    elif \"javax.net.ssl.HttpsURLConnection\" in url_response:\n        return_message = \"HTTPS RESPONSE RECEIVED (SSL ERROR), PORT OPEN\"\n```\n\n\n###Results:\n\nBelow are the results from the scan of 20 ports, timeouts represent the Netcat listeners while connection refused means the ports were closed.\n\n```\nPort: 1 - Response:  ['CONNECTION REFUSED, PORT CLOSED']\nPort: 3 - Response:  ['CONNECTION REFUSED, PORT CLOSED']\nPort: 4 - Response:  ['CONNECTION REFUSED, PORT CLOSED']\nPort: 5 - Response:  ['CONNECTION REFUSED, PORT CLOSED']\nPort: 7 - Response:  ['CONNECTION REFUSED, PORT CLOSED']\nPort: 9 - Response:  ['CONNECTION REFUSED, PORT CLOSED']\nPort: 11 - Response:  ['CONNECTION REFUSED, PORT CLOSED']\nPort: 12 - Response:  ['CONNECTION REFUSED, PORT CLOSED']\nPort: 13 - Response:  ['CONNECTION REFUSED, PORT CLOSED']\nPort: 14 - Response:  ['CONNECTION REFUSED, PORT CLOSED']\nPort: 15 - Response:  ['CONNECTION REFUSED, PORT CLOSED']\nPort: 16 - Response:  ['CONNECTION REFUSED, PORT CLOSED']\nPort: 17 - Response:  ['CONNECTION REFUSED, PORT CLOSED']\nPort: 18 - Response:  ['CONNECTION REFUSED, PORT CLOSED']\nPort: 19 - Response:  ['CONNECTION REFUSED, PORT CLOSED']\nPort: 20 - Response:  ['CONNECTION REFUSED, PORT CLOSED']\nPort: 2 - Response:  ['PORT TIMEOUT, NETCAT LISTENER, PORT OPEN']\nPort: 6 - Response:  ['PORT TIMEOUT, NETCAT LISTENER, PORT OPEN']\nPort: 8 - Response:  ['PORT TIMEOUT, NETCAT LISTENER, PORT OPEN']\nPort: 10 - Response:  ['PORT TIMEOUT, NETCAT LISTENER, PORT OPEN']\n```\n\nThe following is received from the netcat listener on 192.168.0.10:\n```\nGET / HTTP/1.1\nAccept-Encoding: gzip\nUser-Agent: Rome Client (http://tinyurl.com/64t5n) Ver: UNKNOWN\nCache-Control: no-cache\nPragma: no-cache\nHost: 192.168.0.10:10\nAccept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2\nConnection: keep-alive\n\n```\n\n## Impact\n\nThis is an improved SSRF compared to earlier reports as you are able to receive more detailed response error messages compared to a blind reply where you have to analyse HTTP response times.  You can also scan multiple ports, where my other report (#299130, IP address format bypass), was restricted to 80/443.  Again, this is limited to reconnaissance only and I was not able to extract any data from the server.","vulnerability_information_html":"\u003cp\u003eFYI - Tested on local installation of App Suite 7.8.4 REV 17\u003c/p\u003e\n\n\u003cp\u003eHello,\u003c/p\u003e\n\n\u003cp\u003eThere appears to be another SSRF re-direct vulnerability, similar to my earlier reports that will allow scanning of the App Suite local ports or internal hosts, regardless of blacklist protection in place.\u003c/p\u003e\n\n\u003cp\u003eThe endpoint is the following which is used to import RSS feeds into the user’s portal view:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003ehttp://\u0026lt;domain\u0026gt;/appsuite/api/rss?\u0026lt;session\u0026gt;\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003ePre-requisites to exploit this vulnerability are the following:\u003c/p\u003e\n\n\u003cp\u003e-Attacker server\u003cbr\u003e\n-Attacker controlled domain name\u003cbr\u003e\n-Valid session from login or anonymous link\u003c/p\u003e\n\n\u003ch3 id=\"summary\"\u003eSummary\u003c/h3\u003e\n\n\u003cp\u003eViewing the commit history of the backend source code, I came upon the following commit which put in place a blacklist to prevent the probing of localhost ports and internal IP addresses\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ecommit 8891d6999d967264376bafd86451dad8e419e4db\nAuthor: Martin Schneider \u0026lt;martin.schneider@open-xchange.com\u0026gt;\nDate:   Wed Apr 20 10:09:51 2016 +0200\n\n    Fix for bug 45402: possibility to blacklist hosts and whitelist ports for RSS feeds to prevent SSRFs\n\n    (cherry picked from commit 072dc501f1f09d2cd567c3b3eaeb68eaa203e40b)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis was dependent on what is entered in the following configuration property: \u003cstrong\u003ecom.openexchange.messaging.rss.feed.blacklist\u003c/strong\u003e which is in the following file: \u003cstrong\u003e/opt/open-xchange/etc/rssmessaging.properties\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e# Specifies a black-list for those hosts that are covered by denoted IP range; e.g. \u0026quot;127.0.0.1-127.255.255.255, localhost, internal.domain.org\u0026quot;\n# An empty value means no black-listing is active\n# Default is \u0026quot;127.0.0.1-127.255.255.255,localhost\u0026quot;\ncom.openexchange.messaging.rss.feed.blacklist=127.0.0.1-127.255.255.255,localhost,192.168.0.10\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe issue here is that regardless of the IP addresses that are blacklisted, this is bypassed when the App Suite server follows a 301 re-direct from the attacker’s server to a localhost port or internal IP address.\u003c/p\u003e\n\n\u003ch3 id=\"poc-setup\"\u003ePoC Setup\u003c/h3\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"poc.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/247/933/23d0bb6d1dad1e6520c8ccb85d22141b52a59bdb/poc.png?response-content-disposition=attachment%3B%20filename%3D%22poc.png%22%3B%20filename%2A%3DUTF-8%27%27poc.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ2UMPB2FX%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T052807Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJr%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIEq9neBunEjsdY7f8cNZfYtjkYnfx7sYXIBk82UycrktAiEA5w10R4CJv%2FQIiYTXv1ZP8q%2BbScvvzy7qwcG%2BmPmKCXMqtAMIUxABGgwwMTM2MTkyNzQ4NDkiDKX6CTSGAGf6Bt5yHyqRA9qW1WRQYe7JztYb6rdSeSRyzKgf4LxEu42JMoyPyy0VqqdaIdaW%2F5Oe%2FZcBqKJkPjfrnsLv1E3Cttn6QZ2fsMawdDGLyKyEEvAx6LbD4TYD1QOy0YJIw6j32Nt3V4psvzyU384FsJYLymiqMGAqTzIuUS4QNvTcHn%2BFoOZvS%2F06fP5YWj%2BxpW%2BELDyBb5CFIWqKXYmkW%2BPv4IxFiMVfFF4KM80ZKVGfyJ7nRaRwvjM5YUJYHOlvXjFuPBSC3IYIgEZYlopEqTolZ1OQ2zbi1yDB%2FWl1rx7i7cbCVK6zJwPdLcPRBOa7jlMN0jlHdNPzjyKxdEaNBy7Cyflyw%2FZCl7X1dB7yuSBF8YK2st4h%2FZchseLh%2BjukipjtpVl5nDjO8BSu5evt1V1lFzADomlTKShrSgjmej1gvXmULpbdNuEwc3vMl328MfuwtHHSSvzZo5xxP0U1cq9fhM0Ztcea1ZRpQDZR4DB1jRqdjeMIXNuuwv3G7Uotj1VrvA87zW9Og6gQ9VN7fQSdOpurQFAV2WvRMIuSqv8FOusB%2B%2BEh7xquKUpKrZEfrLl0yLcAZyezk5OlnVLaoE%2BCU7%2F1YWDwq4fJ%2Fzqx58r%2Ffgzx%2FRuGFLAoCPIl7GI47ntqpCuRo5kjknXh3Vhm0Ds%2B9y0Uo9mgVKhl6XjEqADeRJOm5JpIvTZkPibWah%2FFXooiOsIWnpbe3xZbkrh62wdx0iVuonbBNy6Z0vYXXREkzeNyKh%2Fx0i0DwAehfYiLehqkIm1GqvDnaSiQ0dTRzOsrEnXwNhRtDRaBDDLvFXHGy3Xm8ucb70jki0U1otEIUfIG%2Fnfsrs7zhSOcLfi6%2B4aytuy%2FrSFLmVnwIpfIzQ%3D%3D\u0026amp;X-Amz-Signature=912c87476cdb099a938ebc90bf502bcb059c27ead9581dd9e1e568023994fa0e\" data-attachment-type=\"image/png\"\u003e\u003cimg src=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/247/933/23d0bb6d1dad1e6520c8ccb85d22141b52a59bdb/poc.png?response-content-disposition=attachment%3B%20filename%3D%22poc.png%22%3B%20filename%2A%3DUTF-8%27%27poc.png\u0026amp;response-content-type=image%2Fpng\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQ2UMPB2FX%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T052807Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJr%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIEq9neBunEjsdY7f8cNZfYtjkYnfx7sYXIBk82UycrktAiEA5w10R4CJv%2FQIiYTXv1ZP8q%2BbScvvzy7qwcG%2BmPmKCXMqtAMIUxABGgwwMTM2MTkyNzQ4NDkiDKX6CTSGAGf6Bt5yHyqRA9qW1WRQYe7JztYb6rdSeSRyzKgf4LxEu42JMoyPyy0VqqdaIdaW%2F5Oe%2FZcBqKJkPjfrnsLv1E3Cttn6QZ2fsMawdDGLyKyEEvAx6LbD4TYD1QOy0YJIw6j32Nt3V4psvzyU384FsJYLymiqMGAqTzIuUS4QNvTcHn%2BFoOZvS%2F06fP5YWj%2BxpW%2BELDyBb5CFIWqKXYmkW%2BPv4IxFiMVfFF4KM80ZKVGfyJ7nRaRwvjM5YUJYHOlvXjFuPBSC3IYIgEZYlopEqTolZ1OQ2zbi1yDB%2FWl1rx7i7cbCVK6zJwPdLcPRBOa7jlMN0jlHdNPzjyKxdEaNBy7Cyflyw%2FZCl7X1dB7yuSBF8YK2st4h%2FZchseLh%2BjukipjtpVl5nDjO8BSu5evt1V1lFzADomlTKShrSgjmej1gvXmULpbdNuEwc3vMl328MfuwtHHSSvzZo5xxP0U1cq9fhM0Ztcea1ZRpQDZR4DB1jRqdjeMIXNuuwv3G7Uotj1VrvA87zW9Og6gQ9VN7fQSdOpurQFAV2WvRMIuSqv8FOusB%2B%2BEh7xquKUpKrZEfrLl0yLcAZyezk5OlnVLaoE%2BCU7%2F1YWDwq4fJ%2Fzqx58r%2Ffgzx%2FRuGFLAoCPIl7GI47ntqpCuRo5kjknXh3Vhm0Ds%2B9y0Uo9mgVKhl6XjEqADeRJOm5JpIvTZkPibWah%2FFXooiOsIWnpbe3xZbkrh62wdx0iVuonbBNy6Z0vYXXREkzeNyKh%2Fx0i0DwAehfYiLehqkIm1GqvDnaSiQ0dTRzOsrEnXwNhRtDRaBDDLvFXHGy3Xm8ucb70jki0U1otEIUfIG%2Fnfsrs7zhSOcLfi6%2B4aytuy%2FrSFLmVnwIpfIzQ%3D%3D\u0026amp;X-Amz-Signature=912c87476cdb099a938ebc90bf502bcb059c27ead9581dd9e1e568023994fa0e\" class=\"markdown-inline-image\" style=\"display: inline-block\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe below PoC will contain the following files:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eattacker_server.py\u003c/strong\u003e (Attackers python web server running on TCP port 80, responses to all GET requests with a \u003cstrong\u003e301\u003c/strong\u003e re-direct to \u003cstrong\u003e\u003ca title=\"http://192.168.0.10\" href=\"/redirect?url=http%3A%2F%2F192.168.0.10\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://192.168.0.10\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/strong\u003e on a rotating TCP port\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003erequest.py\u003c/strong\u003e (Attackers python script that will submit login credentials to obtain a session cookie and then send 20 PUT requests to add a RSS feed URL)\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003escript_results.txt\u003c/strong\u003e (Results of HTTP responses against port number)\u003c/p\u003e\n\n\u003ch3 id=\"poc\"\u003ePoC\u003c/h3\u003e\n\n\u003cp\u003e-The \u003cstrong\u003eattacker_server.py\u003c/strong\u003e script will run on \u003cstrong\u003e192.168.0.6 (Attacker server)\u003c/strong\u003e, this will setup a Python webserver running on \u003cstrong\u003eport 80\u003c/strong\u003e and will await a GET request.\u003c/p\u003e\n\n\u003cp\u003e-\u003cstrong\u003erequest.py\u003c/strong\u003e will also run from the attacker server and connect to the App Suite server \u003cstrong\u003e(192.168.0.16)\u003c/strong\u003e, this will send a PUT request multiple times, 20 by default, to the RSS endpoint.\u003c/p\u003e\n\n\u003cp\u003e-The App Suite server will then carry out a DNS lookup to the feedurl, this will be \u003ca title=\"http://testserver64.com\" href=\"/redirect?url=http%3A%2F%2Ftestserver64.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://testserver64.com\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\nIn this case I added the following in \u003cstrong\u003e/etc/hosts: 192.168.0.6 testserver64.com\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e-The attacker webserver will send a 301 response back with the following URL: \u003cstrong\u003e\u003ca title=\"http://192.168.0.10\" href=\"/redirect?url=http%3A%2F%2F192.168.0.10\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttp://192.168.0.10\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u0026lt;port number\u0026gt;.\u003c/strong\u003e  The port number will rotate on every GET request.\u003c/p\u003e\n\n\u003cp\u003e-Netcat listeners are running on TCP port \u003cstrong\u003e2, 6, 8, and 10\u003c/strong\u003e to simulate listening ports that will accept HTTP connections on the target host: \u003cstrong\u003e192.168.0.10\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e-The HTTP response text will then be analysed to determine if a port is open or not using the following code in \u003cstrong\u003erequests.py\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e# Check HTTP response text\n\n    if \u0026quot;Cannot connect to RSS with URL\u0026quot; in url_response:\n        return_message = \u0026quot;BLACKLIST MATCH, ABORTED\u0026quot;\n\n    elif \u0026quot;Invalid RSS URL or not well-formed XML content provided by URL\u0026quot; in url_response:\n        return_message = \u0026quot;HTTP RESPONSE RECEIVED (INVALID RSS), PORT OPEN\u0026quot;\n\n    elif \u0026quot;Timeout while reading the RSS feed from URL\u0026quot; in url_response:\n        return_message = \u0026quot;PORT TIMEOUT, NETCAT LISTENER, PORT OPEN\u0026quot;\n\n    elif \u0026quot;Connection refused (Connection refused)\u0026quot; in url_response:\n        return_message = \u0026quot;CONNECTION REFUSED, PORT CLOSED\u0026quot;\n\n    elif \u0026quot;Unexpected end of file from server\u0026quot; in url_response:\n        return_message = \u0026quot;HTTP RESPONSE RECEIVED (EOF ERROR), PORT OPEN\u0026quot;\n\n    elif \u0026quot;\\\u0026quot;data\\\u0026quot;:[]\u0026quot; in url_response:\n        return_message = \u0026quot;HTTP RESPONSE RECEIVED (EMPTY ARRAY), PORT OPEN\u0026quot;\n\n    elif \u0026quot;javax.net.ssl.HttpsURLConnection\u0026quot; in url_response:\n        return_message = \u0026quot;HTTPS RESPONSE RECEIVED (SSL ERROR), PORT OPEN\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\n\u003cp\u003eBelow are the results from the scan of 20 ports, timeouts represent the Netcat listeners while connection refused means the ports were closed.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePort: 1 - Response:  [\u0026#39;CONNECTION REFUSED, PORT CLOSED\u0026#39;]\nPort: 3 - Response:  [\u0026#39;CONNECTION REFUSED, PORT CLOSED\u0026#39;]\nPort: 4 - Response:  [\u0026#39;CONNECTION REFUSED, PORT CLOSED\u0026#39;]\nPort: 5 - Response:  [\u0026#39;CONNECTION REFUSED, PORT CLOSED\u0026#39;]\nPort: 7 - Response:  [\u0026#39;CONNECTION REFUSED, PORT CLOSED\u0026#39;]\nPort: 9 - Response:  [\u0026#39;CONNECTION REFUSED, PORT CLOSED\u0026#39;]\nPort: 11 - Response:  [\u0026#39;CONNECTION REFUSED, PORT CLOSED\u0026#39;]\nPort: 12 - Response:  [\u0026#39;CONNECTION REFUSED, PORT CLOSED\u0026#39;]\nPort: 13 - Response:  [\u0026#39;CONNECTION REFUSED, PORT CLOSED\u0026#39;]\nPort: 14 - Response:  [\u0026#39;CONNECTION REFUSED, PORT CLOSED\u0026#39;]\nPort: 15 - Response:  [\u0026#39;CONNECTION REFUSED, PORT CLOSED\u0026#39;]\nPort: 16 - Response:  [\u0026#39;CONNECTION REFUSED, PORT CLOSED\u0026#39;]\nPort: 17 - Response:  [\u0026#39;CONNECTION REFUSED, PORT CLOSED\u0026#39;]\nPort: 18 - Response:  [\u0026#39;CONNECTION REFUSED, PORT CLOSED\u0026#39;]\nPort: 19 - Response:  [\u0026#39;CONNECTION REFUSED, PORT CLOSED\u0026#39;]\nPort: 20 - Response:  [\u0026#39;CONNECTION REFUSED, PORT CLOSED\u0026#39;]\nPort: 2 - Response:  [\u0026#39;PORT TIMEOUT, NETCAT LISTENER, PORT OPEN\u0026#39;]\nPort: 6 - Response:  [\u0026#39;PORT TIMEOUT, NETCAT LISTENER, PORT OPEN\u0026#39;]\nPort: 8 - Response:  [\u0026#39;PORT TIMEOUT, NETCAT LISTENER, PORT OPEN\u0026#39;]\nPort: 10 - Response:  [\u0026#39;PORT TIMEOUT, NETCAT LISTENER, PORT OPEN\u0026#39;]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe following is received from the netcat listener on 192.168.0.10:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET / HTTP/1.1\nAccept-Encoding: gzip\nUser-Agent: Rome Client (http://tinyurl.com/64t5n) Ver: UNKNOWN\nCache-Control: no-cache\nPragma: no-cache\nHost: 192.168.0.10:10\nAccept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2\nConnection: keep-alive\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eThis is an improved SSRF compared to earlier reports as you are able to receive more detailed response error messages compared to a blind reply where you have to analyse HTTP response times.  You can also scan multiple ports, where my other report (#299130, IP address format bypass), was restricted to 80/443.  Again, this is limited to reconnaissance only and I was not able to extract any data from the server.\u003c/p\u003e\n","bounty_amount":"850.0","formatted_bounty":"$850","weakness":{"id":68,"name":"Server-Side Request Forgery (SSRF)"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":247932,"file_name":"request.py","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/247/932/30702421ad8b2d592722593f70622a41e5f620ec/request.py?response-content-disposition=attachment%3B%20filename%3D%22request.py%22%3B%20filename%2A%3DUTF-8%27%27request.py\u0026response-content-type=text%2Fx-python\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ2UMPB2FX%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T052807Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJr%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIEq9neBunEjsdY7f8cNZfYtjkYnfx7sYXIBk82UycrktAiEA5w10R4CJv%2FQIiYTXv1ZP8q%2BbScvvzy7qwcG%2BmPmKCXMqtAMIUxABGgwwMTM2MTkyNzQ4NDkiDKX6CTSGAGf6Bt5yHyqRA9qW1WRQYe7JztYb6rdSeSRyzKgf4LxEu42JMoyPyy0VqqdaIdaW%2F5Oe%2FZcBqKJkPjfrnsLv1E3Cttn6QZ2fsMawdDGLyKyEEvAx6LbD4TYD1QOy0YJIw6j32Nt3V4psvzyU384FsJYLymiqMGAqTzIuUS4QNvTcHn%2BFoOZvS%2F06fP5YWj%2BxpW%2BELDyBb5CFIWqKXYmkW%2BPv4IxFiMVfFF4KM80ZKVGfyJ7nRaRwvjM5YUJYHOlvXjFuPBSC3IYIgEZYlopEqTolZ1OQ2zbi1yDB%2FWl1rx7i7cbCVK6zJwPdLcPRBOa7jlMN0jlHdNPzjyKxdEaNBy7Cyflyw%2FZCl7X1dB7yuSBF8YK2st4h%2FZchseLh%2BjukipjtpVl5nDjO8BSu5evt1V1lFzADomlTKShrSgjmej1gvXmULpbdNuEwc3vMl328MfuwtHHSSvzZo5xxP0U1cq9fhM0Ztcea1ZRpQDZR4DB1jRqdjeMIXNuuwv3G7Uotj1VrvA87zW9Og6gQ9VN7fQSdOpurQFAV2WvRMIuSqv8FOusB%2B%2BEh7xquKUpKrZEfrLl0yLcAZyezk5OlnVLaoE%2BCU7%2F1YWDwq4fJ%2Fzqx58r%2Ffgzx%2FRuGFLAoCPIl7GI47ntqpCuRo5kjknXh3Vhm0Ds%2B9y0Uo9mgVKhl6XjEqADeRJOm5JpIvTZkPibWah%2FFXooiOsIWnpbe3xZbkrh62wdx0iVuonbBNy6Z0vYXXREkzeNyKh%2Fx0i0DwAehfYiLehqkIm1GqvDnaSiQ0dTRzOsrEnXwNhRtDRaBDDLvFXHGy3Xm8ucb70jki0U1otEIUfIG%2Fnfsrs7zhSOcLfi6%2B4aytuy%2FrSFLmVnwIpfIzQ%3D%3D\u0026X-Amz-Signature=63dd9c97e9b24dacc8f6890d0a326ad09793e9f6e4bb84da12063810b72526ef","file_size":3586,"type":"text/x-python"},{"id":247933,"file_name":"poc.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/247/933/23d0bb6d1dad1e6520c8ccb85d22141b52a59bdb/poc.png?response-content-disposition=attachment%3B%20filename%3D%22poc.png%22%3B%20filename%2A%3DUTF-8%27%27poc.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ2UMPB2FX%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T052807Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJr%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIEq9neBunEjsdY7f8cNZfYtjkYnfx7sYXIBk82UycrktAiEA5w10R4CJv%2FQIiYTXv1ZP8q%2BbScvvzy7qwcG%2BmPmKCXMqtAMIUxABGgwwMTM2MTkyNzQ4NDkiDKX6CTSGAGf6Bt5yHyqRA9qW1WRQYe7JztYb6rdSeSRyzKgf4LxEu42JMoyPyy0VqqdaIdaW%2F5Oe%2FZcBqKJkPjfrnsLv1E3Cttn6QZ2fsMawdDGLyKyEEvAx6LbD4TYD1QOy0YJIw6j32Nt3V4psvzyU384FsJYLymiqMGAqTzIuUS4QNvTcHn%2BFoOZvS%2F06fP5YWj%2BxpW%2BELDyBb5CFIWqKXYmkW%2BPv4IxFiMVfFF4KM80ZKVGfyJ7nRaRwvjM5YUJYHOlvXjFuPBSC3IYIgEZYlopEqTolZ1OQ2zbi1yDB%2FWl1rx7i7cbCVK6zJwPdLcPRBOa7jlMN0jlHdNPzjyKxdEaNBy7Cyflyw%2FZCl7X1dB7yuSBF8YK2st4h%2FZchseLh%2BjukipjtpVl5nDjO8BSu5evt1V1lFzADomlTKShrSgjmej1gvXmULpbdNuEwc3vMl328MfuwtHHSSvzZo5xxP0U1cq9fhM0Ztcea1ZRpQDZR4DB1jRqdjeMIXNuuwv3G7Uotj1VrvA87zW9Og6gQ9VN7fQSdOpurQFAV2WvRMIuSqv8FOusB%2B%2BEh7xquKUpKrZEfrLl0yLcAZyezk5OlnVLaoE%2BCU7%2F1YWDwq4fJ%2Fzqx58r%2Ffgzx%2FRuGFLAoCPIl7GI47ntqpCuRo5kjknXh3Vhm0Ds%2B9y0Uo9mgVKhl6XjEqADeRJOm5JpIvTZkPibWah%2FFXooiOsIWnpbe3xZbkrh62wdx0iVuonbBNy6Z0vYXXREkzeNyKh%2Fx0i0DwAehfYiLehqkIm1GqvDnaSiQ0dTRzOsrEnXwNhRtDRaBDDLvFXHGy3Xm8ucb70jki0U1otEIUfIG%2Fnfsrs7zhSOcLfi6%2B4aytuy%2FrSFLmVnwIpfIzQ%3D%3D\u0026X-Amz-Signature=912c87476cdb099a938ebc90bf502bcb059c27ead9581dd9e1e568023994fa0e","file_size":55462,"type":"image/png"},{"id":247934,"file_name":"attacker_server.py","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/247/934/4339eca7a40051f9dd2ab7fcbbb24be293a03283/attacker_server.py?response-content-disposition=attachment%3B%20filename%3D%22attacker_server.py%22%3B%20filename%2A%3DUTF-8%27%27attacker_server.py\u0026response-content-type=text%2Fx-python\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQ2UMPB2FX%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T052807Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJr%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIEq9neBunEjsdY7f8cNZfYtjkYnfx7sYXIBk82UycrktAiEA5w10R4CJv%2FQIiYTXv1ZP8q%2BbScvvzy7qwcG%2BmPmKCXMqtAMIUxABGgwwMTM2MTkyNzQ4NDkiDKX6CTSGAGf6Bt5yHyqRA9qW1WRQYe7JztYb6rdSeSRyzKgf4LxEu42JMoyPyy0VqqdaIdaW%2F5Oe%2FZcBqKJkPjfrnsLv1E3Cttn6QZ2fsMawdDGLyKyEEvAx6LbD4TYD1QOy0YJIw6j32Nt3V4psvzyU384FsJYLymiqMGAqTzIuUS4QNvTcHn%2BFoOZvS%2F06fP5YWj%2BxpW%2BELDyBb5CFIWqKXYmkW%2BPv4IxFiMVfFF4KM80ZKVGfyJ7nRaRwvjM5YUJYHOlvXjFuPBSC3IYIgEZYlopEqTolZ1OQ2zbi1yDB%2FWl1rx7i7cbCVK6zJwPdLcPRBOa7jlMN0jlHdNPzjyKxdEaNBy7Cyflyw%2FZCl7X1dB7yuSBF8YK2st4h%2FZchseLh%2BjukipjtpVl5nDjO8BSu5evt1V1lFzADomlTKShrSgjmej1gvXmULpbdNuEwc3vMl328MfuwtHHSSvzZo5xxP0U1cq9fhM0Ztcea1ZRpQDZR4DB1jRqdjeMIXNuuwv3G7Uotj1VrvA87zW9Og6gQ9VN7fQSdOpurQFAV2WvRMIuSqv8FOusB%2B%2BEh7xquKUpKrZEfrLl0yLcAZyezk5OlnVLaoE%2BCU7%2F1YWDwq4fJ%2Fzqx58r%2Ffgzx%2FRuGFLAoCPIl7GI47ntqpCuRo5kjknXh3Vhm0Ds%2B9y0Uo9mgVKhl6XjEqADeRJOm5JpIvTZkPibWah%2FFXooiOsIWnpbe3xZbkrh62wdx0iVuonbBNy6Z0vYXXREkzeNyKh%2Fx0i0DwAehfYiLehqkIm1GqvDnaSiQ0dTRzOsrEnXwNhRtDRaBDDLvFXHGy3Xm8ucb70jki0U1otEIUfIG%2Fnfsrs7zhSOcLfi6%2B4aytuy%2FrSFLmVnwIpfIzQ%3D%3D\u0026X-Amz-Signature=94203640eb5d87e9da0f77c4a387514eab3b8b65954606c8632af60fbe6f5b3a","file_size":981,"type":"text/x-python"}],"allow_singular_disclosure_at":null,"vote_count":33,"voters":["akshansh","mygf","eveeez","masonhck357","imranhudaa","exception","trieulieuf9","gf10","cryptographer","0x08","and 23 more..."],"severity":{"rating":"medium","author_type":"Team"},"structured_scope":null,"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":2239673,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hey, can I just check that this report has been spotted?  I'll be on holiday from today so I may not be able to respond to any queries you may have in a timely manner.  No rush if it's still being looked at.\n\nAll the best. ","markdown_message":"\u003cp\u003eHey, can I just check that this report has been spotted?  I\u0026#39;ll be on holiday from today so I may not be able to respond to any queries you may have in a timely manner.  No rush if it\u0026#39;s still being looked at.\u003c/p\u003e\n\n\u003cp\u003eAll the best. \u003c/p\u003e\n","automated_response":false,"created_at":"2017-12-21T10:22:48.670Z","updated_at":"2017-12-21T10:22:48.670Z","actor":{"username":"logan5","cleared":false,"url":"/logan5","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/110/421/4eacc0e36a20a036380e88612bb8755d1dddda08_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2242094,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi, yes we've received your report and are looking into it.","markdown_message":"\u003cp\u003eHi, yes we\u0026#39;ve received your report and are looking into it.\u003c/p\u003e\n","automated_response":false,"created_at":"2017-12-22T10:08:41.929Z","updated_at":"2017-12-22T10:08:41.929Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2257793,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","markdown_message":"","automated_response":false,"created_at":"2018-01-03T09:37:25.712Z","updated_at":"2018-01-03T09:37:25.712Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2257804,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","markdown_message":"","automated_response":false,"created_at":"2018-01-03T09:39:51.872Z","updated_at":"2018-01-03T09:39:51.872Z","actor":{"url":"/open-xchange","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Open-Xchange"}},"bounty_amount":"850.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"open-xchange","collaborator":{"username":"logan5","url":"/logan5"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2258074,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Cheers for the bounty!\nAll the best.","markdown_message":"\u003cp\u003eCheers for the bounty!\u003cbr\u003e\nAll the best.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-01-03T12:22:32.483Z","updated_at":"2018-01-03T12:22:32.483Z","actor":{"username":"logan5","cleared":false,"url":"/logan5","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/110/421/4eacc0e36a20a036380e88612bb8755d1dddda08_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2258075,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Happy new year mate!","markdown_message":"\u003cp\u003eHappy new year mate!\u003c/p\u003e\n","automated_response":false,"created_at":"2018-01-03T12:25:01.821Z","updated_at":"2018-01-03T12:25:01.821Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":2258079,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Same to you!","markdown_message":"\u003cp\u003eSame to you!\u003c/p\u003e\n","automated_response":false,"created_at":"2018-01-03T12:25:47.097Z","updated_at":"2018-01-03T12:25:47.097Z","actor":{"username":"logan5","cleared":false,"url":"/logan5","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/110/421/4eacc0e36a20a036380e88612bb8755d1dddda08_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":2261554,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"We solved this vulnerability internally and will provide a backport to in-production releases during the next weeks.","markdown_message":"\u003cp\u003eWe solved this vulnerability internally and will provide a backport to in-production releases during the next weeks.\u003c/p\u003e\n","automated_response":false,"created_at":"2018-01-04T12:02:59.368Z","updated_at":"2018-01-04T12:02:59.368Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"logan5","url":"/logan5"},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4916979,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2019-05-24T12:17:50.735Z","updated_at":"2019-05-24T12:17:50.735Z","additional_data":{"old_severity":null,"new_severity":"Medium","old_severity_id":null,"new_severity_id":401084},"actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5253137,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-07-04T11:18:13.005Z","updated_at":"2019-07-04T11:18:13.005Z","first_to_agree":true,"actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":5258537,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-07-05T09:10:09.728Z","updated_at":"2019-07-05T09:10:09.728Z","actor":{"username":"logan5","cleared":false,"url":"/logan5","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/110/421/4eacc0e36a20a036380e88612bb8755d1dddda08_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":5258538,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2019-07-05T09:10:09.802Z","updated_at":"2019-07-05T09:10:09.802Z","actor":{"username":"logan5","cleared":false,"url":"/logan5","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/110/421/4eacc0e36a20a036380e88612bb8755d1dddda08_original.png/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}