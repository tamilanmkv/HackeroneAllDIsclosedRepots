{"id":863553,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84NjM1NTM=","url":"https://hackerone.com/reports/863553","title":"SSRF protection bypass in /appsuite/api/oxodocumentfilter addfile action","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2020-04-30T22:09:41.303Z","submitted_at":"2020-04-30T22:09:41.303Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"skr0x1c0","url":"/skr0x1c0","profile_picture_urls":{"small":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":8906,"url":"https://hackerone.com/open-xchange","handle":"open-xchange","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"Open-Xchange","twitter_handle":"openxchange","website":"https://www.open-xchange.com/","about":"Messaging, collaboration and office productivity software for service providers"}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2020-11-27T09:47:32.051Z","bug_reporter_agreed_on_going_public_at":"2020-09-24T07:55:02.144Z","team_member_agreed_on_going_public_at":"2020-11-27T09:47:31.959Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"# Summary\n\nThe URL validation logic applied when handling `/appsuite/api/oxodocumentfilter\u0026action=addfile` suffers from three defects which can be used to execute Time of Check Time of Use (ToCToU) SSRF attack. This issue allows malicious actors to execute HTTP GET requests on internal network services and may lead to confidential information leak.\n\n## Defect #1: Time of Check Time of Use (ToCToU) vulnerability\n\nURL validation logic in `URITools.getFinalURL` method implemented [here](https://gitlab.open-xchange.com/middleware/core/-/blob/develop/com.openexchange.server/src/com/openexchange/tools/net/URITools.java#L108) suffers from ToCToU vulnerability  \n\n```java\nURL u = new URL(url);\nif (validator.isPresent()) {\n    Optional\u003cOXException\u003e exception = validator.get().apply(u);\n    if (exception.isPresent()) {\n        throw exception.get();\n    }\n}\n\nURLConnection urlConnnection = u.openConnection();\n```\n\nIn the above code, DNS resolution of input URL hostname is done during both time of check (`validator.get().apply(u)`) and time of use (`u.openConnection()`) by calling `InetAddress.getByName` method. So if an attacker can change the DNS resolution result after time of check and before time of use, he can bypass the validator. This defect alone is extremely difficult to exploit because of following limitations\n\n1. By default, `InetAddress.getByName` caches the DNS resolution results for 30 seconds if the DNS resolution succeeds and for 10 seconds if the DNS resolution fails. \n2. Time interval between `validator.get().apply(u)` and `u.openConnection()` is extremely small (less than one millisecond for normal URLs). Defect #2 is used to bypass this limitation\n\n## Defect #2: Length of input URL is not limited\n\nThe URL validator `AddFileAction.validator` implemented [here](https://gitlab.open-xchange.com/documents/office/-/blob/develop/com.openexchange.office.rest/src/com/openexchange/office/rest/AddFileAction.java#L353) does not validate the length of input URL. By providing a URL with large size, the attacker can increase the time interval between `InetAddress.getByName` method calls at time of check and time of use. Larger time interval allows the attacker to easily exploit Defect #1\n\n## Defect #3: URL validator allows input URL if its dns resolution fails\n\n`HostList.contains` method implemented [here](https://gitlab.open-xchange.com/middleware/core/-/blob/develop/com.openexchange.net/src/com/openexchange/net/HostList.java#L234) returns false if the DNS resolution of input URL hostname fails\n\n```java\n// Need to resolve as last resort\ntry {\n    return contains(InetAddress.getByName(toCheck), false);\n} catch (UnknownHostException e) {\n    // Cannot be resolved\n    return false;\n}\n```\n\nThe `AddFileAction.validator` calls `blackImageUrlHostlist.contains` method to check if the input URL hostname or the IP address it resolves to is in blacklist. If an attacker makes the DNS resolution of hostname to fail, the IP address checks are skipped and URL is accepted.\n\n# Attack strategy\n\nConsider a hostname `randomid.dns.pointer.pw` with authoritative nameserver controlled by attacker. Attack strategy is to make the DNS resolution of `randomid.dns.pointer.pw` to fail at time of check (`validator.get().apply(u);`) and to succeed at time of use (`u.openConnection()`). This allows the attacker to bypass IP address blacklist filters and execute HTTP GET request on any blacklisted IP address. Following steps may be followed by attacker to execute this attack\n\n1. Trigger the `InetAddress.getByName` cache on server by executing `addfile` action with request data `{\"add_imageurl\": \"http://randomid.dns.pointer.pw\"}`. At this time, the authoritative DNS server will be set to fail the DNS resolution of `randomid.dns.pointer.pw` by returning `SERVFAIL` status. `InetAddress.getByName` will cache this failure result for 10 seconds\n2. Note the time when above request response was received. This is the cache start time\n3. Tell the authoritative name server of domain `pointer.pw` to return 127.0.0.1 for type A dns requests of hostname `randomid.dns.pointer.pw`\n4. Sleep for specified duration from cache start time such that in the next step `InetAddress.getByName` will return cached response (SERVFAIL) at time of check and will return 127.0.0.1 at time of use (url.openConnection())\n5. Execute SSRF request with `add_imageurl` value set to format `http://u{25MB}:password@randomid.dns.pointer.pw/path/to/internal/resource.png`. Here u{25MB} means the username part is a string of length 25 x 1024 x 1024 charachters\n\n# Demo\nThis demo shows adding `appsuite/v=7.10.3-9.20200409.083030/apps/themes/logo.png` via internal network (127.0.0.1) using `/appsuite/api/oxodocumentfilter\u0026action=addfile` API\n{F810312}\n\n# Steps to reproduce\n\n1. Install golang from https://golang.org/dl/\n2. Install Open-Xchange and Documents in a virtual machine with atleast 4GB RAM by following guides https://oxpedia.org/wiki/index.php?title=AppSuite:Open-Xchange_Installation_Guide_for_Debian_9.0 and https://oxpedia.org/wiki/index.php?title=AppSuite:Documents_Installation_Guide#Debian_GNU.2FLinux_9.0_.28valid_from_v7.10.29\n3. Download and extract poc.zip file\n4. Open terminal / command line and set current directory to extracted poc.zip folder\n5. Run command\n   \n   ```shell\n    go run . -serverRoot=\"http://172.16.66.130\" -username=\"testuser\" -password=\"secret\" -targetPath=\"appsuite/v=7.10.3-9.20200409.083030/apps/themes/logo.png\" -targetPort=\"80\" -payloadSize=25 -startSleepDuration=6600\n   ```\n   \n   where `172.16.66.130` is the IP address of VM\n\n## Impact\n\nAn attacker can trigger requests to internal resources and possibly retrieve response contents.","bounty_amount":"550.0","formatted_bounty":"$550","weakness":{"id":68,"name":"Server-Side Request Forgery (SSRF)"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":810312,"file_name":"demo.mov","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/chgtrrRS28UNB5cQMMZM5t4h?response-content-disposition=attachment%3B%20filename%3D%22demo.mov%22%3B%20filename%2A%3DUTF-8%27%27demo.mov\u0026response-content-type=video%2Fquicktime\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQX46P3UGI%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153545Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJGMEQCIGvlFSN4tPhAu4V7v5pc7%2F6eSiik7IhHLLD01kiqhVWYAiB5Dz9ea%2BLZD%2BpLtagj4O%2BjrW%2FPBVXyOw%2FvfPhYOWnLJyqDBAjv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIMy2N4EHiSo%2FA9G2F0KtcDeo3CuylmH%2BuFka3rGPAArFX7PEojyq8EAAWPijF4XtZGXNXpmeQR1pzTOcI0Rm%2Fvja%2BwHd%2F8TxJsGVWeh%2Flk5vjiIRZT9GPW9u3ZycCrjqMci9iGhBM6uwkYQOmABA3poTj0CyTV9vU5PwMEPHFcEacwKutRiCveofJe7f8Tu4WHR%2BNU7KEmxqtXpvAXj8hQLxFVDU25WgaPgk2b4mSQSaY%2FPywLP4TuBkCMbSNVoBG2JTX5CaBeJN5iElkzZ62K%2FGVGXrbaaNyPhn%2BB8rXIjbw78eQJEkHjvT8OqfCHAYP5f%2B4IhYfTll35nE7LIUoMiLvBq6tkN5BWqoopu%2Fpju60lSqB656qlcZeAK9f5orDqJzDwlKMnoVzqvkUrUy9bmk%2BkxGW97VVmeHZ1t0v3wof%2BrT0QSrWeBO35JesCQ%2BdFE8O%2BxosSdP7tU4A%2BDPpxwomZQHAAcNR9Aywt%2FQ8Qbv894mkGzt9WDwY%2FFN8jeU3O6C%2BmyqjrgMf7nGycFeD87%2Bsgs8CikLj6%2BhBYFpskae2EppYXvqHFDwWaJKFLdI8X3NNsrRpCnIXL5GUe8p%2BBySjVvE4SnyaxoJD5sUMGcJj0QQyQGgO22eUI1ATV1DsO%2BN%2BaLLxtMPqIkYsGOqYBTa91vvmG%2BK28LWqLSYG8vhMxYQ%2Fxj6PD70iq5MyM9pLPu1bgCyqJfX2mwm9fHA6UDqgGoerI%2Bnp3Q6V4OYY0E3hEAx7T8Q%2FppO8G%2BTgH7gaNlLC%2Fng4%2BkFoIuXyVGb7q1PCueRn4pqAqwTocflxXYcQQGudKiKkzrNHGy4UeULO76lDgSIcMEtI1vIJ76b2MxFEJwq4lWhln09Xn3ksb8maUXRDeCg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=d8bc49329b2b45b5f4fcf33f91ff52a9974e2232e03a17c8d23ca62acf0b57c7","file_size":11644384,"type":"video/quicktime"},{"id":810313,"file_name":"poc.zip","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/dwWxe6PF8geLw9r7tvrKQPwR?response-content-disposition=attachment%3B%20filename%3D%22poc.zip%22%3B%20filename%2A%3DUTF-8%27%27poc.zip\u0026response-content-type=application%2Fzip\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQX46P3UGI%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153545Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJGMEQCIGvlFSN4tPhAu4V7v5pc7%2F6eSiik7IhHLLD01kiqhVWYAiB5Dz9ea%2BLZD%2BpLtagj4O%2BjrW%2FPBVXyOw%2FvfPhYOWnLJyqDBAjv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIMy2N4EHiSo%2FA9G2F0KtcDeo3CuylmH%2BuFka3rGPAArFX7PEojyq8EAAWPijF4XtZGXNXpmeQR1pzTOcI0Rm%2Fvja%2BwHd%2F8TxJsGVWeh%2Flk5vjiIRZT9GPW9u3ZycCrjqMci9iGhBM6uwkYQOmABA3poTj0CyTV9vU5PwMEPHFcEacwKutRiCveofJe7f8Tu4WHR%2BNU7KEmxqtXpvAXj8hQLxFVDU25WgaPgk2b4mSQSaY%2FPywLP4TuBkCMbSNVoBG2JTX5CaBeJN5iElkzZ62K%2FGVGXrbaaNyPhn%2BB8rXIjbw78eQJEkHjvT8OqfCHAYP5f%2B4IhYfTll35nE7LIUoMiLvBq6tkN5BWqoopu%2Fpju60lSqB656qlcZeAK9f5orDqJzDwlKMnoVzqvkUrUy9bmk%2BkxGW97VVmeHZ1t0v3wof%2BrT0QSrWeBO35JesCQ%2BdFE8O%2BxosSdP7tU4A%2BDPpxwomZQHAAcNR9Aywt%2FQ8Qbv894mkGzt9WDwY%2FFN8jeU3O6C%2BmyqjrgMf7nGycFeD87%2Bsgs8CikLj6%2BhBYFpskae2EppYXvqHFDwWaJKFLdI8X3NNsrRpCnIXL5GUe8p%2BBySjVvE4SnyaxoJD5sUMGcJj0QQyQGgO22eUI1ATV1DsO%2BN%2BaLLxtMPqIkYsGOqYBTa91vvmG%2BK28LWqLSYG8vhMxYQ%2Fxj6PD70iq5MyM9pLPu1bgCyqJfX2mwm9fHA6UDqgGoerI%2Bnp3Q6V4OYY0E3hEAx7T8Q%2FppO8G%2BTgH7gaNlLC%2Fng4%2BkFoIuXyVGb7q1PCueRn4pqAqwTocflxXYcQQGudKiKkzrNHGy4UeULO76lDgSIcMEtI1vIJ76b2MxFEJwq4lWhln09Xn3ksb8maUXRDeCg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=e0ec11a9ebd073c4cc1d841b156f2c18f4358f26aca99f33590edfd475da2cf6","file_size":8120,"type":"application/zip"}],"allow_singular_disclosure_at":null,"vote_count":12,"voters":["excavator","jgu","idiablos","what_web","f_m","khizer47","akashhamal0x01","nedbred","devilsadvocate","overlax","and 2 more..."],"severity":{"rating":"medium","score":4.9,"author_type":"Team","metrics":{"attack_vector":"network","attack_complexity":"high","privileges_required":"low","user_interaction":"none","scope":"changed","confidentiality":"low","integrity":"none","availability":"low"}},"structured_scope":{"databaseId":551,"asset_type":"URL","asset_identifier":"sandbox.open-xchange.com","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":7857401,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"#Demo 2\nThis demo demonstrates SSRF using netcat \n{F810327}","automated_response":false,"created_at":"2020-04-30T22:27:56.399Z","updated_at":"2020-04-30T22:27:56.399Z","actor":{"username":"skr0x1c0","cleared":false,"url":"/skr0x1c0","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":810327,"filename":"demo2.mov","type":"video/quicktime","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/QRk1p6eZyNRP2Qm2ig8xoKJ7?response-content-disposition=attachment%3B%20filename%3D%22demo2.mov%22%3B%20filename%2A%3DUTF-8%27%27demo2.mov\u0026response-content-type=video%2Fquicktime\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQX46P3UGI%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153546Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJGMEQCIGvlFSN4tPhAu4V7v5pc7%2F6eSiik7IhHLLD01kiqhVWYAiB5Dz9ea%2BLZD%2BpLtagj4O%2BjrW%2FPBVXyOw%2FvfPhYOWnLJyqDBAjv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIMy2N4EHiSo%2FA9G2F0KtcDeo3CuylmH%2BuFka3rGPAArFX7PEojyq8EAAWPijF4XtZGXNXpmeQR1pzTOcI0Rm%2Fvja%2BwHd%2F8TxJsGVWeh%2Flk5vjiIRZT9GPW9u3ZycCrjqMci9iGhBM6uwkYQOmABA3poTj0CyTV9vU5PwMEPHFcEacwKutRiCveofJe7f8Tu4WHR%2BNU7KEmxqtXpvAXj8hQLxFVDU25WgaPgk2b4mSQSaY%2FPywLP4TuBkCMbSNVoBG2JTX5CaBeJN5iElkzZ62K%2FGVGXrbaaNyPhn%2BB8rXIjbw78eQJEkHjvT8OqfCHAYP5f%2B4IhYfTll35nE7LIUoMiLvBq6tkN5BWqoopu%2Fpju60lSqB656qlcZeAK9f5orDqJzDwlKMnoVzqvkUrUy9bmk%2BkxGW97VVmeHZ1t0v3wof%2BrT0QSrWeBO35JesCQ%2BdFE8O%2BxosSdP7tU4A%2BDPpxwomZQHAAcNR9Aywt%2FQ8Qbv894mkGzt9WDwY%2FFN8jeU3O6C%2BmyqjrgMf7nGycFeD87%2Bsgs8CikLj6%2BhBYFpskae2EppYXvqHFDwWaJKFLdI8X3NNsrRpCnIXL5GUe8p%2BBySjVvE4SnyaxoJD5sUMGcJj0QQyQGgO22eUI1ATV1DsO%2BN%2BaLLxtMPqIkYsGOqYBTa91vvmG%2BK28LWqLSYG8vhMxYQ%2Fxj6PD70iq5MyM9pLPu1bgCyqJfX2mwm9fHA6UDqgGoerI%2Bnp3Q6V4OYY0E3hEAx7T8Q%2FppO8G%2BTgH7gaNlLC%2Fng4%2BkFoIuXyVGb7q1PCueRn4pqAqwTocflxXYcQQGudKiKkzrNHGy4UeULO76lDgSIcMEtI1vIJ76b2MxFEJwq4lWhln09Xn3ksb8maUXRDeCg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=8ac24077575558f2dc2bc655c5c968e438f39c7c35933af7c1ebe78f99f230db"}],"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7882821,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for your report and great research documentation. The root cause of this is a known issue (#747984) and we're looking to address it in future releases, however we'll have a closer look at the reported details to challenge our implementation.","automated_response":false,"created_at":"2020-05-04T06:30:18.924Z","updated_at":"2020-05-04T06:30:18.924Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7910954,"is_internal":false,"editable":false,"type":"Activities::BugNeedsMoreInfo","message":"Great report! We've one topic to clarify regarding Defect #2:\nThe function you're mentioning (AddFileAction.validator) is not using URITools.getFinalURL from Defect #1. How would an excessively URL in this case affect the resolution/blacklist process? Can you think about a case where the length of a URL actually affects DNS resolution time? AFAIK URLs are limited to 2KB which is not really a huge amount of data that could slow down parsers etc.","automated_response":false,"created_at":"2020-05-06T10:38:12.458Z","updated_at":"2020-05-06T10:38:12.458Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7918272,"is_internal":false,"editable":false,"type":"Activities::BugNew","message":"Hello @mheiland, Thank you, I appreciate the compliment.\n\nDefect #2 is not used to slow down DNS resolution time. It is used to increase the time interval between time of check DNS resolution and time of use DNS resolution. \n\nFrom defect #1, we know that time of check DNS resolution and time of use DNS resolutions are triggered at `validator.get().apply(u)` and `httpURLConnection.connect()` respectively as shown below.\n\n```java\nURL u = new URL(url);\nif (validator.isPresent()) {\n    Optional\u003cOXException\u003e exception = validator.get().apply(u); // \u003c-- triggers time of check DNS resolution\n    if (exception.isPresent()) {\n        throw exception.get();\n    }\n}\n\nURLConnection urlConnnection = u.openConnection();\nurlConnnection.setConnectTimeout(2500);\nurlConnnection.setReadTimeout(2500);\n\nif (urlConnnection instanceof HttpURLConnection) {\n    HttpURLConnection httpURLConnection = (HttpURLConnection) urlConnnection;\n    httpURLConnection.setInstanceFollowRedirects(false);\n    httpURLConnection.connect(); // \u003c-- triggers time of use DNS resolution\n    ...\n}\n```\nIn `u.openConnection()` and `httpURLConnection.connect()` method calls, there are various operations (like validation) happening before time of use DNS resolution which depends on the length of input URL. The below java code demonstrates how URL length affect the time interval between time of check DNS resolution and time of use DNS resolution. The java code measures the time taken to execute `url.openConnection().connect()` on two URL of length `2000` and `25 x 1024 x 1024` characters. The length of the URL is varied by adding characters to username portion of the URL. \n\n```java\nimport java.net.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        // Using a closed port in localhost so that the below measurements\n        // include only the computation time and not the networking time\n        URL baseURL = new URL(\"http://127.0.0.1:12345\");\n\n        // When a method is called for first time, JVM might perform bytecode\n        // validation, first pass compilation etc. To avoid this overhead during\n        // actual measurement, we trigger the method once before performing\n        // actual measurement of execution time\n        sampleUrlConnectTime(baseURL, 1);\n\n        // See recommendations from https://stackoverflow.com/a/417184 for choosing\n        // optimum maximum URL length\n        URL normalUrl = makeUrlOfLength(baseURL, 2000);\n        float normalUrlTime = sampleUrlConnectTime(normalUrl, 10);\n        System.out.println(\"Normal url time: \" + normalUrlTime + \" ms\");\n\n        URL bigUrl = makeUrlOfLength(baseURL, 25*1024*1024);\n        float bigUrlTime = sampleUrlConnectTime(bigUrl, 10);\n        System.out.println(\"Big url time: \" + bigUrlTime + \" ms\");\n    }\n\n    private static float sampleUrlConnectTime(URL url, int numSamples) \n            throws Exception {\n        long sum = 0;\n        for (int i=0; i \u003c numSamples; i++) {\n            sum += measureUrlConnectNanos(url);\n        }\n        return sum / (numSamples * 1000000f); // average and convert to milliseconds\n    }\n\n    private static long measureUrlConnectNanos(URL url) throws Exception {\n        long cTime = System.nanoTime();\n        try {\n            URLConnection connection = url.openConnection();\n            connection.connect();\n            throw new Exception(\"Expected connection to fail\");\n        } catch (ConnectException e) {\n            return System.nanoTime()-cTime;\n        }\n    }\n\n    private static URL makeUrlOfLength(URL url, int length) {\n        assert length \u003e= url.toString().length() + 4;\n        String username = new String(new char[length-url.toString().length()-3])\n                .replace(\"\\0\", \"u\");\n        try {\n            String result = url.getProtocol() + \"://\" + username + \":p@\" + \n                    url.getAuthority() + url.getPath();\n            assert result.length() == length;\n            return new URL(result);\n        } catch (MalformedURLException e) {\n            throw new RuntimeException(\"expected to construct a valid url\");\n        }\n    }\n}\n\n```\n\nRunning the above code on my laptop gives the following output\n\n```shell\nNormal url time: 1.2768717 ms\nBig url time: 672.89435 ms\n```\n\nIf `toctou_time` denotes the time interval between time of check DNS resolution and time of use DNS resolution, from the above output, it is clear that an attacker can control the `toctou_time` by controlling the length of input URL.\n\nDefect #1 is **not** exploitable without the help of defect #2. To exploit defect #1 and achieve SSRF, attacker needs to make the DNS resolution at time of check to fail and DNS resolution at time of use to successfully resolve to IP `127.0.0.1`. DNS resolution in java is done using `InetAddress.getByName` method. By default `InetAddress.getByName` will cache the result of a failed DNS resolution result from DNS server for `10 seconds`. This means that even if the attacker changes the DNS resolution response of DNS server (by controlling the authoritative DNS server) from failure to `127.0.0.1`, the result from `InetAddress.getByName` will not change until the cache is expired (10 seconds). \n\nTo defeat this caching behaviour, attacker needs to follow the following strategy:\n1. Attacker sends an add image by url request to server with URL `http://randomid.dns.pointer.pw`. At this time, the authoritative DNS server will be set to fail the DNS resolution of `randomid.dns.pointer.pw` by returning SERVFAIL status. When the server process this request, as part of the URL validation process, it will try to resolve the IP address of URL hostname by calling `InetAddress.getByName`. Since the DNS server will return SERVFAIL, the DNS resolution of URL hostname will fail and `InetAddress.getByName` will cache this failure result for next 10 seconds. Now since the DNS resolution failed, from defect #3, we know that the URL will be accepted. Now server will try to establish connection with input URL hostname by calling `httpURLConnection.connect()`. This will again trigger `InetAddress.getByName` method for DNS resolution and the method will return the previously cached failure result. Since DNS resolution failed, connection attempt will fail and server will return error response to the attacker. Let the time at which attacker receives the failure response be denoted as `cache_start_time`. Now the attacker knows that the cache will expire at `cache_start_time + 10 seconds`. Let this cache expiration time be denoted as `cache_expire_time`.\n2. Attacker now tells the authoritative name server to return `127.0.0.1` for dns requests of hostname `randomid.dns.pointer.pw`\n3. Now the attacker has to precisely time another add image by url request with URL hostname `randomid.dns.pointer.pw` such that when the server process this request, the time at which `InetAddress.getByName` is called during URL validation (time of check) is between range `[cache_expire_time-toctou_time`, `cache_expire_time)`. This precise timing ensures that at the time of URL validation, `InetAddress.getByName` will return the cached failure response and at the time of use (`httpURLConnection.connect()`), `InetAddress.getByName` will connect with the DNS server (since cache is expired at time of use) and will return `127.0.0.1`. The failure result at time of check will bypass the IP address blacklist and `127.0.0.1` result at time of use will establish connection to local network of server, bypassing SSRF protections. This precise timing is required because if the request timing in too early, both at time of check and time of use, DNS resolution will return the cached failure response and the request will fail. If the request timing is too late, at the time of check itself the `InetAddress.getByName` cache will have expired and it will connect with the DNS server and return `127.0.0.1`. This will cause the URL validation to fail and the request will fail.\n\nThe reason why defect #2 is important for above strategy to work is because of precise timing requirement in step 3 of above strategy. If the URL length is limited to 2000 characters, the maximum `toctou_time` an attacker can achieve by controlling URL length is ~1.5ms. This means that the attacker has to precisely time the request in step 3 such that time at which `InetAddress.getByName` is called during URL validation is in range `[cache_expire_time-1.5ms, cache_expire_time)`. This extreme high timing precision of `1.5 ms` is improbable to achieve because of time uncertainties in network transport and time uncertainties in instruction scheduling by kernel and JVM etc. An attacker can try to spray lot of parallel requests to server hoping that at least one of them will will satisfy the timing requirement and successfully execute SSRF, but the rate limiting feature will prevent making large number of parallel requests. So the only way an attacker can exploit defect #1 with reasonable reliability is by increasing the `toctou_time`. If the URL length is `25 MB`, the `toctou_time` is `~670ms`. This relaxes the timing precision requirement to `~670 ms` and attacker can easily execute SSRF attack.","automated_response":false,"created_at":"2020-05-06T22:32:40.339Z","updated_at":"2020-05-06T22:32:40.339Z","actor":{"username":"skr0x1c0","cleared":false,"url":"/skr0x1c0","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7922422,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"Thanks for the explanation.","automated_response":false,"created_at":"2020-05-07T08:56:28.224Z","updated_at":"2020-05-07T08:56:28.224Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7936802,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","automated_response":false,"created_at":"2020-05-08T09:43:20.883Z","updated_at":"2020-05-08T09:43:20.883Z","additional_data":{"old_severity":"Medium","new_severity":"Low (3.1)","old_severity_id":708823,"new_severity_id":715330},"actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7936806,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for reporting this vulnerability to us. We take your feedback very serious and started the process of resolving and delivering a solution to our users. Please note that we will take care about public disclosure of the vulnerability and give our users a chance to update to a fixed version before. Therefor, please handle this finding with discretion until we publicly disclosed it.\n\nWe'll discuss the matter of bounty for this finding soon and will update you shortly. Would you like to be included in our advisories \"researcher credits\"?","automated_response":false,"created_at":"2020-05-08T09:43:57.922Z","updated_at":"2020-05-08T09:43:57.922Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7937081,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello @mheiland, \n\nYes, I would like to be included in the advisories. Please use following information for the same:\nSreejith Krishnan R(@skr0x1c0)","automated_response":false,"created_at":"2020-05-08T10:14:19.022Z","updated_at":"2020-05-08T10:14:19.022Z","actor":{"username":"skr0x1c0","cleared":false,"url":"/skr0x1c0","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7937189,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello @mheiland,\n\nCould you tell me the parameter used for severity calculation.\n\nWhen using very conservative parameters for calculation, I was getting CVE rating of 4.0\n{F820409}\n\nAlso other SSRF vulnerability reports reported earlier where given medium severity rating, eg: [737163](https://hackerone.com/reports/737163)","automated_response":false,"created_at":"2020-05-08T10:25:29.585Z","updated_at":"2020-05-08T10:25:29.585Z","actor":{"username":"skr0x1c0","cleared":false,"url":"/skr0x1c0","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":820409,"filename":"Screenshot_2020-05-08_at_3.49.35_PM.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/nA2rukCbmZ4jWZGDPeagLTYB?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_2020-05-08_at_3.49.35_PM.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_2020-05-08_at_3.49.35_PM.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQX46P3UGI%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153546Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJGMEQCIGvlFSN4tPhAu4V7v5pc7%2F6eSiik7IhHLLD01kiqhVWYAiB5Dz9ea%2BLZD%2BpLtagj4O%2BjrW%2FPBVXyOw%2FvfPhYOWnLJyqDBAjv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIMy2N4EHiSo%2FA9G2F0KtcDeo3CuylmH%2BuFka3rGPAArFX7PEojyq8EAAWPijF4XtZGXNXpmeQR1pzTOcI0Rm%2Fvja%2BwHd%2F8TxJsGVWeh%2Flk5vjiIRZT9GPW9u3ZycCrjqMci9iGhBM6uwkYQOmABA3poTj0CyTV9vU5PwMEPHFcEacwKutRiCveofJe7f8Tu4WHR%2BNU7KEmxqtXpvAXj8hQLxFVDU25WgaPgk2b4mSQSaY%2FPywLP4TuBkCMbSNVoBG2JTX5CaBeJN5iElkzZ62K%2FGVGXrbaaNyPhn%2BB8rXIjbw78eQJEkHjvT8OqfCHAYP5f%2B4IhYfTll35nE7LIUoMiLvBq6tkN5BWqoopu%2Fpju60lSqB656qlcZeAK9f5orDqJzDwlKMnoVzqvkUrUy9bmk%2BkxGW97VVmeHZ1t0v3wof%2BrT0QSrWeBO35JesCQ%2BdFE8O%2BxosSdP7tU4A%2BDPpxwomZQHAAcNR9Aywt%2FQ8Qbv894mkGzt9WDwY%2FFN8jeU3O6C%2BmyqjrgMf7nGycFeD87%2Bsgs8CikLj6%2BhBYFpskae2EppYXvqHFDwWaJKFLdI8X3NNsrRpCnIXL5GUe8p%2BBySjVvE4SnyaxoJD5sUMGcJj0QQyQGgO22eUI1ATV1DsO%2BN%2BaLLxtMPqIkYsGOqYBTa91vvmG%2BK28LWqLSYG8vhMxYQ%2Fxj6PD70iq5MyM9pLPu1bgCyqJfX2mwm9fHA6UDqgGoerI%2Bnp3Q6V4OYY0E3hEAx7T8Q%2FppO8G%2BTgH7gaNlLC%2Fng4%2BkFoIuXyVGb7q1PCueRn4pqAqwTocflxXYcQQGudKiKkzrNHGy4UeULO76lDgSIcMEtI1vIJ76b2MxFEJwq4lWhln09Xn3ksb8maUXRDeCg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=e8fb16988e796c3810d1ddb49f9b9adb9a6665023528e209e24062d0fbf1c686"}],"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7937465,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"First let me state that we rate each finding individually and some vulns are rated in severity grades like \"medium\" which covers CVSS 4.0 to 6.9. We recently switched to providing the exact CVSS score including each base metric to researchers.\n\nIn this case the difference at rating is that we chose \"low\" for \"privileges required\" - as user-level authentication is required - and \"unchanged\" as \"scope\". I agree that scope is indeed changed in this case and will update the rating.\n\nRegardless of the rating you'll certainly be eligible for a bonus to compensate for your in-depth research and documentation.","automated_response":false,"created_at":"2020-05-08T10:56:39.133Z","updated_at":"2020-05-08T11:01:52.649Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7937467,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","automated_response":false,"created_at":"2020-05-08T10:56:58.570Z","updated_at":"2020-05-08T10:56:58.570Z","additional_data":{"old_severity":"Low (3.1)","new_severity":"Low (3.5)","old_severity_id":715330,"new_severity_id":715382},"actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7937854,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @mheiland, you are right. Privileges required should be low. \n\nThank you for updating severity and giving bonus compensation eligibility.","automated_response":false,"created_at":"2020-05-08T11:48:29.212Z","updated_at":"2020-05-08T11:48:29.212Z","actor":{"username":"skr0x1c0","cleared":false,"url":"/skr0x1c0","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7941222,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @mheiland,\n\nI just found out that defect #2 may be used by malicious actors for denial of service attacks also.\n\n# Attack strategy\n1. Attacker creates a web server which will respond to all request with status set to 307 temporary redirect and location header set to a large URL (say 50MB length)\n2. Attacker repeatedly sends add image by url request with `image_url` value set to URL of web server created in step 1. Request rate will be controlled such that rate limit is not reached.\n\nThe above attack strategy is using redirect to large URL instead of directly providing large URL for bypassing maximum request body size restrictions set by reverse proxy\n\n# Steps to reproduce\n1. Download and extract dos.zip\n2. Change working directory to extracted folder\n3. Execute command \n\n    ```shell\n    go run . -serverRoot=\"http://172.16.66.130\" -username=\"testuser\" -password=\"secret\" -redirectorAddress=\"172.16.146.1:8081\" -numWorkers=10 -payloadSize=50\n    ```\n\n    Where\n    - redirectorAddress: The IP address and port the which redirector server should bind to. This IP address should be accessible from the VM\n    - serverRoot: Base URL of open-xchange server\n    - username: Username of any user in open-xchange server\n    - password: Password of user in open-xchange server\n    - payloadSize: Size of URL set in location header by redirector server\n    - numWorkers: Number of parallel add image by URL request to make\n\nWhile running the above go program, if we try to open a document, it will fail with following message\n{F820938}","automated_response":false,"created_at":"2020-05-08T18:30:56.720Z","updated_at":"2020-05-08T18:30:56.720Z","actor":{"username":"skr0x1c0","cleared":false,"url":"/skr0x1c0","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"attachments":[{"id":820944,"filename":"dos.zip","type":"application/zip","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/zJpTVH5ezd2bis8b7VMeq5Rk?response-content-disposition=attachment%3B%20filename%3D%22dos.zip%22%3B%20filename%2A%3DUTF-8%27%27dos.zip\u0026response-content-type=application%2Fzip\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQX46P3UGI%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153546Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJGMEQCIGvlFSN4tPhAu4V7v5pc7%2F6eSiik7IhHLLD01kiqhVWYAiB5Dz9ea%2BLZD%2BpLtagj4O%2BjrW%2FPBVXyOw%2FvfPhYOWnLJyqDBAjv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIMy2N4EHiSo%2FA9G2F0KtcDeo3CuylmH%2BuFka3rGPAArFX7PEojyq8EAAWPijF4XtZGXNXpmeQR1pzTOcI0Rm%2Fvja%2BwHd%2F8TxJsGVWeh%2Flk5vjiIRZT9GPW9u3ZycCrjqMci9iGhBM6uwkYQOmABA3poTj0CyTV9vU5PwMEPHFcEacwKutRiCveofJe7f8Tu4WHR%2BNU7KEmxqtXpvAXj8hQLxFVDU25WgaPgk2b4mSQSaY%2FPywLP4TuBkCMbSNVoBG2JTX5CaBeJN5iElkzZ62K%2FGVGXrbaaNyPhn%2BB8rXIjbw78eQJEkHjvT8OqfCHAYP5f%2B4IhYfTll35nE7LIUoMiLvBq6tkN5BWqoopu%2Fpju60lSqB656qlcZeAK9f5orDqJzDwlKMnoVzqvkUrUy9bmk%2BkxGW97VVmeHZ1t0v3wof%2BrT0QSrWeBO35JesCQ%2BdFE8O%2BxosSdP7tU4A%2BDPpxwomZQHAAcNR9Aywt%2FQ8Qbv894mkGzt9WDwY%2FFN8jeU3O6C%2BmyqjrgMf7nGycFeD87%2Bsgs8CikLj6%2BhBYFpskae2EppYXvqHFDwWaJKFLdI8X3NNsrRpCnIXL5GUe8p%2BBySjVvE4SnyaxoJD5sUMGcJj0QQyQGgO22eUI1ATV1DsO%2BN%2BaLLxtMPqIkYsGOqYBTa91vvmG%2BK28LWqLSYG8vhMxYQ%2Fxj6PD70iq5MyM9pLPu1bgCyqJfX2mwm9fHA6UDqgGoerI%2Bnp3Q6V4OYY0E3hEAx7T8Q%2FppO8G%2BTgH7gaNlLC%2Fng4%2BkFoIuXyVGb7q1PCueRn4pqAqwTocflxXYcQQGudKiKkzrNHGy4UeULO76lDgSIcMEtI1vIJ76b2MxFEJwq4lWhln09Xn3ksb8maUXRDeCg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=67165f333d545c4b14add793ea6e8365bf3e069286cf693f48a85632c9cf3ef7"},{"id":820938,"filename":"Screenshot_2020-05-08_at_11.36.13_PM.png","type":"image/png","url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/rsbY1zxMVpV7jNRZTFnPvbDz?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_2020-05-08_at_11.36.13_PM.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_2020-05-08_at_11.36.13_PM.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQX46P3UGI%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T153546Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJGMEQCIGvlFSN4tPhAu4V7v5pc7%2F6eSiik7IhHLLD01kiqhVWYAiB5Dz9ea%2BLZD%2BpLtagj4O%2BjrW%2FPBVXyOw%2FvfPhYOWnLJyqDBAjv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIMy2N4EHiSo%2FA9G2F0KtcDeo3CuylmH%2BuFka3rGPAArFX7PEojyq8EAAWPijF4XtZGXNXpmeQR1pzTOcI0Rm%2Fvja%2BwHd%2F8TxJsGVWeh%2Flk5vjiIRZT9GPW9u3ZycCrjqMci9iGhBM6uwkYQOmABA3poTj0CyTV9vU5PwMEPHFcEacwKutRiCveofJe7f8Tu4WHR%2BNU7KEmxqtXpvAXj8hQLxFVDU25WgaPgk2b4mSQSaY%2FPywLP4TuBkCMbSNVoBG2JTX5CaBeJN5iElkzZ62K%2FGVGXrbaaNyPhn%2BB8rXIjbw78eQJEkHjvT8OqfCHAYP5f%2B4IhYfTll35nE7LIUoMiLvBq6tkN5BWqoopu%2Fpju60lSqB656qlcZeAK9f5orDqJzDwlKMnoVzqvkUrUy9bmk%2BkxGW97VVmeHZ1t0v3wof%2BrT0QSrWeBO35JesCQ%2BdFE8O%2BxosSdP7tU4A%2BDPpxwomZQHAAcNR9Aywt%2FQ8Qbv894mkGzt9WDwY%2FFN8jeU3O6C%2BmyqjrgMf7nGycFeD87%2Bsgs8CikLj6%2BhBYFpskae2EppYXvqHFDwWaJKFLdI8X3NNsrRpCnIXL5GUe8p%2BBySjVvE4SnyaxoJD5sUMGcJj0QQyQGgO22eUI1ATV1DsO%2BN%2BaLLxtMPqIkYsGOqYBTa91vvmG%2BK28LWqLSYG8vhMxYQ%2Fxj6PD70iq5MyM9pLPu1bgCyqJfX2mwm9fHA6UDqgGoerI%2Bnp3Q6V4OYY0E3hEAx7T8Q%2FppO8G%2BTgH7gaNlLC%2Fng4%2BkFoIuXyVGb7q1PCueRn4pqAqwTocflxXYcQQGudKiKkzrNHGy4UeULO76lDgSIcMEtI1vIJ76b2MxFEJwq4lWhln09Xn3ksb8maUXRDeCg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=cf3ff3fd7d369631d82edd26543135748a66d93bdae526380b92c1cf26e37fbb"}],"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7971325,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks for the additional information. Improving the URL check will also address this issue.","automated_response":false,"created_at":"2020-05-12T07:38:07.217Z","updated_at":"2020-05-12T07:38:07.217Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7971329,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","automated_response":false,"created_at":"2020-05-12T07:38:19.520Z","updated_at":"2020-05-12T07:38:19.520Z","additional_data":{"old_severity":"Low (3.5)","new_severity":"Medium (4.9)","old_severity_id":715382,"new_severity_id":718413},"actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7971332,"is_internal":false,"editable":false,"type":"Activities::ReportSeverityUpdated","message":"","automated_response":false,"created_at":"2020-05-12T07:38:50.280Z","updated_at":"2020-05-12T07:38:50.280Z","additional_data":{"old_severity":"Medium (4.9)","new_severity":"Medium (4.9)","old_severity_id":718413,"new_severity_id":718414},"actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7999066,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"We reviewed this vulnerability internally and will provide a backport to in-production releases during the next months.","automated_response":false,"created_at":"2020-05-14T11:25:41.802Z","updated_at":"2020-05-14T11:25:41.802Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"skr0x1c0","url":"/skr0x1c0"},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7999068,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"","automated_response":false,"created_at":"2020-05-14T11:26:23.506Z","updated_at":"2020-05-14T11:26:23.506Z","actor":{"url":"/open-xchange","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Open-Xchange"}},"bounty_amount":"400.0","bounty_currency":"usd","bonus_amount":"150.0","genius_execution_id":null,"team_handle":"open-xchange","collaborator":{"username":"skr0x1c0","url":"/skr0x1c0"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7999725,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thank you for the bounty and bonus! I really appreciate this :)","automated_response":false,"created_at":"2020-05-14T12:20:46.756Z","updated_at":"2020-05-14T12:20:46.756Z","actor":{"username":"skr0x1c0","cleared":false,"url":"/skr0x1c0","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9315768,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Since this bug is fixed in 7.10.4, can we disclose this report?","automated_response":false,"created_at":"2020-09-24T07:55:02.167Z","updated_at":"2020-09-24T07:55:02.167Z","first_to_agree":true,"actor":{"username":"skr0x1c0","cleared":false,"url":"/skr0x1c0","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9315798,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Yes we will disclose this soon. We have some grace time to allow our users to upgrade their environments, sadly not everyone is on the latest and greatest version at all time. I plan to disclose this in mid-October.","automated_response":false,"created_at":"2020-09-24T07:59:52.733Z","updated_at":"2020-09-24T07:59:52.733Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9538543,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello @mheiland, \n\nI hope your users have upgraded to the latest version by now. If so, can we disclose this report?\n\nBest regards,\nSreejith Krishnan R","automated_response":false,"created_at":"2020-10-16T08:07:42.619Z","updated_at":"2020-10-16T08:07:42.619Z","actor":{"username":"skr0x1c0","cleared":false,"url":"/skr0x1c0","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9884470,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"This bug was disclosed on security advisory published in 13th October 2020 (https://seclists.org/fulldisclosure/2020/Oct/20). \n\nCan we disclose this report also?","automated_response":false,"created_at":"2020-11-21T06:07:53.686Z","updated_at":"2020-11-21T06:07:53.686Z","actor":{"username":"skr0x1c0","cleared":false,"url":"/skr0x1c0","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9939661,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hello @mheiland, is there any reason why this report was not disclosed along with others? If so, can you tell me when this report may be disclosed?","automated_response":false,"created_at":"2020-11-27T08:22:53.932Z","updated_at":"2020-11-27T08:22:53.932Z","actor":{"username":"skr0x1c0","cleared":false,"url":"/skr0x1c0","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":9941740,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2020-11-27T09:47:31.985Z","updated_at":"2020-11-27T09:47:31.985Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":9941741,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2020-11-27T09:47:32.090Z","updated_at":"2020-11-27T09:47:32.090Z","actor":{"username":"mheiland","cleared":false,"url":"/mheiland","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/425JKsXEnCYsDU1VA48SXXZV/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}