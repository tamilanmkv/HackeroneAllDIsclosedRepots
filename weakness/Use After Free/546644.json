{"id":546644,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC81NDY2NDQ=","url":"https://hackerone.com/reports/546644","title":"Two heap use-after-free errors in IMAP operations","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2019-04-23T05:04:17.560Z","submitted_at":"2019-04-23T05:04:17.560Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"nick_roessler","url":"/nick_roessler","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/577/276/39ba4fb54ca9bc03bb59a9360be99caf8f832882_original.png/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":8906,"url":"https://hackerone.com/open-xchange","handle":"open-xchange","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/43e4513b9104ea0d68c9c096cea374ba8440dde3e027af5465c8771e8839a67c","medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"permissions":[],"submission_state":"open","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"pentest_feature_enabled?":false,"profile":{"name":"Open-Xchange","twitter_handle":"openxchange","website":"https://www.open-xchange.com/","about":"Messaging, collaboration and office productivity software for service providers"}},"has_bounty?":true,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"has_collaborators":true,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":true,"disclosed_at":"2020-01-08T18:23:50.540Z","bug_reporter_agreed_on_going_public_at":"2020-01-08T18:23:50.456Z","team_member_agreed_on_going_public_at":"2020-01-07T11:46:03.543Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"Summary\n=======\nWe’ve found two heap use-after-free errors, one in lib-storage/index/index-storage.c: index_copy_cache_fields() and one in lib-index/mail-index-sync-update.c: mail_index_sync_record_real(). \n\nError 1: index_copy_cache_fields()\n----------------------------------------------\n\nThis error involves two functions, shown below:\n\nIn src/lib-storage/index/index-storage.c:\n```\nvoid index_copy_cache_fields(struct mail_save_context *ctx,\n                 struct mail *src_mail, uint32_t dest_seq)\n{\n    T_BEGIN {\n        struct mailbox_metadata src_metadata, dest_metadata;\n        const struct mailbox_cache_field *field;\n        buffer_t *buf;\n\n        if (mailbox_get_metadata(src_mail-\u003ebox,\n                     MAILBOX_METADATA_CACHE_FIELDS,\n                     \u0026src_metadata) \u003c 0)\n            i_unreached();\n        /* the only reason we're doing the destination lookup is to\n           make sure that the cache file is opened and the cache\n           decisions are up to date */\n        if (mailbox_get_metadata(ctx-\u003etransaction-\u003ebox,\n                     MAILBOX_METADATA_CACHE_FIELDS,\n                     \u0026dest_metadata) \u003c 0)\n            i_unreached();\n\n        buf = t_buffer_create(1024);\n        array_foreach(src_metadata.cache_fields, field) {\n            mail_copy_cache_field(ctx, src_mail, dest_seq,\n                          field-\u003ename, buf);\n        }\n        index_copy_vsize_extension(ctx, src_mail, dest_seq);\n    } T_END;\n}\n```\nIn src/lib-storage/mail-storage.c\n\n```\nint mailbox_get_metadata(struct mailbox *box, enum mailbox_metadata_items items,\n             struct mailbox_metadata *metadata_r)\n{\n    i_zero(metadata_r);\n    if (mailbox_verify_existing_name(box) \u003c 0)\n        return -1;\n\n    if (box-\u003emetadata_pool != NULL)\n        p_clear(box-\u003emetadata_pool);\n\n    if (box-\u003ev.get_metadata(box, items, metadata_r) \u003c 0)\n        return -1;\n\n    i_assert((items \u0026 MAILBOX_METADATA_GUID) == 0 ||\n         !guid_128_is_empty(metadata_r-\u003eguid));\n    return 0;\n}\n```\nThe error is triggered when a mailbox is selected and a COPY command is issued to the same mailbox. \n\nHere is the flow of events leading up to a use-after-free:\n\n1. We enter index_copy_cache_fields() with src_mail-\u003ebox and ctx-\u003etransaction-\u003ebox pointing to the same mailbox structure. box -\u003e metadata_pool is currently NULL. \n2. We call mailbox_get_metadata() the first time. The pool is currently NULL, which causes us to skip the p_clear() and allocate a pool from the get_metadata() call. The output of the function is stored to the stack-allocated src_metadata, which includes heap pointers to the pool.\n3. We call mailbox_get_metadata() the second time. This time the pool is not NULL, which causes p_clear() to free() the metadata pool and allocate a new pool. However, the stack-allocated src_metadata structure now contains dangling pointers to the freed heap data.\n4. We continue to the array_foreach, in which field is repeatedly set to freed heap data. mail_copy_cache_field() is called and a pointer to the freed data is passed along as an argument. mail_copy_cache_field() is itself complex function that in turn calls many other functions.\n\nWe have seen this error produce illegal reads from 3 places in the source code. Attached are 3 screenshots showing these ASAN errors. \n\nWe’ve observed that MOVE can also trigger this error because it invokes this copy function.  We do not know if other commands are affected.\n\n## Steps to reproduce\n1. Compile Dovecot with ASAN to detect memory errors\n2. Run the following session: \n\na0001 SELECT \"Junk\"\na0002 COPY 1  \"Junk\"\n\nWith an appropriate maildir containing a “Junk” mailbox. To reach some of the deeper ASAN errors, ASAN must be run with halt_on_error=0 so that it doesn’t abort on the first memory error. Both of these memory errors are fragile with respect to the exact command and state of the maildir. If the above session (or random tweaks to it) are not sufficient to reproduce/analyze it, we can supply a sample mail directory that will.\n\n## Fixing\nA local fix is first checking if the two mailboxes are the same, and if they are then skipping the second mailbox_get_metadata() call. Based on the comment there, it looks like the proper cache file should already be opened and the cache decisions should be up to date given the exact same box was already opened. We’re not sure if more global fixes are appropriate---this was caused because the mailboxes are the same, so maybe some commands need additional scrutiny or should be prevented from running if source and dest are the same.\n\nError 2: mail_index_sync_record_real()\n---------------------------------------------------\n\nThe second error occurs in the following code (only relevant portion shown):\nIn src/lib-index/mail-index-sync-update.c:\n```\n    case MAIL_TRANSACTION_EXT_HDR_UPDATE: {\n        const struct mail_transaction_ext_hdr_update *rec;\n        unsigned int i;\n\n        for (i = 0; i \u003c hdr-\u003esize; ) {\n            rec = CONST_PTR_OFFSET(data, i);\n\n            if (i + sizeof(*rec) \u003e hdr-\u003esize ||\n                i + sizeof(*rec) + rec-\u003esize \u003e hdr-\u003esize) {\n                mail_index_sync_set_corrupted(ctx,\n                    \"ext hdr update: invalid record size\");\n                ret = -1;\n                break;\n            }\n\n            ret = mail_index_sync_ext_hdr_update(ctx, rec-\u003eoffset,\n                                 rec-\u003esize, rec + 1);\n            if (ret \u003c= 0)\n                break;\n\n            i += sizeof(*rec) + rec-\u003esize;\n            if ((i % 4) != 0)\n                i += 4 - (i % 4);\n        }\n        break;\n    }\n```\n\nThe error is that the rec object (or rather, the data object) can be freed from inside the call to mail_index_sync_ext_hdr_update(), which leaves the rec pointer dangling. It is used several lines later to access the size field. Attached is a screenshot showing this error from ASAN.\n\nWe were not able to figure out this error detail in the time we allocated for preparing this report.  However, as shown in the screenshot, we do see that rec was freed from mail_transaction_log_file_mmap(). Hopefully this is enough information that the devs can understand what has happened; we are happy to continue helping to resolve this issue if not.\n\n## Example Session\nThe session below was produced from our fuzzer and then manually simplified to the minimum session that still caused the error. As noted above, it may not be enough to reproduce on other configurations. The junk folder has exactly 33 messages and does not have the other folders that are created in the example session.\n\na3 SELECT \"Junk\"\na4 STORE 1:33 FLAGS D FLAGS+INSMALLER TE\na5 STORE 1:33 FLAGS D F8AGS+INSMALLER TE\na6 STORE 1:33 FLAGS D FLAGS+INSMALLER TE\na7 CLOSE\na8 CREATE a\na9 CREATE b\na10 CREATE c\na11 SELECT \"Junk\"\na12 COPY 1 INBOX\na13 COPY 1 \"Junk\"\na14 MOVE 1 \"Junk\"\na15 MOVE 1 \"Junk\"\na16 FETCH 1 (MODSEQ)\n\n## Impact\n\nWe’re not sure about the exploitability of these two errors. Here are some possible attacks that could result from the errors, or side-effects that could be used as a component of other attacks.\n\nFor the first error, if additional heap operations on that memory pool could be triggered, then feasible attack paths could be constructed. If the allocator reallocated that freed memory before it was used by the dangling pointer, then an attacker could gain control of the field pointer or worse might be able to trigger a double free which could lead to full memory corruption. Our fuzzer didn’t find a way to do this and we don’t see a clear path there; however, it is complicated and *many* functions do get called after index_copy_cache_field(), so the possibility is certainly there and this error should be fixed.\n\nFor the second error, an attacker could gain control of this loop in a few ways if the freed object is reused by the allocator. The attacker could trivially control i by controlling the freed memory. Because i changes the control-flow of the program, it could be used to leak bytes from other heap objects: one can simply observe which headers get copied. This could be useful as a component of another more complicated attack (e.g., could be used to break entropy of defenses like ASLR to enable other exploits). Further, the outer loop could be made to run indefinitely by setting rec -\u003e size in such a way to negate the sizeof(rec) so that i does not change values between loop iterations, which could lead to a denial of service of server resources. Finally, because we don’t fully understand this error, we’re not sure if other kinds of double frees or memory corruptions could be caused with appropriate inputs to mail_index_sync_ext_hdr_update().","bounty_amount":"1200.0","formatted_bounty":"$1,200","weakness":{"id":50,"name":"Use After Free"},"original_report_id":null,"original_report_url":null,"attachments":[{"id":474198,"file_name":"error_1_index_copy_cache_fields.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/474/198/492030c93e8426d6004436a1ba38914424a3d4e8/error_1_index_copy_cache_fields.png?response-content-disposition=attachment%3B%20filename%3D%22error_1_index_copy_cache_fields.png%22%3B%20filename%2A%3DUTF-8%27%27error_1_index_copy_cache_fields.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQZV3IBMDT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T151034Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJGMEQCIHx%2BIgfH0%2FRLQqbPD5vv6PNps92HY0yneL0kxkNwZHOyAiALrXRJqTvQQGm0xEkYGCB0kbPjUCCkzSeRztvcuetAYyqDBAjv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIM5FTPTB1nK4gXIBLuKtcDHmLbKhsWpyXKgWy1fAYOf0DZEqCEqF9ns7RwihS1bFM9%2BSDXYY0CmIqutWQhK5asoL8jbJZ39%2FJ2eai2SoxTlg3PhjMpNNSUfPFgauwX6vt%2FoeK9VnB1Hmqg6bCNA62qIJPnlTONluGngv604Y6CnYL9Se%2B%2BjgOpqhqmIOX9KlzGAoRM0Ci%2BrWGdELH8Q66bSHmapdLHPWMoGBEj%2BeruK3oCs%2BDaUQ1aE%2FEQ8R5PgqLM3Pq6DrZV9PlFixmkikk8SpDcsFEiT0Zw0gsy2qPz3z3BHAEuG64GguAhIs5FvYP7HbdpPv7rQz4QSDXgN3SIbVD0A4kcV1iNQpZyiw2rmdxuUWIk46d%2FT0u%2B7j9yAdfpDuPVKPDHJD35k0pB6VLe7RtlSwwvcDUa7LL6FJxvOPpupIMPSy51BJl9%2Bf8022a6pcy263zeRDGJjALAc6brW%2BvQoDUu%2FQP%2BdxwOLZvXCyyGJp2%2BK86jg8qU%2FLWZ4DVeR3bIO1n7Fw%2B53iFlBIMatC3ZSLlV1J7dSDCk74u6OWvql%2Brvb6q%2Bj8NHQK6luFckQV%2B9okMhTYuNniW3sHS8rjyNrrGhP8vMtxMzink9EL%2FmU0Oxusg2wmaXCDfIKpDDmspvZQv8MJ%2F%2FkIsGOqYBaz2hfRV48KDU0Mx0UomuXdEWK6oszm51EnI%2FeSepVmINgIWWggB7gENawN0rgfpMSIqQjB%2BpErtoDw1jNWaknZlAG9GLkCZ49lNHNirjr7iPk7LouunUzSZjaag8Yc19L8BAWjyLZnHXpqUZQRBSoqOcAoct3F46M7AzK2ewXHmh7aKY3cfAQTu9yVTJd2CDpuLtlyUDUa37BJ8%2F84puzgJS34jmeg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=f2386a05e572195d623cd897308b4aebd6e253dfefd2ffbecfc30fa166805eeb","file_size":273348,"type":"image/png"},{"id":474199,"file_name":"error_1_mail_copy_cache_field.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/474/199/3f3b796799dbf20e82a2a36f0c09903ec2641879/error_1_mail_copy_cache_field.png?response-content-disposition=attachment%3B%20filename%3D%22error_1_mail_copy_cache_field.png%22%3B%20filename%2A%3DUTF-8%27%27error_1_mail_copy_cache_field.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQZV3IBMDT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T151035Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJGMEQCIHx%2BIgfH0%2FRLQqbPD5vv6PNps92HY0yneL0kxkNwZHOyAiALrXRJqTvQQGm0xEkYGCB0kbPjUCCkzSeRztvcuetAYyqDBAjv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIM5FTPTB1nK4gXIBLuKtcDHmLbKhsWpyXKgWy1fAYOf0DZEqCEqF9ns7RwihS1bFM9%2BSDXYY0CmIqutWQhK5asoL8jbJZ39%2FJ2eai2SoxTlg3PhjMpNNSUfPFgauwX6vt%2FoeK9VnB1Hmqg6bCNA62qIJPnlTONluGngv604Y6CnYL9Se%2B%2BjgOpqhqmIOX9KlzGAoRM0Ci%2BrWGdELH8Q66bSHmapdLHPWMoGBEj%2BeruK3oCs%2BDaUQ1aE%2FEQ8R5PgqLM3Pq6DrZV9PlFixmkikk8SpDcsFEiT0Zw0gsy2qPz3z3BHAEuG64GguAhIs5FvYP7HbdpPv7rQz4QSDXgN3SIbVD0A4kcV1iNQpZyiw2rmdxuUWIk46d%2FT0u%2B7j9yAdfpDuPVKPDHJD35k0pB6VLe7RtlSwwvcDUa7LL6FJxvOPpupIMPSy51BJl9%2Bf8022a6pcy263zeRDGJjALAc6brW%2BvQoDUu%2FQP%2BdxwOLZvXCyyGJp2%2BK86jg8qU%2FLWZ4DVeR3bIO1n7Fw%2B53iFlBIMatC3ZSLlV1J7dSDCk74u6OWvql%2Brvb6q%2Bj8NHQK6luFckQV%2B9okMhTYuNniW3sHS8rjyNrrGhP8vMtxMzink9EL%2FmU0Oxusg2wmaXCDfIKpDDmspvZQv8MJ%2F%2FkIsGOqYBaz2hfRV48KDU0Mx0UomuXdEWK6oszm51EnI%2FeSepVmINgIWWggB7gENawN0rgfpMSIqQjB%2BpErtoDw1jNWaknZlAG9GLkCZ49lNHNirjr7iPk7LouunUzSZjaag8Yc19L8BAWjyLZnHXpqUZQRBSoqOcAoct3F46M7AzK2ewXHmh7aKY3cfAQTu9yVTJd2CDpuLtlyUDUa37BJ8%2F84puzgJS34jmeg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=331bfe7f1d69a38abfbb680f4da1a0b0e1f67a8c5e946d36611e2b7667528eac","file_size":283754,"type":"image/png"},{"id":474200,"file_name":"error_1_strcase_hash.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/474/200/55be97a0ad425a9a1e1a7177f002a2431e43d13e/error_1_strcase_hash.png?response-content-disposition=attachment%3B%20filename%3D%22error_1_strcase_hash.png%22%3B%20filename%2A%3DUTF-8%27%27error_1_strcase_hash.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQZV3IBMDT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T151035Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJGMEQCIHx%2BIgfH0%2FRLQqbPD5vv6PNps92HY0yneL0kxkNwZHOyAiALrXRJqTvQQGm0xEkYGCB0kbPjUCCkzSeRztvcuetAYyqDBAjv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIM5FTPTB1nK4gXIBLuKtcDHmLbKhsWpyXKgWy1fAYOf0DZEqCEqF9ns7RwihS1bFM9%2BSDXYY0CmIqutWQhK5asoL8jbJZ39%2FJ2eai2SoxTlg3PhjMpNNSUfPFgauwX6vt%2FoeK9VnB1Hmqg6bCNA62qIJPnlTONluGngv604Y6CnYL9Se%2B%2BjgOpqhqmIOX9KlzGAoRM0Ci%2BrWGdELH8Q66bSHmapdLHPWMoGBEj%2BeruK3oCs%2BDaUQ1aE%2FEQ8R5PgqLM3Pq6DrZV9PlFixmkikk8SpDcsFEiT0Zw0gsy2qPz3z3BHAEuG64GguAhIs5FvYP7HbdpPv7rQz4QSDXgN3SIbVD0A4kcV1iNQpZyiw2rmdxuUWIk46d%2FT0u%2B7j9yAdfpDuPVKPDHJD35k0pB6VLe7RtlSwwvcDUa7LL6FJxvOPpupIMPSy51BJl9%2Bf8022a6pcy263zeRDGJjALAc6brW%2BvQoDUu%2FQP%2BdxwOLZvXCyyGJp2%2BK86jg8qU%2FLWZ4DVeR3bIO1n7Fw%2B53iFlBIMatC3ZSLlV1J7dSDCk74u6OWvql%2Brvb6q%2Bj8NHQK6luFckQV%2B9okMhTYuNniW3sHS8rjyNrrGhP8vMtxMzink9EL%2FmU0Oxusg2wmaXCDfIKpDDmspvZQv8MJ%2F%2FkIsGOqYBaz2hfRV48KDU0Mx0UomuXdEWK6oszm51EnI%2FeSepVmINgIWWggB7gENawN0rgfpMSIqQjB%2BpErtoDw1jNWaknZlAG9GLkCZ49lNHNirjr7iPk7LouunUzSZjaag8Yc19L8BAWjyLZnHXpqUZQRBSoqOcAoct3F46M7AzK2ewXHmh7aKY3cfAQTu9yVTJd2CDpuLtlyUDUa37BJ8%2F84puzgJS34jmeg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=c241880bd29cec67fb83c93d2f0f4a4fcba4c07d4432860faa544f497264f768","file_size":283294,"type":"image/png"},{"id":474201,"file_name":"error_2.png","expiring_url":"https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/474/201/fd79d35244e305c5b4917299599cb497529d3933/error_2.png?response-content-disposition=attachment%3B%20filename%3D%22error_2.png%22%3B%20filename%2A%3DUTF-8%27%27error_2.png\u0026response-content-type=image%2Fpng\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIAQGK6FURQZV3IBMDT%2F20211011%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Date=20211011T151035Z\u0026X-Amz-Expires=3600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJGMEQCIHx%2BIgfH0%2FRLQqbPD5vv6PNps92HY0yneL0kxkNwZHOyAiALrXRJqTvQQGm0xEkYGCB0kbPjUCCkzSeRztvcuetAYyqDBAjv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDAxMzYxOTI3NDg0OSIM5FTPTB1nK4gXIBLuKtcDHmLbKhsWpyXKgWy1fAYOf0DZEqCEqF9ns7RwihS1bFM9%2BSDXYY0CmIqutWQhK5asoL8jbJZ39%2FJ2eai2SoxTlg3PhjMpNNSUfPFgauwX6vt%2FoeK9VnB1Hmqg6bCNA62qIJPnlTONluGngv604Y6CnYL9Se%2B%2BjgOpqhqmIOX9KlzGAoRM0Ci%2BrWGdELH8Q66bSHmapdLHPWMoGBEj%2BeruK3oCs%2BDaUQ1aE%2FEQ8R5PgqLM3Pq6DrZV9PlFixmkikk8SpDcsFEiT0Zw0gsy2qPz3z3BHAEuG64GguAhIs5FvYP7HbdpPv7rQz4QSDXgN3SIbVD0A4kcV1iNQpZyiw2rmdxuUWIk46d%2FT0u%2B7j9yAdfpDuPVKPDHJD35k0pB6VLe7RtlSwwvcDUa7LL6FJxvOPpupIMPSy51BJl9%2Bf8022a6pcy263zeRDGJjALAc6brW%2BvQoDUu%2FQP%2BdxwOLZvXCyyGJp2%2BK86jg8qU%2FLWZ4DVeR3bIO1n7Fw%2B53iFlBIMatC3ZSLlV1J7dSDCk74u6OWvql%2Brvb6q%2Bj8NHQK6luFckQV%2B9okMhTYuNniW3sHS8rjyNrrGhP8vMtxMzink9EL%2FmU0Oxusg2wmaXCDfIKpDDmspvZQv8MJ%2F%2FkIsGOqYBaz2hfRV48KDU0Mx0UomuXdEWK6oszm51EnI%2FeSepVmINgIWWggB7gENawN0rgfpMSIqQjB%2BpErtoDw1jNWaknZlAG9GLkCZ49lNHNirjr7iPk7LouunUzSZjaag8Yc19L8BAWjyLZnHXpqUZQRBSoqOcAoct3F46M7AzK2ewXHmh7aKY3cfAQTu9yVTJd2CDpuLtlyUDUa37BJ8%2F84puzgJS34jmeg%3D%3D\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=9b9d1b6b3d95cb66609032d3e4dcb0a8b270f007cdcce846d36aeddb8d2ec5b9","file_size":291524,"type":"image/png"}],"allow_singular_disclosure_at":null,"vote_count":26,"voters":["mashoud1122","bl4de","ali","b3hlull","ihsinme","cr4xerbik4sh","b039f6018eb9056011859b0","pycycle","dademurphyzc","zimmer75","and 16 more..."],"severity":{"rating":"medium","author_type":"User"},"structured_scope":{"databaseId":42899,"asset_type":"SOURCE_CODE","asset_identifier":"https://github.com/dovecot/core","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"activities":[{"id":4623289,"is_internal":false,"editable":false,"type":"Activities::ReportCollaboratorInvited","message":null,"automated_response":false,"created_at":"2019-04-23T05:04:48.761Z","updated_at":"2019-04-23T05:04:48.761Z","actor":{"username":"nick_roessler","cleared":false,"url":"/nick_roessler","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/577/276/39ba4fb54ca9bc03bb59a9360be99caf8f832882_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"email":"rafiy","genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4624718,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks! We'll look into these.","automated_response":false,"created_at":"2019-04-23T09:21:31.351Z","updated_at":"2019-04-23T09:21:31.351Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4630370,"is_internal":false,"editable":false,"type":"Activities::ReportCollaboratorJoined","message":"","automated_response":false,"created_at":"2019-04-23T22:21:47.670Z","updated_at":"2019-04-23T22:21:47.670Z","actor":{"username":"rafiy","cleared":false,"url":"/rafiy","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":4631490,"is_internal":false,"editable":false,"type":"Activities::BugTriaged","message":"","automated_response":false,"created_at":"2019-04-24T06:04:54.851Z","updated_at":"2019-04-24T06:04:54.851Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4631517,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Awarding $600 per bug.","automated_response":false,"created_at":"2019-04-24T06:14:23.255Z","updated_at":"2019-04-24T06:14:23.255Z","actor":{"url":"/open-xchange","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Open-Xchange"}},"bounty_amount":"600.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"open-xchange","collaborator":{"username":"rafiy","url":"/rafiy"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4631518,"is_internal":false,"editable":false,"type":"Activities::BountyAwarded","message":"Awarding $600 per bug.","automated_response":false,"created_at":"2019-04-24T06:14:23.773Z","updated_at":"2019-04-24T06:14:23.773Z","actor":{"url":"/open-xchange","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/JtYLEsu5yRZxGitSmAjeAFtK/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"profile":{"name":"Open-Xchange"}},"bounty_amount":"600.0","bounty_currency":"usd","bonus_amount":"0.0","genius_execution_id":null,"team_handle":"open-xchange","collaborator":{"username":"nick_roessler","url":"/nick_roessler"},"actor_is_team_member":true,"actor_is_concealed_member":false},{"id":4632689,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Thanks.","automated_response":false,"created_at":"2019-04-24T08:39:36.699Z","updated_at":"2019-04-24T08:39:36.699Z","actor":{"username":"rafiy","cleared":false,"url":"/rafiy","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6707318,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"Will be fixed in 2.3.10.","automated_response":false,"created_at":"2020-01-07T11:45:35.664Z","updated_at":"2020-01-07T11:45:35.664Z","actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"reporter":{"username":"nick_roessler","url":"/nick_roessler"},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6707319,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","automated_response":false,"created_at":"2020-01-07T11:46:03.566Z","updated_at":"2020-01-07T11:46:03.566Z","first_to_agree":true,"actor":{"username":"akituomi","cleared":false,"url":"/akituomi","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/060/216/805d230879c8e3757d37eedddaadf9efed0a8094_original.jpg/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":false},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":6719972,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"Sounds good!","automated_response":false,"created_at":"2020-01-08T18:23:50.482Z","updated_at":"2020-01-08T18:23:50.482Z","actor":{"username":"nick_roessler","cleared":false,"url":"/nick_roessler","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/577/276/39ba4fb54ca9bc03bb59a9360be99caf8f832882_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":6719973,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","automated_response":false,"created_at":"2020-01-08T18:23:50.563Z","updated_at":"2020-01-08T18:23:50.563Z","actor":{"username":"nick_roessler","cleared":false,"url":"/nick_roessler","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/577/276/39ba4fb54ca9bc03bb59a9360be99caf8f832882_original.png/fd4ecbe1e3e98c343c7717114485ace2f830f9253103d3cfa7502059868c516c"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"open-xchange","actor_is_team_member":false,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}