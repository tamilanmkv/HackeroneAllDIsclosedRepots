{"id":678989,"global_id":"Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC82Nzg5ODk=","url":"https://hackerone.com/reports/678989","title":"[crypto-js] Insecure entropy source - Math.random()","state":"Closed","substate":"resolved","severity_rating":"medium","readable_substate":"Resolved","created_at":"2019-08-22T01:06:03.749Z","submitted_at":"2019-08-22T01:06:03.749Z","is_member_of_team?":false,"reporter":{"disabled":false,"username":"chalker","url":"/chalker","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/068/907/abd483931dad2c93e376707dd59719cc277309cd_original.png/3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a"},"is_me?":false,"cleared":false,"hackerone_triager":false,"hacker_mediation":false},"team":{"id":23949,"url":"https://hackerone.com/nodejs-ecosystem","handle":"nodejs-ecosystem","profile_picture_urls":{"small":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./3afcb5c896247e7ee8ada31b1c1eb8657e22241f911093acfe4ec7e97a3a959a","medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"permissions":[],"submission_state":"paused","default_currency":"usd","awards_miles":false,"offers_bounties":true,"state":"public_mode","only_cleared_hackers":false,"profile":{"name":"Node.js third-party modules","twitter_handle":"","website":"https://nodejs.org/en/security/","about":"This program is used to handle vulnerabilities in the Node.js ecosystem."}},"has_bounty?":false,"in_validation?":false,"rejected_anc_report_that_can_be_sent_back_to_anc_triagers?":false,"can_view_team":true,"can_view_report":true,"is_external_bug":false,"is_published":false,"is_participant":false,"stage":4,"public":true,"visibility":"full","cve_ids":[],"singular_disclosure_disabled":false,"disclosed_at":"2020-06-04T10:12:24.428Z","bug_reporter_agreed_on_going_public_at":null,"team_member_agreed_on_going_public_at":"2020-05-05T10:12:18.310Z","comments_closed?":false,"facebook_team?":false,"team_private?":false,"vulnerability_information":"# Module\n\n**module name:** crypto-js\n**version:** 3.1.9-1\n**npm page:** `https://www.npmjs.com/package/crypto-js`\n\n## Module Description\n\n\u003e JavaScript library of crypto standards.\n\n## Module Stats\n\n\u003e Replace stats below with numbers from npm’s module page:\n\n184959 downloads in the last day\n912568 downloads in the last week\n3945947 downloads in the last month\n\n# Vulnerability\n\n## Vulnerability Description\n\n`Math.random()` is not a cryptographically secure source of randomness, but it is used as the sole entropy source in `require('crypto-js').lib.WordArray.random`, which creates a \"random\" array of 32-bit words:\n* https://github.com/brix/crypto-js/blob/3.1.9-1/core.js#L291-L330\n* https://github.com/brix/crypto-js/blob/develop/src/core.js#L276-L315\n\n## Steps To Reproduce:\n\nE.g. to confirm that that is predictable given the same initial seed:\n```\n$ node --random_seed=42 -e \"console.log(require('crypto-js').lib.WordArray.random(16))\"\n{ words: [ -1477405629, 964516052, 1254255372, 1089500106 ],\n  sigBytes: 16 }\n$ node --random_seed=42 -e \"console.log(require('crypto-js').lib.WordArray.random(16))\"\n{ words: [ -1477405629, 964516052, 1254255372, 1089500106 ],\n  sigBytes: 16 }\n```\n\nIt could in theory be possible to recover the internal XorShift128+ Math.random seed by gathering enough observations.\n\nEven if this method attempts to \"mask\" `Math.random` somehow perhaps in order to make extracting the seed harder, that could never be enough. For example, `Math.random` seed could be also recovered by observations over some other channel, e.g. if something else presents Math.random results to the user (e.g. not crypto-related).\n\n## Patch\n\nUse `window.crypto.getRandomValues` in browser and `require('crypto').randomBytes` in Node.js instead.\n\n# Wrap up\n\n\u003e Select Y or N for the following statements:\n\n- I contacted the maintainer to let them know: N \n- I opened an issue in the related repository: N\n\n## Impact\n\nPredict the values of `require('crypto-js').lib.WordArray.random`, which could be perceived as crypto-secure by users.","vulnerability_information_html":"\u003ch1 id=\"module\"\u003eModule\u003c/h1\u003e\n\n\u003cp\u003e\u003cstrong\u003emodule name:\u003c/strong\u003e crypto-js\u003cbr\u003e\n\u003cstrong\u003eversion:\u003c/strong\u003e 3.1.9-1\u003cbr\u003e\n\u003cstrong\u003enpm page:\u003c/strong\u003e \u003ccode\u003ehttps://www.npmjs.com/package/crypto-js\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2 id=\"module-description\"\u003eModule Description\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eJavaScript library of crypto standards.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2 id=\"module-stats\"\u003eModule Stats\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eReplace stats below with numbers from npm’s module page:\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e184959 downloads in the last day\u003cbr\u003e\n912568 downloads in the last week\u003cbr\u003e\n3945947 downloads in the last month\u003c/p\u003e\n\n\u003ch1 id=\"vulnerability\"\u003eVulnerability\u003c/h1\u003e\n\n\u003ch2 id=\"vulnerability-description\"\u003eVulnerability Description\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003eMath.random()\u003c/code\u003e is not a cryptographically secure source of randomness, but it is used as the sole entropy source in \u003ccode\u003erequire(\u0026#39;crypto-js\u0026#39;).lib.WordArray.random\u003c/code\u003e, which creates a \u0026quot;random\u0026quot; array of 32-bit words:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca title=\"https://github.com/brix/crypto-js/blob/3.1.9-1/core.js#L291-L330\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fbrix%2Fcrypto-js%2Fblob%2F3.1.9-1%2Fcore.js%23L291-L330\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/brix/crypto-js/blob/3.1.9-1/core.js#L291-L330\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca title=\"https://github.com/brix/crypto-js/blob/develop/src/core.js#L276-L315\" href=\"/redirect?url=https%3A%2F%2Fgithub.com%2Fbrix%2Fcrypto-js%2Fblob%2Fdevelop%2Fsrc%2Fcore.js%23L276-L315\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"\u003e\u003cspan\u003ehttps://github.com/brix/crypto-js/blob/develop/src/core.js#L276-L315\u003c/span\u003e\u003ci class=\"icon-external-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"steps-to-reproduce\"\u003eSteps To Reproduce:\u003c/h2\u003e\n\n\u003cp\u003eE.g. to confirm that that is predictable given the same initial seed:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e$ node --random_seed=42 -e \u0026quot;console.log(require(\u0026#39;crypto-js\u0026#39;).lib.WordArray.random(16))\u0026quot;\n{ words: [ -1477405629, 964516052, 1254255372, 1089500106 ],\n  sigBytes: 16 }\n$ node --random_seed=42 -e \u0026quot;console.log(require(\u0026#39;crypto-js\u0026#39;).lib.WordArray.random(16))\u0026quot;\n{ words: [ -1477405629, 964516052, 1254255372, 1089500106 ],\n  sigBytes: 16 }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIt could in theory be possible to recover the internal XorShift128+ Math.random seed by gathering enough observations.\u003c/p\u003e\n\n\u003cp\u003eEven if this method attempts to \u0026quot;mask\u0026quot; \u003ccode\u003eMath.random\u003c/code\u003e somehow perhaps in order to make extracting the seed harder, that could never be enough. For example, \u003ccode\u003eMath.random\u003c/code\u003e seed could be also recovered by observations over some other channel, e.g. if something else presents Math.random results to the user (e.g. not crypto-related).\u003c/p\u003e\n\n\u003ch2 id=\"patch\"\u003ePatch\u003c/h2\u003e\n\n\u003cp\u003eUse \u003ccode\u003ewindow.crypto.getRandomValues\u003c/code\u003e in browser and \u003ccode\u003erequire(\u0026#39;crypto\u0026#39;).randomBytes\u003c/code\u003e in Node.js instead.\u003c/p\u003e\n\n\u003ch1 id=\"wrap-up\"\u003eWrap up\u003c/h1\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eSelect Y or N for the following statements:\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cul\u003e\n\u003cli\u003eI contacted the maintainer to let them know: N \u003c/li\u003e\n\u003cli\u003eI opened an issue in the related repository: N\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"impact\"\u003eImpact\u003c/h2\u003e\n\n\u003cp\u003ePredict the values of \u003ccode\u003erequire(\u0026#39;crypto-js\u0026#39;).lib.WordArray.random\u003c/code\u003e, which could be perceived as crypto-secure by users.\u003c/p\u003e\n","weakness":{"id":44,"name":"Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)"},"original_report_id":null,"original_report_url":null,"attachments":[],"allow_singular_disclosure_at":"2020-06-04T10:12:18.417Z","allow_singular_disclosure_after":-17958297.7932693,"singular_disclosure_allowed":true,"vote_count":3,"voters":["brahim_boufakri01","mygf","sl33pyp0t4t0"],"severity":{"rating":"medium","score":4.8,"author_type":"User","metrics":{"attack_vector":"network","attack_complexity":"high","privileges_required":"none","user_interaction":"none","scope":"unchanged","confidentiality":"low","integrity":"low","availability":"none"}},"structured_scope":{"databaseId":49406,"asset_type":"SOURCE_CODE","asset_identifier":"crypto-js","max_severity":"critical"},"abilities":{"assignable_team_members":[],"assignable_team_member_groups":[]},"can_edit_custom_fields_attributes":false,"activities":[{"id":5648200,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"Hi @chalker,\n\nThank you for your submission. Your report is currently being reviewed and the HackerOne triage team will get back to you once there is additional information to share.\n\nKind regards,\n@bassguitar ","markdown_message":"\u003cp\u003eHi \u003ca href=\"/chalker\"\u003e@chalker\u003c/a\u003e,\u003c/p\u003e\n\n\u003cp\u003eThank you for your submission. Your report is currently being reviewed and the HackerOne triage team will get back to you once there is additional information to share.\u003c/p\u003e\n\n\u003cp\u003eKind regards,\u003cbr\u003e\n\u003ca href=\"/bassguitar\"\u003e@bassguitar\u003c/a\u003e \u003c/p\u003e\n","automated_response":false,"created_at":"2019-08-23T13:06:55.664Z","updated_at":"2019-08-23T13:06:55.664Z","actor":{"username":"bassguitar","cleared":false,"url":"/bassguitar","profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/352/794/5d82b321348f78aa4ac9c82c0bdd004828bcb414_original.jpg/eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"hackerone_triager":true,"hackerone_employee":true},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":7897228,"is_internal":false,"editable":false,"type":"Activities::Comment","message":"It looks like `crypto-js` 4.0.0 does not longer use `Math.random`. I will request disclosure for this report.","markdown_message":"\u003cp\u003eIt looks like \u003ccode\u003ecrypto-js\u003c/code\u003e 4.0.0 does not longer use \u003ccode\u003eMath.random\u003c/code\u003e. I will request disclosure for this report.\u003c/p\u003e\n","automated_response":false,"created_at":"2020-05-05T10:12:03.921Z","updated_at":"2020-05-05T10:12:03.921Z","actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7897230,"is_internal":false,"editable":false,"type":"Activities::BugResolved","message":"","markdown_message":"","automated_response":false,"created_at":"2020-05-05T10:12:11.110Z","updated_at":"2020-05-05T10:12:11.110Z","actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"reporter":{"username":"chalker","url":"/chalker"},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":7897232,"is_internal":false,"editable":false,"type":"Activities::AgreedOnGoingPublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-05-05T10:12:18.337Z","updated_at":"2020-05-05T10:12:18.337Z","first_to_agree":true,"actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false},{"id":8198696,"is_internal":false,"editable":false,"type":"Activities::ReportBecamePublic","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-04T10:12:24.534Z","updated_at":"2020-06-04T10:12:24.534Z","actor":{"url":"/nodejs-ecosystem","ibb":false,"profile_picture_urls":{"medium":"https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./eb31823a4cc9f6b6bb4db930ffdf512533928a68a4255fb50a83180281a60da5"},"profile":{"name":"Node.js third-party modules"}},"genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":false,"actor_is_concealed_member":false},{"id":8328399,"is_internal":false,"editable":false,"type":"Activities::ChangedScope","message":"","markdown_message":"","automated_response":false,"created_at":"2020-06-18T08:02:08.817Z","updated_at":"2020-06-18T08:02:08.817Z","actor":{"username":"marcinhoppe","cleared":false,"url":"/marcinhoppe","profile_picture_urls":{"medium":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"hackerone_triager":false,"hackerone_employee":null},"old_scope":"Other module","new_scope":"crypto-js","genius_execution_id":null,"team_handle":"nodejs-ecosystem","actor_is_team_member":true,"actor_is_concealed_member":false}],"activity_page_count":1,"activity_page_number":1,"summaries":[{"category":"team","can_view?":true,"can_create?":false},{"category":"researcher","can_view?":true,"can_create?":false}]}